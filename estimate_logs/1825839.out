10
subject 1013_01_MR
start cluster 09:36:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39135 instead
  warnings.warn(
0
parallel submitted
09:36:34
parallel finished
09:39:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:39:11
start mi0
09:39:11
start mi0 range(p) 1 loop
09:39:11
finish mi0 range(p) 1 loop
09:39:11
start mi0 range(p) 2 loop
09:39:11
finish mi0 range(p) 2 loop
09:39:11
start mi0 range(NT) loop
09:39:11
finish mi0 range(NT) loop
09:39:11
start mi0 range(n) loop
09:39:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:39:11
start mi0 range(n) 2loop
09:39:11
finish mi0 range(n) 2loop
09:39:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:39:11
start mi1 range(p) 1 loop
09:39:11
finish mi1 range(p) 1 loop
09:39:11
start mi1 range(p) 2 loop
09:39:11
finish mi1 range(p) 2 loop
09:39:11
start mi1 range(NT) loop
09:39:11
finish mi1 range(NT) loop
09:39:11
start mi1 range(n) loop
09:39:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:39:12
start mi1 range(n) 2loop
09:39:12
finish mi1 range(n) 2loop
09:39:12
start mi2
09:39:12
start mi2 range(p) 1 loop
09:39:12
finish mi2 range(p) 1 loop
09:39:12
start mi2 range(p) 2 loop
09:39:12
finish mi2 range(p) 2 loop
09:39:12
start mi2 range(NT) loop
09:39:12
finish mi2 range(NT) loop
09:39:12
start mi2 range(n) loop
09:39:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:39:12
start mi2 range(n) 2loop
09:39:12
finish mi2 range(n) 2loop
09:39:12
start mi3
09:39:12
start mi3 range(p) 1 loop
09:39:12
finish mi3 range(p) 1 loop
09:39:12
start mi3 range(p) 2 loop
09:39:12
finish mi3 range(p) 2 loop
09:39:12
start mi3 range(NT) loop
09:39:12
finish mi3 range(NT) loop
09:39:12
start mi3 range(n) loop
09:39:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:39:12
start mi3 range(n) 2loop
09:39:12
finish mi3 range(n) 2loop
09:39:12
[[-2.15599578]]
end mi3 loop
09:39:12
estep
09:39:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:39:29
start ppi1
09:39:29
start mi0
09:39:29
start mi0 range(p) 1 loop
09:39:29
finish mi0 range(p) 1 loop
09:39:29
start mi0 range(p) 2 loop
09:39:29
finish mi0 range(p) 2 loop
09:39:29
start mi0 range(NT) loop
09:39:29
finish mi0 range(NT) loop
09:39:29
start mi0 range(n) loop
09:39:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:39:29
start mi0 range(n) 2loop
09:39:29
finish mi0 range(n) 2loop
09:39:29
start mi1
09:39:29
start mi1 range(p) 1 loop
09:39:29
finish mi1 range(p) 1 loop
09:39:29
start mi1 range(p) 2 loop
09:39:29
finish mi1 range(p) 2 loop
09:39:29
start mi1 range(NT) loop
09:39:29
finish mi1 range(NT) loop
09:39:29
start mi1 range(n) loop
09:39:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:39:29
start mi1 range(n) 2loop
09:39:29
finish mi1 range(n) 2loop
09:39:29
start mi2
09:39:29
start mi2 range(p) 1 loop
09:39:29
finish mi2 range(p) 1 loop
09:39:29
start mi2 range(p) 2 loop
09:39:29
finish mi2 range(p) 2 loop
09:39:29
start mi2 range(NT) loop
09:39:30
finish mi2 range(NT) loop
09:39:30
start mi2 range(n) loop
09:39:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:39:30
start mi2 range(n) 2loop
09:39:30
finish mi2 range(n) 2loop
09:39:30
start mi3
09:39:30
start mi3 range(p) 1 loop
09:39:30
finish mi3 range(p) 1 loop
09:39:30
start mi3 range(p) 2 loop
09:39:30
finish mi3 range(p) 2 loop
09:39:30
start mi3 range(NT) loop
09:39:30
finish mi3 range(NT) loop
09:39:30
start mi3 range(n) loop
09:39:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:39:30
start mi3 range(n) 2loop
09:39:30
finish mi3 range(n) 2loop
09:39:30
[[-2.15599578]]
end mi3 loop
09:39:30
estep
09:39:30
end estep
09:39:47
end pa09:39:47
goodness of fit correlation [0.05991838]
start cluster 09:39:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39739 instead
  warnings.warn(
1
parallel submitted
09:40:04
parallel finished
09:45:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:45:04
start mi0
09:45:04
start mi0 range(p) 1 loop
09:45:04
finish mi0 range(p) 1 loop
09:45:04
start mi0 range(p) 2 loop
09:45:04
finish mi0 range(p) 2 loop
09:45:04
start mi0 range(NT) loop
09:45:04
finish mi0 range(NT) loop
09:45:05
start mi0 range(n) loop
09:45:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:45:05
start mi0 range(n) 2loop
09:45:05
finish mi0 range(n) 2loop
09:45:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:45:05
start mi1 range(p) 1 loop
09:45:05
finish mi1 range(p) 1 loop
09:45:05
start mi1 range(p) 2 loop
09:45:05
finish mi1 range(p) 2 loop
09:45:05
start mi1 range(NT) loop
09:45:05
finish mi1 range(NT) loop
09:45:05
start mi1 range(n) loop
09:45:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:45:05
start mi1 range(n) 2loop
09:45:05
finish mi1 range(n) 2loop
09:45:05
start mi2
09:45:05
start mi2 range(p) 1 loop
09:45:05
finish mi2 range(p) 1 loop
09:45:05
start mi2 range(p) 2 loop
09:45:05
finish mi2 range(p) 2 loop
09:45:05
start mi2 range(NT) loop
09:45:05
finish mi2 range(NT) loop
09:45:05
start mi2 range(n) loop
09:45:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:45:05
start mi2 range(n) 2loop
09:45:05
finish mi2 range(n) 2loop
09:45:05
start mi3
09:45:05
start mi3 range(p) 1 loop
09:45:05
finish mi3 range(p) 1 loop
09:45:05
start mi3 range(p) 2 loop
09:45:05
finish mi3 range(p) 2 loop
09:45:05
start mi3 range(NT) loop
09:45:05
finish mi3 range(NT) loop
09:45:05
start mi3 range(n) loop
09:45:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:45:05
start mi3 range(n) 2loop
09:45:05
finish mi3 range(n) 2loop
09:45:05
[[-2.1585932]]
end mi3 loop
09:45:05
estep
09:45:05
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:45:21
start ppi1
09:45:21
start mi0
09:45:21
start mi0 range(p) 1 loop
09:45:21
finish mi0 range(p) 1 loop
09:45:21
start mi0 range(p) 2 loop
09:45:21
finish mi0 range(p) 2 loop
09:45:21
start mi0 range(NT) loop
09:45:21
finish mi0 range(NT) loop
09:45:21
start mi0 range(n) loop
09:45:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:45:21
start mi0 range(n) 2loop
09:45:21
finish mi0 range(n) 2loop
09:45:21
start mi1
09:45:21
start mi1 range(p) 1 loop
09:45:21
finish mi1 range(p) 1 loop
09:45:21
start mi1 range(p) 2 loop
09:45:21
finish mi1 range(p) 2 loop
09:45:21
start mi1 range(NT) loop
09:45:21
finish mi1 range(NT) loop
09:45:21
start mi1 range(n) loop
09:45:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:45:21
start mi1 range(n) 2loop
09:45:21
finish mi1 range(n) 2loop
09:45:21
start mi2
09:45:21
start mi2 range(p) 1 loop
09:45:21
finish mi2 range(p) 1 loop
09:45:21
start mi2 range(p) 2 loop
09:45:21
finish mi2 range(p) 2 loop
09:45:21
start mi2 range(NT) loop
09:45:21
finish mi2 range(NT) loop
09:45:21
start mi2 range(n) loop
09:45:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:45:21
start mi2 range(n) 2loop
09:45:21
finish mi2 range(n) 2loop
09:45:22
start mi3
09:45:22
start mi3 range(p) 1 loop
09:45:22
finish mi3 range(p) 1 loop
09:45:22
start mi3 range(p) 2 loop
09:45:22
finish mi3 range(p) 2 loop
09:45:22
start mi3 range(NT) loop
09:45:22
finish mi3 range(NT) loop
09:45:22
start mi3 range(n) loop
09:45:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:45:22
start mi3 range(n) 2loop
09:45:22
finish mi3 range(n) 2loop
09:45:22
[[-2.22109315]]
end mi3 loop
09:45:22
estep
09:45:22
end estep
09:45:37
end pa09:45:37
goodness of fit correlation [0.06745999]
start cluster 09:45:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35431 instead
  warnings.warn(
2
parallel submitted
09:45:54
parallel finished
09:52:27
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:52:30
start mi0
09:52:30
start mi0 range(p) 1 loop
09:52:30
finish mi0 range(p) 1 loop
09:52:30
start mi0 range(p) 2 loop
09:52:30
finish mi0 range(p) 2 loop
09:52:30
start mi0 range(NT) loop
09:52:30
finish mi0 range(NT) loop
09:52:30
start mi0 range(n) loop
09:52:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:52:30
start mi0 range(n) 2loop
09:52:30
finish mi0 range(n) 2loop
09:52:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:52:30
start mi1 range(p) 1 loop
09:52:30
finish mi1 range(p) 1 loop
09:52:30
start mi1 range(p) 2 loop
09:52:30
finish mi1 range(p) 2 loop
09:52:30
start mi1 range(NT) loop
09:52:30
finish mi1 range(NT) loop
09:52:30
start mi1 range(n) loop
09:52:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:52:30
start mi1 range(n) 2loop
09:52:30
finish mi1 range(n) 2loop
09:52:30
start mi2
09:52:30
start mi2 range(p) 1 loop
09:52:30
finish mi2 range(p) 1 loop
09:52:30
start mi2 range(p) 2 loop
09:52:30
finish mi2 range(p) 2 loop
09:52:30
start mi2 range(NT) loop
09:52:30
finish mi2 range(NT) loop
09:52:30
start mi2 range(n) loop
09:52:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:52:31
start mi2 range(n) 2loop
09:52:31
finish mi2 range(n) 2loop
09:52:31
start mi3
09:52:31
start mi3 range(p) 1 loop
09:52:31
finish mi3 range(p) 1 loop
09:52:31
start mi3 range(p) 2 loop
09:52:31
finish mi3 range(p) 2 loop
09:52:31
start mi3 range(NT) loop
09:52:31
finish mi3 range(NT) loop
09:52:31
start mi3 range(n) loop
09:52:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:52:31
start mi3 range(n) 2loop
09:52:31
finish mi3 range(n) 2loop
09:52:31
[[-2.1863286]]
end mi3 loop
09:52:31
estep
09:52:31
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:52:46
start ppi1
09:52:46
start mi0
09:52:46
start mi0 range(p) 1 loop
09:52:46
finish mi0 range(p) 1 loop
09:52:46
start mi0 range(p) 2 loop
09:52:46
finish mi0 range(p) 2 loop
09:52:46
start mi0 range(NT) loop
09:52:46
finish mi0 range(NT) loop
09:52:46
start mi0 range(n) loop
09:52:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:52:46
start mi0 range(n) 2loop
09:52:46
finish mi0 range(n) 2loop
09:52:47
start mi1
09:52:47
start mi1 range(p) 1 loop
09:52:47
finish mi1 range(p) 1 loop
09:52:47
start mi1 range(p) 2 loop
09:52:47
finish mi1 range(p) 2 loop
09:52:47
start mi1 range(NT) loop
09:52:47
finish mi1 range(NT) loop
09:52:47
start mi1 range(n) loop
09:52:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:52:47
start mi1 range(n) 2loop
09:52:47
finish mi1 range(n) 2loop
09:52:47
start mi2
09:52:47
start mi2 range(p) 1 loop
09:52:47
finish mi2 range(p) 1 loop
09:52:47
start mi2 range(p) 2 loop
09:52:47
finish mi2 range(p) 2 loop
09:52:47
start mi2 range(NT) loop
09:52:47
finish mi2 range(NT) loop
09:52:47
start mi2 range(n) loop
09:52:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:52:47
start mi2 range(n) 2loop
09:52:47
finish mi2 range(n) 2loop
09:52:47
start mi3
09:52:47
start mi3 range(p) 1 loop
09:52:47
finish mi3 range(p) 1 loop
09:52:47
start mi3 range(p) 2 loop
09:52:47
finish mi3 range(p) 2 loop
09:52:47
start mi3 range(NT) loop
09:52:47
finish mi3 range(NT) loop
09:52:47
start mi3 range(n) loop
09:52:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:52:47
start mi3 range(n) 2loop
09:52:47
finish mi3 range(n) 2loop
09:52:47
[[-2.2488252]]
end mi3 loop
09:52:47
estep
09:52:47
end estep
09:53:03
end pa09:53:03
goodness of fit correlation [0.14816227]
start cluster 09:53:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37419 instead
  warnings.warn(
3
parallel submitted
09:53:19
parallel finished
09:57:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:57:29
start mi0
09:57:29
start mi0 range(p) 1 loop
09:57:29
finish mi0 range(p) 1 loop
09:57:29
start mi0 range(p) 2 loop
09:57:29
finish mi0 range(p) 2 loop
09:57:29
start mi0 range(NT) loop
09:57:29
finish mi0 range(NT) loop
09:57:29
start mi0 range(n) loop
09:57:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:57:29
start mi0 range(n) 2loop
09:57:29
finish mi0 range(n) 2loop
09:57:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:57:29
start mi1 range(p) 1 loop
09:57:29
finish mi1 range(p) 1 loop
09:57:29
start mi1 range(p) 2 loop
09:57:29
finish mi1 range(p) 2 loop
09:57:29
start mi1 range(NT) loop
09:57:29
finish mi1 range(NT) loop
09:57:29
start mi1 range(n) loop
09:57:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:57:29
start mi1 range(n) 2loop
09:57:29
finish mi1 range(n) 2loop
09:57:30
start mi2
09:57:30
start mi2 range(p) 1 loop
09:57:30
finish mi2 range(p) 1 loop
09:57:30
start mi2 range(p) 2 loop
09:57:30
finish mi2 range(p) 2 loop
09:57:30
start mi2 range(NT) loop
09:57:30
finish mi2 range(NT) loop
09:57:30
start mi2 range(n) loop
09:57:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:57:30
start mi2 range(n) 2loop
09:57:30
finish mi2 range(n) 2loop
09:57:30
start mi3
09:57:30
start mi3 range(p) 1 loop
09:57:30
finish mi3 range(p) 1 loop
09:57:30
start mi3 range(p) 2 loop
09:57:30
finish mi3 range(p) 2 loop
09:57:30
start mi3 range(NT) loop
09:57:30
finish mi3 range(NT) loop
09:57:30
start mi3 range(n) loop
09:57:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:57:30
start mi3 range(n) 2loop
09:57:30
finish mi3 range(n) 2loop
09:57:30
[[-2.23610794]]
end mi3 loop
09:57:30
estep
09:57:30
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:57:45
start ppi1
09:57:45
start mi0
09:57:45
start mi0 range(p) 1 loop
09:57:45
finish mi0 range(p) 1 loop
09:57:45
start mi0 range(p) 2 loop
09:57:45
finish mi0 range(p) 2 loop
09:57:45
start mi0 range(NT) loop
09:57:46
finish mi0 range(NT) loop
09:57:46
start mi0 range(n) loop
09:57:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:57:46
start mi0 range(n) 2loop
09:57:46
finish mi0 range(n) 2loop
09:57:46
start mi1
09:57:46
start mi1 range(p) 1 loop
09:57:46
finish mi1 range(p) 1 loop
09:57:46
start mi1 range(p) 2 loop
09:57:46
finish mi1 range(p) 2 loop
09:57:46
start mi1 range(NT) loop
09:57:46
finish mi1 range(NT) loop
09:57:46
start mi1 range(n) loop
09:57:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:57:46
start mi1 range(n) 2loop
09:57:46
finish mi1 range(n) 2loop
09:57:46
start mi2
09:57:46
start mi2 range(p) 1 loop
09:57:46
finish mi2 range(p) 1 loop
09:57:46
start mi2 range(p) 2 loop
09:57:46
finish mi2 range(p) 2 loop
09:57:46
start mi2 range(NT) loop
09:57:46
finish mi2 range(NT) loop
09:57:46
start mi2 range(n) loop
09:57:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:57:46
start mi2 range(n) 2loop
09:57:46
finish mi2 range(n) 2loop
09:57:46
start mi3
09:57:46
start mi3 range(p) 1 loop
09:57:46
finish mi3 range(p) 1 loop
09:57:46
start mi3 range(p) 2 loop
09:57:46
finish mi3 range(p) 2 loop
09:57:46
start mi3 range(NT) loop
09:57:46
finish mi3 range(NT) loop
09:57:46
start mi3 range(n) loop
09:57:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:57:46
start mi3 range(n) 2loop
09:57:46
finish mi3 range(n) 2loop
09:57:46
[[-2.29860158]]
end mi3 loop
09:57:46
estep
09:57:46
end estep
09:58:02
end pa09:58:02
goodness of fit correlation [0.19209886]
start cluster 09:58:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37125 instead
  warnings.warn(
4
parallel submitted
09:58:20
parallel finished
10:05:29
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:05:32
start mi0
10:05:32
start mi0 range(p) 1 loop
10:05:32
finish mi0 range(p) 1 loop
10:05:32
start mi0 range(p) 2 loop
10:05:32
finish mi0 range(p) 2 loop
10:05:32
start mi0 range(NT) loop
10:05:32
finish mi0 range(NT) loop
10:05:32
start mi0 range(n) loop
10:05:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:05:32
start mi0 range(n) 2loop
10:05:32
finish mi0 range(n) 2loop
10:05:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:05:32
start mi1 range(p) 1 loop
10:05:32
finish mi1 range(p) 1 loop
10:05:32
start mi1 range(p) 2 loop
10:05:32
finish mi1 range(p) 2 loop
10:05:32
start mi1 range(NT) loop
10:05:32
finish mi1 range(NT) loop
10:05:32
start mi1 range(n) loop
10:05:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:05:32
start mi1 range(n) 2loop
10:05:32
finish mi1 range(n) 2loop
10:05:33
start mi2
10:05:33
start mi2 range(p) 1 loop
10:05:33
finish mi2 range(p) 1 loop
10:05:33
start mi2 range(p) 2 loop
10:05:33
finish mi2 range(p) 2 loop
10:05:33
start mi2 range(NT) loop
10:05:33
finish mi2 range(NT) loop
10:05:33
start mi2 range(n) loop
10:05:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:05:33
start mi2 range(n) 2loop
10:05:33
finish mi2 range(n) 2loop
10:05:33
start mi3
10:05:33
start mi3 range(p) 1 loop
10:05:33
finish mi3 range(p) 1 loop
10:05:33
start mi3 range(p) 2 loop
10:05:33
finish mi3 range(p) 2 loop
10:05:33
start mi3 range(NT) loop
10:05:33
finish mi3 range(NT) loop
10:05:33
start mi3 range(n) loop
10:05:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:05:33
start mi3 range(n) 2loop
10:05:33
finish mi3 range(n) 2loop
10:05:33
[[-2.23003131]]
end mi3 loop
10:05:33
estep
10:05:33
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:05:48
start ppi1
10:05:48
start mi0
10:05:48
start mi0 range(p) 1 loop
10:05:48
finish mi0 range(p) 1 loop
10:05:48
start mi0 range(p) 2 loop
10:05:49
finish mi0 range(p) 2 loop
10:05:49
start mi0 range(NT) loop
10:05:49
finish mi0 range(NT) loop
10:05:49
start mi0 range(n) loop
10:05:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:05:49
start mi0 range(n) 2loop
10:05:49
finish mi0 range(n) 2loop
10:05:49
start mi1
10:05:49
start mi1 range(p) 1 loop
10:05:49
finish mi1 range(p) 1 loop
10:05:49
start mi1 range(p) 2 loop
10:05:49
finish mi1 range(p) 2 loop
10:05:49
start mi1 range(NT) loop
10:05:49
finish mi1 range(NT) loop
10:05:49
start mi1 range(n) loop
10:05:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:05:49
start mi1 range(n) 2loop
10:05:49
finish mi1 range(n) 2loop
10:05:49
start mi2
10:05:49
start mi2 range(p) 1 loop
10:05:49
finish mi2 range(p) 1 loop
10:05:49
start mi2 range(p) 2 loop
10:05:49
finish mi2 range(p) 2 loop
10:05:49
start mi2 range(NT) loop
10:05:49
finish mi2 range(NT) loop
10:05:49
start mi2 range(n) loop
10:05:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:05:49
start mi2 range(n) 2loop
10:05:49
finish mi2 range(n) 2loop
10:05:49
start mi3
10:05:49
start mi3 range(p) 1 loop
10:05:49
finish mi3 range(p) 1 loop
10:05:49
start mi3 range(p) 2 loop
10:05:49
finish mi3 range(p) 2 loop
10:05:49
start mi3 range(NT) loop
10:05:49
finish mi3 range(NT) loop
10:05:49
start mi3 range(n) loop
10:05:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:05:49
start mi3 range(n) 2loop
10:05:49
finish mi3 range(n) 2loop
10:05:50
[[-2.29252518]]
end mi3 loop
10:05:50
estep
10:05:50
end estep
10:06:05
end pa10:06:05
goodness of fit correlation [0.21361915]
start cluster 10:06:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41774 instead
  warnings.warn(
5
parallel submitted
10:06:22
parallel finished
10:13:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:14:00
start mi0
10:14:00
start mi0 range(p) 1 loop
10:14:00
finish mi0 range(p) 1 loop
10:14:00
start mi0 range(p) 2 loop
10:14:00
finish mi0 range(p) 2 loop
10:14:00
start mi0 range(NT) loop
10:14:00
finish mi0 range(NT) loop
10:14:00
start mi0 range(n) loop
10:14:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:14:00
start mi0 range(n) 2loop
10:14:00
finish mi0 range(n) 2loop
10:14:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:14:00
start mi1 range(p) 1 loop
10:14:00
finish mi1 range(p) 1 loop
10:14:00
start mi1 range(p) 2 loop
10:14:00
finish mi1 range(p) 2 loop
10:14:00
start mi1 range(NT) loop
10:14:01
finish mi1 range(NT) loop
10:14:01
start mi1 range(n) loop
10:14:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:14:01
start mi1 range(n) 2loop
10:14:01
finish mi1 range(n) 2loop
10:14:01
start mi2
10:14:01
start mi2 range(p) 1 loop
10:14:01
finish mi2 range(p) 1 loop
10:14:01
start mi2 range(p) 2 loop
10:14:01
finish mi2 range(p) 2 loop
10:14:01
start mi2 range(NT) loop
10:14:01
finish mi2 range(NT) loop
10:14:01
start mi2 range(n) loop
10:14:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:14:01
start mi2 range(n) 2loop
10:14:01
finish mi2 range(n) 2loop
10:14:01
start mi3
10:14:01
start mi3 range(p) 1 loop
10:14:01
finish mi3 range(p) 1 loop
10:14:01
start mi3 range(p) 2 loop
10:14:01
finish mi3 range(p) 2 loop
10:14:01
start mi3 range(NT) loop
10:14:01
finish mi3 range(NT) loop
10:14:01
start mi3 range(n) loop
10:14:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:14:01
start mi3 range(n) 2loop
10:14:01
finish mi3 range(n) 2loop
10:14:01
[[-2.26290653]]
end mi3 loop
10:14:01
estep
10:14:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:14:17
start ppi1
10:14:17
start mi0
10:14:17
start mi0 range(p) 1 loop
10:14:17
finish mi0 range(p) 1 loop
10:14:17
start mi0 range(p) 2 loop
10:14:17
finish mi0 range(p) 2 loop
10:14:17
start mi0 range(NT) loop
10:14:17
finish mi0 range(NT) loop
10:14:17
start mi0 range(n) loop
10:14:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:14:17
start mi0 range(n) 2loop
10:14:17
finish mi0 range(n) 2loop
10:14:17
start mi1
10:14:17
start mi1 range(p) 1 loop
10:14:17
finish mi1 range(p) 1 loop
10:14:17
start mi1 range(p) 2 loop
10:14:17
finish mi1 range(p) 2 loop
10:14:17
start mi1 range(NT) loop
10:14:17
finish mi1 range(NT) loop
10:14:17
start mi1 range(n) loop
10:14:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:14:17
start mi1 range(n) 2loop
10:14:17
finish mi1 range(n) 2loop
10:14:17
start mi2
10:14:17
start mi2 range(p) 1 loop
10:14:17
finish mi2 range(p) 1 loop
10:14:17
start mi2 range(p) 2 loop
10:14:17
finish mi2 range(p) 2 loop
10:14:17
start mi2 range(NT) loop
10:14:17
finish mi2 range(NT) loop
10:14:18
start mi2 range(n) loop
10:14:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:14:18
start mi2 range(n) 2loop
10:14:18
finish mi2 range(n) 2loop
10:14:18
start mi3
10:14:18
start mi3 range(p) 1 loop
10:14:18
finish mi3 range(p) 1 loop
10:14:18
start mi3 range(p) 2 loop
10:14:18
finish mi3 range(p) 2 loop
10:14:18
start mi3 range(NT) loop
10:14:18
finish mi3 range(NT) loop
10:14:18
start mi3 range(n) loop
10:14:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:14:18
start mi3 range(n) 2loop
10:14:18
finish mi3 range(n) 2loop
10:14:18
[[-2.32539946]]
end mi3 loop
10:14:18
estep
10:14:18
end estep
10:14:33
end pa10:14:33
goodness of fit correlation [0.18634653]
start cluster 10:14:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41571 instead
  warnings.warn(
6
parallel submitted
10:14:50
parallel finished
10:22:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:22:09
start mi0
10:22:09
start mi0 range(p) 1 loop
10:22:09
finish mi0 range(p) 1 loop
10:22:09
start mi0 range(p) 2 loop
10:22:09
finish mi0 range(p) 2 loop
10:22:09
start mi0 range(NT) loop
10:22:09
finish mi0 range(NT) loop
10:22:09
start mi0 range(n) loop
10:22:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:22:09
start mi0 range(n) 2loop
10:22:09
finish mi0 range(n) 2loop
10:22:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:22:10
start mi1 range(p) 1 loop
10:22:10
finish mi1 range(p) 1 loop
10:22:10
start mi1 range(p) 2 loop
10:22:10
finish mi1 range(p) 2 loop
10:22:10
start mi1 range(NT) loop
10:22:10
finish mi1 range(NT) loop
10:22:10
start mi1 range(n) loop
10:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:22:10
start mi1 range(n) 2loop
10:22:10
finish mi1 range(n) 2loop
10:22:10
start mi2
10:22:10
start mi2 range(p) 1 loop
10:22:10
finish mi2 range(p) 1 loop
10:22:10
start mi2 range(p) 2 loop
10:22:10
finish mi2 range(p) 2 loop
10:22:10
start mi2 range(NT) loop
10:22:10
finish mi2 range(NT) loop
10:22:10
start mi2 range(n) loop
10:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:22:10
start mi2 range(n) 2loop
10:22:10
finish mi2 range(n) 2loop
10:22:10
start mi3
10:22:10
start mi3 range(p) 1 loop
10:22:10
finish mi3 range(p) 1 loop
10:22:10
start mi3 range(p) 2 loop
10:22:10
finish mi3 range(p) 2 loop
10:22:10
start mi3 range(NT) loop
10:22:10
finish mi3 range(NT) loop
10:22:10
start mi3 range(n) loop
10:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:22:10
start mi3 range(n) 2loop
10:22:10
finish mi3 range(n) 2loop
10:22:10
[[-2.26558737]]
end mi3 loop
10:22:10
estep
10:22:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:22:26
start ppi1
10:22:26
start mi0
10:22:26
start mi0 range(p) 1 loop
10:22:26
finish mi0 range(p) 1 loop
10:22:26
start mi0 range(p) 2 loop
10:22:26
finish mi0 range(p) 2 loop
10:22:26
start mi0 range(NT) loop
10:22:26
finish mi0 range(NT) loop
10:22:26
start mi0 range(n) loop
10:22:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:22:26
start mi0 range(n) 2loop
10:22:26
finish mi0 range(n) 2loop
10:22:26
start mi1
10:22:26
start mi1 range(p) 1 loop
10:22:26
finish mi1 range(p) 1 loop
10:22:26
start mi1 range(p) 2 loop
10:22:26
finish mi1 range(p) 2 loop
10:22:26
start mi1 range(NT) loop
10:22:26
finish mi1 range(NT) loop
10:22:26
start mi1 range(n) loop
10:22:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:22:26
start mi1 range(n) 2loop
10:22:26
finish mi1 range(n) 2loop
10:22:26
start mi2
10:22:26
start mi2 range(p) 1 loop
10:22:26
finish mi2 range(p) 1 loop
10:22:26
start mi2 range(p) 2 loop
10:22:26
finish mi2 range(p) 2 loop
10:22:26
start mi2 range(NT) loop
10:22:26
finish mi2 range(NT) loop
10:22:26
start mi2 range(n) loop
10:22:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:22:27
start mi2 range(n) 2loop
10:22:27
finish mi2 range(n) 2loop
10:22:27
start mi3
10:22:27
start mi3 range(p) 1 loop
10:22:27
finish mi3 range(p) 1 loop
10:22:27
start mi3 range(p) 2 loop
10:22:27
finish mi3 range(p) 2 loop
10:22:27
start mi3 range(NT) loop
10:22:27
finish mi3 range(NT) loop
10:22:27
start mi3 range(n) loop
10:22:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:22:27
start mi3 range(n) 2loop
10:22:27
finish mi3 range(n) 2loop
10:22:27
[[-2.32808024]]
end mi3 loop
10:22:27
estep
10:22:27
end estep
10:22:42
end pa10:22:42
goodness of fit correlation [0.21047867]
start cluster 10:22:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38727 instead
  warnings.warn(
7
parallel submitted
10:22:59
parallel finished
10:28:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:28:53
start mi0
10:28:53
start mi0 range(p) 1 loop
10:28:53
finish mi0 range(p) 1 loop
10:28:53
start mi0 range(p) 2 loop
10:28:53
finish mi0 range(p) 2 loop
10:28:53
start mi0 range(NT) loop
10:28:53
finish mi0 range(NT) loop
10:28:53
start mi0 range(n) loop
10:28:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:28:53
start mi0 range(n) 2loop
10:28:53
finish mi0 range(n) 2loop
10:28:53
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:28:53
start mi1 range(p) 1 loop
10:28:53
finish mi1 range(p) 1 loop
10:28:53
start mi1 range(p) 2 loop
10:28:53
finish mi1 range(p) 2 loop
10:28:53
start mi1 range(NT) loop
10:28:53
finish mi1 range(NT) loop
10:28:53
start mi1 range(n) loop
10:28:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:28:53
start mi1 range(n) 2loop
10:28:53
finish mi1 range(n) 2loop
10:28:53
start mi2
10:28:53
start mi2 range(p) 1 loop
10:28:53
finish mi2 range(p) 1 loop
10:28:53
start mi2 range(p) 2 loop
10:28:53
finish mi2 range(p) 2 loop
10:28:53
start mi2 range(NT) loop
10:28:53
finish mi2 range(NT) loop
10:28:53
start mi2 range(n) loop
10:28:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:28:53
start mi2 range(n) 2loop
10:28:53
finish mi2 range(n) 2loop
10:28:53
start mi3
10:28:53
start mi3 range(p) 1 loop
10:28:53
finish mi3 range(p) 1 loop
10:28:53
start mi3 range(p) 2 loop
10:28:53
finish mi3 range(p) 2 loop
10:28:53
start mi3 range(NT) loop
10:28:54
finish mi3 range(NT) loop
10:28:54
start mi3 range(n) loop
10:28:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:28:54
start mi3 range(n) 2loop
10:28:54
finish mi3 range(n) 2loop
10:28:54
[[-2.25900853]]
end mi3 loop
10:28:54
estep
10:28:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:29:09
start ppi1
10:29:09
start mi0
10:29:09
start mi0 range(p) 1 loop
10:29:09
finish mi0 range(p) 1 loop
10:29:09
start mi0 range(p) 2 loop
10:29:09
finish mi0 range(p) 2 loop
10:29:09
start mi0 range(NT) loop
10:29:09
finish mi0 range(NT) loop
10:29:09
start mi0 range(n) loop
10:29:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:29:09
start mi0 range(n) 2loop
10:29:09
finish mi0 range(n) 2loop
10:29:09
start mi1
10:29:09
start mi1 range(p) 1 loop
10:29:09
finish mi1 range(p) 1 loop
10:29:09
start mi1 range(p) 2 loop
10:29:09
finish mi1 range(p) 2 loop
10:29:09
start mi1 range(NT) loop
10:29:10
finish mi1 range(NT) loop
10:29:10
start mi1 range(n) loop
10:29:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:29:10
start mi1 range(n) 2loop
10:29:10
finish mi1 range(n) 2loop
10:29:10
start mi2
10:29:10
start mi2 range(p) 1 loop
10:29:10
finish mi2 range(p) 1 loop
10:29:10
start mi2 range(p) 2 loop
10:29:10
finish mi2 range(p) 2 loop
10:29:10
start mi2 range(NT) loop
10:29:10
finish mi2 range(NT) loop
10:29:10
start mi2 range(n) loop
10:29:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:29:10
start mi2 range(n) 2loop
10:29:10
finish mi2 range(n) 2loop
10:29:10
start mi3
10:29:10
start mi3 range(p) 1 loop
10:29:10
finish mi3 range(p) 1 loop
10:29:10
start mi3 range(p) 2 loop
10:29:10
finish mi3 range(p) 2 loop
10:29:10
start mi3 range(NT) loop
10:29:10
finish mi3 range(NT) loop
10:29:10
start mi3 range(n) loop
10:29:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:29:10
start mi3 range(n) 2loop
10:29:10
finish mi3 range(n) 2loop
10:29:10
[[-2.32150154]]
end mi3 loop
10:29:10
estep
10:29:10
end estep
10:29:27
end pa10:29:27
goodness of fit correlation [0.21505542]
start cluster 10:29:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44563 instead
  warnings.warn(
8
parallel submitted
10:29:46
parallel finished
10:33:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:33:51
start mi0
10:33:51
start mi0 range(p) 1 loop
10:33:51
finish mi0 range(p) 1 loop
10:33:51
start mi0 range(p) 2 loop
10:33:51
finish mi0 range(p) 2 loop
10:33:51
start mi0 range(NT) loop
10:33:51
finish mi0 range(NT) loop
10:33:51
start mi0 range(n) loop
10:33:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:33:51
start mi0 range(n) 2loop
10:33:51
finish mi0 range(n) 2loop
10:33:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:33:51
start mi1 range(p) 1 loop
10:33:51
finish mi1 range(p) 1 loop
10:33:51
start mi1 range(p) 2 loop
10:33:51
finish mi1 range(p) 2 loop
10:33:51
start mi1 range(NT) loop
10:33:51
finish mi1 range(NT) loop
10:33:51
start mi1 range(n) loop
10:33:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:33:51
start mi1 range(n) 2loop
10:33:51
finish mi1 range(n) 2loop
10:33:51
start mi2
10:33:51
start mi2 range(p) 1 loop
10:33:51
finish mi2 range(p) 1 loop
10:33:51
start mi2 range(p) 2 loop
10:33:51
finish mi2 range(p) 2 loop
10:33:51
start mi2 range(NT) loop
10:33:51
finish mi2 range(NT) loop
10:33:51
start mi2 range(n) loop
10:33:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:33:51
start mi2 range(n) 2loop
10:33:51
finish mi2 range(n) 2loop
10:33:51
start mi3
10:33:51
start mi3 range(p) 1 loop
10:33:51
finish mi3 range(p) 1 loop
10:33:51
start mi3 range(p) 2 loop
10:33:52
finish mi3 range(p) 2 loop
10:33:52
start mi3 range(NT) loop
10:33:52
finish mi3 range(NT) loop
10:33:52
start mi3 range(n) loop
10:33:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:33:52
start mi3 range(n) 2loop
10:33:52
finish mi3 range(n) 2loop
10:33:52
[[-2.29801502]]
end mi3 loop
10:33:52
estep
10:33:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:34:08
start ppi1
10:34:08
start mi0
10:34:08
start mi0 range(p) 1 loop
10:34:08
finish mi0 range(p) 1 loop
10:34:08
start mi0 range(p) 2 loop
10:34:08
finish mi0 range(p) 2 loop
10:34:08
start mi0 range(NT) loop
10:34:08
finish mi0 range(NT) loop
10:34:08
start mi0 range(n) loop
10:34:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:34:08
start mi0 range(n) 2loop
10:34:08
finish mi0 range(n) 2loop
10:34:08
start mi1
10:34:08
start mi1 range(p) 1 loop
10:34:08
finish mi1 range(p) 1 loop
10:34:08
start mi1 range(p) 2 loop
10:34:08
finish mi1 range(p) 2 loop
10:34:08
start mi1 range(NT) loop
10:34:08
finish mi1 range(NT) loop
10:34:08
start mi1 range(n) loop
10:34:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:34:09
start mi1 range(n) 2loop
10:34:09
finish mi1 range(n) 2loop
10:34:09
start mi2
10:34:09
start mi2 range(p) 1 loop
10:34:09
finish mi2 range(p) 1 loop
10:34:09
start mi2 range(p) 2 loop
10:34:09
finish mi2 range(p) 2 loop
10:34:09
start mi2 range(NT) loop
10:34:09
finish mi2 range(NT) loop
10:34:09
start mi2 range(n) loop
10:34:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:34:09
start mi2 range(n) 2loop
10:34:09
finish mi2 range(n) 2loop
10:34:09
start mi3
10:34:09
start mi3 range(p) 1 loop
10:34:09
finish mi3 range(p) 1 loop
10:34:09
start mi3 range(p) 2 loop
10:34:09
finish mi3 range(p) 2 loop
10:34:09
start mi3 range(NT) loop
10:34:09
finish mi3 range(NT) loop
10:34:09
start mi3 range(n) loop
10:34:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:34:09
start mi3 range(n) 2loop
10:34:09
finish mi3 range(n) 2loop
10:34:09
[[-2.36050746]]
end mi3 loop
10:34:09
estep
10:34:09
end estep
10:34:26
end pa10:34:26
goodness of fit correlation [0.28794227]
start cluster 10:34:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36634 instead
  warnings.warn(
9
parallel submitted
10:34:45
parallel finished
10:37:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:37:54
start mi0
10:37:54
start mi0 range(p) 1 loop
10:37:54
finish mi0 range(p) 1 loop
10:37:54
start mi0 range(p) 2 loop
10:37:54
finish mi0 range(p) 2 loop
10:37:54
start mi0 range(NT) loop
10:37:54
finish mi0 range(NT) loop
10:37:54
start mi0 range(n) loop
10:37:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:37:54
start mi0 range(n) 2loop
10:37:54
finish mi0 range(n) 2loop
10:37:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:37:54
start mi1 range(p) 1 loop
10:37:54
finish mi1 range(p) 1 loop
10:37:54
start mi1 range(p) 2 loop
10:37:54
finish mi1 range(p) 2 loop
10:37:54
start mi1 range(NT) loop
10:37:54
finish mi1 range(NT) loop
10:37:54
start mi1 range(n) loop
10:37:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:37:55
start mi1 range(n) 2loop
10:37:55
finish mi1 range(n) 2loop
10:37:55
start mi2
10:37:55
start mi2 range(p) 1 loop
10:37:55
finish mi2 range(p) 1 loop
10:37:55
start mi2 range(p) 2 loop
10:37:55
finish mi2 range(p) 2 loop
10:37:55
start mi2 range(NT) loop
10:37:55
finish mi2 range(NT) loop
10:37:55
start mi2 range(n) loop
10:37:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:37:55
start mi2 range(n) 2loop
10:37:55
finish mi2 range(n) 2loop
10:37:55
start mi3
10:37:55
start mi3 range(p) 1 loop
10:37:55
finish mi3 range(p) 1 loop
10:37:55
start mi3 range(p) 2 loop
10:37:55
finish mi3 range(p) 2 loop
10:37:55
start mi3 range(NT) loop
10:37:55
finish mi3 range(NT) loop
10:37:55
start mi3 range(n) loop
10:37:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:37:55
start mi3 range(n) 2loop
10:37:55
finish mi3 range(n) 2loop
10:37:55
[[-2.31766884]]
end mi3 loop
10:37:55
estep
10:37:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:38:11
start ppi1
10:38:11
start mi0
10:38:11
start mi0 range(p) 1 loop
10:38:11
finish mi0 range(p) 1 loop
10:38:11
start mi0 range(p) 2 loop
10:38:11
finish mi0 range(p) 2 loop
10:38:11
start mi0 range(NT) loop
10:38:11
finish mi0 range(NT) loop
10:38:11
start mi0 range(n) loop
10:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:38:11
start mi0 range(n) 2loop
10:38:11
finish mi0 range(n) 2loop
10:38:11
start mi1
10:38:11
start mi1 range(p) 1 loop
10:38:11
finish mi1 range(p) 1 loop
10:38:11
start mi1 range(p) 2 loop
10:38:11
finish mi1 range(p) 2 loop
10:38:11
start mi1 range(NT) loop
10:38:11
finish mi1 range(NT) loop
10:38:11
start mi1 range(n) loop
10:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:38:11
start mi1 range(n) 2loop
10:38:11
finish mi1 range(n) 2loop
10:38:12
start mi2
10:38:12
start mi2 range(p) 1 loop
10:38:12
finish mi2 range(p) 1 loop
10:38:12
start mi2 range(p) 2 loop
10:38:12
finish mi2 range(p) 2 loop
10:38:12
start mi2 range(NT) loop
10:38:12
finish mi2 range(NT) loop
10:38:12
start mi2 range(n) loop
10:38:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:38:12
start mi2 range(n) 2loop
10:38:12
finish mi2 range(n) 2loop
10:38:12
start mi3
10:38:12
start mi3 range(p) 1 loop
10:38:12
finish mi3 range(p) 1 loop
10:38:12
start mi3 range(p) 2 loop
10:38:12
finish mi3 range(p) 2 loop
10:38:12
start mi3 range(NT) loop
10:38:12
finish mi3 range(NT) loop
10:38:12
start mi3 range(n) loop
10:38:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:38:12
start mi3 range(n) 2loop
10:38:12
finish mi3 range(n) 2loop
10:38:12
[[-2.38016112]]
end mi3 loop
10:38:12
estep
10:38:12
end estep
10:38:28
end pa10:38:28
goodness of fit correlation [0.25911135]
start cluster 10:38:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45393 instead
  warnings.warn(
10
parallel submitted
10:38:45
parallel finished
10:43:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:43:56
start mi0
10:43:56
start mi0 range(p) 1 loop
10:43:56
finish mi0 range(p) 1 loop
10:43:56
start mi0 range(p) 2 loop
10:43:56
finish mi0 range(p) 2 loop
10:43:56
start mi0 range(NT) loop
10:43:56
finish mi0 range(NT) loop
10:43:56
start mi0 range(n) loop
10:43:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:43:56
start mi0 range(n) 2loop
10:43:56
finish mi0 range(n) 2loop
10:43:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:43:56
start mi1 range(p) 1 loop
10:43:56
finish mi1 range(p) 1 loop
10:43:56
start mi1 range(p) 2 loop
10:43:56
finish mi1 range(p) 2 loop
10:43:56
start mi1 range(NT) loop
10:43:56
finish mi1 range(NT) loop
10:43:56
start mi1 range(n) loop
10:43:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:43:56
start mi1 range(n) 2loop
10:43:56
finish mi1 range(n) 2loop
10:43:57
start mi2
10:43:57
start mi2 range(p) 1 loop
10:43:57
finish mi2 range(p) 1 loop
10:43:57
start mi2 range(p) 2 loop
10:43:57
finish mi2 range(p) 2 loop
10:43:57
start mi2 range(NT) loop
10:43:57
finish mi2 range(NT) loop
10:43:57
start mi2 range(n) loop
10:43:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:43:57
start mi2 range(n) 2loop
10:43:57
finish mi2 range(n) 2loop
10:43:57
start mi3
10:43:57
start mi3 range(p) 1 loop
10:43:57
finish mi3 range(p) 1 loop
10:43:57
start mi3 range(p) 2 loop
10:43:57
finish mi3 range(p) 2 loop
10:43:57
start mi3 range(NT) loop
10:43:57
finish mi3 range(NT) loop
10:43:57
start mi3 range(n) loop
10:43:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:43:57
start mi3 range(n) 2loop
10:43:57
finish mi3 range(n) 2loop
10:43:57
[[-2.3274127]]
end mi3 loop
10:43:57
estep
10:43:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:44:13
start ppi1
10:44:13
start mi0
10:44:13
start mi0 range(p) 1 loop
10:44:13
finish mi0 range(p) 1 loop
10:44:13
start mi0 range(p) 2 loop
10:44:13
finish mi0 range(p) 2 loop
10:44:13
start mi0 range(NT) loop
10:44:13
finish mi0 range(NT) loop
10:44:13
start mi0 range(n) loop
10:44:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:44:14
start mi0 range(n) 2loop
10:44:14
finish mi0 range(n) 2loop
10:44:14
start mi1
10:44:14
start mi1 range(p) 1 loop
10:44:14
finish mi1 range(p) 1 loop
10:44:14
start mi1 range(p) 2 loop
10:44:14
finish mi1 range(p) 2 loop
10:44:14
start mi1 range(NT) loop
10:44:14
finish mi1 range(NT) loop
10:44:14
start mi1 range(n) loop
10:44:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:44:14
start mi1 range(n) 2loop
10:44:14
finish mi1 range(n) 2loop
10:44:14
start mi2
10:44:14
start mi2 range(p) 1 loop
10:44:14
finish mi2 range(p) 1 loop
10:44:14
start mi2 range(p) 2 loop
10:44:14
finish mi2 range(p) 2 loop
10:44:14
start mi2 range(NT) loop
10:44:14
finish mi2 range(NT) loop
10:44:14
start mi2 range(n) loop
10:44:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:44:14
start mi2 range(n) 2loop
10:44:14
finish mi2 range(n) 2loop
10:44:14
start mi3
10:44:14
start mi3 range(p) 1 loop
10:44:14
finish mi3 range(p) 1 loop
10:44:14
start mi3 range(p) 2 loop
10:44:14
finish mi3 range(p) 2 loop
10:44:14
start mi3 range(NT) loop
10:44:14
finish mi3 range(NT) loop
10:44:14
start mi3 range(n) loop
10:44:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:44:14
start mi3 range(n) 2loop
10:44:14
finish mi3 range(n) 2loop
10:44:14
[[-2.38990493]]
end mi3 loop
10:44:14
estep
10:44:14
end estep
10:44:32
end pa10:44:32
goodness of fit correlation [0.26946039]
start cluster 10:44:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43233 instead
  warnings.warn(
11
parallel submitted
10:44:51
parallel finished
10:48:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:48:54
start mi0
10:48:54
start mi0 range(p) 1 loop
10:48:54
finish mi0 range(p) 1 loop
10:48:54
start mi0 range(p) 2 loop
10:48:54
finish mi0 range(p) 2 loop
10:48:54
start mi0 range(NT) loop
10:48:54
finish mi0 range(NT) loop
10:48:54
start mi0 range(n) loop
10:48:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:48:54
start mi0 range(n) 2loop
10:48:54
finish mi0 range(n) 2loop
10:48:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:48:54
start mi1 range(p) 1 loop
10:48:54
finish mi1 range(p) 1 loop
10:48:54
start mi1 range(p) 2 loop
10:48:54
finish mi1 range(p) 2 loop
10:48:54
start mi1 range(NT) loop
10:48:54
finish mi1 range(NT) loop
10:48:54
start mi1 range(n) loop
10:48:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:48:55
start mi1 range(n) 2loop
10:48:55
finish mi1 range(n) 2loop
10:48:55
start mi2
10:48:55
start mi2 range(p) 1 loop
10:48:55
finish mi2 range(p) 1 loop
10:48:55
start mi2 range(p) 2 loop
10:48:55
finish mi2 range(p) 2 loop
10:48:55
start mi2 range(NT) loop
10:48:55
finish mi2 range(NT) loop
10:48:55
start mi2 range(n) loop
10:48:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:48:55
start mi2 range(n) 2loop
10:48:55
finish mi2 range(n) 2loop
10:48:55
start mi3
10:48:55
start mi3 range(p) 1 loop
10:48:55
finish mi3 range(p) 1 loop
10:48:55
start mi3 range(p) 2 loop
10:48:55
finish mi3 range(p) 2 loop
10:48:55
start mi3 range(NT) loop
10:48:55
finish mi3 range(NT) loop
10:48:55
start mi3 range(n) loop
10:48:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:48:55
start mi3 range(n) 2loop
10:48:55
finish mi3 range(n) 2loop
10:48:55
[[-2.37924212]]
end mi3 loop
10:48:55
estep
10:48:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:11
start ppi1
10:49:11
start mi0
10:49:11
start mi0 range(p) 1 loop
10:49:11
finish mi0 range(p) 1 loop
10:49:11
start mi0 range(p) 2 loop
10:49:11
finish mi0 range(p) 2 loop
10:49:11
start mi0 range(NT) loop
10:49:11
finish mi0 range(NT) loop
10:49:11
start mi0 range(n) loop
10:49:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:11
start mi0 range(n) 2loop
10:49:11
finish mi0 range(n) 2loop
10:49:11
start mi1
10:49:11
start mi1 range(p) 1 loop
10:49:11
finish mi1 range(p) 1 loop
10:49:11
start mi1 range(p) 2 loop
10:49:11
finish mi1 range(p) 2 loop
10:49:11
start mi1 range(NT) loop
10:49:11
finish mi1 range(NT) loop
10:49:11
start mi1 range(n) loop
10:49:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:11
start mi1 range(n) 2loop
10:49:11
finish mi1 range(n) 2loop
10:49:11
start mi2
10:49:11
start mi2 range(p) 1 loop
10:49:11
finish mi2 range(p) 1 loop
10:49:11
start mi2 range(p) 2 loop
10:49:11
finish mi2 range(p) 2 loop
10:49:11
start mi2 range(NT) loop
10:49:11
finish mi2 range(NT) loop
10:49:12
start mi2 range(n) loop
10:49:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:49:12
start mi2 range(n) 2loop
10:49:12
finish mi2 range(n) 2loop
10:49:12
start mi3
10:49:12
start mi3 range(p) 1 loop
10:49:12
finish mi3 range(p) 1 loop
10:49:12
start mi3 range(p) 2 loop
10:49:12
finish mi3 range(p) 2 loop
10:49:12
start mi3 range(NT) loop
10:49:12
finish mi3 range(NT) loop
10:49:12
start mi3 range(n) loop
10:49:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:49:12
start mi3 range(n) 2loop
10:49:12
finish mi3 range(n) 2loop
10:49:12
[[-2.44173421]]
end mi3 loop
10:49:12
estep
10:49:12
end estep
10:49:28
end pa10:49:28
goodness of fit correlation [0.26673676]
start cluster 10:49:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42526 instead
  warnings.warn(
12
parallel submitted
10:49:45
parallel finished
10:51:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:51:49
start mi0
10:51:49
start mi0 range(p) 1 loop
10:51:49
finish mi0 range(p) 1 loop
10:51:49
start mi0 range(p) 2 loop
10:51:49
finish mi0 range(p) 2 loop
10:51:49
start mi0 range(NT) loop
10:51:49
finish mi0 range(NT) loop
10:51:49
start mi0 range(n) loop
10:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:51:49
start mi0 range(n) 2loop
10:51:49
finish mi0 range(n) 2loop
10:51:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:51:49
start mi1 range(p) 1 loop
10:51:49
finish mi1 range(p) 1 loop
10:51:49
start mi1 range(p) 2 loop
10:51:49
finish mi1 range(p) 2 loop
10:51:49
start mi1 range(NT) loop
10:51:49
finish mi1 range(NT) loop
10:51:49
start mi1 range(n) loop
10:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:51:49
start mi1 range(n) 2loop
10:51:49
finish mi1 range(n) 2loop
10:51:49
start mi2
10:51:49
start mi2 range(p) 1 loop
10:51:49
finish mi2 range(p) 1 loop
10:51:49
start mi2 range(p) 2 loop
10:51:49
finish mi2 range(p) 2 loop
10:51:49
start mi2 range(NT) loop
10:51:49
finish mi2 range(NT) loop
10:51:50
start mi2 range(n) loop
10:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:51:50
start mi2 range(n) 2loop
10:51:50
finish mi2 range(n) 2loop
10:51:50
start mi3
10:51:50
start mi3 range(p) 1 loop
10:51:50
finish mi3 range(p) 1 loop
10:51:50
start mi3 range(p) 2 loop
10:51:50
finish mi3 range(p) 2 loop
10:51:50
start mi3 range(NT) loop
10:51:50
finish mi3 range(NT) loop
10:51:50
start mi3 range(n) loop
10:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:51:50
start mi3 range(n) 2loop
10:51:50
finish mi3 range(n) 2loop
10:51:50
[[-2.29745837]]
end mi3 loop
10:51:50
estep
10:51:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:52:06
start ppi1
10:52:06
start mi0
10:52:06
start mi0 range(p) 1 loop
10:52:06
finish mi0 range(p) 1 loop
10:52:06
start mi0 range(p) 2 loop
10:52:06
finish mi0 range(p) 2 loop
10:52:06
start mi0 range(NT) loop
10:52:06
finish mi0 range(NT) loop
10:52:06
start mi0 range(n) loop
10:52:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:52:06
start mi0 range(n) 2loop
10:52:06
finish mi0 range(n) 2loop
10:52:06
start mi1
10:52:06
start mi1 range(p) 1 loop
10:52:06
finish mi1 range(p) 1 loop
10:52:06
start mi1 range(p) 2 loop
10:52:06
finish mi1 range(p) 2 loop
10:52:06
start mi1 range(NT) loop
10:52:06
finish mi1 range(NT) loop
10:52:06
start mi1 range(n) loop
10:52:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:52:06
start mi1 range(n) 2loop
10:52:06
finish mi1 range(n) 2loop
10:52:07
start mi2
10:52:07
start mi2 range(p) 1 loop
10:52:07
finish mi2 range(p) 1 loop
10:52:07
start mi2 range(p) 2 loop
10:52:07
finish mi2 range(p) 2 loop
10:52:07
start mi2 range(NT) loop
10:52:07
finish mi2 range(NT) loop
10:52:07
start mi2 range(n) loop
10:52:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:52:07
start mi2 range(n) 2loop
10:52:07
finish mi2 range(n) 2loop
10:52:07
start mi3
10:52:07
start mi3 range(p) 1 loop
10:52:07
finish mi3 range(p) 1 loop
10:52:07
start mi3 range(p) 2 loop
10:52:07
finish mi3 range(p) 2 loop
10:52:07
start mi3 range(NT) loop
10:52:07
finish mi3 range(NT) loop
10:52:07
start mi3 range(n) loop
10:52:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:52:07
start mi3 range(n) 2loop
10:52:07
finish mi3 range(n) 2loop
10:52:07
[[-2.35995081]]
end mi3 loop
10:52:07
estep
10:52:07
end estep
10:52:24
end pa10:52:24
goodness of fit correlation [0.1621417]
0.2879422685239103
[5.18765947e-01 4.93026330e-01 4.97197088e-01 4.73359855e-01
 4.87905457e-01 5.09206551e-01 5.56630316e-01 5.48484099e-01
 4.93764045e-01 4.83384753e-01 4.90041077e-01 4.83192693e-01
 4.86497543e-01 5.10222109e-01 4.83356563e-01 4.94562327e-01
 4.87446513e-01 4.90845121e-01 4.86147920e-01 4.81370259e-01
 5.06323440e-01 4.97053875e-01 4.65746490e-01 5.54003634e-01
 4.89784484e-01 5.84396265e-01 5.72088070e-01 5.79009383e-01
 5.20888130e-01 5.58102059e-01 4.91555644e-01 5.07716395e-01
 5.20343106e-01 4.82086840e-01 4.91258164e-01 5.38905590e-01
 4.58751108e-01 5.09210757e-01 4.89682652e-01 5.07465068e-01
 5.23667452e-01 5.50887485e-01 5.53643346e-01 5.09764600e-01
 5.51366625e-01 5.39156013e-01 4.85503587e-01 5.50948440e-01
 5.10256371e-01 4.91774988e-01 4.96520753e-01 5.29996070e-01
 5.37802701e-01 4.86486006e-01 5.40651554e-01 5.03659053e-01
 6.00430181e-01 5.61544062e-01 5.08169859e-01 5.50656264e-01
 5.42254695e-01 5.78401215e-01 5.45914018e-01 6.08693162e-01
 5.04095554e-01 5.14893953e-01 5.40493321e-01 6.56749570e-01
 3.59236724e-01 3.38440652e-01 3.52223759e-01 2.42941016e-01
 2.76499675e-01 3.86411670e-01 3.58353171e-01 3.52688320e-01
 3.50451849e-01 2.67774143e-01 2.89998966e-01 2.76899720e-01
 2.65621553e-01 3.33253336e-01 2.73859818e-01 3.44487119e-01
 3.45347084e-01 2.79977276e-01 3.17860484e-01 2.92375876e-01
 3.37751058e-01 3.39829444e-01 3.36501892e-01 3.42774332e-01
 2.84913947e-01 3.32359333e-01 3.30133053e-01 3.32408362e-01
 3.48079240e-01 3.56313221e-01 2.81525621e-01 3.12671339e-01
 3.60207333e-01 2.40323667e-01 3.75708109e-01 3.49867352e-01
 4.01836579e-01 3.72199652e-01 2.93692006e-01 3.82493086e-01
 3.43742579e-01 3.71688710e-01 3.62477249e-01 3.66693599e-01
 3.65546851e-01 3.94335720e-01 2.92701000e-01 3.51803467e-01
 3.89153756e-01 3.40541036e-01 3.59578887e-01 3.65018685e-01
 3.42667020e-01 2.76713672e-01 3.41278618e-01 3.40607854e-01
 3.20994783e-01 3.46726427e-01 3.37252417e-01 3.42948817e-01
 2.79605193e-01 3.26703137e-01 3.64504716e-01 3.53441463e-01
 3.57715839e-01 3.82794062e-01 3.80698589e-01 3.43319637e-01
 1.65520816e+00 1.00684320e-03]
start cluster 10:52:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46787 instead
  warnings.warn(
0
parallel submitted
10:52:44
parallel finished
10:57:21
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:57:27
start mi0
10:57:27
start mi0 range(p) 1 loop
10:57:27
finish mi0 range(p) 1 loop
10:57:27
start mi0 range(p) 2 loop
10:57:27
finish mi0 range(p) 2 loop
10:57:27
start mi0 range(NT) loop
10:57:27
finish mi0 range(NT) loop
10:57:27
start mi0 range(n) loop
10:57:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:57:27
start mi0 range(n) 2loop
10:57:27
finish mi0 range(n) 2loop
10:57:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:57:27
start mi1 range(p) 1 loop
10:57:27
finish mi1 range(p) 1 loop
10:57:27
start mi1 range(p) 2 loop
10:57:27
finish mi1 range(p) 2 loop
10:57:27
start mi1 range(NT) loop
10:57:27
finish mi1 range(NT) loop
10:57:27
start mi1 range(n) loop
10:57:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:57:27
start mi1 range(n) 2loop
10:57:27
finish mi1 range(n) 2loop
10:57:28
start mi2
10:57:28
start mi2 range(p) 1 loop
10:57:28
finish mi2 range(p) 1 loop
10:57:28
start mi2 range(p) 2 loop
10:57:28
finish mi2 range(p) 2 loop
10:57:28
start mi2 range(NT) loop
10:57:28
finish mi2 range(NT) loop
10:57:28
start mi2 range(n) loop
10:57:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:57:28
start mi2 range(n) 2loop
10:57:28
finish mi2 range(n) 2loop
10:57:28
start mi3
10:57:28
start mi3 range(p) 1 loop
10:57:28
finish mi3 range(p) 1 loop
10:57:28
start mi3 range(p) 2 loop
10:57:28
finish mi3 range(p) 2 loop
10:57:28
start mi3 range(NT) loop
10:57:28
finish mi3 range(NT) loop
10:57:28
start mi3 range(n) loop
10:57:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:57:28
start mi3 range(n) 2loop
10:57:28
finish mi3 range(n) 2loop
10:57:28
[[-2.14897876]]
end mi3 loop
10:57:28
estep
10:57:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:57:44
start ppi1
10:57:44
start mi0
10:57:44
start mi0 range(p) 1 loop
10:57:44
finish mi0 range(p) 1 loop
10:57:44
start mi0 range(p) 2 loop
10:57:44
finish mi0 range(p) 2 loop
10:57:44
start mi0 range(NT) loop
10:57:44
finish mi0 range(NT) loop
10:57:44
start mi0 range(n) loop
10:57:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:57:44
start mi0 range(n) 2loop
10:57:44
finish mi0 range(n) 2loop
10:57:44
start mi1
10:57:44
start mi1 range(p) 1 loop
10:57:44
finish mi1 range(p) 1 loop
10:57:44
start mi1 range(p) 2 loop
10:57:44
finish mi1 range(p) 2 loop
10:57:44
start mi1 range(NT) loop
10:57:44
finish mi1 range(NT) loop
10:57:44
start mi1 range(n) loop
10:57:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:57:44
start mi1 range(n) 2loop
10:57:44
finish mi1 range(n) 2loop
10:57:44
start mi2
10:57:44
start mi2 range(p) 1 loop
10:57:44
finish mi2 range(p) 1 loop
10:57:44
start mi2 range(p) 2 loop
10:57:44
finish mi2 range(p) 2 loop
10:57:44
start mi2 range(NT) loop
10:57:44
finish mi2 range(NT) loop
10:57:44
start mi2 range(n) loop
10:57:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:57:45
start mi2 range(n) 2loop
10:57:45
finish mi2 range(n) 2loop
10:57:45
start mi3
10:57:45
start mi3 range(p) 1 loop
10:57:45
finish mi3 range(p) 1 loop
10:57:45
start mi3 range(p) 2 loop
10:57:45
finish mi3 range(p) 2 loop
10:57:45
start mi3 range(NT) loop
10:57:45
finish mi3 range(NT) loop
10:57:45
start mi3 range(n) loop
10:57:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:57:45
start mi3 range(n) 2loop
10:57:45
finish mi3 range(n) 2loop
10:57:45
[[-2.14897876]]
end mi3 loop
10:57:45
estep
10:57:45
end estep
10:58:02
end pa10:58:02
goodness of fit correlation [0.02237789]
start cluster 10:58:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37996 instead
  warnings.warn(
1
parallel submitted
10:58:23
parallel finished
11:02:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:02:21
start mi0
11:02:21
start mi0 range(p) 1 loop
11:02:21
finish mi0 range(p) 1 loop
11:02:21
start mi0 range(p) 2 loop
11:02:21
finish mi0 range(p) 2 loop
11:02:21
start mi0 range(NT) loop
11:02:21
finish mi0 range(NT) loop
11:02:21
start mi0 range(n) loop
11:02:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:02:21
start mi0 range(n) 2loop
11:02:21
finish mi0 range(n) 2loop
11:02:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:02:21
start mi1 range(p) 1 loop
11:02:21
finish mi1 range(p) 1 loop
11:02:21
start mi1 range(p) 2 loop
11:02:21
finish mi1 range(p) 2 loop
11:02:21
start mi1 range(NT) loop
11:02:21
finish mi1 range(NT) loop
11:02:21
start mi1 range(n) loop
11:02:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:02:21
start mi1 range(n) 2loop
11:02:21
finish mi1 range(n) 2loop
11:02:21
start mi2
11:02:21
start mi2 range(p) 1 loop
11:02:21
finish mi2 range(p) 1 loop
11:02:21
start mi2 range(p) 2 loop
11:02:21
finish mi2 range(p) 2 loop
11:02:21
start mi2 range(NT) loop
11:02:21
finish mi2 range(NT) loop
11:02:21
start mi2 range(n) loop
11:02:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:02:22
start mi2 range(n) 2loop
11:02:22
finish mi2 range(n) 2loop
11:02:22
start mi3
11:02:22
start mi3 range(p) 1 loop
11:02:22
finish mi3 range(p) 1 loop
11:02:22
start mi3 range(p) 2 loop
11:02:22
finish mi3 range(p) 2 loop
11:02:22
start mi3 range(NT) loop
11:02:22
finish mi3 range(NT) loop
11:02:22
start mi3 range(n) loop
11:02:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:02:22
start mi3 range(n) 2loop
11:02:22
finish mi3 range(n) 2loop
11:02:22
[[-2.16773693]]
end mi3 loop
11:02:22
estep
11:02:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:02:39
start ppi1
11:02:39
start mi0
11:02:39
start mi0 range(p) 1 loop
11:02:39
finish mi0 range(p) 1 loop
11:02:39
start mi0 range(p) 2 loop
11:02:39
finish mi0 range(p) 2 loop
11:02:39
start mi0 range(NT) loop
11:02:39
finish mi0 range(NT) loop
11:02:39
start mi0 range(n) loop
11:02:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:02:39
start mi0 range(n) 2loop
11:02:39
finish mi0 range(n) 2loop
11:02:39
start mi1
11:02:39
start mi1 range(p) 1 loop
11:02:39
finish mi1 range(p) 1 loop
11:02:39
start mi1 range(p) 2 loop
11:02:39
finish mi1 range(p) 2 loop
11:02:39
start mi1 range(NT) loop
11:02:39
finish mi1 range(NT) loop
11:02:39
start mi1 range(n) loop
11:02:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:02:39
start mi1 range(n) 2loop
11:02:39
finish mi1 range(n) 2loop
11:02:40
start mi2
11:02:40
start mi2 range(p) 1 loop
11:02:40
finish mi2 range(p) 1 loop
11:02:40
start mi2 range(p) 2 loop
11:02:40
finish mi2 range(p) 2 loop
11:02:40
start mi2 range(NT) loop
11:02:40
finish mi2 range(NT) loop
11:02:40
start mi2 range(n) loop
11:02:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:02:40
start mi2 range(n) 2loop
11:02:40
finish mi2 range(n) 2loop
11:02:40
start mi3
11:02:40
start mi3 range(p) 1 loop
11:02:40
finish mi3 range(p) 1 loop
11:02:40
start mi3 range(p) 2 loop
11:02:40
finish mi3 range(p) 2 loop
11:02:40
start mi3 range(NT) loop
11:02:40
finish mi3 range(NT) loop
11:02:40
start mi3 range(n) loop
11:02:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:02:40
start mi3 range(n) 2loop
11:02:40
finish mi3 range(n) 2loop
11:02:40
[[-2.23023558]]
end mi3 loop
11:02:40
estep
11:02:40
end estep
11:02:57
end pa11:02:57
goodness of fit correlation [0.16594108]
start cluster 11:02:57
2
parallel submitted
11:03:19
parallel finished
11:05:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:06:05
start mi0
11:06:05
start mi0 range(p) 1 loop
11:06:05
finish mi0 range(p) 1 loop
11:06:05
start mi0 range(p) 2 loop
11:06:06
finish mi0 range(p) 2 loop
11:06:06
start mi0 range(NT) loop
11:06:06
finish mi0 range(NT) loop
11:06:06
start mi0 range(n) loop
11:06:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:06:06
start mi0 range(n) 2loop
11:06:06
finish mi0 range(n) 2loop
11:06:06
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:06:06
start mi1 range(p) 1 loop
11:06:06
finish mi1 range(p) 1 loop
11:06:06
start mi1 range(p) 2 loop
11:06:06
finish mi1 range(p) 2 loop
11:06:06
start mi1 range(NT) loop
11:06:06
finish mi1 range(NT) loop
11:06:06
start mi1 range(n) loop
11:06:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:06:06
start mi1 range(n) 2loop
11:06:06
finish mi1 range(n) 2loop
11:06:06
start mi2
11:06:06
start mi2 range(p) 1 loop
11:06:06
finish mi2 range(p) 1 loop
11:06:06
start mi2 range(p) 2 loop
11:06:06
finish mi2 range(p) 2 loop
11:06:06
start mi2 range(NT) loop
11:06:06
finish mi2 range(NT) loop
11:06:06
start mi2 range(n) loop
11:06:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:06:06
start mi2 range(n) 2loop
11:06:06
finish mi2 range(n) 2loop
11:06:06
start mi3
11:06:06
start mi3 range(p) 1 loop
11:06:06
finish mi3 range(p) 1 loop
11:06:06
start mi3 range(p) 2 loop
11:06:06
finish mi3 range(p) 2 loop
11:06:06
start mi3 range(NT) loop
11:06:06
finish mi3 range(NT) loop
11:06:07
start mi3 range(n) loop
11:06:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:06:07
start mi3 range(n) 2loop
11:06:07
finish mi3 range(n) 2loop
11:06:07
[[-2.25045813]]
end mi3 loop
11:06:07
estep
11:06:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:06:23
start ppi1
11:06:23
start mi0
11:06:23
start mi0 range(p) 1 loop
11:06:23
finish mi0 range(p) 1 loop
11:06:23
start mi0 range(p) 2 loop
11:06:23
finish mi0 range(p) 2 loop
11:06:23
start mi0 range(NT) loop
11:06:23
finish mi0 range(NT) loop
11:06:23
start mi0 range(n) loop
11:06:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:06:23
start mi0 range(n) 2loop
11:06:23
finish mi0 range(n) 2loop
11:06:23
start mi1
11:06:23
start mi1 range(p) 1 loop
11:06:23
finish mi1 range(p) 1 loop
11:06:23
start mi1 range(p) 2 loop
11:06:23
finish mi1 range(p) 2 loop
11:06:23
start mi1 range(NT) loop
11:06:23
finish mi1 range(NT) loop
11:06:23
start mi1 range(n) loop
11:06:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:06:23
start mi1 range(n) 2loop
11:06:23
finish mi1 range(n) 2loop
11:06:23
start mi2
11:06:23
start mi2 range(p) 1 loop
11:06:23
finish mi2 range(p) 1 loop
11:06:23
start mi2 range(p) 2 loop
11:06:23
finish mi2 range(p) 2 loop
11:06:23
start mi2 range(NT) loop
11:06:23
finish mi2 range(NT) loop
11:06:23
start mi2 range(n) loop
11:06:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:06:23
start mi2 range(n) 2loop
11:06:23
finish mi2 range(n) 2loop
11:06:23
start mi3
11:06:23
start mi3 range(p) 1 loop
11:06:23
finish mi3 range(p) 1 loop
11:06:23
start mi3 range(p) 2 loop
11:06:23
finish mi3 range(p) 2 loop
11:06:23
start mi3 range(NT) loop
11:06:24
finish mi3 range(NT) loop
11:06:24
start mi3 range(n) loop
11:06:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:06:24
start mi3 range(n) 2loop
11:06:24
finish mi3 range(n) 2loop
11:06:24
[[-2.31295134]]
end mi3 loop
11:06:24
estep
11:06:24
end estep
11:06:41
end pa11:06:41
goodness of fit correlation [0.25304565]
start cluster 11:06:41
3
parallel submitted
11:07:02
parallel finished
11:09:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:09:59
start mi0
11:09:59
start mi0 range(p) 1 loop
11:09:59
finish mi0 range(p) 1 loop
11:09:59
start mi0 range(p) 2 loop
11:09:59
finish mi0 range(p) 2 loop
11:09:59
start mi0 range(NT) loop
11:09:59
finish mi0 range(NT) loop
11:09:59
start mi0 range(n) loop
11:09:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:09:59
start mi0 range(n) 2loop
11:09:59
finish mi0 range(n) 2loop
11:09:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:09:59
start mi1 range(p) 1 loop
11:09:59
finish mi1 range(p) 1 loop
11:09:59
start mi1 range(p) 2 loop
11:09:59
finish mi1 range(p) 2 loop
11:09:59
start mi1 range(NT) loop
11:09:59
finish mi1 range(NT) loop
11:09:59
start mi1 range(n) loop
11:09:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:09:59
start mi1 range(n) 2loop
11:09:59
finish mi1 range(n) 2loop
11:09:59
start mi2
11:09:59
start mi2 range(p) 1 loop
11:09:59
finish mi2 range(p) 1 loop
11:09:59
start mi2 range(p) 2 loop
11:09:59
finish mi2 range(p) 2 loop
11:09:59
start mi2 range(NT) loop
11:09:59
finish mi2 range(NT) loop
11:09:59
start mi2 range(n) loop
11:09:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:09:59
start mi2 range(n) 2loop
11:09:59
finish mi2 range(n) 2loop
11:09:59
start mi3
11:09:59
start mi3 range(p) 1 loop
11:09:59
finish mi3 range(p) 1 loop
11:09:59
start mi3 range(p) 2 loop
11:09:59
finish mi3 range(p) 2 loop
11:09:59
start mi3 range(NT) loop
11:09:59
finish mi3 range(NT) loop
11:09:59
start mi3 range(n) loop
11:09:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:10:00
start mi3 range(n) 2loop
11:10:00
finish mi3 range(n) 2loop
11:10:00
[[-2.27501787]]
end mi3 loop
11:10:00
estep
11:10:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:10:16
start ppi1
11:10:16
start mi0
11:10:16
start mi0 range(p) 1 loop
11:10:16
finish mi0 range(p) 1 loop
11:10:16
start mi0 range(p) 2 loop
11:10:16
finish mi0 range(p) 2 loop
11:10:16
start mi0 range(NT) loop
11:10:16
finish mi0 range(NT) loop
11:10:16
start mi0 range(n) loop
11:10:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:10:16
start mi0 range(n) 2loop
11:10:16
finish mi0 range(n) 2loop
11:10:16
start mi1
11:10:16
start mi1 range(p) 1 loop
11:10:16
finish mi1 range(p) 1 loop
11:10:16
start mi1 range(p) 2 loop
11:10:16
finish mi1 range(p) 2 loop
11:10:16
start mi1 range(NT) loop
11:10:16
finish mi1 range(NT) loop
11:10:16
start mi1 range(n) loop
11:10:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:10:16
start mi1 range(n) 2loop
11:10:16
finish mi1 range(n) 2loop
11:10:16
start mi2
11:10:16
start mi2 range(p) 1 loop
11:10:16
finish mi2 range(p) 1 loop
11:10:16
start mi2 range(p) 2 loop
11:10:16
finish mi2 range(p) 2 loop
11:10:16
start mi2 range(NT) loop
11:10:17
finish mi2 range(NT) loop
11:10:17
start mi2 range(n) loop
11:10:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:10:17
start mi2 range(n) 2loop
11:10:17
finish mi2 range(n) 2loop
11:10:17
start mi3
11:10:17
start mi3 range(p) 1 loop
11:10:17
finish mi3 range(p) 1 loop
11:10:17
start mi3 range(p) 2 loop
11:10:17
finish mi3 range(p) 2 loop
11:10:17
start mi3 range(NT) loop
11:10:17
finish mi3 range(NT) loop
11:10:17
start mi3 range(n) loop
11:10:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:10:17
start mi3 range(n) 2loop
11:10:17
finish mi3 range(n) 2loop
11:10:17
[[-2.33751058]]
end mi3 loop
11:10:17
estep
11:10:17
end estep
11:10:34
end pa11:10:34
goodness of fit correlation [0.17971576]
start cluster 11:10:34
4
parallel submitted
11:10:54
parallel finished
11:14:20
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:14:28
start mi0
11:14:28
start mi0 range(p) 1 loop
11:14:28
finish mi0 range(p) 1 loop
11:14:28
start mi0 range(p) 2 loop
11:14:28
finish mi0 range(p) 2 loop
11:14:28
start mi0 range(NT) loop
11:14:28
finish mi0 range(NT) loop
11:14:28
start mi0 range(n) loop
11:14:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:14:28
start mi0 range(n) 2loop
11:14:28
finish mi0 range(n) 2loop
11:14:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:14:28
start mi1 range(p) 1 loop
11:14:28
finish mi1 range(p) 1 loop
11:14:28
start mi1 range(p) 2 loop
11:14:28
finish mi1 range(p) 2 loop
11:14:28
start mi1 range(NT) loop
11:14:28
finish mi1 range(NT) loop
11:14:28
start mi1 range(n) loop
11:14:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:14:28
start mi1 range(n) 2loop
11:14:28
finish mi1 range(n) 2loop
11:14:28
start mi2
11:14:28
start mi2 range(p) 1 loop
11:14:28
finish mi2 range(p) 1 loop
11:14:28
start mi2 range(p) 2 loop
11:14:28
finish mi2 range(p) 2 loop
11:14:28
start mi2 range(NT) loop
11:14:28
finish mi2 range(NT) loop
11:14:28
start mi2 range(n) loop
11:14:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:14:28
start mi2 range(n) 2loop
11:14:28
finish mi2 range(n) 2loop
11:14:28
start mi3
11:14:28
start mi3 range(p) 1 loop
11:14:28
finish mi3 range(p) 1 loop
11:14:28
start mi3 range(p) 2 loop
11:14:28
finish mi3 range(p) 2 loop
11:14:28
start mi3 range(NT) loop
11:14:29
finish mi3 range(NT) loop
11:14:29
start mi3 range(n) loop
11:14:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:14:29
start mi3 range(n) 2loop
11:14:29
finish mi3 range(n) 2loop
11:14:29
[[-2.22551223]]
end mi3 loop
11:14:29
estep
11:14:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:14:45
start ppi1
11:14:45
start mi0
11:14:45
start mi0 range(p) 1 loop
11:14:45
finish mi0 range(p) 1 loop
11:14:45
start mi0 range(p) 2 loop
11:14:45
finish mi0 range(p) 2 loop
11:14:45
start mi0 range(NT) loop
11:14:45
finish mi0 range(NT) loop
11:14:45
start mi0 range(n) loop
11:14:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:14:45
start mi0 range(n) 2loop
11:14:45
finish mi0 range(n) 2loop
11:14:45
start mi1
11:14:45
start mi1 range(p) 1 loop
11:14:45
finish mi1 range(p) 1 loop
11:14:45
start mi1 range(p) 2 loop
11:14:45
finish mi1 range(p) 2 loop
11:14:45
start mi1 range(NT) loop
11:14:45
finish mi1 range(NT) loop
11:14:45
start mi1 range(n) loop
11:14:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:14:45
start mi1 range(n) 2loop
11:14:45
finish mi1 range(n) 2loop
11:14:45
start mi2
11:14:45
start mi2 range(p) 1 loop
11:14:45
finish mi2 range(p) 1 loop
11:14:45
start mi2 range(p) 2 loop
11:14:45
finish mi2 range(p) 2 loop
11:14:45
start mi2 range(NT) loop
11:14:45
finish mi2 range(NT) loop
11:14:45
start mi2 range(n) loop
11:14:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:14:45
start mi2 range(n) 2loop
11:14:45
finish mi2 range(n) 2loop
11:14:45
start mi3
11:14:45
start mi3 range(p) 1 loop
11:14:45
finish mi3 range(p) 1 loop
11:14:45
start mi3 range(p) 2 loop
11:14:45
finish mi3 range(p) 2 loop
11:14:45
start mi3 range(NT) loop
11:14:45
finish mi3 range(NT) loop
11:14:45
start mi3 range(n) loop
11:14:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:14:46
start mi3 range(n) 2loop
11:14:46
finish mi3 range(n) 2loop
11:14:46
[[-2.28800629]]
end mi3 loop
11:14:46
estep
11:14:46
end estep
11:15:01
end pa11:15:01
goodness of fit correlation [0.11981566]
start cluster 11:15:01
5
parallel submitted
11:15:22
parallel finished
11:18:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:18:23
start mi0
11:18:23
start mi0 range(p) 1 loop
11:18:23
finish mi0 range(p) 1 loop
11:18:23
start mi0 range(p) 2 loop
11:18:24
finish mi0 range(p) 2 loop
11:18:24
start mi0 range(NT) loop
11:18:24
finish mi0 range(NT) loop
11:18:24
start mi0 range(n) loop
11:18:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:18:24
start mi0 range(n) 2loop
11:18:24
finish mi0 range(n) 2loop
11:18:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:18:24
start mi1 range(p) 1 loop
11:18:24
finish mi1 range(p) 1 loop
11:18:24
start mi1 range(p) 2 loop
11:18:24
finish mi1 range(p) 2 loop
11:18:24
start mi1 range(NT) loop
11:18:24
finish mi1 range(NT) loop
11:18:24
start mi1 range(n) loop
11:18:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:18:24
start mi1 range(n) 2loop
11:18:24
finish mi1 range(n) 2loop
11:18:24
start mi2
11:18:24
start mi2 range(p) 1 loop
11:18:24
finish mi2 range(p) 1 loop
11:18:24
start mi2 range(p) 2 loop
11:18:24
finish mi2 range(p) 2 loop
11:18:24
start mi2 range(NT) loop
11:18:24
finish mi2 range(NT) loop
11:18:24
start mi2 range(n) loop
11:18:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:18:24
start mi2 range(n) 2loop
11:18:24
finish mi2 range(n) 2loop
11:18:24
start mi3
11:18:24
start mi3 range(p) 1 loop
11:18:24
finish mi3 range(p) 1 loop
11:18:24
start mi3 range(p) 2 loop
11:18:24
finish mi3 range(p) 2 loop
11:18:24
start mi3 range(NT) loop
11:18:24
finish mi3 range(NT) loop
11:18:24
start mi3 range(n) loop
11:18:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:18:25
start mi3 range(n) 2loop
11:18:25
finish mi3 range(n) 2loop
11:18:25
[[-2.2124093]]
end mi3 loop
11:18:25
estep
11:18:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:18:42
start ppi1
11:18:42
start mi0
11:18:42
start mi0 range(p) 1 loop
11:18:42
finish mi0 range(p) 1 loop
11:18:42
start mi0 range(p) 2 loop
11:18:42
finish mi0 range(p) 2 loop
11:18:42
start mi0 range(NT) loop
11:18:42
finish mi0 range(NT) loop
11:18:42
start mi0 range(n) loop
11:18:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:18:42
start mi0 range(n) 2loop
11:18:42
finish mi0 range(n) 2loop
11:18:42
start mi1
11:18:42
start mi1 range(p) 1 loop
11:18:42
finish mi1 range(p) 1 loop
11:18:42
start mi1 range(p) 2 loop
11:18:42
finish mi1 range(p) 2 loop
11:18:42
start mi1 range(NT) loop
11:18:43
finish mi1 range(NT) loop
11:18:43
start mi1 range(n) loop
11:18:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:18:43
start mi1 range(n) 2loop
11:18:43
finish mi1 range(n) 2loop
11:18:43
start mi2
11:18:43
start mi2 range(p) 1 loop
11:18:43
finish mi2 range(p) 1 loop
11:18:43
start mi2 range(p) 2 loop
11:18:43
finish mi2 range(p) 2 loop
11:18:43
start mi2 range(NT) loop
11:18:43
finish mi2 range(NT) loop
11:18:43
start mi2 range(n) loop
11:18:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:18:43
start mi2 range(n) 2loop
11:18:43
finish mi2 range(n) 2loop
11:18:43
start mi3
11:18:43
start mi3 range(p) 1 loop
11:18:43
finish mi3 range(p) 1 loop
11:18:43
start mi3 range(p) 2 loop
11:18:43
finish mi3 range(p) 2 loop
11:18:43
start mi3 range(NT) loop
11:18:43
finish mi3 range(NT) loop
11:18:43
start mi3 range(n) loop
11:18:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:18:43
start mi3 range(n) 2loop
11:18:43
finish mi3 range(n) 2loop
11:18:43
[[-2.274904]]
end mi3 loop
11:18:43
estep
11:18:43
end estep
11:19:01
end pa11:19:01
goodness of fit correlation [0.15191183]
start cluster 11:19:01
6
parallel submitted
11:19:24
parallel finished
11:22:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:23:09
start mi0
11:23:09
start mi0 range(p) 1 loop
11:23:09
finish mi0 range(p) 1 loop
11:23:09
start mi0 range(p) 2 loop
11:23:09
finish mi0 range(p) 2 loop
11:23:09
start mi0 range(NT) loop
11:23:09
finish mi0 range(NT) loop
11:23:09
start mi0 range(n) loop
11:23:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:23:09
start mi0 range(n) 2loop
11:23:09
finish mi0 range(n) 2loop
11:23:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:23:09
start mi1 range(p) 1 loop
11:23:09
finish mi1 range(p) 1 loop
11:23:09
start mi1 range(p) 2 loop
11:23:09
finish mi1 range(p) 2 loop
11:23:09
start mi1 range(NT) loop
11:23:09
finish mi1 range(NT) loop
11:23:09
start mi1 range(n) loop
11:23:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:23:09
start mi1 range(n) 2loop
11:23:09
finish mi1 range(n) 2loop
11:23:09
start mi2
11:23:09
start mi2 range(p) 1 loop
11:23:09
finish mi2 range(p) 1 loop
11:23:09
start mi2 range(p) 2 loop
11:23:09
finish mi2 range(p) 2 loop
11:23:09
start mi2 range(NT) loop
11:23:10
finish mi2 range(NT) loop
11:23:10
start mi2 range(n) loop
11:23:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:23:10
start mi2 range(n) 2loop
11:23:10
finish mi2 range(n) 2loop
11:23:10
start mi3
11:23:10
start mi3 range(p) 1 loop
11:23:10
finish mi3 range(p) 1 loop
11:23:10
start mi3 range(p) 2 loop
11:23:10
finish mi3 range(p) 2 loop
11:23:10
start mi3 range(NT) loop
11:23:10
finish mi3 range(NT) loop
11:23:10
start mi3 range(n) loop
11:23:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:23:10
start mi3 range(n) 2loop
11:23:10
finish mi3 range(n) 2loop
11:23:10
[[-2.22137857]]
end mi3 loop
11:23:10
estep
11:23:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:23:28
start ppi1
11:23:28
start mi0
11:23:28
start mi0 range(p) 1 loop
11:23:28
finish mi0 range(p) 1 loop
11:23:28
start mi0 range(p) 2 loop
11:23:28
finish mi0 range(p) 2 loop
11:23:28
start mi0 range(NT) loop
11:23:28
finish mi0 range(NT) loop
11:23:28
start mi0 range(n) loop
11:23:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:23:28
start mi0 range(n) 2loop
11:23:28
finish mi0 range(n) 2loop
11:23:28
start mi1
11:23:28
start mi1 range(p) 1 loop
11:23:28
finish mi1 range(p) 1 loop
11:23:28
start mi1 range(p) 2 loop
11:23:28
finish mi1 range(p) 2 loop
11:23:28
start mi1 range(NT) loop
11:23:28
finish mi1 range(NT) loop
11:23:28
start mi1 range(n) loop
11:23:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:23:28
start mi1 range(n) 2loop
11:23:28
finish mi1 range(n) 2loop
11:23:28
start mi2
11:23:28
start mi2 range(p) 1 loop
11:23:28
finish mi2 range(p) 1 loop
11:23:28
start mi2 range(p) 2 loop
11:23:28
finish mi2 range(p) 2 loop
11:23:28
start mi2 range(NT) loop
11:23:28
finish mi2 range(NT) loop
11:23:28
start mi2 range(n) loop
11:23:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:23:29
start mi2 range(n) 2loop
11:23:29
finish mi2 range(n) 2loop
11:23:29
start mi3
11:23:29
start mi3 range(p) 1 loop
11:23:29
finish mi3 range(p) 1 loop
11:23:29
start mi3 range(p) 2 loop
11:23:29
finish mi3 range(p) 2 loop
11:23:29
start mi3 range(NT) loop
11:23:29
finish mi3 range(NT) loop
11:23:29
start mi3 range(n) loop
11:23:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:23:29
start mi3 range(n) 2loop
11:23:29
finish mi3 range(n) 2loop
11:23:29
[[-2.28387281]]
end mi3 loop
11:23:29
estep
11:23:29
end estep
11:23:46
end pa11:23:46
goodness of fit correlation [0.20960778]
start cluster 11:23:46
7
parallel submitted
11:24:08
parallel finished
11:26:22
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:26:30
start mi0
11:26:30
start mi0 range(p) 1 loop
11:26:30
finish mi0 range(p) 1 loop
11:26:30
start mi0 range(p) 2 loop
11:26:30
finish mi0 range(p) 2 loop
11:26:30
start mi0 range(NT) loop
11:26:30
finish mi0 range(NT) loop
11:26:30
start mi0 range(n) loop
11:26:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:26:30
start mi0 range(n) 2loop
11:26:30
finish mi0 range(n) 2loop
11:26:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:26:30
start mi1 range(p) 1 loop
11:26:30
finish mi1 range(p) 1 loop
11:26:30
start mi1 range(p) 2 loop
11:26:30
finish mi1 range(p) 2 loop
11:26:30
start mi1 range(NT) loop
11:26:30
finish mi1 range(NT) loop
11:26:31
start mi1 range(n) loop
11:26:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:26:31
start mi1 range(n) 2loop
11:26:31
finish mi1 range(n) 2loop
11:26:31
start mi2
11:26:31
start mi2 range(p) 1 loop
11:26:31
finish mi2 range(p) 1 loop
11:26:31
start mi2 range(p) 2 loop
11:26:31
finish mi2 range(p) 2 loop
11:26:31
start mi2 range(NT) loop
11:26:31
finish mi2 range(NT) loop
11:26:31
start mi2 range(n) loop
11:26:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:26:31
start mi2 range(n) 2loop
11:26:31
finish mi2 range(n) 2loop
11:26:31
start mi3
11:26:31
start mi3 range(p) 1 loop
11:26:31
finish mi3 range(p) 1 loop
11:26:31
start mi3 range(p) 2 loop
11:26:31
finish mi3 range(p) 2 loop
11:26:31
start mi3 range(NT) loop
11:26:31
finish mi3 range(NT) loop
11:26:31
start mi3 range(n) loop
11:26:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:26:31
start mi3 range(n) 2loop
11:26:31
finish mi3 range(n) 2loop
11:26:31
[[-2.28197406]]
end mi3 loop
11:26:31
estep
11:26:31
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:26:47
start ppi1
11:26:47
start mi0
11:26:47
start mi0 range(p) 1 loop
11:26:47
finish mi0 range(p) 1 loop
11:26:47
start mi0 range(p) 2 loop
11:26:47
finish mi0 range(p) 2 loop
11:26:47
start mi0 range(NT) loop
11:26:47
finish mi0 range(NT) loop
11:26:47
start mi0 range(n) loop
11:26:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:26:47
start mi0 range(n) 2loop
11:26:47
finish mi0 range(n) 2loop
11:26:48
start mi1
11:26:48
start mi1 range(p) 1 loop
11:26:48
finish mi1 range(p) 1 loop
11:26:48
start mi1 range(p) 2 loop
11:26:48
finish mi1 range(p) 2 loop
11:26:48
start mi1 range(NT) loop
11:26:48
finish mi1 range(NT) loop
11:26:48
start mi1 range(n) loop
11:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:26:48
start mi1 range(n) 2loop
11:26:48
finish mi1 range(n) 2loop
11:26:48
start mi2
11:26:48
start mi2 range(p) 1 loop
11:26:48
finish mi2 range(p) 1 loop
11:26:48
start mi2 range(p) 2 loop
11:26:48
finish mi2 range(p) 2 loop
11:26:48
start mi2 range(NT) loop
11:26:48
finish mi2 range(NT) loop
11:26:48
start mi2 range(n) loop
11:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:26:48
start mi2 range(n) 2loop
11:26:48
finish mi2 range(n) 2loop
11:26:48
start mi3
11:26:48
start mi3 range(p) 1 loop
11:26:48
finish mi3 range(p) 1 loop
11:26:48
start mi3 range(p) 2 loop
11:26:48
finish mi3 range(p) 2 loop
11:26:48
start mi3 range(NT) loop
11:26:48
finish mi3 range(NT) loop
11:26:48
start mi3 range(n) loop
11:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:26:48
start mi3 range(n) 2loop
11:26:48
finish mi3 range(n) 2loop
11:26:48
[[-2.34446667]]
end mi3 loop
11:26:48
estep
11:26:48
end estep
11:27:05
end pa11:27:05
goodness of fit correlation [0.32270532]
start cluster 11:27:05
8
parallel submitted
11:27:27
parallel finished
11:30:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:30:56
start mi0
11:30:56
start mi0 range(p) 1 loop
11:30:56
finish mi0 range(p) 1 loop
11:30:56
start mi0 range(p) 2 loop
11:30:56
finish mi0 range(p) 2 loop
11:30:56
start mi0 range(NT) loop
11:30:56
finish mi0 range(NT) loop
11:30:56
start mi0 range(n) loop
11:30:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:30:56
start mi0 range(n) 2loop
11:30:56
finish mi0 range(n) 2loop
11:30:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:30:56
start mi1 range(p) 1 loop
11:30:56
finish mi1 range(p) 1 loop
11:30:56
start mi1 range(p) 2 loop
11:30:56
finish mi1 range(p) 2 loop
11:30:56
start mi1 range(NT) loop
11:30:56
finish mi1 range(NT) loop
11:30:56
start mi1 range(n) loop
11:30:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:30:56
start mi1 range(n) 2loop
11:30:56
finish mi1 range(n) 2loop
11:30:56
start mi2
11:30:56
start mi2 range(p) 1 loop
11:30:56
finish mi2 range(p) 1 loop
11:30:56
start mi2 range(p) 2 loop
11:30:56
finish mi2 range(p) 2 loop
11:30:56
start mi2 range(NT) loop
11:30:56
finish mi2 range(NT) loop
11:30:56
start mi2 range(n) loop
11:30:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:30:56
start mi2 range(n) 2loop
11:30:56
finish mi2 range(n) 2loop
11:30:56
start mi3
11:30:56
start mi3 range(p) 1 loop
11:30:56
finish mi3 range(p) 1 loop
11:30:56
start mi3 range(p) 2 loop
11:30:56
finish mi3 range(p) 2 loop
11:30:56
start mi3 range(NT) loop
11:30:56
finish mi3 range(NT) loop
11:30:56
start mi3 range(n) loop
11:30:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:30:57
start mi3 range(n) 2loop
11:30:57
finish mi3 range(n) 2loop
11:30:57
[[-2.37934164]]
end mi3 loop
11:30:57
estep
11:30:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:31:13
start ppi1
11:31:13
start mi0
11:31:13
start mi0 range(p) 1 loop
11:31:13
finish mi0 range(p) 1 loop
11:31:13
start mi0 range(p) 2 loop
11:31:13
finish mi0 range(p) 2 loop
11:31:13
start mi0 range(NT) loop
11:31:13
finish mi0 range(NT) loop
11:31:13
start mi0 range(n) loop
11:31:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:31:13
start mi0 range(n) 2loop
11:31:13
finish mi0 range(n) 2loop
11:31:13
start mi1
11:31:13
start mi1 range(p) 1 loop
11:31:13
finish mi1 range(p) 1 loop
11:31:13
start mi1 range(p) 2 loop
11:31:13
finish mi1 range(p) 2 loop
11:31:13
start mi1 range(NT) loop
11:31:13
finish mi1 range(NT) loop
11:31:13
start mi1 range(n) loop
11:31:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:31:13
start mi1 range(n) 2loop
11:31:13
finish mi1 range(n) 2loop
11:31:13
start mi2
11:31:13
start mi2 range(p) 1 loop
11:31:13
finish mi2 range(p) 1 loop
11:31:13
start mi2 range(p) 2 loop
11:31:13
finish mi2 range(p) 2 loop
11:31:13
start mi2 range(NT) loop
11:31:13
finish mi2 range(NT) loop
11:31:13
start mi2 range(n) loop
11:31:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:31:13
start mi2 range(n) 2loop
11:31:13
finish mi2 range(n) 2loop
11:31:14
start mi3
11:31:14
start mi3 range(p) 1 loop
11:31:14
finish mi3 range(p) 1 loop
11:31:14
start mi3 range(p) 2 loop
11:31:14
finish mi3 range(p) 2 loop
11:31:14
start mi3 range(NT) loop
11:31:14
finish mi3 range(NT) loop
11:31:14
start mi3 range(n) loop
11:31:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:31:14
start mi3 range(n) 2loop
11:31:14
finish mi3 range(n) 2loop
11:31:14
[[-2.44183373]]
end mi3 loop
11:31:14
estep
11:31:14
end estep
11:31:31
end pa11:31:31
goodness of fit correlation [0.27280474]
start cluster 11:31:31
9
parallel submitted
11:31:52
parallel finished
11:35:17
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:35:27
start mi0
11:35:27
start mi0 range(p) 1 loop
11:35:27
finish mi0 range(p) 1 loop
11:35:27
start mi0 range(p) 2 loop
11:35:27
finish mi0 range(p) 2 loop
11:35:27
start mi0 range(NT) loop
11:35:27
finish mi0 range(NT) loop
11:35:27
start mi0 range(n) loop
11:35:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:35:27
start mi0 range(n) 2loop
11:35:27
finish mi0 range(n) 2loop
11:35:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:35:27
start mi1 range(p) 1 loop
11:35:27
finish mi1 range(p) 1 loop
11:35:27
start mi1 range(p) 2 loop
11:35:27
finish mi1 range(p) 2 loop
11:35:27
start mi1 range(NT) loop
11:35:27
finish mi1 range(NT) loop
11:35:27
start mi1 range(n) loop
11:35:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:35:27
start mi1 range(n) 2loop
11:35:27
finish mi1 range(n) 2loop
11:35:27
start mi2
11:35:27
start mi2 range(p) 1 loop
11:35:27
finish mi2 range(p) 1 loop
11:35:27
start mi2 range(p) 2 loop
11:35:27
finish mi2 range(p) 2 loop
11:35:27
start mi2 range(NT) loop
11:35:27
finish mi2 range(NT) loop
11:35:27
start mi2 range(n) loop
11:35:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:35:27
start mi2 range(n) 2loop
11:35:27
finish mi2 range(n) 2loop
11:35:28
start mi3
11:35:28
start mi3 range(p) 1 loop
11:35:28
finish mi3 range(p) 1 loop
11:35:28
start mi3 range(p) 2 loop
11:35:28
finish mi3 range(p) 2 loop
11:35:28
start mi3 range(NT) loop
11:35:28
finish mi3 range(NT) loop
11:35:28
start mi3 range(n) loop
11:35:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:35:28
start mi3 range(n) 2loop
11:35:28
finish mi3 range(n) 2loop
11:35:28
[[-2.3170713]]
end mi3 loop
11:35:28
estep
11:35:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:35:44
start ppi1
11:35:44
start mi0
11:35:44
start mi0 range(p) 1 loop
11:35:44
finish mi0 range(p) 1 loop
11:35:44
start mi0 range(p) 2 loop
11:35:44
finish mi0 range(p) 2 loop
11:35:44
start mi0 range(NT) loop
11:35:44
finish mi0 range(NT) loop
11:35:44
start mi0 range(n) loop
11:35:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:35:44
start mi0 range(n) 2loop
11:35:44
finish mi0 range(n) 2loop
11:35:44
start mi1
11:35:44
start mi1 range(p) 1 loop
11:35:44
finish mi1 range(p) 1 loop
11:35:44
start mi1 range(p) 2 loop
11:35:44
finish mi1 range(p) 2 loop
11:35:44
start mi1 range(NT) loop
11:35:44
finish mi1 range(NT) loop
11:35:44
start mi1 range(n) loop
11:35:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:35:44
start mi1 range(n) 2loop
11:35:44
finish mi1 range(n) 2loop
11:35:44
start mi2
11:35:44
start mi2 range(p) 1 loop
11:35:44
finish mi2 range(p) 1 loop
11:35:44
start mi2 range(p) 2 loop
11:35:44
finish mi2 range(p) 2 loop
11:35:44
start mi2 range(NT) loop
11:35:45
finish mi2 range(NT) loop
11:35:45
start mi2 range(n) loop
11:35:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:35:45
start mi2 range(n) 2loop
11:35:45
finish mi2 range(n) 2loop
11:35:45
start mi3
11:35:45
start mi3 range(p) 1 loop
11:35:45
finish mi3 range(p) 1 loop
11:35:45
start mi3 range(p) 2 loop
11:35:45
finish mi3 range(p) 2 loop
11:35:45
start mi3 range(NT) loop
11:35:45
finish mi3 range(NT) loop
11:35:45
start mi3 range(n) loop
11:35:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:35:45
start mi3 range(n) 2loop
11:35:45
finish mi3 range(n) 2loop
11:35:45
[[-2.37956359]]
end mi3 loop
11:35:45
estep
11:35:45
end estep
11:36:03
end pa11:36:03
goodness of fit correlation [0.22952186]
start cluster 11:36:03
10
parallel submitted
11:36:24
parallel finished
11:39:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:39:54
start mi0
11:39:54
start mi0 range(p) 1 loop
11:39:54
finish mi0 range(p) 1 loop
11:39:54
start mi0 range(p) 2 loop
11:39:54
finish mi0 range(p) 2 loop
11:39:54
start mi0 range(NT) loop
11:39:54
finish mi0 range(NT) loop
11:39:54
start mi0 range(n) loop
11:39:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:39:54
start mi0 range(n) 2loop
11:39:54
finish mi0 range(n) 2loop
11:39:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:39:54
start mi1 range(p) 1 loop
11:39:54
finish mi1 range(p) 1 loop
11:39:54
start mi1 range(p) 2 loop
11:39:54
finish mi1 range(p) 2 loop
11:39:54
start mi1 range(NT) loop
11:39:54
finish mi1 range(NT) loop
11:39:54
start mi1 range(n) loop
11:39:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:39:55
start mi1 range(n) 2loop
11:39:55
finish mi1 range(n) 2loop
11:39:55
start mi2
11:39:55
start mi2 range(p) 1 loop
11:39:55
finish mi2 range(p) 1 loop
11:39:55
start mi2 range(p) 2 loop
11:39:55
finish mi2 range(p) 2 loop
11:39:55
start mi2 range(NT) loop
11:39:55
finish mi2 range(NT) loop
11:39:55
start mi2 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:39:55
start mi2 range(n) 2loop
11:39:55
finish mi2 range(n) 2loop
11:39:55
start mi3
11:39:55
start mi3 range(p) 1 loop
11:39:55
finish mi3 range(p) 1 loop
11:39:55
start mi3 range(p) 2 loop
11:39:55
finish mi3 range(p) 2 loop
11:39:55
start mi3 range(NT) loop
11:39:55
finish mi3 range(NT) loop
11:39:55
start mi3 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:39:55
start mi3 range(n) 2loop
11:39:55
finish mi3 range(n) 2loop
11:39:55
[[-2.28074985]]
end mi3 loop
11:39:55
estep
11:39:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:40:12
start ppi1
11:40:12
start mi0
11:40:12
start mi0 range(p) 1 loop
11:40:12
finish mi0 range(p) 1 loop
11:40:12
start mi0 range(p) 2 loop
11:40:12
finish mi0 range(p) 2 loop
11:40:12
start mi0 range(NT) loop
11:40:12
finish mi0 range(NT) loop
11:40:12
start mi0 range(n) loop
11:40:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:40:12
start mi0 range(n) 2loop
11:40:12
finish mi0 range(n) 2loop
11:40:12
start mi1
11:40:12
start mi1 range(p) 1 loop
11:40:12
finish mi1 range(p) 1 loop
11:40:12
start mi1 range(p) 2 loop
11:40:12
finish mi1 range(p) 2 loop
11:40:12
start mi1 range(NT) loop
11:40:12
finish mi1 range(NT) loop
11:40:12
start mi1 range(n) loop
11:40:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:40:12
start mi1 range(n) 2loop
11:40:12
finish mi1 range(n) 2loop
11:40:12
start mi2
11:40:12
start mi2 range(p) 1 loop
11:40:12
finish mi2 range(p) 1 loop
11:40:12
start mi2 range(p) 2 loop
11:40:12
finish mi2 range(p) 2 loop
11:40:12
start mi2 range(NT) loop
11:40:12
finish mi2 range(NT) loop
11:40:13
start mi2 range(n) loop
11:40:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:40:13
start mi2 range(n) 2loop
11:40:13
finish mi2 range(n) 2loop
11:40:13
start mi3
11:40:13
start mi3 range(p) 1 loop
11:40:13
finish mi3 range(p) 1 loop
11:40:13
start mi3 range(p) 2 loop
11:40:13
finish mi3 range(p) 2 loop
11:40:13
start mi3 range(NT) loop
11:40:13
finish mi3 range(NT) loop
11:40:13
start mi3 range(n) loop
11:40:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:40:13
start mi3 range(n) 2loop
11:40:13
finish mi3 range(n) 2loop
11:40:13
[[-2.34324248]]
end mi3 loop
11:40:13
estep
11:40:13
end estep
11:40:30
end pa11:40:30
goodness of fit correlation [0.16652051]
start cluster 11:40:30
11
parallel submitted
11:40:52
parallel finished
11:44:35
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:44:43
start mi0
11:44:43
start mi0 range(p) 1 loop
11:44:43
finish mi0 range(p) 1 loop
11:44:43
start mi0 range(p) 2 loop
11:44:43
finish mi0 range(p) 2 loop
11:44:43
start mi0 range(NT) loop
11:44:43
finish mi0 range(NT) loop
11:44:43
start mi0 range(n) loop
11:44:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:44:43
start mi0 range(n) 2loop
11:44:43
finish mi0 range(n) 2loop
11:44:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:44:43
start mi1 range(p) 1 loop
11:44:43
finish mi1 range(p) 1 loop
11:44:44
start mi1 range(p) 2 loop
11:44:44
finish mi1 range(p) 2 loop
11:44:44
start mi1 range(NT) loop
11:44:44
finish mi1 range(NT) loop
11:44:44
start mi1 range(n) loop
11:44:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:44:44
start mi1 range(n) 2loop
11:44:44
finish mi1 range(n) 2loop
11:44:44
start mi2
11:44:44
start mi2 range(p) 1 loop
11:44:44
finish mi2 range(p) 1 loop
11:44:44
start mi2 range(p) 2 loop
11:44:44
finish mi2 range(p) 2 loop
11:44:44
start mi2 range(NT) loop
11:44:44
finish mi2 range(NT) loop
11:44:44
start mi2 range(n) loop
11:44:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:44:44
start mi2 range(n) 2loop
11:44:44
finish mi2 range(n) 2loop
11:44:44
start mi3
11:44:44
start mi3 range(p) 1 loop
11:44:44
finish mi3 range(p) 1 loop
11:44:44
start mi3 range(p) 2 loop
11:44:44
finish mi3 range(p) 2 loop
11:44:44
start mi3 range(NT) loop
11:44:44
finish mi3 range(NT) loop
11:44:44
start mi3 range(n) loop
11:44:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:44:44
start mi3 range(n) 2loop
11:44:44
finish mi3 range(n) 2loop
11:44:44
[[-2.21556038]]
end mi3 loop
11:44:44
estep
11:44:44
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:45:00
start ppi1
11:45:00
start mi0
11:45:00
start mi0 range(p) 1 loop
11:45:00
finish mi0 range(p) 1 loop
11:45:00
start mi0 range(p) 2 loop
11:45:00
finish mi0 range(p) 2 loop
11:45:00
start mi0 range(NT) loop
11:45:01
finish mi0 range(NT) loop
11:45:01
start mi0 range(n) loop
11:45:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:45:01
start mi0 range(n) 2loop
11:45:01
finish mi0 range(n) 2loop
11:45:01
start mi1
11:45:01
start mi1 range(p) 1 loop
11:45:01
finish mi1 range(p) 1 loop
11:45:01
start mi1 range(p) 2 loop
11:45:01
finish mi1 range(p) 2 loop
11:45:01
start mi1 range(NT) loop
11:45:01
finish mi1 range(NT) loop
11:45:01
start mi1 range(n) loop
11:45:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:45:01
start mi1 range(n) 2loop
11:45:01
finish mi1 range(n) 2loop
11:45:01
start mi2
11:45:01
start mi2 range(p) 1 loop
11:45:01
finish mi2 range(p) 1 loop
11:45:01
start mi2 range(p) 2 loop
11:45:01
finish mi2 range(p) 2 loop
11:45:01
start mi2 range(NT) loop
11:45:01
finish mi2 range(NT) loop
11:45:01
start mi2 range(n) loop
11:45:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:45:01
start mi2 range(n) 2loop
11:45:01
finish mi2 range(n) 2loop
11:45:01
start mi3
11:45:01
start mi3 range(p) 1 loop
11:45:01
finish mi3 range(p) 1 loop
11:45:01
start mi3 range(p) 2 loop
11:45:01
finish mi3 range(p) 2 loop
11:45:01
start mi3 range(NT) loop
11:45:01
finish mi3 range(NT) loop
11:45:01
start mi3 range(n) loop
11:45:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:45:01
start mi3 range(n) 2loop
11:45:01
finish mi3 range(n) 2loop
11:45:02
[[-2.27805491]]
end mi3 loop
11:45:02
estep
11:45:02
end estep
11:45:18
end pa11:45:18
goodness of fit correlation [0.1215215]
start cluster 11:45:18
12
parallel submitted
11:45:37
parallel finished
11:50:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:51:09
start mi0
11:51:09
start mi0 range(p) 1 loop
11:51:09
finish mi0 range(p) 1 loop
11:51:09
start mi0 range(p) 2 loop
11:51:09
finish mi0 range(p) 2 loop
11:51:09
start mi0 range(NT) loop
11:51:10
finish mi0 range(NT) loop
11:51:10
start mi0 range(n) loop
11:51:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:51:10
start mi0 range(n) 2loop
11:51:10
finish mi0 range(n) 2loop
11:51:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:51:10
start mi1 range(p) 1 loop
11:51:10
finish mi1 range(p) 1 loop
11:51:10
start mi1 range(p) 2 loop
11:51:10
finish mi1 range(p) 2 loop
11:51:10
start mi1 range(NT) loop
11:51:10
finish mi1 range(NT) loop
11:51:10
start mi1 range(n) loop
11:51:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:51:10
start mi1 range(n) 2loop
11:51:10
finish mi1 range(n) 2loop
11:51:10
start mi2
11:51:10
start mi2 range(p) 1 loop
11:51:10
finish mi2 range(p) 1 loop
11:51:10
start mi2 range(p) 2 loop
11:51:10
finish mi2 range(p) 2 loop
11:51:10
start mi2 range(NT) loop
11:51:10
finish mi2 range(NT) loop
11:51:10
start mi2 range(n) loop
11:51:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:51:10
start mi2 range(n) 2loop
11:51:10
finish mi2 range(n) 2loop
11:51:10
start mi3
11:51:10
start mi3 range(p) 1 loop
11:51:10
finish mi3 range(p) 1 loop
11:51:10
start mi3 range(p) 2 loop
11:51:10
finish mi3 range(p) 2 loop
11:51:10
start mi3 range(NT) loop
11:51:10
finish mi3 range(NT) loop
11:51:10
start mi3 range(n) loop
11:51:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:51:11
start mi3 range(n) 2loop
11:51:11
finish mi3 range(n) 2loop
11:51:11
[[-2.22996196]]
end mi3 loop
11:51:11
estep
11:51:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:51:27
start ppi1
11:51:27
start mi0
11:51:27
start mi0 range(p) 1 loop
11:51:27
finish mi0 range(p) 1 loop
11:51:27
start mi0 range(p) 2 loop
11:51:27
finish mi0 range(p) 2 loop
11:51:27
start mi0 range(NT) loop
11:51:27
finish mi0 range(NT) loop
11:51:27
start mi0 range(n) loop
11:51:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:51:27
start mi0 range(n) 2loop
11:51:27
finish mi0 range(n) 2loop
11:51:27
start mi1
11:51:27
start mi1 range(p) 1 loop
11:51:27
finish mi1 range(p) 1 loop
11:51:27
start mi1 range(p) 2 loop
11:51:27
finish mi1 range(p) 2 loop
11:51:27
start mi1 range(NT) loop
11:51:27
finish mi1 range(NT) loop
11:51:27
start mi1 range(n) loop
11:51:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:51:27
start mi1 range(n) 2loop
11:51:27
finish mi1 range(n) 2loop
11:51:27
start mi2
11:51:27
start mi2 range(p) 1 loop
11:51:27
finish mi2 range(p) 1 loop
11:51:27
start mi2 range(p) 2 loop
11:51:27
finish mi2 range(p) 2 loop
11:51:27
start mi2 range(NT) loop
11:51:27
finish mi2 range(NT) loop
11:51:27
start mi2 range(n) loop
11:51:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:51:27
start mi2 range(n) 2loop
11:51:27
finish mi2 range(n) 2loop
11:51:28
start mi3
11:51:28
start mi3 range(p) 1 loop
11:51:28
finish mi3 range(p) 1 loop
11:51:28
start mi3 range(p) 2 loop
11:51:28
finish mi3 range(p) 2 loop
11:51:28
start mi3 range(NT) loop
11:51:28
finish mi3 range(NT) loop
11:51:28
start mi3 range(n) loop
11:51:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:51:28
start mi3 range(n) 2loop
11:51:28
finish mi3 range(n) 2loop
11:51:28
[[-2.29245583]]
end mi3 loop
11:51:28
estep
11:51:28
end estep
11:51:45
end pa11:51:45
goodness of fit correlation [0.25401309]
start cluster 11:51:45
13
parallel submitted
11:52:08
parallel finished
11:55:29
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:55:38
start mi0
11:55:38
start mi0 range(p) 1 loop
11:55:38
finish mi0 range(p) 1 loop
11:55:38
start mi0 range(p) 2 loop
11:55:38
finish mi0 range(p) 2 loop
11:55:38
start mi0 range(NT) loop
11:55:38
finish mi0 range(NT) loop
11:55:38
start mi0 range(n) loop
11:55:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:55:38
start mi0 range(n) 2loop
11:55:38
finish mi0 range(n) 2loop
11:55:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:55:38
start mi1 range(p) 1 loop
11:55:38
finish mi1 range(p) 1 loop
11:55:38
start mi1 range(p) 2 loop
11:55:38
finish mi1 range(p) 2 loop
11:55:38
start mi1 range(NT) loop
11:55:38
finish mi1 range(NT) loop
11:55:38
start mi1 range(n) loop
11:55:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:55:38
start mi1 range(n) 2loop
11:55:38
finish mi1 range(n) 2loop
11:55:38
start mi2
11:55:38
start mi2 range(p) 1 loop
11:55:38
finish mi2 range(p) 1 loop
11:55:38
start mi2 range(p) 2 loop
11:55:38
finish mi2 range(p) 2 loop
11:55:38
start mi2 range(NT) loop
11:55:38
finish mi2 range(NT) loop
11:55:38
start mi2 range(n) loop
11:55:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:55:38
start mi2 range(n) 2loop
11:55:38
finish mi2 range(n) 2loop
11:55:39
start mi3
11:55:39
start mi3 range(p) 1 loop
11:55:39
finish mi3 range(p) 1 loop
11:55:39
start mi3 range(p) 2 loop
11:55:39
finish mi3 range(p) 2 loop
11:55:39
start mi3 range(NT) loop
11:55:39
finish mi3 range(NT) loop
11:55:39
start mi3 range(n) loop
11:55:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:55:39
start mi3 range(n) 2loop
11:55:39
finish mi3 range(n) 2loop
11:55:39
[[-2.27167159]]
end mi3 loop
11:55:39
estep
11:55:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:55:56
start ppi1
11:55:56
start mi0
11:55:56
start mi0 range(p) 1 loop
11:55:56
finish mi0 range(p) 1 loop
11:55:56
start mi0 range(p) 2 loop
11:55:56
finish mi0 range(p) 2 loop
11:55:56
start mi0 range(NT) loop
11:55:56
finish mi0 range(NT) loop
11:55:56
start mi0 range(n) loop
11:55:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:55:56
start mi0 range(n) 2loop
11:55:56
finish mi0 range(n) 2loop
11:55:56
start mi1
11:55:56
start mi1 range(p) 1 loop
11:55:56
finish mi1 range(p) 1 loop
11:55:56
start mi1 range(p) 2 loop
11:55:56
finish mi1 range(p) 2 loop
11:55:56
start mi1 range(NT) loop
11:55:57
finish mi1 range(NT) loop
11:55:57
start mi1 range(n) loop
11:55:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:55:57
start mi1 range(n) 2loop
11:55:57
finish mi1 range(n) 2loop
11:55:57
start mi2
11:55:57
start mi2 range(p) 1 loop
11:55:57
finish mi2 range(p) 1 loop
11:55:57
start mi2 range(p) 2 loop
11:55:57
finish mi2 range(p) 2 loop
11:55:57
start mi2 range(NT) loop
11:55:57
finish mi2 range(NT) loop
11:55:57
start mi2 range(n) loop
11:55:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:55:57
start mi2 range(n) 2loop
11:55:57
finish mi2 range(n) 2loop
11:55:57
start mi3
11:55:57
start mi3 range(p) 1 loop
11:55:57
finish mi3 range(p) 1 loop
11:55:57
start mi3 range(p) 2 loop
11:55:57
finish mi3 range(p) 2 loop
11:55:57
start mi3 range(NT) loop
11:55:57
finish mi3 range(NT) loop
11:55:57
start mi3 range(n) loop
11:55:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:55:57
start mi3 range(n) 2loop
11:55:57
finish mi3 range(n) 2loop
11:55:57
[[-2.33416436]]
end mi3 loop
11:55:57
estep
11:55:57
end estep
11:56:15
end pa11:56:15
goodness of fit correlation [0.29594594]
start cluster 11:56:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46477 instead
  warnings.warn(
14
parallel submitted
11:56:40
parallel finished
11:59:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:59:52
start mi0
11:59:52
start mi0 range(p) 1 loop
11:59:52
finish mi0 range(p) 1 loop
11:59:52
start mi0 range(p) 2 loop
11:59:52
finish mi0 range(p) 2 loop
11:59:52
start mi0 range(NT) loop
11:59:52
finish mi0 range(NT) loop
11:59:52
start mi0 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:59:52
start mi0 range(n) 2loop
11:59:52
finish mi0 range(n) 2loop
11:59:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:59:52
start mi1 range(p) 1 loop
11:59:52
finish mi1 range(p) 1 loop
11:59:52
start mi1 range(p) 2 loop
11:59:52
finish mi1 range(p) 2 loop
11:59:52
start mi1 range(NT) loop
11:59:52
finish mi1 range(NT) loop
11:59:52
start mi1 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:59:52
start mi1 range(n) 2loop
11:59:52
finish mi1 range(n) 2loop
11:59:52
start mi2
11:59:52
start mi2 range(p) 1 loop
11:59:52
finish mi2 range(p) 1 loop
11:59:52
start mi2 range(p) 2 loop
11:59:52
finish mi2 range(p) 2 loop
11:59:52
start mi2 range(NT) loop
11:59:52
finish mi2 range(NT) loop
11:59:52
start mi2 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:59:52
start mi2 range(n) 2loop
11:59:52
finish mi2 range(n) 2loop
11:59:52
start mi3
11:59:52
start mi3 range(p) 1 loop
11:59:52
finish mi3 range(p) 1 loop
11:59:52
start mi3 range(p) 2 loop
11:59:52
finish mi3 range(p) 2 loop
11:59:52
start mi3 range(NT) loop
11:59:52
finish mi3 range(NT) loop
11:59:53
start mi3 range(n) loop
11:59:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:59:53
start mi3 range(n) 2loop
11:59:53
finish mi3 range(n) 2loop
11:59:53
[[-2.36850647]]
end mi3 loop
11:59:53
estep
11:59:53
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:00:09
start ppi1
12:00:09
start mi0
12:00:09
start mi0 range(p) 1 loop
12:00:09
finish mi0 range(p) 1 loop
12:00:09
start mi0 range(p) 2 loop
12:00:09
finish mi0 range(p) 2 loop
12:00:09
start mi0 range(NT) loop
12:00:09
finish mi0 range(NT) loop
12:00:09
start mi0 range(n) loop
12:00:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:00:09
start mi0 range(n) 2loop
12:00:09
finish mi0 range(n) 2loop
12:00:10
start mi1
12:00:10
start mi1 range(p) 1 loop
12:00:10
finish mi1 range(p) 1 loop
12:00:10
start mi1 range(p) 2 loop
12:00:10
finish mi1 range(p) 2 loop
12:00:10
start mi1 range(NT) loop
12:00:10
finish mi1 range(NT) loop
12:00:10
start mi1 range(n) loop
12:00:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:00:10
start mi1 range(n) 2loop
12:00:10
finish mi1 range(n) 2loop
12:00:10
start mi2
12:00:10
start mi2 range(p) 1 loop
12:00:10
finish mi2 range(p) 1 loop
12:00:10
start mi2 range(p) 2 loop
12:00:10
finish mi2 range(p) 2 loop
12:00:10
start mi2 range(NT) loop
12:00:10
finish mi2 range(NT) loop
12:00:10
start mi2 range(n) loop
12:00:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:00:10
start mi2 range(n) 2loop
12:00:10
finish mi2 range(n) 2loop
12:00:10
start mi3
12:00:10
start mi3 range(p) 1 loop
12:00:10
finish mi3 range(p) 1 loop
12:00:10
start mi3 range(p) 2 loop
12:00:10
finish mi3 range(p) 2 loop
12:00:10
start mi3 range(NT) loop
12:00:10
finish mi3 range(NT) loop
12:00:10
start mi3 range(n) loop
12:00:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:00:10
start mi3 range(n) 2loop
12:00:10
finish mi3 range(n) 2loop
12:00:10
[[-2.43099857]]
end mi3 loop
12:00:10
estep
12:00:10
end estep
12:00:28
end pa12:00:28
goodness of fit correlation [0.23482483]
start cluster 12:00:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46607 instead
  warnings.warn(
15
parallel submitted
12:00:51
parallel finished
12:04:10
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:04:22
start mi0
12:04:22
start mi0 range(p) 1 loop
12:04:22
finish mi0 range(p) 1 loop
12:04:22
start mi0 range(p) 2 loop
12:04:22
finish mi0 range(p) 2 loop
12:04:22
start mi0 range(NT) loop
12:04:22
finish mi0 range(NT) loop
12:04:22
start mi0 range(n) loop
12:04:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:04:22
start mi0 range(n) 2loop
12:04:22
finish mi0 range(n) 2loop
12:04:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:04:22
start mi1 range(p) 1 loop
12:04:22
finish mi1 range(p) 1 loop
12:04:22
start mi1 range(p) 2 loop
12:04:22
finish mi1 range(p) 2 loop
12:04:22
start mi1 range(NT) loop
12:04:22
finish mi1 range(NT) loop
12:04:22
start mi1 range(n) loop
12:04:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:04:22
start mi1 range(n) 2loop
12:04:22
finish mi1 range(n) 2loop
12:04:22
start mi2
12:04:22
start mi2 range(p) 1 loop
12:04:22
finish mi2 range(p) 1 loop
12:04:22
start mi2 range(p) 2 loop
12:04:22
finish mi2 range(p) 2 loop
12:04:22
start mi2 range(NT) loop
12:04:22
finish mi2 range(NT) loop
12:04:22
start mi2 range(n) loop
12:04:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:04:22
start mi2 range(n) 2loop
12:04:22
finish mi2 range(n) 2loop
12:04:22
start mi3
12:04:22
start mi3 range(p) 1 loop
12:04:22
finish mi3 range(p) 1 loop
12:04:22
start mi3 range(p) 2 loop
12:04:22
finish mi3 range(p) 2 loop
12:04:22
start mi3 range(NT) loop
12:04:23
finish mi3 range(NT) loop
12:04:23
start mi3 range(n) loop
12:04:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:04:23
start mi3 range(n) 2loop
12:04:23
finish mi3 range(n) 2loop
12:04:23
[[-2.31351632]]
end mi3 loop
12:04:23
estep
12:04:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:04:39
start ppi1
12:04:39
start mi0
12:04:39
start mi0 range(p) 1 loop
12:04:39
finish mi0 range(p) 1 loop
12:04:39
start mi0 range(p) 2 loop
12:04:39
finish mi0 range(p) 2 loop
12:04:39
start mi0 range(NT) loop
12:04:39
finish mi0 range(NT) loop
12:04:39
start mi0 range(n) loop
12:04:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:04:39
start mi0 range(n) 2loop
12:04:39
finish mi0 range(n) 2loop
12:04:39
start mi1
12:04:39
start mi1 range(p) 1 loop
12:04:39
finish mi1 range(p) 1 loop
12:04:39
start mi1 range(p) 2 loop
12:04:39
finish mi1 range(p) 2 loop
12:04:39
start mi1 range(NT) loop
12:04:39
finish mi1 range(NT) loop
12:04:39
start mi1 range(n) loop
12:04:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:04:39
start mi1 range(n) 2loop
12:04:39
finish mi1 range(n) 2loop
12:04:40
start mi2
12:04:40
start mi2 range(p) 1 loop
12:04:40
finish mi2 range(p) 1 loop
12:04:40
start mi2 range(p) 2 loop
12:04:40
finish mi2 range(p) 2 loop
12:04:40
start mi2 range(NT) loop
12:04:40
finish mi2 range(NT) loop
12:04:40
start mi2 range(n) loop
12:04:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:04:40
start mi2 range(n) 2loop
12:04:40
finish mi2 range(n) 2loop
12:04:40
start mi3
12:04:40
start mi3 range(p) 1 loop
12:04:40
finish mi3 range(p) 1 loop
12:04:40
start mi3 range(p) 2 loop
12:04:40
finish mi3 range(p) 2 loop
12:04:40
start mi3 range(NT) loop
12:04:40
finish mi3 range(NT) loop
12:04:40
start mi3 range(n) loop
12:04:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:04:40
start mi3 range(n) 2loop
12:04:40
finish mi3 range(n) 2loop
12:04:40
[[-2.37600863]]
end mi3 loop
12:04:40
estep
12:04:40
end estep
12:04:57
end pa12:04:57
goodness of fit correlation [0.23165012]
start cluster 12:04:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36135 instead
  warnings.warn(
16
parallel submitted
12:05:20
parallel finished
12:08:33
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:08:42
start mi0
12:08:42
start mi0 range(p) 1 loop
12:08:42
finish mi0 range(p) 1 loop
12:08:42
start mi0 range(p) 2 loop
12:08:42
finish mi0 range(p) 2 loop
12:08:42
start mi0 range(NT) loop
12:08:42
finish mi0 range(NT) loop
12:08:42
start mi0 range(n) loop
12:08:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:08:42
start mi0 range(n) 2loop
12:08:42
finish mi0 range(n) 2loop
12:08:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:08:43
start mi1 range(p) 1 loop
12:08:43
finish mi1 range(p) 1 loop
12:08:43
start mi1 range(p) 2 loop
12:08:43
finish mi1 range(p) 2 loop
12:08:43
start mi1 range(NT) loop
12:08:43
finish mi1 range(NT) loop
12:08:43
start mi1 range(n) loop
12:08:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:08:43
start mi1 range(n) 2loop
12:08:43
finish mi1 range(n) 2loop
12:08:43
start mi2
12:08:43
start mi2 range(p) 1 loop
12:08:43
finish mi2 range(p) 1 loop
12:08:43
start mi2 range(p) 2 loop
12:08:43
finish mi2 range(p) 2 loop
12:08:43
start mi2 range(NT) loop
12:08:43
finish mi2 range(NT) loop
12:08:43
start mi2 range(n) loop
12:08:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:08:43
start mi2 range(n) 2loop
12:08:43
finish mi2 range(n) 2loop
12:08:43
start mi3
12:08:43
start mi3 range(p) 1 loop
12:08:43
finish mi3 range(p) 1 loop
12:08:43
start mi3 range(p) 2 loop
12:08:43
finish mi3 range(p) 2 loop
12:08:43
start mi3 range(NT) loop
12:08:43
finish mi3 range(NT) loop
12:08:43
start mi3 range(n) loop
12:08:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:08:43
start mi3 range(n) 2loop
12:08:43
finish mi3 range(n) 2loop
12:08:43
[[-2.25336101]]
end mi3 loop
12:08:43
estep
12:08:43
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:09:01
start ppi1
12:09:01
start mi0
12:09:01
start mi0 range(p) 1 loop
12:09:01
finish mi0 range(p) 1 loop
12:09:01
start mi0 range(p) 2 loop
12:09:01
finish mi0 range(p) 2 loop
12:09:01
start mi0 range(NT) loop
12:09:01
finish mi0 range(NT) loop
12:09:01
start mi0 range(n) loop
12:09:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:09:01
start mi0 range(n) 2loop
12:09:01
finish mi0 range(n) 2loop
12:09:01
start mi1
12:09:01
start mi1 range(p) 1 loop
12:09:01
finish mi1 range(p) 1 loop
12:09:01
start mi1 range(p) 2 loop
12:09:01
finish mi1 range(p) 2 loop
12:09:01
start mi1 range(NT) loop
12:09:01
finish mi1 range(NT) loop
12:09:01
start mi1 range(n) loop
12:09:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:09:01
start mi1 range(n) 2loop
12:09:01
finish mi1 range(n) 2loop
12:09:01
start mi2
12:09:01
start mi2 range(p) 1 loop
12:09:01
finish mi2 range(p) 1 loop
12:09:01
start mi2 range(p) 2 loop
12:09:01
finish mi2 range(p) 2 loop
12:09:01
start mi2 range(NT) loop
12:09:01
finish mi2 range(NT) loop
12:09:01
start mi2 range(n) loop
12:09:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:09:01
start mi2 range(n) 2loop
12:09:01
finish mi2 range(n) 2loop
12:09:01
start mi3
12:09:01
start mi3 range(p) 1 loop
12:09:01
finish mi3 range(p) 1 loop
12:09:01
start mi3 range(p) 2 loop
12:09:01
finish mi3 range(p) 2 loop
12:09:01
start mi3 range(NT) loop
12:09:02
finish mi3 range(NT) loop
12:09:02
start mi3 range(n) loop
12:09:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:09:02
start mi3 range(n) 2loop
12:09:02
finish mi3 range(n) 2loop
12:09:02
[[-2.31585414]]
end mi3 loop
12:09:02
estep
12:09:02
end estep
12:09:20
end pa12:09:20
goodness of fit correlation [0.10340367]
0.3227053155810264
[5.17528148e-01 5.10233155e-01 5.44911019e-01 5.26880725e-01
 5.03540466e-01 5.15261186e-01 5.59736059e-01 5.19068218e-01
 5.05300346e-01 5.16192890e-01 4.91236514e-01 5.16404634e-01
 5.00720724e-01 5.33914297e-01 4.98549453e-01 5.66328950e-01
 5.92545916e-01 4.97294454e-01 5.11673736e-01 5.18824326e-01
 5.41880660e-01 5.05844401e-01 4.99713255e-01 5.52989342e-01
 4.96696136e-01 5.96872794e-01 4.98522458e-01 5.50176058e-01
 5.24894150e-01 5.35143077e-01 4.96512737e-01 4.96744856e-01
 5.04838373e-01 5.38822365e-01 5.22268524e-01 5.19548082e-01
 5.38350205e-01 5.51482797e-01 4.99455778e-01 5.09644442e-01
 4.97286782e-01 5.35728772e-01 5.00015243e-01 5.10522437e-01
 5.07994218e-01 5.15371411e-01 4.99525953e-01 5.18090906e-01
 5.05325904e-01 5.54859470e-01 5.50511869e-01 5.02001814e-01
 5.02638760e-01 5.33618403e-01 5.85623449e-01 5.16393730e-01
 4.80058741e-01 5.35909064e-01 4.96042955e-01 6.08549103e-01
 4.96376713e-01 4.94658295e-01 5.11100243e-01 5.43063488e-01
 5.03056982e-01 5.03761787e-01 5.03168249e-01 5.24719257e-01
 3.44615103e-01 3.46932415e-01 3.33522874e-01 3.65291091e-01
 2.99775412e-01 3.52439685e-01 3.35846938e-01 3.42230903e-01
 3.33480802e-01 3.42956069e-01 3.35585779e-01 3.80031216e-01
 3.08048243e-01 3.49529747e-01 3.20771295e-01 3.46655359e-01
 3.51469748e-01 3.16815860e-01 3.59724948e-01 3.76100972e-01
 3.39638885e-01 3.58221315e-01 3.42542414e-01 3.46409418e-01
 3.14208081e-01 3.39494421e-01 3.19754954e-01 3.24316088e-01
 3.51883061e-01 3.42132872e-01 2.95185315e-01 2.97248304e-01
 3.32523656e-01 3.54089201e-01 3.58104633e-01 3.58623359e-01
 3.35001072e-01 3.82150938e-01 3.13459169e-01 3.43747061e-01
 3.37916032e-01 3.61204300e-01 3.49585530e-01 3.59904552e-01
 3.41102496e-01 3.26608123e-01 3.10883754e-01 3.45915192e-01
 3.56746443e-01 3.46083490e-01 3.54885851e-01 3.24141350e-01
 3.52513424e-01 3.65854700e-01 3.45860698e-01 3.53210151e-01
 3.46257779e-01 3.44736056e-01 3.13463860e-01 3.44061443e-01
 3.21017624e-01 3.38699171e-01 3.57100408e-01 3.43024652e-01
 3.08310974e-01 3.00342073e-01 3.21179986e-01 3.49363129e-01
 1.49117169e+00 1.02055146e-03]
start cluster 12:09:20
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43834 instead
  warnings.warn(
0
parallel submitted
12:09:47
parallel finished
12:13:27
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:13:37
start mi0
12:13:37
start mi0 range(p) 1 loop
12:13:37
finish mi0 range(p) 1 loop
12:13:37
start mi0 range(p) 2 loop
12:13:37
finish mi0 range(p) 2 loop
12:13:37
start mi0 range(NT) loop
12:13:37
finish mi0 range(NT) loop
12:13:37
start mi0 range(n) loop
12:13:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:13:37
start mi0 range(n) 2loop
12:13:37
finish mi0 range(n) 2loop
12:13:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:13:37
start mi1 range(p) 1 loop
12:13:37
finish mi1 range(p) 1 loop
12:13:37
start mi1 range(p) 2 loop
12:13:37
finish mi1 range(p) 2 loop
12:13:37
start mi1 range(NT) loop
12:13:37
finish mi1 range(NT) loop
12:13:37
start mi1 range(n) loop
12:13:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:13:37
start mi1 range(n) 2loop
12:13:37
finish mi1 range(n) 2loop
12:13:37
start mi2
12:13:37
start mi2 range(p) 1 loop
12:13:37
finish mi2 range(p) 1 loop
12:13:37
start mi2 range(p) 2 loop
12:13:37
finish mi2 range(p) 2 loop
12:13:37
start mi2 range(NT) loop
12:13:37
finish mi2 range(NT) loop
12:13:37
start mi2 range(n) loop
12:13:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:13:37
start mi2 range(n) 2loop
12:13:37
finish mi2 range(n) 2loop
12:13:37
start mi3
12:13:38
start mi3 range(p) 1 loop
12:13:38
finish mi3 range(p) 1 loop
12:13:38
start mi3 range(p) 2 loop
12:13:38
finish mi3 range(p) 2 loop
12:13:38
start mi3 range(NT) loop
12:13:38
finish mi3 range(NT) loop
12:13:38
start mi3 range(n) loop
12:13:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:13:38
start mi3 range(n) 2loop
12:13:38
finish mi3 range(n) 2loop
12:13:38
[[-2.16025058]]
end mi3 loop
12:13:38
estep
12:13:38
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:13:54
start ppi1
12:13:54
start mi0
12:13:54
start mi0 range(p) 1 loop
12:13:54
finish mi0 range(p) 1 loop
12:13:54
start mi0 range(p) 2 loop
12:13:54
finish mi0 range(p) 2 loop
12:13:54
start mi0 range(NT) loop
12:13:54
finish mi0 range(NT) loop
12:13:54
start mi0 range(n) loop
12:13:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:13:54
start mi0 range(n) 2loop
12:13:54
finish mi0 range(n) 2loop
12:13:54
start mi1
12:13:54
start mi1 range(p) 1 loop
12:13:54
finish mi1 range(p) 1 loop
12:13:54
start mi1 range(p) 2 loop
12:13:54
finish mi1 range(p) 2 loop
12:13:54
start mi1 range(NT) loop
12:13:54
finish mi1 range(NT) loop
12:13:54
start mi1 range(n) loop
12:13:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:13:54
start mi1 range(n) 2loop
12:13:54
finish mi1 range(n) 2loop
12:13:55
start mi2
12:13:55
start mi2 range(p) 1 loop
12:13:55
finish mi2 range(p) 1 loop
12:13:55
start mi2 range(p) 2 loop
12:13:55
finish mi2 range(p) 2 loop
12:13:55
start mi2 range(NT) loop
12:13:55
finish mi2 range(NT) loop
12:13:55
start mi2 range(n) loop
12:13:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:13:55
start mi2 range(n) 2loop
12:13:55
finish mi2 range(n) 2loop
12:13:55
start mi3
12:13:55
start mi3 range(p) 1 loop
12:13:55
finish mi3 range(p) 1 loop
12:13:55
start mi3 range(p) 2 loop
12:13:55
finish mi3 range(p) 2 loop
12:13:55
start mi3 range(NT) loop
12:13:55
finish mi3 range(NT) loop
12:13:55
start mi3 range(n) loop
12:13:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:13:55
start mi3 range(n) 2loop
12:13:55
finish mi3 range(n) 2loop
12:13:55
[[-2.16025058]]
end mi3 loop
12:13:55
estep
12:13:55
end estep
12:14:12
end pa12:14:12
goodness of fit correlation [0.02474348]
start cluster 12:14:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45848 instead
  warnings.warn(
1
parallel submitted
12:14:33
parallel finished
12:19:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:19:26
start mi0
12:19:26
start mi0 range(p) 1 loop
12:19:26
finish mi0 range(p) 1 loop
12:19:26
start mi0 range(p) 2 loop
12:19:26
finish mi0 range(p) 2 loop
12:19:26
start mi0 range(NT) loop
12:19:26
finish mi0 range(NT) loop
12:19:26
start mi0 range(n) loop
12:19:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:19:26
start mi0 range(n) 2loop
12:19:26
finish mi0 range(n) 2loop
12:19:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:19:26
start mi1 range(p) 1 loop
12:19:26
finish mi1 range(p) 1 loop
12:19:26
start mi1 range(p) 2 loop
12:19:26
finish mi1 range(p) 2 loop
12:19:26
start mi1 range(NT) loop
12:19:26
finish mi1 range(NT) loop
12:19:26
start mi1 range(n) loop
12:19:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:19:26
start mi1 range(n) 2loop
12:19:26
finish mi1 range(n) 2loop
12:19:27
start mi2
12:19:27
start mi2 range(p) 1 loop
12:19:27
finish mi2 range(p) 1 loop
12:19:27
start mi2 range(p) 2 loop
12:19:27
finish mi2 range(p) 2 loop
12:19:27
start mi2 range(NT) loop
12:19:27
finish mi2 range(NT) loop
12:19:27
start mi2 range(n) loop
12:19:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:19:27
start mi2 range(n) 2loop
12:19:27
finish mi2 range(n) 2loop
12:19:27
start mi3
12:19:27
start mi3 range(p) 1 loop
12:19:27
finish mi3 range(p) 1 loop
12:19:27
start mi3 range(p) 2 loop
12:19:27
finish mi3 range(p) 2 loop
12:19:27
start mi3 range(NT) loop
12:19:27
finish mi3 range(NT) loop
12:19:27
start mi3 range(n) loop
12:19:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:19:27
start mi3 range(n) 2loop
12:19:27
finish mi3 range(n) 2loop
12:19:27
[[-2.17151604]]
end mi3 loop
12:19:27
estep
12:19:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:19:44
start ppi1
12:19:44
start mi0
12:19:44
start mi0 range(p) 1 loop
12:19:44
finish mi0 range(p) 1 loop
12:19:44
start mi0 range(p) 2 loop
12:19:44
finish mi0 range(p) 2 loop
12:19:44
start mi0 range(NT) loop
12:19:44
finish mi0 range(NT) loop
12:19:44
start mi0 range(n) loop
12:19:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:19:44
start mi0 range(n) 2loop
12:19:44
finish mi0 range(n) 2loop
12:19:44
start mi1
12:19:44
start mi1 range(p) 1 loop
12:19:44
finish mi1 range(p) 1 loop
12:19:44
start mi1 range(p) 2 loop
12:19:44
finish mi1 range(p) 2 loop
12:19:44
start mi1 range(NT) loop
12:19:44
finish mi1 range(NT) loop
12:19:44
start mi1 range(n) loop
12:19:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:19:44
start mi1 range(n) 2loop
12:19:44
finish mi1 range(n) 2loop
12:19:44
start mi2
12:19:44
start mi2 range(p) 1 loop
12:19:44
finish mi2 range(p) 1 loop
12:19:44
start mi2 range(p) 2 loop
12:19:44
finish mi2 range(p) 2 loop
12:19:44
start mi2 range(NT) loop
12:19:44
finish mi2 range(NT) loop
12:19:44
start mi2 range(n) loop
12:19:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:19:44
start mi2 range(n) 2loop
12:19:44
finish mi2 range(n) 2loop
12:19:44
start mi3
12:19:44
start mi3 range(p) 1 loop
12:19:44
finish mi3 range(p) 1 loop
12:19:44
start mi3 range(p) 2 loop
12:19:44
finish mi3 range(p) 2 loop
12:19:44
start mi3 range(NT) loop
12:19:45
finish mi3 range(NT) loop
12:19:45
start mi3 range(n) loop
12:19:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:19:45
start mi3 range(n) 2loop
12:19:45
finish mi3 range(n) 2loop
12:19:45
[[-2.23401422]]
end mi3 loop
12:19:45
estep
12:19:45
end estep
12:20:01
end pa12:20:01
goodness of fit correlation [0.18992723]
start cluster 12:20:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44174 instead
  warnings.warn(
2
parallel submitted
12:20:22
parallel finished
12:24:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:24:54
start mi0
12:24:54
start mi0 range(p) 1 loop
12:24:54
finish mi0 range(p) 1 loop
12:24:54
start mi0 range(p) 2 loop
12:24:54
finish mi0 range(p) 2 loop
12:24:54
start mi0 range(NT) loop
12:24:54
finish mi0 range(NT) loop
12:24:54
start mi0 range(n) loop
12:24:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:24:54
start mi0 range(n) 2loop
12:24:54
finish mi0 range(n) 2loop
12:24:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:24:54
start mi1 range(p) 1 loop
12:24:54
finish mi1 range(p) 1 loop
12:24:54
start mi1 range(p) 2 loop
12:24:54
finish mi1 range(p) 2 loop
12:24:54
start mi1 range(NT) loop
12:24:54
finish mi1 range(NT) loop
12:24:54
start mi1 range(n) loop
12:24:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:24:54
start mi1 range(n) 2loop
12:24:54
finish mi1 range(n) 2loop
12:24:54
start mi2
12:24:54
start mi2 range(p) 1 loop
12:24:54
finish mi2 range(p) 1 loop
12:24:54
start mi2 range(p) 2 loop
12:24:54
finish mi2 range(p) 2 loop
12:24:54
start mi2 range(NT) loop
12:24:54
finish mi2 range(NT) loop
12:24:54
start mi2 range(n) loop
12:24:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:24:54
start mi2 range(n) 2loop
12:24:54
finish mi2 range(n) 2loop
12:24:54
start mi3
12:24:54
start mi3 range(p) 1 loop
12:24:54
finish mi3 range(p) 1 loop
12:24:54
start mi3 range(p) 2 loop
12:24:55
finish mi3 range(p) 2 loop
12:24:55
start mi3 range(NT) loop
12:24:55
finish mi3 range(NT) loop
12:24:55
start mi3 range(n) loop
12:24:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:24:55
start mi3 range(n) 2loop
12:24:55
finish mi3 range(n) 2loop
12:24:55
[[-2.23515029]]
end mi3 loop
12:24:55
estep
12:24:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:25:11
start ppi1
12:25:11
start mi0
12:25:11
start mi0 range(p) 1 loop
12:25:11
finish mi0 range(p) 1 loop
12:25:11
start mi0 range(p) 2 loop
12:25:11
finish mi0 range(p) 2 loop
12:25:11
start mi0 range(NT) loop
12:25:11
finish mi0 range(NT) loop
12:25:11
start mi0 range(n) loop
12:25:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:25:11
start mi0 range(n) 2loop
12:25:11
finish mi0 range(n) 2loop
12:25:11
start mi1
12:25:11
start mi1 range(p) 1 loop
12:25:11
finish mi1 range(p) 1 loop
12:25:11
start mi1 range(p) 2 loop
12:25:11
finish mi1 range(p) 2 loop
12:25:11
start mi1 range(NT) loop
12:25:12
finish mi1 range(NT) loop
12:25:12
start mi1 range(n) loop
12:25:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:25:12
start mi1 range(n) 2loop
12:25:12
finish mi1 range(n) 2loop
12:25:12
start mi2
12:25:12
start mi2 range(p) 1 loop
12:25:12
finish mi2 range(p) 1 loop
12:25:12
start mi2 range(p) 2 loop
12:25:12
finish mi2 range(p) 2 loop
12:25:12
start mi2 range(NT) loop
12:25:12
finish mi2 range(NT) loop
12:25:12
start mi2 range(n) loop
12:25:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:25:12
start mi2 range(n) 2loop
12:25:12
finish mi2 range(n) 2loop
12:25:12
start mi3
12:25:12
start mi3 range(p) 1 loop
12:25:12
finish mi3 range(p) 1 loop
12:25:12
start mi3 range(p) 2 loop
12:25:12
finish mi3 range(p) 2 loop
12:25:12
start mi3 range(NT) loop
12:25:12
finish mi3 range(NT) loop
12:25:12
start mi3 range(n) loop
12:25:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:25:12
start mi3 range(n) 2loop
12:25:12
finish mi3 range(n) 2loop
12:25:12
[[-2.29764397]]
end mi3 loop
12:25:12
estep
12:25:12
end estep
12:25:30
end pa12:25:30
goodness of fit correlation [0.18880847]
start cluster 12:25:30
3
parallel submitted
12:25:54
parallel finished
12:29:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:29:25
start mi0
12:29:25
start mi0 range(p) 1 loop
12:29:25
finish mi0 range(p) 1 loop
12:29:25
start mi0 range(p) 2 loop
12:29:25
finish mi0 range(p) 2 loop
12:29:25
start mi0 range(NT) loop
12:29:25
finish mi0 range(NT) loop
12:29:25
start mi0 range(n) loop
12:29:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:29:25
start mi0 range(n) 2loop
12:29:25
finish mi0 range(n) 2loop
12:29:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:29:25
start mi1 range(p) 1 loop
12:29:25
finish mi1 range(p) 1 loop
12:29:25
start mi1 range(p) 2 loop
12:29:26
finish mi1 range(p) 2 loop
12:29:26
start mi1 range(NT) loop
12:29:26
finish mi1 range(NT) loop
12:29:26
start mi1 range(n) loop
12:29:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:29:26
start mi1 range(n) 2loop
12:29:26
finish mi1 range(n) 2loop
12:29:26
start mi2
12:29:26
start mi2 range(p) 1 loop
12:29:26
finish mi2 range(p) 1 loop
12:29:26
start mi2 range(p) 2 loop
12:29:26
finish mi2 range(p) 2 loop
12:29:26
start mi2 range(NT) loop
12:29:26
finish mi2 range(NT) loop
12:29:26
start mi2 range(n) loop
12:29:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:29:26
start mi2 range(n) 2loop
12:29:26
finish mi2 range(n) 2loop
12:29:26
start mi3
12:29:26
start mi3 range(p) 1 loop
12:29:26
finish mi3 range(p) 1 loop
12:29:26
start mi3 range(p) 2 loop
12:29:26
finish mi3 range(p) 2 loop
12:29:26
start mi3 range(NT) loop
12:29:26
finish mi3 range(NT) loop
12:29:26
start mi3 range(n) loop
12:29:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:29:26
start mi3 range(n) 2loop
12:29:26
finish mi3 range(n) 2loop
12:29:26
[[-2.22754776]]
end mi3 loop
12:29:26
estep
12:29:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:29:43
start ppi1
12:29:43
start mi0
12:29:43
start mi0 range(p) 1 loop
12:29:43
finish mi0 range(p) 1 loop
12:29:43
start mi0 range(p) 2 loop
12:29:43
finish mi0 range(p) 2 loop
12:29:43
start mi0 range(NT) loop
12:29:43
finish mi0 range(NT) loop
12:29:43
start mi0 range(n) loop
12:29:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:29:43
start mi0 range(n) 2loop
12:29:43
finish mi0 range(n) 2loop
12:29:44
start mi1
12:29:44
start mi1 range(p) 1 loop
12:29:44
finish mi1 range(p) 1 loop
12:29:44
start mi1 range(p) 2 loop
12:29:44
finish mi1 range(p) 2 loop
12:29:44
start mi1 range(NT) loop
12:29:44
finish mi1 range(NT) loop
12:29:44
start mi1 range(n) loop
12:29:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:29:44
start mi1 range(n) 2loop
12:29:44
finish mi1 range(n) 2loop
12:29:44
start mi2
12:29:44
start mi2 range(p) 1 loop
12:29:44
finish mi2 range(p) 1 loop
12:29:44
start mi2 range(p) 2 loop
12:29:44
finish mi2 range(p) 2 loop
12:29:44
start mi2 range(NT) loop
12:29:44
finish mi2 range(NT) loop
12:29:44
start mi2 range(n) loop
12:29:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:29:44
start mi2 range(n) 2loop
12:29:44
finish mi2 range(n) 2loop
12:29:44
start mi3
12:29:44
start mi3 range(p) 1 loop
12:29:44
finish mi3 range(p) 1 loop
12:29:44
start mi3 range(p) 2 loop
12:29:44
finish mi3 range(p) 2 loop
12:29:44
start mi3 range(NT) loop
12:29:44
finish mi3 range(NT) loop
12:29:44
start mi3 range(n) loop
12:29:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:29:44
start mi3 range(n) 2loop
12:29:44
finish mi3 range(n) 2loop
12:29:44
[[-2.29004173]]
end mi3 loop
12:29:44
estep
12:29:44
end estep
12:30:02
end pa12:30:02
goodness of fit correlation [0.14159873]
start cluster 12:30:02
4
parallel submitted
12:30:26
parallel finished
12:33:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:33:56
start mi0
12:33:56
start mi0 range(p) 1 loop
12:33:56
finish mi0 range(p) 1 loop
12:33:56
start mi0 range(p) 2 loop
12:33:56
finish mi0 range(p) 2 loop
12:33:56
start mi0 range(NT) loop
12:33:56
finish mi0 range(NT) loop
12:33:56
start mi0 range(n) loop
12:33:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:33:56
start mi0 range(n) 2loop
12:33:56
finish mi0 range(n) 2loop
12:33:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:33:56
start mi1 range(p) 1 loop
12:33:56
finish mi1 range(p) 1 loop
12:33:56
start mi1 range(p) 2 loop
12:33:56
finish mi1 range(p) 2 loop
12:33:56
start mi1 range(NT) loop
12:33:56
finish mi1 range(NT) loop
12:33:56
start mi1 range(n) loop
12:33:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:33:56
start mi1 range(n) 2loop
12:33:56
finish mi1 range(n) 2loop
12:33:57
start mi2
12:33:57
start mi2 range(p) 1 loop
12:33:57
finish mi2 range(p) 1 loop
12:33:57
start mi2 range(p) 2 loop
12:33:57
finish mi2 range(p) 2 loop
12:33:57
start mi2 range(NT) loop
12:33:57
finish mi2 range(NT) loop
12:33:57
start mi2 range(n) loop
12:33:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:33:57
start mi2 range(n) 2loop
12:33:57
finish mi2 range(n) 2loop
12:33:57
start mi3
12:33:57
start mi3 range(p) 1 loop
12:33:57
finish mi3 range(p) 1 loop
12:33:57
start mi3 range(p) 2 loop
12:33:57
finish mi3 range(p) 2 loop
12:33:57
start mi3 range(NT) loop
12:33:57
finish mi3 range(NT) loop
12:33:57
start mi3 range(n) loop
12:33:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:33:57
start mi3 range(n) 2loop
12:33:57
finish mi3 range(n) 2loop
12:33:57
[[-2.22596315]]
end mi3 loop
12:33:57
estep
12:33:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:34:14
start ppi1
12:34:14
start mi0
12:34:14
start mi0 range(p) 1 loop
12:34:14
finish mi0 range(p) 1 loop
12:34:14
start mi0 range(p) 2 loop
12:34:14
finish mi0 range(p) 2 loop
12:34:14
start mi0 range(NT) loop
12:34:14
finish mi0 range(NT) loop
12:34:14
start mi0 range(n) loop
12:34:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:34:14
start mi0 range(n) 2loop
12:34:14
finish mi0 range(n) 2loop
12:34:14
start mi1
12:34:14
start mi1 range(p) 1 loop
12:34:14
finish mi1 range(p) 1 loop
12:34:14
start mi1 range(p) 2 loop
12:34:14
finish mi1 range(p) 2 loop
12:34:14
start mi1 range(NT) loop
12:34:15
finish mi1 range(NT) loop
12:34:15
start mi1 range(n) loop
12:34:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:34:15
start mi1 range(n) 2loop
12:34:15
finish mi1 range(n) 2loop
12:34:15
start mi2
12:34:15
start mi2 range(p) 1 loop
12:34:15
finish mi2 range(p) 1 loop
12:34:15
start mi2 range(p) 2 loop
12:34:15
finish mi2 range(p) 2 loop
12:34:15
start mi2 range(NT) loop
12:34:15
finish mi2 range(NT) loop
12:34:15
start mi2 range(n) loop
12:34:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:34:15
start mi2 range(n) 2loop
12:34:15
finish mi2 range(n) 2loop
12:34:15
start mi3
12:34:15
start mi3 range(p) 1 loop
12:34:15
finish mi3 range(p) 1 loop
12:34:15
start mi3 range(p) 2 loop
12:34:15
finish mi3 range(p) 2 loop
12:34:15
start mi3 range(NT) loop
12:34:15
finish mi3 range(NT) loop
12:34:15
start mi3 range(n) loop
12:34:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:34:15
start mi3 range(n) 2loop
12:34:15
finish mi3 range(n) 2loop
12:34:15
[[-2.28845719]]
end mi3 loop
12:34:15
estep
12:34:15
end estep
12:34:33
end pa12:34:33
goodness of fit correlation [0.18725442]
start cluster 12:34:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40902 instead
  warnings.warn(
5
parallel submitted
12:34:58
parallel finished
12:38:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:38:24
start mi0
12:38:24
start mi0 range(p) 1 loop
12:38:24
finish mi0 range(p) 1 loop
12:38:24
start mi0 range(p) 2 loop
12:38:24
finish mi0 range(p) 2 loop
12:38:24
start mi0 range(NT) loop
12:38:25
finish mi0 range(NT) loop
12:38:25
start mi0 range(n) loop
12:38:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:38:25
start mi0 range(n) 2loop
12:38:25
finish mi0 range(n) 2loop
12:38:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:38:25
start mi1 range(p) 1 loop
12:38:25
finish mi1 range(p) 1 loop
12:38:25
start mi1 range(p) 2 loop
12:38:25
finish mi1 range(p) 2 loop
12:38:25
start mi1 range(NT) loop
12:38:25
finish mi1 range(NT) loop
12:38:25
start mi1 range(n) loop
12:38:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:38:25
start mi1 range(n) 2loop
12:38:25
finish mi1 range(n) 2loop
12:38:25
start mi2
12:38:25
start mi2 range(p) 1 loop
12:38:25
finish mi2 range(p) 1 loop
12:38:25
start mi2 range(p) 2 loop
12:38:25
finish mi2 range(p) 2 loop
12:38:25
start mi2 range(NT) loop
12:38:25
finish mi2 range(NT) loop
12:38:25
start mi2 range(n) loop
12:38:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:38:25
start mi2 range(n) 2loop
12:38:25
finish mi2 range(n) 2loop
12:38:25
start mi3
12:38:25
start mi3 range(p) 1 loop
12:38:25
finish mi3 range(p) 1 loop
12:38:25
start mi3 range(p) 2 loop
12:38:25
finish mi3 range(p) 2 loop
12:38:25
start mi3 range(NT) loop
12:38:25
finish mi3 range(NT) loop
12:38:25
start mi3 range(n) loop
12:38:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:38:26
start mi3 range(n) 2loop
12:38:26
finish mi3 range(n) 2loop
12:38:26
[[-2.24856287]]
end mi3 loop
12:38:26
estep
12:38:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:38:42
start ppi1
12:38:42
start mi0
12:38:42
start mi0 range(p) 1 loop
12:38:42
finish mi0 range(p) 1 loop
12:38:42
start mi0 range(p) 2 loop
12:38:42
finish mi0 range(p) 2 loop
12:38:42
start mi0 range(NT) loop
12:38:42
finish mi0 range(NT) loop
12:38:42
start mi0 range(n) loop
12:38:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:38:42
start mi0 range(n) 2loop
12:38:42
finish mi0 range(n) 2loop
12:38:43
start mi1
12:38:43
start mi1 range(p) 1 loop
12:38:43
finish mi1 range(p) 1 loop
12:38:43
start mi1 range(p) 2 loop
12:38:43
finish mi1 range(p) 2 loop
12:38:43
start mi1 range(NT) loop
12:38:43
finish mi1 range(NT) loop
12:38:43
start mi1 range(n) loop
12:38:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:38:43
start mi1 range(n) 2loop
12:38:43
finish mi1 range(n) 2loop
12:38:43
start mi2
12:38:43
start mi2 range(p) 1 loop
12:38:43
finish mi2 range(p) 1 loop
12:38:43
start mi2 range(p) 2 loop
12:38:43
finish mi2 range(p) 2 loop
12:38:43
start mi2 range(NT) loop
12:38:43
finish mi2 range(NT) loop
12:38:43
start mi2 range(n) loop
12:38:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:38:43
start mi2 range(n) 2loop
12:38:43
finish mi2 range(n) 2loop
12:38:43
start mi3
12:38:43
start mi3 range(p) 1 loop
12:38:43
finish mi3 range(p) 1 loop
12:38:43
start mi3 range(p) 2 loop
12:38:43
finish mi3 range(p) 2 loop
12:38:43
start mi3 range(NT) loop
12:38:43
finish mi3 range(NT) loop
12:38:43
start mi3 range(n) loop
12:38:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:38:43
start mi3 range(n) 2loop
12:38:43
finish mi3 range(n) 2loop
12:38:43
[[-2.31105614]]
end mi3 loop
12:38:43
estep
12:38:43
end estep
12:39:01
end pa12:39:01
goodness of fit correlation [0.12577047]
start cluster 12:39:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39590 instead
  warnings.warn(
6
parallel submitted
12:39:27
parallel finished
12:42:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:43:05
start mi0
12:43:05
start mi0 range(p) 1 loop
12:43:05
finish mi0 range(p) 1 loop
12:43:05
start mi0 range(p) 2 loop
12:43:05
finish mi0 range(p) 2 loop
12:43:05
start mi0 range(NT) loop
12:43:05
finish mi0 range(NT) loop
12:43:05
start mi0 range(n) loop
12:43:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:43:05
start mi0 range(n) 2loop
12:43:05
finish mi0 range(n) 2loop
12:43:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:43:05
start mi1 range(p) 1 loop
12:43:05
finish mi1 range(p) 1 loop
12:43:05
start mi1 range(p) 2 loop
12:43:05
finish mi1 range(p) 2 loop
12:43:05
start mi1 range(NT) loop
12:43:05
finish mi1 range(NT) loop
12:43:05
start mi1 range(n) loop
12:43:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:43:05
start mi1 range(n) 2loop
12:43:05
finish mi1 range(n) 2loop
12:43:05
start mi2
12:43:05
start mi2 range(p) 1 loop
12:43:05
finish mi2 range(p) 1 loop
12:43:05
start mi2 range(p) 2 loop
12:43:05
finish mi2 range(p) 2 loop
12:43:05
start mi2 range(NT) loop
12:43:05
finish mi2 range(NT) loop
12:43:05
start mi2 range(n) loop
12:43:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:43:05
start mi2 range(n) 2loop
12:43:05
finish mi2 range(n) 2loop
12:43:05
start mi3
12:43:05
start mi3 range(p) 1 loop
12:43:05
finish mi3 range(p) 1 loop
12:43:05
start mi3 range(p) 2 loop
12:43:05
finish mi3 range(p) 2 loop
12:43:05
start mi3 range(NT) loop
12:43:06
finish mi3 range(NT) loop
12:43:06
start mi3 range(n) loop
12:43:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:43:06
start mi3 range(n) 2loop
12:43:06
finish mi3 range(n) 2loop
12:43:06
[[-2.22063748]]
end mi3 loop
12:43:06
estep
12:43:06
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:43:23
start ppi1
12:43:23
start mi0
12:43:23
start mi0 range(p) 1 loop
12:43:23
finish mi0 range(p) 1 loop
12:43:23
start mi0 range(p) 2 loop
12:43:23
finish mi0 range(p) 2 loop
12:43:23
start mi0 range(NT) loop
12:43:23
finish mi0 range(NT) loop
12:43:23
start mi0 range(n) loop
12:43:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:43:23
start mi0 range(n) 2loop
12:43:23
finish mi0 range(n) 2loop
12:43:23
start mi1
12:43:23
start mi1 range(p) 1 loop
12:43:23
finish mi1 range(p) 1 loop
12:43:23
start mi1 range(p) 2 loop
12:43:23
finish mi1 range(p) 2 loop
12:43:23
start mi1 range(NT) loop
12:43:23
finish mi1 range(NT) loop
12:43:23
start mi1 range(n) loop
12:43:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:43:23
start mi1 range(n) 2loop
12:43:23
finish mi1 range(n) 2loop
12:43:23
start mi2
12:43:23
start mi2 range(p) 1 loop
12:43:23
finish mi2 range(p) 1 loop
12:43:23
start mi2 range(p) 2 loop
12:43:23
finish mi2 range(p) 2 loop
12:43:23
start mi2 range(NT) loop
12:43:23
finish mi2 range(NT) loop
12:43:23
start mi2 range(n) loop
12:43:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:43:23
start mi2 range(n) 2loop
12:43:23
finish mi2 range(n) 2loop
12:43:24
start mi3
12:43:24
start mi3 range(p) 1 loop
12:43:24
finish mi3 range(p) 1 loop
12:43:24
start mi3 range(p) 2 loop
12:43:24
finish mi3 range(p) 2 loop
12:43:24
start mi3 range(NT) loop
12:43:24
finish mi3 range(NT) loop
12:43:24
start mi3 range(n) loop
12:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:43:24
start mi3 range(n) 2loop
12:43:24
finish mi3 range(n) 2loop
12:43:24
[[-2.28313176]]
end mi3 loop
12:43:24
estep
12:43:24
end estep
12:43:42
end pa12:43:42
goodness of fit correlation [0.19115276]
start cluster 12:43:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44262 instead
  warnings.warn(
7
parallel submitted
12:44:06
parallel finished
12:47:54
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:48:06
start mi0
12:48:06
start mi0 range(p) 1 loop
12:48:06
finish mi0 range(p) 1 loop
12:48:06
start mi0 range(p) 2 loop
12:48:06
finish mi0 range(p) 2 loop
12:48:06
start mi0 range(NT) loop
12:48:07
finish mi0 range(NT) loop
12:48:07
start mi0 range(n) loop
12:48:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:48:07
start mi0 range(n) 2loop
12:48:07
finish mi0 range(n) 2loop
12:48:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:48:07
start mi1 range(p) 1 loop
12:48:07
finish mi1 range(p) 1 loop
12:48:07
start mi1 range(p) 2 loop
12:48:07
finish mi1 range(p) 2 loop
12:48:07
start mi1 range(NT) loop
12:48:07
finish mi1 range(NT) loop
12:48:07
start mi1 range(n) loop
12:48:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:48:07
start mi1 range(n) 2loop
12:48:07
finish mi1 range(n) 2loop
12:48:07
start mi2
12:48:07
start mi2 range(p) 1 loop
12:48:07
finish mi2 range(p) 1 loop
12:48:07
start mi2 range(p) 2 loop
12:48:07
finish mi2 range(p) 2 loop
12:48:07
start mi2 range(NT) loop
12:48:07
finish mi2 range(NT) loop
12:48:07
start mi2 range(n) loop
12:48:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:48:07
start mi2 range(n) 2loop
12:48:07
finish mi2 range(n) 2loop
12:48:07
start mi3
12:48:07
start mi3 range(p) 1 loop
12:48:07
finish mi3 range(p) 1 loop
12:48:07
start mi3 range(p) 2 loop
12:48:07
finish mi3 range(p) 2 loop
12:48:07
start mi3 range(NT) loop
12:48:07
finish mi3 range(NT) loop
12:48:08
start mi3 range(n) loop
12:48:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:48:08
start mi3 range(n) 2loop
12:48:08
finish mi3 range(n) 2loop
12:48:08
[[-2.2194846]]
end mi3 loop
12:48:08
estep
12:48:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:48:26
start ppi1
12:48:26
start mi0
12:48:26
start mi0 range(p) 1 loop
12:48:26
finish mi0 range(p) 1 loop
12:48:26
start mi0 range(p) 2 loop
12:48:26
finish mi0 range(p) 2 loop
12:48:26
start mi0 range(NT) loop
12:48:27
finish mi0 range(NT) loop
12:48:27
start mi0 range(n) loop
12:48:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:48:27
start mi0 range(n) 2loop
12:48:27
finish mi0 range(n) 2loop
12:48:27
start mi1
12:48:27
start mi1 range(p) 1 loop
12:48:27
finish mi1 range(p) 1 loop
12:48:27
start mi1 range(p) 2 loop
12:48:27
finish mi1 range(p) 2 loop
12:48:27
start mi1 range(NT) loop
12:48:27
finish mi1 range(NT) loop
12:48:27
start mi1 range(n) loop
12:48:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:48:27
start mi1 range(n) 2loop
12:48:27
finish mi1 range(n) 2loop
12:48:27
start mi2
12:48:27
start mi2 range(p) 1 loop
12:48:27
finish mi2 range(p) 1 loop
12:48:27
start mi2 range(p) 2 loop
12:48:29
finish mi2 range(p) 2 loop
12:48:29
start mi2 range(NT) loop
12:48:29
finish mi2 range(NT) loop
12:48:29
start mi2 range(n) loop
12:48:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:48:29
start mi2 range(n) 2loop
12:48:29
finish mi2 range(n) 2loop
12:48:29
start mi3
12:48:29
start mi3 range(p) 1 loop
12:48:29
finish mi3 range(p) 1 loop
12:48:29
start mi3 range(p) 2 loop
12:48:29
finish mi3 range(p) 2 loop
12:48:29
start mi3 range(NT) loop
12:48:29
finish mi3 range(NT) loop
12:48:29
start mi3 range(n) loop
12:48:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:48:29
start mi3 range(n) 2loop
12:48:29
finish mi3 range(n) 2loop
12:48:29
[[-2.28197893]]
end mi3 loop
12:48:29
estep
12:48:29
end estep
12:48:48
end pa12:48:48
goodness of fit correlation [0.19769121]
start cluster 12:48:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36480 instead
  warnings.warn(
8
parallel submitted
12:49:12
parallel finished
12:52:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:52:18
start mi0
12:52:18
start mi0 range(p) 1 loop
12:52:18
finish mi0 range(p) 1 loop
12:52:18
start mi0 range(p) 2 loop
12:52:18
finish mi0 range(p) 2 loop
12:52:18
start mi0 range(NT) loop
12:52:18
finish mi0 range(NT) loop
12:52:18
start mi0 range(n) loop
12:52:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:52:18
start mi0 range(n) 2loop
12:52:18
finish mi0 range(n) 2loop
12:52:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:52:18
start mi1 range(p) 1 loop
12:52:18
finish mi1 range(p) 1 loop
12:52:18
start mi1 range(p) 2 loop
12:52:18
finish mi1 range(p) 2 loop
12:52:18
start mi1 range(NT) loop
12:52:18
finish mi1 range(NT) loop
12:52:18
start mi1 range(n) loop
12:52:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:52:18
start mi1 range(n) 2loop
12:52:18
finish mi1 range(n) 2loop
12:52:18
start mi2
12:52:18
start mi2 range(p) 1 loop
12:52:18
finish mi2 range(p) 1 loop
12:52:18
start mi2 range(p) 2 loop
12:52:18
finish mi2 range(p) 2 loop
12:52:18
start mi2 range(NT) loop
12:52:18
finish mi2 range(NT) loop
12:52:18
start mi2 range(n) loop
12:52:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:52:18
start mi2 range(n) 2loop
12:52:18
finish mi2 range(n) 2loop
12:52:18
start mi3
12:52:18
start mi3 range(p) 1 loop
12:52:18
finish mi3 range(p) 1 loop
12:52:18
start mi3 range(p) 2 loop
12:52:18
finish mi3 range(p) 2 loop
12:52:18
start mi3 range(NT) loop
12:52:19
finish mi3 range(NT) loop
12:52:19
start mi3 range(n) loop
12:52:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:52:19
start mi3 range(n) 2loop
12:52:19
finish mi3 range(n) 2loop
12:52:19
[[-2.2466251]]
end mi3 loop
12:52:19
estep
12:52:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:52:35
start ppi1
12:52:35
start mi0
12:52:35
start mi0 range(p) 1 loop
12:52:35
finish mi0 range(p) 1 loop
12:52:35
start mi0 range(p) 2 loop
12:52:35
finish mi0 range(p) 2 loop
12:52:35
start mi0 range(NT) loop
12:52:35
finish mi0 range(NT) loop
12:52:35
start mi0 range(n) loop
12:52:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:52:35
start mi0 range(n) 2loop
12:52:35
finish mi0 range(n) 2loop
12:52:35
start mi1
12:52:35
start mi1 range(p) 1 loop
12:52:35
finish mi1 range(p) 1 loop
12:52:35
start mi1 range(p) 2 loop
12:52:35
finish mi1 range(p) 2 loop
12:52:35
start mi1 range(NT) loop
12:52:36
finish mi1 range(NT) loop
12:52:36
start mi1 range(n) loop
12:52:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:52:36
start mi1 range(n) 2loop
12:52:36
finish mi1 range(n) 2loop
12:52:36
start mi2
12:52:36
start mi2 range(p) 1 loop
12:52:36
finish mi2 range(p) 1 loop
12:52:36
start mi2 range(p) 2 loop
12:52:36
finish mi2 range(p) 2 loop
12:52:36
start mi2 range(NT) loop
12:52:36
finish mi2 range(NT) loop
12:52:36
start mi2 range(n) loop
12:52:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:52:36
start mi2 range(n) 2loop
12:52:36
finish mi2 range(n) 2loop
12:52:36
start mi3
12:52:36
start mi3 range(p) 1 loop
12:52:36
finish mi3 range(p) 1 loop
12:52:36
start mi3 range(p) 2 loop
12:52:36
finish mi3 range(p) 2 loop
12:52:36
start mi3 range(NT) loop
12:52:36
finish mi3 range(NT) loop
12:52:36
start mi3 range(n) loop
12:52:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:52:36
start mi3 range(n) 2loop
12:52:36
finish mi3 range(n) 2loop
12:52:36
[[-2.30911842]]
end mi3 loop
12:52:36
estep
12:52:36
end estep
12:52:54
end pa12:52:54
goodness of fit correlation [0.24948177]
start cluster 12:52:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44761 instead
  warnings.warn(
9
parallel submitted
12:53:19
parallel finished
12:56:36
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:56:48
start mi0
12:56:48
start mi0 range(p) 1 loop
12:56:48
finish mi0 range(p) 1 loop
12:56:48
start mi0 range(p) 2 loop
12:56:48
finish mi0 range(p) 2 loop
12:56:48
start mi0 range(NT) loop
12:56:48
finish mi0 range(NT) loop
12:56:48
start mi0 range(n) loop
12:56:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:56:48
start mi0 range(n) 2loop
12:56:48
finish mi0 range(n) 2loop
12:56:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:56:48
start mi1 range(p) 1 loop
12:56:48
finish mi1 range(p) 1 loop
12:56:48
start mi1 range(p) 2 loop
12:56:48
finish mi1 range(p) 2 loop
12:56:48
start mi1 range(NT) loop
12:56:48
finish mi1 range(NT) loop
12:56:48
start mi1 range(n) loop
12:56:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:56:48
start mi1 range(n) 2loop
12:56:48
finish mi1 range(n) 2loop
12:56:49
start mi2
12:56:49
start mi2 range(p) 1 loop
12:56:49
finish mi2 range(p) 1 loop
12:56:49
start mi2 range(p) 2 loop
12:56:49
finish mi2 range(p) 2 loop
12:56:49
start mi2 range(NT) loop
12:56:49
finish mi2 range(NT) loop
12:56:49
start mi2 range(n) loop
12:56:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:56:49
start mi2 range(n) 2loop
12:56:49
finish mi2 range(n) 2loop
12:56:49
start mi3
12:56:49
start mi3 range(p) 1 loop
12:56:49
finish mi3 range(p) 1 loop
12:56:49
start mi3 range(p) 2 loop
12:56:49
finish mi3 range(p) 2 loop
12:56:49
start mi3 range(NT) loop
12:56:49
finish mi3 range(NT) loop
12:56:49
start mi3 range(n) loop
12:56:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:56:49
start mi3 range(n) 2loop
12:56:49
finish mi3 range(n) 2loop
12:56:49
[[-2.29915194]]
end mi3 loop
12:56:49
estep
12:56:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:57:06
start ppi1
12:57:06
start mi0
12:57:06
start mi0 range(p) 1 loop
12:57:06
finish mi0 range(p) 1 loop
12:57:06
start mi0 range(p) 2 loop
12:57:06
finish mi0 range(p) 2 loop
12:57:06
start mi0 range(NT) loop
12:57:06
finish mi0 range(NT) loop
12:57:06
start mi0 range(n) loop
12:57:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:57:06
start mi0 range(n) 2loop
12:57:06
finish mi0 range(n) 2loop
12:57:06
start mi1
12:57:06
start mi1 range(p) 1 loop
12:57:06
finish mi1 range(p) 1 loop
12:57:06
start mi1 range(p) 2 loop
12:57:06
finish mi1 range(p) 2 loop
12:57:06
start mi1 range(NT) loop
12:57:06
finish mi1 range(NT) loop
12:57:06
start mi1 range(n) loop
12:57:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:57:06
start mi1 range(n) 2loop
12:57:06
finish mi1 range(n) 2loop
12:57:07
start mi2
12:57:07
start mi2 range(p) 1 loop
12:57:07
finish mi2 range(p) 1 loop
12:57:07
start mi2 range(p) 2 loop
12:57:07
finish mi2 range(p) 2 loop
12:57:07
start mi2 range(NT) loop
12:57:07
finish mi2 range(NT) loop
12:57:07
start mi2 range(n) loop
12:57:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:57:07
start mi2 range(n) 2loop
12:57:07
finish mi2 range(n) 2loop
12:57:07
start mi3
12:57:07
start mi3 range(p) 1 loop
12:57:07
finish mi3 range(p) 1 loop
12:57:07
start mi3 range(p) 2 loop
12:57:07
finish mi3 range(p) 2 loop
12:57:07
start mi3 range(NT) loop
12:57:07
finish mi3 range(NT) loop
12:57:07
start mi3 range(n) loop
12:57:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:57:07
start mi3 range(n) 2loop
12:57:07
finish mi3 range(n) 2loop
12:57:07
[[-2.36164436]]
end mi3 loop
12:57:07
estep
12:57:07
end estep
12:57:25
end pa12:57:25
goodness of fit correlation [0.17417401]
start cluster 12:57:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34174 instead
  warnings.warn(
10
parallel submitted
12:57:51
parallel finished
13:00:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:01:01
start mi0
13:01:01
start mi0 range(p) 1 loop
13:01:01
finish mi0 range(p) 1 loop
13:01:01
start mi0 range(p) 2 loop
13:01:01
finish mi0 range(p) 2 loop
13:01:01
start mi0 range(NT) loop
13:01:02
finish mi0 range(NT) loop
13:01:02
start mi0 range(n) loop
13:01:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:01:02
start mi0 range(n) 2loop
13:01:02
finish mi0 range(n) 2loop
13:01:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:01:02
start mi1 range(p) 1 loop
13:01:02
finish mi1 range(p) 1 loop
13:01:02
start mi1 range(p) 2 loop
13:01:02
finish mi1 range(p) 2 loop
13:01:02
start mi1 range(NT) loop
13:01:02
finish mi1 range(NT) loop
13:01:02
start mi1 range(n) loop
13:01:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:01:02
start mi1 range(n) 2loop
13:01:02
finish mi1 range(n) 2loop
13:01:02
start mi2
13:01:02
start mi2 range(p) 1 loop
13:01:02
finish mi2 range(p) 1 loop
13:01:02
start mi2 range(p) 2 loop
13:01:02
finish mi2 range(p) 2 loop
13:01:02
start mi2 range(NT) loop
13:01:02
finish mi2 range(NT) loop
13:01:02
start mi2 range(n) loop
13:01:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:01:02
start mi2 range(n) 2loop
13:01:02
finish mi2 range(n) 2loop
13:01:02
start mi3
13:01:02
start mi3 range(p) 1 loop
13:01:02
finish mi3 range(p) 1 loop
13:01:02
start mi3 range(p) 2 loop
13:01:02
finish mi3 range(p) 2 loop
13:01:02
start mi3 range(NT) loop
13:01:02
finish mi3 range(NT) loop
13:01:02
start mi3 range(n) loop
13:01:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:01:03
start mi3 range(n) 2loop
13:01:03
finish mi3 range(n) 2loop
13:01:03
[[-2.21980185]]
end mi3 loop
13:01:03
estep
13:01:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:01:20
start ppi1
13:01:20
start mi0
13:01:20
start mi0 range(p) 1 loop
13:01:20
finish mi0 range(p) 1 loop
13:01:20
start mi0 range(p) 2 loop
13:01:20
finish mi0 range(p) 2 loop
13:01:20
start mi0 range(NT) loop
13:01:20
finish mi0 range(NT) loop
13:01:20
start mi0 range(n) loop
13:01:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:01:20
start mi0 range(n) 2loop
13:01:20
finish mi0 range(n) 2loop
13:01:20
start mi1
13:01:20
start mi1 range(p) 1 loop
13:01:20
finish mi1 range(p) 1 loop
13:01:20
start mi1 range(p) 2 loop
13:01:20
finish mi1 range(p) 2 loop
13:01:20
start mi1 range(NT) loop
13:01:20
finish mi1 range(NT) loop
13:01:20
start mi1 range(n) loop
13:01:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:01:20
start mi1 range(n) 2loop
13:01:20
finish mi1 range(n) 2loop
13:01:20
start mi2
13:01:20
start mi2 range(p) 1 loop
13:01:20
finish mi2 range(p) 1 loop
13:01:20
start mi2 range(p) 2 loop
13:01:20
finish mi2 range(p) 2 loop
13:01:20
start mi2 range(NT) loop
13:01:20
finish mi2 range(NT) loop
13:01:20
start mi2 range(n) loop
13:01:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:01:20
start mi2 range(n) 2loop
13:01:20
finish mi2 range(n) 2loop
13:01:20
start mi3
13:01:20
start mi3 range(p) 1 loop
13:01:20
finish mi3 range(p) 1 loop
13:01:20
start mi3 range(p) 2 loop
13:01:20
finish mi3 range(p) 2 loop
13:01:20
start mi3 range(NT) loop
13:01:21
finish mi3 range(NT) loop
13:01:21
start mi3 range(n) loop
13:01:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:01:21
start mi3 range(n) 2loop
13:01:21
finish mi3 range(n) 2loop
13:01:21
[[-2.28229617]]
end mi3 loop
13:01:21
estep
13:01:21
end estep
13:01:40
end pa13:01:40
goodness of fit correlation [0.15008769]
start cluster 13:01:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36018 instead
  warnings.warn(
11
parallel submitted
13:02:05
parallel finished
13:05:25
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:05:40
start mi0
13:05:40
start mi0 range(p) 1 loop
13:05:40
finish mi0 range(p) 1 loop
13:05:40
start mi0 range(p) 2 loop
13:05:40
finish mi0 range(p) 2 loop
13:05:40
start mi0 range(NT) loop
13:05:40
finish mi0 range(NT) loop
13:05:40
start mi0 range(n) loop
13:05:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:05:40
start mi0 range(n) 2loop
13:05:40
finish mi0 range(n) 2loop
13:05:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:05:40
start mi1 range(p) 1 loop
13:05:40
finish mi1 range(p) 1 loop
13:05:40
start mi1 range(p) 2 loop
13:05:40
finish mi1 range(p) 2 loop
13:05:40
start mi1 range(NT) loop
13:05:40
finish mi1 range(NT) loop
13:05:40
start mi1 range(n) loop
13:05:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:05:40
start mi1 range(n) 2loop
13:05:40
finish mi1 range(n) 2loop
13:05:40
start mi2
13:05:40
start mi2 range(p) 1 loop
13:05:40
finish mi2 range(p) 1 loop
13:05:40
start mi2 range(p) 2 loop
13:05:40
finish mi2 range(p) 2 loop
13:05:40
start mi2 range(NT) loop
13:05:40
finish mi2 range(NT) loop
13:05:40
start mi2 range(n) loop
13:05:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:05:41
start mi2 range(n) 2loop
13:05:41
finish mi2 range(n) 2loop
13:05:41
start mi3
13:05:41
start mi3 range(p) 1 loop
13:05:41
finish mi3 range(p) 1 loop
13:05:41
start mi3 range(p) 2 loop
13:05:41
finish mi3 range(p) 2 loop
13:05:41
start mi3 range(NT) loop
13:05:41
finish mi3 range(NT) loop
13:05:41
start mi3 range(n) loop
13:05:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:05:41
start mi3 range(n) 2loop
13:05:41
finish mi3 range(n) 2loop
13:05:41
[[-2.24210708]]
end mi3 loop
13:05:41
estep
13:05:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:05:58
start ppi1
13:05:58
start mi0
13:05:58
start mi0 range(p) 1 loop
13:05:58
finish mi0 range(p) 1 loop
13:05:58
start mi0 range(p) 2 loop
13:05:58
finish mi0 range(p) 2 loop
13:05:58
start mi0 range(NT) loop
13:05:58
finish mi0 range(NT) loop
13:05:58
start mi0 range(n) loop
13:05:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:05:58
start mi0 range(n) 2loop
13:05:58
finish mi0 range(n) 2loop
13:05:58
start mi1
13:05:58
start mi1 range(p) 1 loop
13:05:58
finish mi1 range(p) 1 loop
13:05:58
start mi1 range(p) 2 loop
13:05:58
finish mi1 range(p) 2 loop
13:05:58
start mi1 range(NT) loop
13:05:58
finish mi1 range(NT) loop
13:05:58
start mi1 range(n) loop
13:05:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:05:58
start mi1 range(n) 2loop
13:05:58
finish mi1 range(n) 2loop
13:05:59
start mi2
13:05:59
start mi2 range(p) 1 loop
13:05:59
finish mi2 range(p) 1 loop
13:05:59
start mi2 range(p) 2 loop
13:05:59
finish mi2 range(p) 2 loop
13:05:59
start mi2 range(NT) loop
13:05:59
finish mi2 range(NT) loop
13:05:59
start mi2 range(n) loop
13:05:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:05:59
start mi2 range(n) 2loop
13:05:59
finish mi2 range(n) 2loop
13:05:59
start mi3
13:05:59
start mi3 range(p) 1 loop
13:05:59
finish mi3 range(p) 1 loop
13:05:59
start mi3 range(p) 2 loop
13:05:59
finish mi3 range(p) 2 loop
13:05:59
start mi3 range(NT) loop
13:05:59
finish mi3 range(NT) loop
13:05:59
start mi3 range(n) loop
13:05:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:05:59
start mi3 range(n) 2loop
13:05:59
finish mi3 range(n) 2loop
13:05:59
[[-2.30460052]]
end mi3 loop
13:05:59
estep
13:05:59
end estep
13:06:18
end pa13:06:18
goodness of fit correlation [0.27472955]
start cluster 13:06:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33328 instead
  warnings.warn(
12
parallel submitted
13:06:43
parallel finished
13:09:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:10:13
start mi0
13:10:13
start mi0 range(p) 1 loop
13:10:13
finish mi0 range(p) 1 loop
13:10:13
start mi0 range(p) 2 loop
13:10:13
finish mi0 range(p) 2 loop
13:10:13
start mi0 range(NT) loop
13:10:13
finish mi0 range(NT) loop
13:10:13
start mi0 range(n) loop
13:10:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:10:13
start mi0 range(n) 2loop
13:10:13
finish mi0 range(n) 2loop
13:10:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:10:13
start mi1 range(p) 1 loop
13:10:13
finish mi1 range(p) 1 loop
13:10:13
start mi1 range(p) 2 loop
13:10:13
finish mi1 range(p) 2 loop
13:10:13
start mi1 range(NT) loop
13:10:13
finish mi1 range(NT) loop
13:10:13
start mi1 range(n) loop
13:10:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:10:13
start mi1 range(n) 2loop
13:10:13
finish mi1 range(n) 2loop
13:10:13
start mi2
13:10:13
start mi2 range(p) 1 loop
13:10:13
finish mi2 range(p) 1 loop
13:10:13
start mi2 range(p) 2 loop
13:10:13
finish mi2 range(p) 2 loop
13:10:13
start mi2 range(NT) loop
13:10:13
finish mi2 range(NT) loop
13:10:13
start mi2 range(n) loop
13:10:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:10:13
start mi2 range(n) 2loop
13:10:13
finish mi2 range(n) 2loop
13:10:14
start mi3
13:10:14
start mi3 range(p) 1 loop
13:10:14
finish mi3 range(p) 1 loop
13:10:14
start mi3 range(p) 2 loop
13:10:14
finish mi3 range(p) 2 loop
13:10:14
start mi3 range(NT) loop
13:10:14
finish mi3 range(NT) loop
13:10:14
start mi3 range(n) loop
13:10:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:10:14
start mi3 range(n) 2loop
13:10:14
finish mi3 range(n) 2loop
13:10:14
[[-2.28480381]]
end mi3 loop
13:10:14
estep
13:10:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:10:33
start ppi1
13:10:33
start mi0
13:10:33
start mi0 range(p) 1 loop
13:10:33
finish mi0 range(p) 1 loop
13:10:33
start mi0 range(p) 2 loop
13:10:33
finish mi0 range(p) 2 loop
13:10:33
start mi0 range(NT) loop
13:10:33
finish mi0 range(NT) loop
13:10:33
start mi0 range(n) loop
13:10:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:10:33
start mi0 range(n) 2loop
13:10:33
finish mi0 range(n) 2loop
13:10:33
start mi1
13:10:33
start mi1 range(p) 1 loop
13:10:33
finish mi1 range(p) 1 loop
13:10:33
start mi1 range(p) 2 loop
13:10:33
finish mi1 range(p) 2 loop
13:10:33
start mi1 range(NT) loop
13:10:33
finish mi1 range(NT) loop
13:10:33
start mi1 range(n) loop
13:10:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:10:33
start mi1 range(n) 2loop
13:10:33
finish mi1 range(n) 2loop
13:10:33
start mi2
13:10:33
start mi2 range(p) 1 loop
13:10:33
finish mi2 range(p) 1 loop
13:10:33
start mi2 range(p) 2 loop
13:10:33
finish mi2 range(p) 2 loop
13:10:33
start mi2 range(NT) loop
13:10:33
finish mi2 range(NT) loop
13:10:33
start mi2 range(n) loop
13:10:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:10:34
start mi2 range(n) 2loop
13:10:34
finish mi2 range(n) 2loop
13:10:34
start mi3
13:10:34
start mi3 range(p) 1 loop
13:10:34
finish mi3 range(p) 1 loop
13:10:34
start mi3 range(p) 2 loop
13:10:34
finish mi3 range(p) 2 loop
13:10:34
start mi3 range(NT) loop
13:10:34
finish mi3 range(NT) loop
13:10:34
start mi3 range(n) loop
13:10:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:10:34
start mi3 range(n) 2loop
13:10:34
finish mi3 range(n) 2loop
13:10:34
[[-2.34729638]]
end mi3 loop
13:10:34
estep
13:10:34
end estep
13:10:53
end pa13:10:53
goodness of fit correlation [0.13652879]
0.2747295538806367
[5.21215822e-01 5.16648565e-01 5.34957367e-01 5.39221270e-01
 5.01924976e-01 5.66597459e-01 5.90329796e-01 5.85680218e-01
 4.88218001e-01 5.52031322e-01 4.99072387e-01 5.35119925e-01
 4.94323838e-01 6.34101102e-01 5.06182958e-01 5.39644980e-01
 5.81313375e-01 4.99453058e-01 5.28712201e-01 5.14346710e-01
 5.31917376e-01 5.09732931e-01 5.43208846e-01 5.51506741e-01
 4.96161633e-01 5.91908905e-01 5.44167029e-01 5.21058448e-01
 5.10599366e-01 5.23432811e-01 4.98547757e-01 5.02662012e-01
 5.03721555e-01 5.06003557e-01 5.11374886e-01 5.18170826e-01
 5.37023201e-01 5.21110368e-01 4.98052512e-01 5.08663271e-01
 4.96339140e-01 5.34165905e-01 5.38329209e-01 5.04221586e-01
 5.07374130e-01 5.19326625e-01 4.98600002e-01 5.44550683e-01
 5.14756284e-01 4.98105778e-01 5.44936739e-01 5.01849791e-01
 4.89123997e-01 5.08664592e-01 5.30101843e-01 4.97819195e-01
 5.28206012e-01 4.71277441e-01 5.00244898e-01 5.84475922e-01
 5.39803644e-01 4.37170383e-01 5.09654537e-01 5.24357064e-01
 5.02286325e-01 5.02221753e-01 5.05413061e-01 5.83099868e-01
 3.47330857e-01 3.62135486e-01 3.31826541e-01 3.46038719e-01
 3.04859972e-01 3.58282090e-01 3.33680041e-01 3.47789724e-01
 3.54072225e-01 3.45726702e-01 3.49669939e-01 3.29276486e-01
 2.98438716e-01 3.41906436e-01 3.32653082e-01 3.56032598e-01
 3.44462558e-01 3.24383881e-01 3.68046411e-01 3.66144351e-01
 3.44122632e-01 3.77303036e-01 3.45887187e-01 3.48826053e-01
 3.23911204e-01 3.45545270e-01 3.19993666e-01 3.34623847e-01
 3.57003731e-01 3.53336867e-01 2.92596577e-01 3.02170471e-01
 3.40823701e-01 3.66478426e-01 3.63741114e-01 3.63366391e-01
 3.34744509e-01 3.44754155e-01 3.00252500e-01 3.45865240e-01
 3.50790487e-01 3.52085641e-01 3.82714559e-01 3.57252165e-01
 3.49184168e-01 3.42782457e-01 3.08917115e-01 3.50456527e-01
 3.52568827e-01 3.52476015e-01 3.61568383e-01 3.32645623e-01
 3.62510984e-01 3.37992885e-01 3.49868021e-01 3.71322098e-01
 3.50056794e-01 3.53653573e-01 3.05296716e-01 3.44175301e-01
 3.19114161e-01 3.48651438e-01 3.53789413e-01 3.74129168e-01
 3.04827375e-01 3.04669051e-01 3.35361801e-01 3.75797675e-01
 1.45669017e+00 1.02427927e-03]
start cluster 13:10:53
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45775 instead
  warnings.warn(
0
parallel submitted
13:11:19
parallel finished
13:16:52
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:17:04
start mi0
13:17:04
start mi0 range(p) 1 loop
13:17:04
finish mi0 range(p) 1 loop
13:17:04
start mi0 range(p) 2 loop
13:17:04
finish mi0 range(p) 2 loop
13:17:04
start mi0 range(NT) loop
13:17:05
finish mi0 range(NT) loop
13:17:05
start mi0 range(n) loop
13:17:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:17:05
start mi0 range(n) 2loop
13:17:05
finish mi0 range(n) 2loop
13:17:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:17:05
start mi1 range(p) 1 loop
13:17:05
finish mi1 range(p) 1 loop
13:17:05
start mi1 range(p) 2 loop
13:17:05
finish mi1 range(p) 2 loop
13:17:05
start mi1 range(NT) loop
13:17:05
finish mi1 range(NT) loop
13:17:05
start mi1 range(n) loop
13:17:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:17:05
start mi1 range(n) 2loop
13:17:05
finish mi1 range(n) 2loop
13:17:05
start mi2
13:17:05
start mi2 range(p) 1 loop
13:17:05
finish mi2 range(p) 1 loop
13:17:05
start mi2 range(p) 2 loop
13:17:05
finish mi2 range(p) 2 loop
13:17:05
start mi2 range(NT) loop
13:17:05
finish mi2 range(NT) loop
13:17:05
start mi2 range(n) loop
13:17:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:17:05
start mi2 range(n) 2loop
13:17:05
finish mi2 range(n) 2loop
13:17:05
start mi3
13:17:05
start mi3 range(p) 1 loop
13:17:05
finish mi3 range(p) 1 loop
13:17:05
start mi3 range(p) 2 loop
13:17:05
finish mi3 range(p) 2 loop
13:17:05
start mi3 range(NT) loop
13:17:05
finish mi3 range(NT) loop
13:17:05
start mi3 range(n) loop
13:17:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:17:06
start mi3 range(n) 2loop
13:17:06
finish mi3 range(n) 2loop
13:17:06
[[-2.16254286]]
end mi3 loop
13:17:06
estep
13:17:06
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:17:23
start ppi1
13:17:23
start mi0
13:17:23
start mi0 range(p) 1 loop
13:17:23
finish mi0 range(p) 1 loop
13:17:23
start mi0 range(p) 2 loop
13:17:23
finish mi0 range(p) 2 loop
13:17:23
start mi0 range(NT) loop
13:17:23
finish mi0 range(NT) loop
13:17:23
start mi0 range(n) loop
13:17:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:17:23
start mi0 range(n) 2loop
13:17:23
finish mi0 range(n) 2loop
13:17:23
start mi1
13:17:23
start mi1 range(p) 1 loop
13:17:23
finish mi1 range(p) 1 loop
13:17:23
start mi1 range(p) 2 loop
13:17:23
finish mi1 range(p) 2 loop
13:17:23
start mi1 range(NT) loop
13:17:23
finish mi1 range(NT) loop
13:17:23
start mi1 range(n) loop
13:17:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:17:23
start mi1 range(n) 2loop
13:17:23
finish mi1 range(n) 2loop
13:17:23
start mi2
13:17:23
start mi2 range(p) 1 loop
13:17:23
finish mi2 range(p) 1 loop
13:17:23
start mi2 range(p) 2 loop
13:17:23
finish mi2 range(p) 2 loop
13:17:23
start mi2 range(NT) loop
13:17:23
finish mi2 range(NT) loop
13:17:23
start mi2 range(n) loop
13:17:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:17:23
start mi2 range(n) 2loop
13:17:23
finish mi2 range(n) 2loop
13:17:24
start mi3
13:17:24
start mi3 range(p) 1 loop
13:17:24
finish mi3 range(p) 1 loop
13:17:24
start mi3 range(p) 2 loop
13:17:24
finish mi3 range(p) 2 loop
13:17:24
start mi3 range(NT) loop
13:17:24
finish mi3 range(NT) loop
13:17:24
start mi3 range(n) loop
13:17:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:17:24
start mi3 range(n) 2loop
13:17:24
finish mi3 range(n) 2loop
13:17:24
[[-2.16254286]]
end mi3 loop
13:17:24
estep
13:17:24
end estep
13:17:41
end pa13:17:41
goodness of fit correlation [0.06098739]
start cluster 13:17:41
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42902 instead
  warnings.warn(
1
parallel submitted
13:18:04
parallel finished
13:24:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:24:27
start mi0
13:24:27
start mi0 range(p) 1 loop
13:24:27
finish mi0 range(p) 1 loop
13:24:27
start mi0 range(p) 2 loop
13:24:27
finish mi0 range(p) 2 loop
13:24:27
start mi0 range(NT) loop
13:24:27
finish mi0 range(NT) loop
13:24:27
start mi0 range(n) loop
13:24:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:24:27
start mi0 range(n) 2loop
13:24:27
finish mi0 range(n) 2loop
13:24:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:24:27
start mi1 range(p) 1 loop
13:24:27
finish mi1 range(p) 1 loop
13:24:27
start mi1 range(p) 2 loop
13:24:27
finish mi1 range(p) 2 loop
13:24:27
start mi1 range(NT) loop
13:24:27
finish mi1 range(NT) loop
13:24:27
start mi1 range(n) loop
13:24:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:24:27
start mi1 range(n) 2loop
13:24:27
finish mi1 range(n) 2loop
13:24:27
start mi2
13:24:27
start mi2 range(p) 1 loop
13:24:27
finish mi2 range(p) 1 loop
13:24:27
start mi2 range(p) 2 loop
13:24:27
finish mi2 range(p) 2 loop
13:24:28
start mi2 range(NT) loop
13:24:28
finish mi2 range(NT) loop
13:24:28
start mi2 range(n) loop
13:24:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:24:28
start mi2 range(n) 2loop
13:24:28
finish mi2 range(n) 2loop
13:24:28
start mi3
13:24:28
start mi3 range(p) 1 loop
13:24:28
finish mi3 range(p) 1 loop
13:24:28
start mi3 range(p) 2 loop
13:24:28
finish mi3 range(p) 2 loop
13:24:28
start mi3 range(NT) loop
13:24:28
finish mi3 range(NT) loop
13:24:28
start mi3 range(n) loop
13:24:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:24:28
start mi3 range(n) 2loop
13:24:28
finish mi3 range(n) 2loop
13:24:28
[[-2.16352064]]
end mi3 loop
13:24:28
estep
13:24:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:24:45
start ppi1
13:24:45
start mi0
13:24:45
start mi0 range(p) 1 loop
13:24:45
finish mi0 range(p) 1 loop
13:24:45
start mi0 range(p) 2 loop
13:24:45
finish mi0 range(p) 2 loop
13:24:45
start mi0 range(NT) loop
13:24:45
finish mi0 range(NT) loop
13:24:45
start mi0 range(n) loop
13:24:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:24:45
start mi0 range(n) 2loop
13:24:45
finish mi0 range(n) 2loop
13:24:45
start mi1
13:24:45
start mi1 range(p) 1 loop
13:24:45
finish mi1 range(p) 1 loop
13:24:45
start mi1 range(p) 2 loop
13:24:46
finish mi1 range(p) 2 loop
13:24:46
start mi1 range(NT) loop
13:24:46
finish mi1 range(NT) loop
13:24:46
start mi1 range(n) loop
13:24:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:24:46
start mi1 range(n) 2loop
13:24:46
finish mi1 range(n) 2loop
13:24:46
start mi2
13:24:46
start mi2 range(p) 1 loop
13:24:46
finish mi2 range(p) 1 loop
13:24:46
start mi2 range(p) 2 loop
13:24:46
finish mi2 range(p) 2 loop
13:24:46
start mi2 range(NT) loop
13:24:46
finish mi2 range(NT) loop
13:24:46
start mi2 range(n) loop
13:24:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:24:46
start mi2 range(n) 2loop
13:24:46
finish mi2 range(n) 2loop
13:24:46
start mi3
13:24:46
start mi3 range(p) 1 loop
13:24:46
finish mi3 range(p) 1 loop
13:24:46
start mi3 range(p) 2 loop
13:24:46
finish mi3 range(p) 2 loop
13:24:46
start mi3 range(NT) loop
13:24:46
finish mi3 range(NT) loop
13:24:46
start mi3 range(n) loop
13:24:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:24:46
start mi3 range(n) 2loop
13:24:46
finish mi3 range(n) 2loop
13:24:46
[[-2.22601986]]
end mi3 loop
13:24:46
estep
13:24:46
end estep
13:25:03
end pa13:25:03
goodness of fit correlation [0.07654026]
start cluster 13:25:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36934 instead
  warnings.warn(
2
parallel submitted
13:25:28
parallel finished
13:31:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:31:17
start mi0
13:31:17
start mi0 range(p) 1 loop
13:31:17
finish mi0 range(p) 1 loop
13:31:17
start mi0 range(p) 2 loop
13:31:17
finish mi0 range(p) 2 loop
13:31:17
start mi0 range(NT) loop
13:31:17
finish mi0 range(NT) loop
13:31:17
start mi0 range(n) loop
13:31:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:31:17
start mi0 range(n) 2loop
13:31:17
finish mi0 range(n) 2loop
13:31:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:31:18
start mi1 range(p) 1 loop
13:31:18
finish mi1 range(p) 1 loop
13:31:18
start mi1 range(p) 2 loop
13:31:18
finish mi1 range(p) 2 loop
13:31:18
start mi1 range(NT) loop
13:31:18
finish mi1 range(NT) loop
13:31:18
start mi1 range(n) loop
13:31:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:31:18
start mi1 range(n) 2loop
13:31:18
finish mi1 range(n) 2loop
13:31:18
start mi2
13:31:18
start mi2 range(p) 1 loop
13:31:18
finish mi2 range(p) 1 loop
13:31:18
start mi2 range(p) 2 loop
13:31:18
finish mi2 range(p) 2 loop
13:31:18
start mi2 range(NT) loop
13:31:18
finish mi2 range(NT) loop
13:31:18
start mi2 range(n) loop
13:31:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:31:18
start mi2 range(n) 2loop
13:31:18
finish mi2 range(n) 2loop
13:31:18
start mi3
13:31:18
start mi3 range(p) 1 loop
13:31:18
finish mi3 range(p) 1 loop
13:31:18
start mi3 range(p) 2 loop
13:31:18
finish mi3 range(p) 2 loop
13:31:18
start mi3 range(NT) loop
13:31:18
finish mi3 range(NT) loop
13:31:18
start mi3 range(n) loop
13:31:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:31:18
start mi3 range(n) 2loop
13:31:18
finish mi3 range(n) 2loop
13:31:18
[[-2.17008475]]
end mi3 loop
13:31:18
estep
13:31:18
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:31:36
start ppi1
13:31:36
start mi0
13:31:36
start mi0 range(p) 1 loop
13:31:36
finish mi0 range(p) 1 loop
13:31:36
start mi0 range(p) 2 loop
13:31:36
finish mi0 range(p) 2 loop
13:31:36
start mi0 range(NT) loop
13:31:36
finish mi0 range(NT) loop
13:31:36
start mi0 range(n) loop
13:31:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:31:36
start mi0 range(n) 2loop
13:31:36
finish mi0 range(n) 2loop
13:31:36
start mi1
13:31:36
start mi1 range(p) 1 loop
13:31:36
finish mi1 range(p) 1 loop
13:31:36
start mi1 range(p) 2 loop
13:31:36
finish mi1 range(p) 2 loop
13:31:36
start mi1 range(NT) loop
13:31:36
finish mi1 range(NT) loop
13:31:36
start mi1 range(n) loop
13:31:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:31:36
start mi1 range(n) 2loop
13:31:36
finish mi1 range(n) 2loop
13:31:36
start mi2
13:31:36
start mi2 range(p) 1 loop
13:31:36
finish mi2 range(p) 1 loop
13:31:36
start mi2 range(p) 2 loop
13:31:36
finish mi2 range(p) 2 loop
13:31:36
start mi2 range(NT) loop
13:31:36
finish mi2 range(NT) loop
13:31:36
start mi2 range(n) loop
13:31:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:31:36
start mi2 range(n) 2loop
13:31:36
finish mi2 range(n) 2loop
13:31:37
start mi3
13:31:37
start mi3 range(p) 1 loop
13:31:37
finish mi3 range(p) 1 loop
13:31:37
start mi3 range(p) 2 loop
13:31:37
finish mi3 range(p) 2 loop
13:31:37
start mi3 range(NT) loop
13:31:37
finish mi3 range(NT) loop
13:31:37
start mi3 range(n) loop
13:31:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:31:37
start mi3 range(n) 2loop
13:31:37
finish mi3 range(n) 2loop
13:31:37
[[-2.2325831]]
end mi3 loop
13:31:37
estep
13:31:37
end estep
13:31:54
end pa13:31:54
goodness of fit correlation [0.09406355]
start cluster 13:31:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 32816 instead
  warnings.warn(
3
parallel submitted
13:32:18
parallel finished
13:38:39
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:38:55
start mi0
13:38:55
start mi0 range(p) 1 loop
13:38:55
finish mi0 range(p) 1 loop
13:38:55
start mi0 range(p) 2 loop
13:38:55
finish mi0 range(p) 2 loop
13:38:55
start mi0 range(NT) loop
13:38:55
finish mi0 range(NT) loop
13:38:55
start mi0 range(n) loop
13:38:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:38:55
start mi0 range(n) 2loop
13:38:55
finish mi0 range(n) 2loop
13:38:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:38:55
start mi1 range(p) 1 loop
13:38:55
finish mi1 range(p) 1 loop
13:38:55
start mi1 range(p) 2 loop
13:38:55
finish mi1 range(p) 2 loop
13:38:55
start mi1 range(NT) loop
13:38:55
finish mi1 range(NT) loop
13:38:55
start mi1 range(n) loop
13:38:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:38:55
start mi1 range(n) 2loop
13:38:55
finish mi1 range(n) 2loop
13:38:55
start mi2
13:38:55
start mi2 range(p) 1 loop
13:38:55
finish mi2 range(p) 1 loop
13:38:55
start mi2 range(p) 2 loop
13:38:55
finish mi2 range(p) 2 loop
13:38:55
start mi2 range(NT) loop
13:38:55
finish mi2 range(NT) loop
13:38:55
start mi2 range(n) loop
13:38:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:38:55
start mi2 range(n) 2loop
13:38:55
finish mi2 range(n) 2loop
13:38:56
start mi3
13:38:56
start mi3 range(p) 1 loop
13:38:56
finish mi3 range(p) 1 loop
13:38:56
start mi3 range(p) 2 loop
13:38:56
finish mi3 range(p) 2 loop
13:38:56
start mi3 range(NT) loop
13:38:56
finish mi3 range(NT) loop
13:38:56
start mi3 range(n) loop
13:38:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:38:56
start mi3 range(n) 2loop
13:38:56
finish mi3 range(n) 2loop
13:38:56
[[-2.20166515]]
end mi3 loop
13:38:56
estep
13:38:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:39:13
start ppi1
13:39:13
start mi0
13:39:13
start mi0 range(p) 1 loop
13:39:13
finish mi0 range(p) 1 loop
13:39:13
start mi0 range(p) 2 loop
13:39:13
finish mi0 range(p) 2 loop
13:39:13
start mi0 range(NT) loop
13:39:13
finish mi0 range(NT) loop
13:39:13
start mi0 range(n) loop
13:39:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:39:13
start mi0 range(n) 2loop
13:39:13
finish mi0 range(n) 2loop
13:39:13
start mi1
13:39:13
start mi1 range(p) 1 loop
13:39:13
finish mi1 range(p) 1 loop
13:39:13
start mi1 range(p) 2 loop
13:39:13
finish mi1 range(p) 2 loop
13:39:13
start mi1 range(NT) loop
13:39:13
finish mi1 range(NT) loop
13:39:13
start mi1 range(n) loop
13:39:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:39:14
start mi1 range(n) 2loop
13:39:14
finish mi1 range(n) 2loop
13:39:14
start mi2
13:39:14
start mi2 range(p) 1 loop
13:39:14
finish mi2 range(p) 1 loop
13:39:14
start mi2 range(p) 2 loop
13:39:14
finish mi2 range(p) 2 loop
13:39:14
start mi2 range(NT) loop
13:39:14
finish mi2 range(NT) loop
13:39:14
start mi2 range(n) loop
13:39:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:39:14
start mi2 range(n) 2loop
13:39:14
finish mi2 range(n) 2loop
13:39:14
start mi3
13:39:14
start mi3 range(p) 1 loop
13:39:14
finish mi3 range(p) 1 loop
13:39:14
start mi3 range(p) 2 loop
13:39:14
finish mi3 range(p) 2 loop
13:39:14
start mi3 range(NT) loop
13:39:14
finish mi3 range(NT) loop
13:39:14
start mi3 range(n) loop
13:39:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:39:14
start mi3 range(n) 2loop
13:39:14
finish mi3 range(n) 2loop
13:39:14
[[-2.26416053]]
end mi3 loop
13:39:14
estep
13:39:14
end estep
13:39:33
end pa13:39:33
goodness of fit correlation [0.14462588]
start cluster 13:39:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41452 instead
  warnings.warn(
4
parallel submitted
13:39:59
parallel finished
13:45:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:45:16
start mi0
13:45:16
start mi0 range(p) 1 loop
13:45:16
finish mi0 range(p) 1 loop
13:45:16
start mi0 range(p) 2 loop
13:45:16
finish mi0 range(p) 2 loop
13:45:16
start mi0 range(NT) loop
13:45:16
finish mi0 range(NT) loop
13:45:16
start mi0 range(n) loop
13:45:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:45:16
start mi0 range(n) 2loop
13:45:16
finish mi0 range(n) 2loop
13:45:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:45:16
start mi1 range(p) 1 loop
13:45:16
finish mi1 range(p) 1 loop
13:45:16
start mi1 range(p) 2 loop
13:45:16
finish mi1 range(p) 2 loop
13:45:16
start mi1 range(NT) loop
13:45:16
finish mi1 range(NT) loop
13:45:17
start mi1 range(n) loop
13:45:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:45:17
start mi1 range(n) 2loop
13:45:17
finish mi1 range(n) 2loop
13:45:17
start mi2
13:45:17
start mi2 range(p) 1 loop
13:45:17
finish mi2 range(p) 1 loop
13:45:17
start mi2 range(p) 2 loop
13:45:17
finish mi2 range(p) 2 loop
13:45:17
start mi2 range(NT) loop
13:45:17
finish mi2 range(NT) loop
13:45:17
start mi2 range(n) loop
13:45:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:45:17
start mi2 range(n) 2loop
13:45:17
finish mi2 range(n) 2loop
13:45:17
start mi3
13:45:17
start mi3 range(p) 1 loop
13:45:17
finish mi3 range(p) 1 loop
13:45:17
start mi3 range(p) 2 loop
13:45:17
finish mi3 range(p) 2 loop
13:45:17
start mi3 range(NT) loop
13:45:17
finish mi3 range(NT) loop
13:45:17
start mi3 range(n) loop
13:45:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:45:17
start mi3 range(n) 2loop
13:45:17
finish mi3 range(n) 2loop
13:45:17
[[-2.22137353]]
end mi3 loop
13:45:17
estep
13:45:17
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:45:35
start ppi1
13:45:35
start mi0
13:45:35
start mi0 range(p) 1 loop
13:45:35
finish mi0 range(p) 1 loop
13:45:35
start mi0 range(p) 2 loop
13:45:35
finish mi0 range(p) 2 loop
13:45:35
start mi0 range(NT) loop
13:45:35
finish mi0 range(NT) loop
13:45:35
start mi0 range(n) loop
13:45:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:45:35
start mi0 range(n) 2loop
13:45:35
finish mi0 range(n) 2loop
13:45:35
start mi1
13:45:35
start mi1 range(p) 1 loop
13:45:35
finish mi1 range(p) 1 loop
13:45:35
start mi1 range(p) 2 loop
13:45:35
finish mi1 range(p) 2 loop
13:45:35
start mi1 range(NT) loop
13:45:35
finish mi1 range(NT) loop
13:45:35
start mi1 range(n) loop
13:45:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:45:35
start mi1 range(n) 2loop
13:45:35
finish mi1 range(n) 2loop
13:45:35
start mi2
13:45:35
start mi2 range(p) 1 loop
13:45:35
finish mi2 range(p) 1 loop
13:45:35
start mi2 range(p) 2 loop
13:45:35
finish mi2 range(p) 2 loop
13:45:35
start mi2 range(NT) loop
13:45:35
finish mi2 range(NT) loop
13:45:35
start mi2 range(n) loop
13:45:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:45:35
start mi2 range(n) 2loop
13:45:35
finish mi2 range(n) 2loop
13:45:35
start mi3
13:45:35
start mi3 range(p) 1 loop
13:45:35
finish mi3 range(p) 1 loop
13:45:35
start mi3 range(p) 2 loop
13:45:36
finish mi3 range(p) 2 loop
13:45:36
start mi3 range(NT) loop
13:45:36
finish mi3 range(NT) loop
13:45:36
start mi3 range(n) loop
13:45:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:45:36
start mi3 range(n) 2loop
13:45:36
finish mi3 range(n) 2loop
13:45:36
[[-2.28386777]]
end mi3 loop
13:45:36
estep
13:45:36
end estep
13:45:55
end pa13:45:55
goodness of fit correlation [0.19368516]
start cluster 13:45:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37938 instead
  warnings.warn(
5
parallel submitted
13:46:22
parallel finished
13:51:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:51:31
start mi0
13:51:31
start mi0 range(p) 1 loop
13:51:31
finish mi0 range(p) 1 loop
13:51:31
start mi0 range(p) 2 loop
13:51:31
finish mi0 range(p) 2 loop
13:51:31
start mi0 range(NT) loop
13:51:31
finish mi0 range(NT) loop
13:51:31
start mi0 range(n) loop
13:51:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:51:31
start mi0 range(n) 2loop
13:51:31
finish mi0 range(n) 2loop
13:51:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:51:31
start mi1 range(p) 1 loop
13:51:31
finish mi1 range(p) 1 loop
13:51:31
start mi1 range(p) 2 loop
13:51:31
finish mi1 range(p) 2 loop
13:51:31
start mi1 range(NT) loop
13:51:31
finish mi1 range(NT) loop
13:51:31
start mi1 range(n) loop
13:51:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:51:31
start mi1 range(n) 2loop
13:51:31
finish mi1 range(n) 2loop
13:51:32
start mi2
13:51:32
start mi2 range(p) 1 loop
13:51:32
finish mi2 range(p) 1 loop
13:51:32
start mi2 range(p) 2 loop
13:51:32
finish mi2 range(p) 2 loop
13:51:32
start mi2 range(NT) loop
13:51:32
finish mi2 range(NT) loop
13:51:32
start mi2 range(n) loop
13:51:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:51:32
start mi2 range(n) 2loop
13:51:32
finish mi2 range(n) 2loop
13:51:32
start mi3
13:51:32
start mi3 range(p) 1 loop
13:51:32
finish mi3 range(p) 1 loop
13:51:32
start mi3 range(p) 2 loop
13:51:32
finish mi3 range(p) 2 loop
13:51:32
start mi3 range(NT) loop
13:51:32
finish mi3 range(NT) loop
13:51:32
start mi3 range(n) loop
13:51:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:51:32
start mi3 range(n) 2loop
13:51:32
finish mi3 range(n) 2loop
13:51:32
[[-2.29760288]]
end mi3 loop
13:51:32
estep
13:51:32
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:51:49
start ppi1
13:51:49
start mi0
13:51:49
start mi0 range(p) 1 loop
13:51:49
finish mi0 range(p) 1 loop
13:51:49
start mi0 range(p) 2 loop
13:51:49
finish mi0 range(p) 2 loop
13:51:49
start mi0 range(NT) loop
13:51:49
finish mi0 range(NT) loop
13:51:49
start mi0 range(n) loop
13:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:51:49
start mi0 range(n) 2loop
13:51:49
finish mi0 range(n) 2loop
13:51:50
start mi1
13:51:50
start mi1 range(p) 1 loop
13:51:50
finish mi1 range(p) 1 loop
13:51:50
start mi1 range(p) 2 loop
13:51:50
finish mi1 range(p) 2 loop
13:51:50
start mi1 range(NT) loop
13:51:50
finish mi1 range(NT) loop
13:51:50
start mi1 range(n) loop
13:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:51:50
start mi1 range(n) 2loop
13:51:50
finish mi1 range(n) 2loop
13:51:50
start mi2
13:51:50
start mi2 range(p) 1 loop
13:51:50
finish mi2 range(p) 1 loop
13:51:50
start mi2 range(p) 2 loop
13:51:50
finish mi2 range(p) 2 loop
13:51:50
start mi2 range(NT) loop
13:51:50
finish mi2 range(NT) loop
13:51:50
start mi2 range(n) loop
13:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:51:50
start mi2 range(n) 2loop
13:51:50
finish mi2 range(n) 2loop
13:51:50
start mi3
13:51:50
start mi3 range(p) 1 loop
13:51:50
finish mi3 range(p) 1 loop
13:51:50
start mi3 range(p) 2 loop
13:51:50
finish mi3 range(p) 2 loop
13:51:50
start mi3 range(NT) loop
13:51:50
finish mi3 range(NT) loop
13:51:50
start mi3 range(n) loop
13:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:51:50
start mi3 range(n) 2loop
13:51:50
finish mi3 range(n) 2loop
13:51:50
[[-2.36009532]]
end mi3 loop
13:51:50
estep
13:51:50
end estep
13:52:08
end pa13:52:08
goodness of fit correlation [0.23073595]
start cluster 13:52:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40146 instead
  warnings.warn(
6
parallel submitted
13:52:35
slurmstepd: error: *** JOB 1825839 ON nodeb16 CANCELLED AT 2020-11-06T13:53:19 ***
