22
subject 1028_01_MR
start cluster 09:36:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34863 instead
  warnings.warn(
0
parallel submitted
09:36:33
parallel finished
09:39:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:39:02
start mi0
09:39:02
start mi0 range(p) 1 loop
09:39:02
finish mi0 range(p) 1 loop
09:39:02
start mi0 range(p) 2 loop
09:39:02
finish mi0 range(p) 2 loop
09:39:02
start mi0 range(NT) loop
09:39:02
finish mi0 range(NT) loop
09:39:02
start mi0 range(n) loop
09:39:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:39:02
start mi0 range(n) 2loop
09:39:02
finish mi0 range(n) 2loop
09:39:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:39:03
start mi1 range(p) 1 loop
09:39:03
finish mi1 range(p) 1 loop
09:39:03
start mi1 range(p) 2 loop
09:39:03
finish mi1 range(p) 2 loop
09:39:03
start mi1 range(NT) loop
09:39:03
finish mi1 range(NT) loop
09:39:03
start mi1 range(n) loop
09:39:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:39:03
start mi1 range(n) 2loop
09:39:03
finish mi1 range(n) 2loop
09:39:03
start mi2
09:39:03
start mi2 range(p) 1 loop
09:39:03
finish mi2 range(p) 1 loop
09:39:03
start mi2 range(p) 2 loop
09:39:03
finish mi2 range(p) 2 loop
09:39:03
start mi2 range(NT) loop
09:39:03
finish mi2 range(NT) loop
09:39:03
start mi2 range(n) loop
09:39:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:39:03
start mi2 range(n) 2loop
09:39:03
finish mi2 range(n) 2loop
09:39:03
[[-2.59716399]]
end mi2 loop
09:39:03
estep
09:39:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:39:19
start ppi1
09:39:19
start mi0
09:39:19
start mi0 range(p) 1 loop
09:39:19
finish mi0 range(p) 1 loop
09:39:19
start mi0 range(p) 2 loop
09:39:19
finish mi0 range(p) 2 loop
09:39:19
start mi0 range(NT) loop
09:39:19
finish mi0 range(NT) loop
09:39:19
start mi0 range(n) loop
09:39:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:39:19
start mi0 range(n) 2loop
09:39:19
finish mi0 range(n) 2loop
09:39:19
start mi1
09:39:19
start mi1 range(p) 1 loop
09:39:19
finish mi1 range(p) 1 loop
09:39:19
start mi1 range(p) 2 loop
09:39:19
finish mi1 range(p) 2 loop
09:39:19
start mi1 range(NT) loop
09:39:20
finish mi1 range(NT) loop
09:39:20
start mi1 range(n) loop
09:39:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:39:20
start mi1 range(n) 2loop
09:39:20
finish mi1 range(n) 2loop
09:39:20
start mi2
09:39:20
start mi2 range(p) 1 loop
09:39:20
finish mi2 range(p) 1 loop
09:39:20
start mi2 range(p) 2 loop
09:39:20
finish mi2 range(p) 2 loop
09:39:20
start mi2 range(NT) loop
09:39:20
finish mi2 range(NT) loop
09:39:20
start mi2 range(n) loop
09:39:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:39:20
start mi2 range(n) 2loop
09:39:20
finish mi2 range(n) 2loop
09:39:20
[[-2.59716399]]
end mi2 loop
09:39:20
estep
09:39:20
end estep
09:39:36
end pa09:39:36
goodness of fit correlation [0.04563547]
start cluster 09:39:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43892 instead
  warnings.warn(
1
parallel submitted
09:39:53
parallel finished
09:43:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:43:27
start mi0
09:43:27
start mi0 range(p) 1 loop
09:43:27
finish mi0 range(p) 1 loop
09:43:27
start mi0 range(p) 2 loop
09:43:27
finish mi0 range(p) 2 loop
09:43:27
start mi0 range(NT) loop
09:43:27
finish mi0 range(NT) loop
09:43:27
start mi0 range(n) loop
09:43:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:43:27
start mi0 range(n) 2loop
09:43:27
finish mi0 range(n) 2loop
09:43:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:43:27
start mi1 range(p) 1 loop
09:43:27
finish mi1 range(p) 1 loop
09:43:27
start mi1 range(p) 2 loop
09:43:27
finish mi1 range(p) 2 loop
09:43:27
start mi1 range(NT) loop
09:43:27
finish mi1 range(NT) loop
09:43:27
start mi1 range(n) loop
09:43:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:43:27
start mi1 range(n) 2loop
09:43:27
finish mi1 range(n) 2loop
09:43:28
start mi2
09:43:28
start mi2 range(p) 1 loop
09:43:28
finish mi2 range(p) 1 loop
09:43:28
start mi2 range(p) 2 loop
09:43:28
finish mi2 range(p) 2 loop
09:43:28
start mi2 range(NT) loop
09:43:28
finish mi2 range(NT) loop
09:43:28
start mi2 range(n) loop
09:43:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:43:28
start mi2 range(n) 2loop
09:43:28
finish mi2 range(n) 2loop
09:43:28
[[-2.60919887]]
end mi2 loop
09:43:28
estep
09:43:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:43:43
start ppi1
09:43:43
start mi0
09:43:43
start mi0 range(p) 1 loop
09:43:43
finish mi0 range(p) 1 loop
09:43:43
start mi0 range(p) 2 loop
09:43:43
finish mi0 range(p) 2 loop
09:43:43
start mi0 range(NT) loop
09:43:43
finish mi0 range(NT) loop
09:43:43
start mi0 range(n) loop
09:43:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:43:43
start mi0 range(n) 2loop
09:43:43
finish mi0 range(n) 2loop
09:43:43
start mi1
09:43:43
start mi1 range(p) 1 loop
09:43:43
finish mi1 range(p) 1 loop
09:43:43
start mi1 range(p) 2 loop
09:43:43
finish mi1 range(p) 2 loop
09:43:43
start mi1 range(NT) loop
09:43:43
finish mi1 range(NT) loop
09:43:43
start mi1 range(n) loop
09:43:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:43:43
start mi1 range(n) 2loop
09:43:43
finish mi1 range(n) 2loop
09:43:43
start mi2
09:43:43
start mi2 range(p) 1 loop
09:43:43
finish mi2 range(p) 1 loop
09:43:43
start mi2 range(p) 2 loop
09:43:43
finish mi2 range(p) 2 loop
09:43:43
start mi2 range(NT) loop
09:43:43
finish mi2 range(NT) loop
09:43:43
start mi2 range(n) loop
09:43:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:43:43
start mi2 range(n) 2loop
09:43:43
finish mi2 range(n) 2loop
09:43:44
[[-2.67169619]]
end mi2 loop
09:43:44
estep
09:43:44
end estep
09:43:58
end pa09:43:58
goodness of fit correlation [0.20811097]
start cluster 09:43:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38462 instead
  warnings.warn(
2
parallel submitted
09:44:14
parallel finished
09:49:43
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:49:45
start mi0
09:49:45
start mi0 range(p) 1 loop
09:49:45
finish mi0 range(p) 1 loop
09:49:45
start mi0 range(p) 2 loop
09:49:45
finish mi0 range(p) 2 loop
09:49:45
start mi0 range(NT) loop
09:49:45
finish mi0 range(NT) loop
09:49:45
start mi0 range(n) loop
09:49:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:49:46
start mi0 range(n) 2loop
09:49:46
finish mi0 range(n) 2loop
09:49:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:49:46
start mi1 range(p) 1 loop
09:49:46
finish mi1 range(p) 1 loop
09:49:46
start mi1 range(p) 2 loop
09:49:46
finish mi1 range(p) 2 loop
09:49:46
start mi1 range(NT) loop
09:49:46
finish mi1 range(NT) loop
09:49:46
start mi1 range(n) loop
09:49:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:49:46
start mi1 range(n) 2loop
09:49:46
finish mi1 range(n) 2loop
09:49:46
start mi2
09:49:46
start mi2 range(p) 1 loop
09:49:46
finish mi2 range(p) 1 loop
09:49:46
start mi2 range(p) 2 loop
09:49:46
finish mi2 range(p) 2 loop
09:49:46
start mi2 range(NT) loop
09:49:46
finish mi2 range(NT) loop
09:49:46
start mi2 range(n) loop
09:49:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:49:46
start mi2 range(n) 2loop
09:49:46
finish mi2 range(n) 2loop
09:49:46
[[-2.75372567]]
end mi2 loop
09:49:46
estep
09:49:46
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:50:01
start ppi1
09:50:01
start mi0
09:50:01
start mi0 range(p) 1 loop
09:50:01
finish mi0 range(p) 1 loop
09:50:01
start mi0 range(p) 2 loop
09:50:01
finish mi0 range(p) 2 loop
09:50:01
start mi0 range(NT) loop
09:50:01
finish mi0 range(NT) loop
09:50:01
start mi0 range(n) loop
09:50:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:50:01
start mi0 range(n) 2loop
09:50:01
finish mi0 range(n) 2loop
09:50:01
start mi1
09:50:01
start mi1 range(p) 1 loop
09:50:01
finish mi1 range(p) 1 loop
09:50:01
start mi1 range(p) 2 loop
09:50:01
finish mi1 range(p) 2 loop
09:50:01
start mi1 range(NT) loop
09:50:01
finish mi1 range(NT) loop
09:50:01
start mi1 range(n) loop
09:50:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:50:01
start mi1 range(n) 2loop
09:50:01
finish mi1 range(n) 2loop
09:50:02
start mi2
09:50:02
start mi2 range(p) 1 loop
09:50:02
finish mi2 range(p) 1 loop
09:50:02
start mi2 range(p) 2 loop
09:50:02
finish mi2 range(p) 2 loop
09:50:02
start mi2 range(NT) loop
09:50:02
finish mi2 range(NT) loop
09:50:02
start mi2 range(n) loop
09:50:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:50:02
start mi2 range(n) 2loop
09:50:02
finish mi2 range(n) 2loop
09:50:02
[[-2.81621784]]
end mi2 loop
09:50:02
estep
09:50:02
end estep
09:50:17
end pa09:50:17
goodness of fit correlation [0.24867568]
start cluster 09:50:17
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34742 instead
  warnings.warn(
3
parallel submitted
09:50:33
parallel finished
09:56:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:56:56
start mi0
09:56:56
start mi0 range(p) 1 loop
09:56:56
finish mi0 range(p) 1 loop
09:56:56
start mi0 range(p) 2 loop
09:56:56
finish mi0 range(p) 2 loop
09:56:56
start mi0 range(NT) loop
09:56:56
finish mi0 range(NT) loop
09:56:56
start mi0 range(n) loop
09:56:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:56:56
start mi0 range(n) 2loop
09:56:56
finish mi0 range(n) 2loop
09:56:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:56:57
start mi1 range(p) 1 loop
09:56:57
finish mi1 range(p) 1 loop
09:56:57
start mi1 range(p) 2 loop
09:56:57
finish mi1 range(p) 2 loop
09:56:57
start mi1 range(NT) loop
09:56:57
finish mi1 range(NT) loop
09:56:57
start mi1 range(n) loop
09:56:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:56:57
start mi1 range(n) 2loop
09:56:57
finish mi1 range(n) 2loop
09:56:57
start mi2
09:56:57
start mi2 range(p) 1 loop
09:56:57
finish mi2 range(p) 1 loop
09:56:57
start mi2 range(p) 2 loop
09:56:57
finish mi2 range(p) 2 loop
09:56:57
start mi2 range(NT) loop
09:56:57
finish mi2 range(NT) loop
09:56:57
start mi2 range(n) loop
09:56:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:56:57
start mi2 range(n) 2loop
09:56:57
finish mi2 range(n) 2loop
09:56:57
[[-2.78019343]]
end mi2 loop
09:56:57
estep
09:56:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:57:12
start ppi1
09:57:12
start mi0
09:57:12
start mi0 range(p) 1 loop
09:57:12
finish mi0 range(p) 1 loop
09:57:12
start mi0 range(p) 2 loop
09:57:12
finish mi0 range(p) 2 loop
09:57:12
start mi0 range(NT) loop
09:57:12
finish mi0 range(NT) loop
09:57:12
start mi0 range(n) loop
09:57:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:57:12
start mi0 range(n) 2loop
09:57:12
finish mi0 range(n) 2loop
09:57:12
start mi1
09:57:12
start mi1 range(p) 1 loop
09:57:12
finish mi1 range(p) 1 loop
09:57:12
start mi1 range(p) 2 loop
09:57:12
finish mi1 range(p) 2 loop
09:57:12
start mi1 range(NT) loop
09:57:12
finish mi1 range(NT) loop
09:57:12
start mi1 range(n) loop
09:57:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:57:12
start mi1 range(n) 2loop
09:57:12
finish mi1 range(n) 2loop
09:57:12
start mi2
09:57:12
start mi2 range(p) 1 loop
09:57:12
finish mi2 range(p) 1 loop
09:57:12
start mi2 range(p) 2 loop
09:57:12
finish mi2 range(p) 2 loop
09:57:13
start mi2 range(NT) loop
09:57:13
finish mi2 range(NT) loop
09:57:13
start mi2 range(n) loop
09:57:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:57:13
start mi2 range(n) 2loop
09:57:13
finish mi2 range(n) 2loop
09:57:13
[[-2.84268552]]
end mi2 loop
09:57:13
estep
09:57:13
end estep
09:57:28
end pa09:57:28
goodness of fit correlation [0.23625724]
start cluster 09:57:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45969 instead
  warnings.warn(
4
parallel submitted
09:57:43
parallel finished
10:01:07
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:01:10
start mi0
10:01:10
start mi0 range(p) 1 loop
10:01:10
finish mi0 range(p) 1 loop
10:01:10
start mi0 range(p) 2 loop
10:01:10
finish mi0 range(p) 2 loop
10:01:10
start mi0 range(NT) loop
10:01:10
finish mi0 range(NT) loop
10:01:10
start mi0 range(n) loop
10:01:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:01:10
start mi0 range(n) 2loop
10:01:10
finish mi0 range(n) 2loop
10:01:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:01:10
start mi1 range(p) 1 loop
10:01:10
finish mi1 range(p) 1 loop
10:01:10
start mi1 range(p) 2 loop
10:01:10
finish mi1 range(p) 2 loop
10:01:10
start mi1 range(NT) loop
10:01:11
finish mi1 range(NT) loop
10:01:11
start mi1 range(n) loop
10:01:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:01:11
start mi1 range(n) 2loop
10:01:11
finish mi1 range(n) 2loop
10:01:11
start mi2
10:01:11
start mi2 range(p) 1 loop
10:01:11
finish mi2 range(p) 1 loop
10:01:11
start mi2 range(p) 2 loop
10:01:11
finish mi2 range(p) 2 loop
10:01:11
start mi2 range(NT) loop
10:01:11
finish mi2 range(NT) loop
10:01:11
start mi2 range(n) loop
10:01:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:01:11
start mi2 range(n) 2loop
10:01:11
finish mi2 range(n) 2loop
10:01:11
[[-2.68239598]]
end mi2 loop
10:01:11
estep
10:01:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:01:26
start ppi1
10:01:26
start mi0
10:01:26
start mi0 range(p) 1 loop
10:01:26
finish mi0 range(p) 1 loop
10:01:26
start mi0 range(p) 2 loop
10:01:26
finish mi0 range(p) 2 loop
10:01:26
start mi0 range(NT) loop
10:01:26
finish mi0 range(NT) loop
10:01:26
start mi0 range(n) loop
10:01:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:01:26
start mi0 range(n) 2loop
10:01:26
finish mi0 range(n) 2loop
10:01:26
start mi1
10:01:26
start mi1 range(p) 1 loop
10:01:26
finish mi1 range(p) 1 loop
10:01:26
start mi1 range(p) 2 loop
10:01:26
finish mi1 range(p) 2 loop
10:01:26
start mi1 range(NT) loop
10:01:26
finish mi1 range(NT) loop
10:01:26
start mi1 range(n) loop
10:01:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:01:26
start mi1 range(n) 2loop
10:01:26
finish mi1 range(n) 2loop
10:01:26
start mi2
10:01:26
start mi2 range(p) 1 loop
10:01:26
finish mi2 range(p) 1 loop
10:01:26
start mi2 range(p) 2 loop
10:01:26
finish mi2 range(p) 2 loop
10:01:26
start mi2 range(NT) loop
10:01:27
finish mi2 range(NT) loop
10:01:27
start mi2 range(n) loop
10:01:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:01:27
start mi2 range(n) 2loop
10:01:27
finish mi2 range(n) 2loop
10:01:27
[[-2.74488902]]
end mi2 loop
10:01:27
estep
10:01:27
end estep
10:01:42
end pa10:01:42
goodness of fit correlation [0.17433659]
start cluster 10:01:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45058 instead
  warnings.warn(
5
parallel submitted
10:01:58
parallel finished
10:08:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:08:44
start mi0
10:08:44
start mi0 range(p) 1 loop
10:08:44
finish mi0 range(p) 1 loop
10:08:44
start mi0 range(p) 2 loop
10:08:44
finish mi0 range(p) 2 loop
10:08:44
start mi0 range(NT) loop
10:08:44
finish mi0 range(NT) loop
10:08:44
start mi0 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:08:44
start mi0 range(n) 2loop
10:08:44
finish mi0 range(n) 2loop
10:08:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:08:44
start mi1 range(p) 1 loop
10:08:44
finish mi1 range(p) 1 loop
10:08:44
start mi1 range(p) 2 loop
10:08:44
finish mi1 range(p) 2 loop
10:08:44
start mi1 range(NT) loop
10:08:44
finish mi1 range(NT) loop
10:08:44
start mi1 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:08:44
start mi1 range(n) 2loop
10:08:44
finish mi1 range(n) 2loop
10:08:44
start mi2
10:08:44
start mi2 range(p) 1 loop
10:08:44
finish mi2 range(p) 1 loop
10:08:44
start mi2 range(p) 2 loop
10:08:44
finish mi2 range(p) 2 loop
10:08:44
start mi2 range(NT) loop
10:08:44
finish mi2 range(NT) loop
10:08:44
start mi2 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:08:44
start mi2 range(n) 2loop
10:08:44
finish mi2 range(n) 2loop
10:08:45
[[-2.6927431]]
end mi2 loop
10:08:45
estep
10:08:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:08:59
start ppi1
10:08:59
start mi0
10:08:59
start mi0 range(p) 1 loop
10:08:59
finish mi0 range(p) 1 loop
10:08:59
start mi0 range(p) 2 loop
10:08:59
finish mi0 range(p) 2 loop
10:08:59
start mi0 range(NT) loop
10:09:00
finish mi0 range(NT) loop
10:09:00
start mi0 range(n) loop
10:09:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:09:00
start mi0 range(n) 2loop
10:09:00
finish mi0 range(n) 2loop
10:09:00
start mi1
10:09:00
start mi1 range(p) 1 loop
10:09:00
finish mi1 range(p) 1 loop
10:09:00
start mi1 range(p) 2 loop
10:09:00
finish mi1 range(p) 2 loop
10:09:00
start mi1 range(NT) loop
10:09:00
finish mi1 range(NT) loop
10:09:00
start mi1 range(n) loop
10:09:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:09:00
start mi1 range(n) 2loop
10:09:00
finish mi1 range(n) 2loop
10:09:00
start mi2
10:09:00
start mi2 range(p) 1 loop
10:09:00
finish mi2 range(p) 1 loop
10:09:00
start mi2 range(p) 2 loop
10:09:00
finish mi2 range(p) 2 loop
10:09:00
start mi2 range(NT) loop
10:09:00
finish mi2 range(NT) loop
10:09:00
start mi2 range(n) loop
10:09:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:09:00
start mi2 range(n) 2loop
10:09:00
finish mi2 range(n) 2loop
10:09:00
[[-2.75523591]]
end mi2 loop
10:09:00
estep
10:09:00
end estep
10:09:15
end pa10:09:15
goodness of fit correlation [0.29073427]
start cluster 10:09:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35004 instead
  warnings.warn(
6
parallel submitted
10:09:32
parallel finished
10:19:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:19:27
start mi0
10:19:27
start mi0 range(p) 1 loop
10:19:27
finish mi0 range(p) 1 loop
10:19:27
start mi0 range(p) 2 loop
10:19:27
finish mi0 range(p) 2 loop
10:19:27
start mi0 range(NT) loop
10:19:27
finish mi0 range(NT) loop
10:19:27
start mi0 range(n) loop
10:19:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:19:28
start mi0 range(n) 2loop
10:19:28
finish mi0 range(n) 2loop
10:19:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:19:28
start mi1 range(p) 1 loop
10:19:28
finish mi1 range(p) 1 loop
10:19:28
start mi1 range(p) 2 loop
10:19:28
finish mi1 range(p) 2 loop
10:19:28
start mi1 range(NT) loop
10:19:28
finish mi1 range(NT) loop
10:19:28
start mi1 range(n) loop
10:19:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:19:28
start mi1 range(n) 2loop
10:19:28
finish mi1 range(n) 2loop
10:19:28
start mi2
10:19:28
start mi2 range(p) 1 loop
10:19:28
finish mi2 range(p) 1 loop
10:19:28
start mi2 range(p) 2 loop
10:19:28
finish mi2 range(p) 2 loop
10:19:28
start mi2 range(NT) loop
10:19:28
finish mi2 range(NT) loop
10:19:28
start mi2 range(n) loop
10:19:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:19:28
start mi2 range(n) 2loop
10:19:28
finish mi2 range(n) 2loop
10:19:28
[[-2.85080485]]
end mi2 loop
10:19:28
estep
10:19:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:19:45
start ppi1
10:19:45
start mi0
10:19:45
start mi0 range(p) 1 loop
10:19:45
finish mi0 range(p) 1 loop
10:19:45
start mi0 range(p) 2 loop
10:19:45
finish mi0 range(p) 2 loop
10:19:45
start mi0 range(NT) loop
10:19:45
finish mi0 range(NT) loop
10:19:45
start mi0 range(n) loop
10:19:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:19:45
start mi0 range(n) 2loop
10:19:45
finish mi0 range(n) 2loop
10:19:45
start mi1
10:19:45
start mi1 range(p) 1 loop
10:19:45
finish mi1 range(p) 1 loop
10:19:45
start mi1 range(p) 2 loop
10:19:45
finish mi1 range(p) 2 loop
10:19:45
start mi1 range(NT) loop
10:19:45
finish mi1 range(NT) loop
10:19:45
start mi1 range(n) loop
10:19:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:19:45
start mi1 range(n) 2loop
10:19:45
finish mi1 range(n) 2loop
10:19:45
[[-2.91328941]]
end mi1 loop
10:19:45
estep
10:19:45
end estep
10:20:01
end pa10:20:01
goodness of fit correlation [0.28548425]
start cluster 10:20:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42727 instead
  warnings.warn(
7
parallel submitted
10:20:18
parallel finished
10:22:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:22:52
start mi0
10:22:52
start mi0 range(p) 1 loop
10:22:52
finish mi0 range(p) 1 loop
10:22:52
start mi0 range(p) 2 loop
10:22:52
finish mi0 range(p) 2 loop
10:22:52
start mi0 range(NT) loop
10:22:52
finish mi0 range(NT) loop
10:22:52
start mi0 range(n) loop
10:22:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:22:52
start mi0 range(n) 2loop
10:22:52
finish mi0 range(n) 2loop
10:22:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:22:52
start mi1 range(p) 1 loop
10:22:52
finish mi1 range(p) 1 loop
10:22:52
start mi1 range(p) 2 loop
10:22:52
finish mi1 range(p) 2 loop
10:22:52
start mi1 range(NT) loop
10:22:52
finish mi1 range(NT) loop
10:22:52
start mi1 range(n) loop
10:22:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:22:52
start mi1 range(n) 2loop
10:22:52
finish mi1 range(n) 2loop
10:22:52
start mi2
10:22:52
start mi2 range(p) 1 loop
10:22:52
finish mi2 range(p) 1 loop
10:22:52
start mi2 range(p) 2 loop
10:22:52
finish mi2 range(p) 2 loop
10:22:52
start mi2 range(NT) loop
10:22:52
finish mi2 range(NT) loop
10:22:52
start mi2 range(n) loop
10:22:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:22:53
start mi2 range(n) 2loop
10:22:53
finish mi2 range(n) 2loop
10:22:53
[[-2.83648625]]
end mi2 loop
10:22:53
estep
10:22:53
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:23:08
start ppi1
10:23:08
start mi0
10:23:08
start mi0 range(p) 1 loop
10:23:08
finish mi0 range(p) 1 loop
10:23:08
start mi0 range(p) 2 loop
10:23:08
finish mi0 range(p) 2 loop
10:23:08
start mi0 range(NT) loop
10:23:08
finish mi0 range(NT) loop
10:23:08
start mi0 range(n) loop
10:23:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:23:08
start mi0 range(n) 2loop
10:23:08
finish mi0 range(n) 2loop
10:23:08
start mi1
10:23:08
start mi1 range(p) 1 loop
10:23:08
finish mi1 range(p) 1 loop
10:23:08
start mi1 range(p) 2 loop
10:23:08
finish mi1 range(p) 2 loop
10:23:08
start mi1 range(NT) loop
10:23:08
finish mi1 range(NT) loop
10:23:08
start mi1 range(n) loop
10:23:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:23:08
start mi1 range(n) 2loop
10:23:08
finish mi1 range(n) 2loop
10:23:08
[[-2.89896439]]
end mi1 loop
10:23:08
estep
10:23:08
end estep
10:23:23
end pa10:23:23
goodness of fit correlation [0.27611681]
start cluster 10:23:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37802 instead
  warnings.warn(
8
parallel submitted
10:23:40
parallel finished
10:28:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:28:54
start mi0
10:28:54
start mi0 range(p) 1 loop
10:28:54
finish mi0 range(p) 1 loop
10:28:54
start mi0 range(p) 2 loop
10:28:54
finish mi0 range(p) 2 loop
10:28:54
start mi0 range(NT) loop
10:28:54
finish mi0 range(NT) loop
10:28:54
start mi0 range(n) loop
10:28:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:28:54
start mi0 range(n) 2loop
10:28:54
finish mi0 range(n) 2loop
10:28:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:28:54
start mi1 range(p) 1 loop
10:28:54
finish mi1 range(p) 1 loop
10:28:54
start mi1 range(p) 2 loop
10:28:54
finish mi1 range(p) 2 loop
10:28:54
start mi1 range(NT) loop
10:28:54
finish mi1 range(NT) loop
10:28:54
start mi1 range(n) loop
10:28:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:28:55
start mi1 range(n) 2loop
10:28:55
finish mi1 range(n) 2loop
10:28:55
[[-2.88851848]]
end mi1 loop
10:28:55
estep
10:28:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:29:10
start ppi1
10:29:10
start mi0
10:29:10
start mi0 range(p) 1 loop
10:29:10
finish mi0 range(p) 1 loop
10:29:10
start mi0 range(p) 2 loop
10:29:10
finish mi0 range(p) 2 loop
10:29:10
start mi0 range(NT) loop
10:29:10
finish mi0 range(NT) loop
10:29:10
start mi0 range(n) loop
10:29:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:29:10
start mi0 range(n) 2loop
10:29:10
finish mi0 range(n) 2loop
10:29:10
start mi1
10:29:10
start mi1 range(p) 1 loop
10:29:10
finish mi1 range(p) 1 loop
10:29:10
start mi1 range(p) 2 loop
10:29:10
finish mi1 range(p) 2 loop
10:29:10
start mi1 range(NT) loop
10:29:10
finish mi1 range(NT) loop
10:29:10
start mi1 range(n) loop
10:29:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:29:10
start mi1 range(n) 2loop
10:29:10
finish mi1 range(n) 2loop
10:29:10
[[-2.95103053]]
end mi1 loop
10:29:10
estep
10:29:10
end estep
10:29:26
end pa10:29:26
goodness of fit correlation [0.2038932]
start cluster 10:29:26
9
parallel submitted
10:29:45
parallel finished
10:33:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:33:49
start mi0
10:33:49
start mi0 range(p) 1 loop
10:33:49
finish mi0 range(p) 1 loop
10:33:49
start mi0 range(p) 2 loop
10:33:49
finish mi0 range(p) 2 loop
10:33:49
start mi0 range(NT) loop
10:33:49
finish mi0 range(NT) loop
10:33:50
start mi0 range(n) loop
10:33:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:33:50
start mi0 range(n) 2loop
10:33:50
finish mi0 range(n) 2loop
10:33:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:33:50
start mi1 range(p) 1 loop
10:33:50
finish mi1 range(p) 1 loop
10:33:50
start mi1 range(p) 2 loop
10:33:50
finish mi1 range(p) 2 loop
10:33:50
start mi1 range(NT) loop
10:33:50
finish mi1 range(NT) loop
10:33:50
start mi1 range(n) loop
10:33:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:33:50
start mi1 range(n) 2loop
10:33:50
finish mi1 range(n) 2loop
10:33:50
start mi2
10:33:50
start mi2 range(p) 1 loop
10:33:50
finish mi2 range(p) 1 loop
10:33:50
start mi2 range(p) 2 loop
10:33:50
finish mi2 range(p) 2 loop
10:33:50
start mi2 range(NT) loop
10:33:50
finish mi2 range(NT) loop
10:33:50
start mi2 range(n) loop
10:33:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:33:50
start mi2 range(n) 2loop
10:33:50
finish mi2 range(n) 2loop
10:33:50
[[-2.69070482]]
end mi2 loop
10:33:50
estep
10:33:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:34:06
start ppi1
10:34:06
start mi0
10:34:06
start mi0 range(p) 1 loop
10:34:06
finish mi0 range(p) 1 loop
10:34:06
start mi0 range(p) 2 loop
10:34:06
finish mi0 range(p) 2 loop
10:34:06
start mi0 range(NT) loop
10:34:06
finish mi0 range(NT) loop
10:34:06
start mi0 range(n) loop
10:34:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:34:06
start mi0 range(n) 2loop
10:34:06
finish mi0 range(n) 2loop
10:34:06
start mi1
10:34:06
start mi1 range(p) 1 loop
10:34:06
finish mi1 range(p) 1 loop
10:34:06
start mi1 range(p) 2 loop
10:34:06
finish mi1 range(p) 2 loop
10:34:06
start mi1 range(NT) loop
10:34:06
finish mi1 range(NT) loop
10:34:06
start mi1 range(n) loop
10:34:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:34:06
start mi1 range(n) 2loop
10:34:06
finish mi1 range(n) 2loop
10:34:07
start mi2
10:34:07
start mi2 range(p) 1 loop
10:34:07
finish mi2 range(p) 1 loop
10:34:07
start mi2 range(p) 2 loop
10:34:07
finish mi2 range(p) 2 loop
10:34:07
start mi2 range(NT) loop
10:34:07
finish mi2 range(NT) loop
10:34:07
start mi2 range(n) loop
10:34:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:34:07
start mi2 range(n) 2loop
10:34:07
finish mi2 range(n) 2loop
10:34:07
[[-2.75319767]]
end mi2 loop
10:34:07
estep
10:34:07
end estep
10:34:23
end pa10:34:23
goodness of fit correlation [0.2194054]
start cluster 10:34:23
10
parallel submitted
10:34:42
parallel finished
10:37:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:37:45
start mi0
10:37:45
start mi0 range(p) 1 loop
10:37:45
finish mi0 range(p) 1 loop
10:37:45
start mi0 range(p) 2 loop
10:37:45
finish mi0 range(p) 2 loop
10:37:45
start mi0 range(NT) loop
10:37:45
finish mi0 range(NT) loop
10:37:45
start mi0 range(n) loop
10:37:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:37:45
start mi0 range(n) 2loop
10:37:45
finish mi0 range(n) 2loop
10:37:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:37:45
start mi1 range(p) 1 loop
10:37:45
finish mi1 range(p) 1 loop
10:37:45
start mi1 range(p) 2 loop
10:37:45
finish mi1 range(p) 2 loop
10:37:45
start mi1 range(NT) loop
10:37:45
finish mi1 range(NT) loop
10:37:45
start mi1 range(n) loop
10:37:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:37:45
start mi1 range(n) 2loop
10:37:45
finish mi1 range(n) 2loop
10:37:45
start mi2
10:37:45
start mi2 range(p) 1 loop
10:37:45
finish mi2 range(p) 1 loop
10:37:45
start mi2 range(p) 2 loop
10:37:45
finish mi2 range(p) 2 loop
10:37:45
start mi2 range(NT) loop
10:37:45
finish mi2 range(NT) loop
10:37:45
start mi2 range(n) loop
10:37:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:37:45
start mi2 range(n) 2loop
10:37:45
finish mi2 range(n) 2loop
10:37:45
[[-2.75046724]]
end mi2 loop
10:37:45
estep
10:37:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:38:01
start ppi1
10:38:01
start mi0
10:38:01
start mi0 range(p) 1 loop
10:38:01
finish mi0 range(p) 1 loop
10:38:01
start mi0 range(p) 2 loop
10:38:01
finish mi0 range(p) 2 loop
10:38:01
start mi0 range(NT) loop
10:38:01
finish mi0 range(NT) loop
10:38:01
start mi0 range(n) loop
10:38:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:38:01
start mi0 range(n) 2loop
10:38:01
finish mi0 range(n) 2loop
10:38:01
start mi1
10:38:01
start mi1 range(p) 1 loop
10:38:01
finish mi1 range(p) 1 loop
10:38:01
start mi1 range(p) 2 loop
10:38:01
finish mi1 range(p) 2 loop
10:38:01
start mi1 range(NT) loop
10:38:02
finish mi1 range(NT) loop
10:38:02
start mi1 range(n) loop
10:38:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:38:02
start mi1 range(n) 2loop
10:38:02
finish mi1 range(n) 2loop
10:38:02
start mi2
10:38:02
start mi2 range(p) 1 loop
10:38:02
finish mi2 range(p) 1 loop
10:38:02
start mi2 range(p) 2 loop
10:38:02
finish mi2 range(p) 2 loop
10:38:02
start mi2 range(NT) loop
10:38:02
finish mi2 range(NT) loop
10:38:02
start mi2 range(n) loop
10:38:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:38:02
start mi2 range(n) 2loop
10:38:02
finish mi2 range(n) 2loop
10:38:02
[[-2.81295943]]
end mi2 loop
10:38:02
estep
10:38:02
end estep
10:38:18
end pa10:38:18
goodness of fit correlation [0.2167435]
start cluster 10:38:18
11
parallel submitted
10:38:38
parallel finished
10:43:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:43:50
start mi0
10:43:50
start mi0 range(p) 1 loop
10:43:50
finish mi0 range(p) 1 loop
10:43:50
start mi0 range(p) 2 loop
10:43:50
finish mi0 range(p) 2 loop
10:43:50
start mi0 range(NT) loop
10:43:50
finish mi0 range(NT) loop
10:43:50
start mi0 range(n) loop
10:43:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:43:50
start mi0 range(n) 2loop
10:43:50
finish mi0 range(n) 2loop
10:43:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:43:50
start mi1 range(p) 1 loop
10:43:50
finish mi1 range(p) 1 loop
10:43:50
start mi1 range(p) 2 loop
10:43:50
finish mi1 range(p) 2 loop
10:43:50
start mi1 range(NT) loop
10:43:50
finish mi1 range(NT) loop
10:43:51
start mi1 range(n) loop
10:43:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:43:51
start mi1 range(n) 2loop
10:43:51
finish mi1 range(n) 2loop
10:43:51
start mi2
10:43:51
start mi2 range(p) 1 loop
10:43:51
finish mi2 range(p) 1 loop
10:43:51
start mi2 range(p) 2 loop
10:43:51
finish mi2 range(p) 2 loop
10:43:51
start mi2 range(NT) loop
10:43:51
finish mi2 range(NT) loop
10:43:51
start mi2 range(n) loop
10:43:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:43:51
start mi2 range(n) 2loop
10:43:51
finish mi2 range(n) 2loop
10:43:51
[[-2.76421057]]
end mi2 loop
10:43:51
estep
10:43:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:44:07
start ppi1
10:44:07
start mi0
10:44:07
start mi0 range(p) 1 loop
10:44:07
finish mi0 range(p) 1 loop
10:44:07
start mi0 range(p) 2 loop
10:44:07
finish mi0 range(p) 2 loop
10:44:07
start mi0 range(NT) loop
10:44:07
finish mi0 range(NT) loop
10:44:07
start mi0 range(n) loop
10:44:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:44:07
start mi0 range(n) 2loop
10:44:07
finish mi0 range(n) 2loop
10:44:07
start mi1
10:44:07
start mi1 range(p) 1 loop
10:44:07
finish mi1 range(p) 1 loop
10:44:07
start mi1 range(p) 2 loop
10:44:07
finish mi1 range(p) 2 loop
10:44:07
start mi1 range(NT) loop
10:44:07
finish mi1 range(NT) loop
10:44:07
start mi1 range(n) loop
10:44:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:44:07
start mi1 range(n) 2loop
10:44:07
finish mi1 range(n) 2loop
10:44:07
start mi2
10:44:07
start mi2 range(p) 1 loop
10:44:07
finish mi2 range(p) 1 loop
10:44:07
start mi2 range(p) 2 loop
10:44:07
finish mi2 range(p) 2 loop
10:44:07
start mi2 range(NT) loop
10:44:07
finish mi2 range(NT) loop
10:44:07
start mi2 range(n) loop
10:44:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:44:08
start mi2 range(n) 2loop
10:44:08
finish mi2 range(n) 2loop
10:44:08
[[-2.8267027]]
end mi2 loop
10:44:08
estep
10:44:08
end estep
10:44:26
end pa10:44:26
goodness of fit correlation [0.23761902]
start cluster 10:44:26
12
parallel submitted
10:44:45
parallel finished
10:48:39
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:48:45
start mi0
10:48:45
start mi0 range(p) 1 loop
10:48:45
finish mi0 range(p) 1 loop
10:48:45
start mi0 range(p) 2 loop
10:48:45
finish mi0 range(p) 2 loop
10:48:45
start mi0 range(NT) loop
10:48:45
finish mi0 range(NT) loop
10:48:45
start mi0 range(n) loop
10:48:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:48:45
start mi0 range(n) 2loop
10:48:45
finish mi0 range(n) 2loop
10:48:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:48:45
start mi1 range(p) 1 loop
10:48:45
finish mi1 range(p) 1 loop
10:48:45
start mi1 range(p) 2 loop
10:48:45
finish mi1 range(p) 2 loop
10:48:45
start mi1 range(NT) loop
10:48:46
finish mi1 range(NT) loop
10:48:46
start mi1 range(n) loop
10:48:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:48:46
start mi1 range(n) 2loop
10:48:46
finish mi1 range(n) 2loop
10:48:46
start mi2
10:48:46
start mi2 range(p) 1 loop
10:48:46
finish mi2 range(p) 1 loop
10:48:46
start mi2 range(p) 2 loop
10:48:46
finish mi2 range(p) 2 loop
10:48:46
start mi2 range(NT) loop
10:48:46
finish mi2 range(NT) loop
10:48:46
start mi2 range(n) loop
10:48:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:48:46
start mi2 range(n) 2loop
10:48:46
finish mi2 range(n) 2loop
10:48:46
[[-2.7687798]]
end mi2 loop
10:48:46
estep
10:48:46
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:02
start ppi1
10:49:02
start mi0
10:49:02
start mi0 range(p) 1 loop
10:49:02
finish mi0 range(p) 1 loop
10:49:02
start mi0 range(p) 2 loop
10:49:02
finish mi0 range(p) 2 loop
10:49:02
start mi0 range(NT) loop
10:49:02
finish mi0 range(NT) loop
10:49:02
start mi0 range(n) loop
10:49:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:02
start mi0 range(n) 2loop
10:49:02
finish mi0 range(n) 2loop
10:49:02
start mi1
10:49:02
start mi1 range(p) 1 loop
10:49:02
finish mi1 range(p) 1 loop
10:49:02
start mi1 range(p) 2 loop
10:49:02
finish mi1 range(p) 2 loop
10:49:02
start mi1 range(NT) loop
10:49:02
finish mi1 range(NT) loop
10:49:02
start mi1 range(n) loop
10:49:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:02
start mi1 range(n) 2loop
10:49:02
finish mi1 range(n) 2loop
10:49:02
start mi2
10:49:02
start mi2 range(p) 1 loop
10:49:02
finish mi2 range(p) 1 loop
10:49:02
start mi2 range(p) 2 loop
10:49:02
finish mi2 range(p) 2 loop
10:49:02
start mi2 range(NT) loop
10:49:02
finish mi2 range(NT) loop
10:49:02
start mi2 range(n) loop
10:49:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:49:02
start mi2 range(n) 2loop
10:49:02
finish mi2 range(n) 2loop
10:49:03
[[-2.83127191]]
end mi2 loop
10:49:03
estep
10:49:03
end estep
10:49:18
end pa10:49:18
goodness of fit correlation [0.20239051]
start cluster 10:49:18
13
parallel submitted
10:49:39
parallel finished
10:51:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:51:48
start mi0
10:51:48
start mi0 range(p) 1 loop
10:51:48
finish mi0 range(p) 1 loop
10:51:48
start mi0 range(p) 2 loop
10:51:48
finish mi0 range(p) 2 loop
10:51:48
start mi0 range(NT) loop
10:51:48
finish mi0 range(NT) loop
10:51:48
start mi0 range(n) loop
10:51:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:51:48
start mi0 range(n) 2loop
10:51:48
finish mi0 range(n) 2loop
10:51:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:51:48
start mi1 range(p) 1 loop
10:51:48
finish mi1 range(p) 1 loop
10:51:48
start mi1 range(p) 2 loop
10:51:48
finish mi1 range(p) 2 loop
10:51:48
start mi1 range(NT) loop
10:51:48
finish mi1 range(NT) loop
10:51:48
start mi1 range(n) loop
10:51:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:51:48
start mi1 range(n) 2loop
10:51:48
finish mi1 range(n) 2loop
10:51:48
start mi2
10:51:48
start mi2 range(p) 1 loop
10:51:48
finish mi2 range(p) 1 loop
10:51:48
start mi2 range(p) 2 loop
10:51:48
finish mi2 range(p) 2 loop
10:51:48
start mi2 range(NT) loop
10:51:49
finish mi2 range(NT) loop
10:51:49
start mi2 range(n) loop
10:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:51:49
start mi2 range(n) 2loop
10:51:49
finish mi2 range(n) 2loop
10:51:49
[[-2.75015054]]
end mi2 loop
10:51:49
estep
10:51:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:52:04
start ppi1
10:52:04
start mi0
10:52:04
start mi0 range(p) 1 loop
10:52:04
finish mi0 range(p) 1 loop
10:52:04
start mi0 range(p) 2 loop
10:52:04
finish mi0 range(p) 2 loop
10:52:04
start mi0 range(NT) loop
10:52:04
finish mi0 range(NT) loop
10:52:04
start mi0 range(n) loop
10:52:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:52:04
start mi0 range(n) 2loop
10:52:04
finish mi0 range(n) 2loop
10:52:04
start mi1
10:52:04
start mi1 range(p) 1 loop
10:52:04
finish mi1 range(p) 1 loop
10:52:04
start mi1 range(p) 2 loop
10:52:04
finish mi1 range(p) 2 loop
10:52:04
start mi1 range(NT) loop
10:52:04
finish mi1 range(NT) loop
10:52:05
start mi1 range(n) loop
10:52:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:52:05
start mi1 range(n) 2loop
10:52:05
finish mi1 range(n) 2loop
10:52:05
start mi2
10:52:05
start mi2 range(p) 1 loop
10:52:05
finish mi2 range(p) 1 loop
10:52:05
start mi2 range(p) 2 loop
10:52:05
finish mi2 range(p) 2 loop
10:52:05
start mi2 range(NT) loop
10:52:05
finish mi2 range(NT) loop
10:52:05
start mi2 range(n) loop
10:52:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:52:05
start mi2 range(n) 2loop
10:52:05
finish mi2 range(n) 2loop
10:52:05
[[-2.81264273]]
end mi2 loop
10:52:05
estep
10:52:05
end estep
10:52:20
end pa10:52:20
goodness of fit correlation [0.29291208]
start cluster 10:52:20
14
parallel submitted
10:52:38
parallel finished
10:54:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:54:29
start mi0
10:54:29
start mi0 range(p) 1 loop
10:54:29
finish mi0 range(p) 1 loop
10:54:29
start mi0 range(p) 2 loop
10:54:29
finish mi0 range(p) 2 loop
10:54:29
start mi0 range(NT) loop
10:54:29
finish mi0 range(NT) loop
10:54:30
start mi0 range(n) loop
10:54:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:54:30
start mi0 range(n) 2loop
10:54:30
finish mi0 range(n) 2loop
10:54:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:54:30
start mi1 range(p) 1 loop
10:54:30
finish mi1 range(p) 1 loop
10:54:30
start mi1 range(p) 2 loop
10:54:30
finish mi1 range(p) 2 loop
10:54:30
start mi1 range(NT) loop
10:54:30
finish mi1 range(NT) loop
10:54:30
start mi1 range(n) loop
10:54:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:54:30
start mi1 range(n) 2loop
10:54:30
finish mi1 range(n) 2loop
10:54:30
start mi2
10:54:30
start mi2 range(p) 1 loop
10:54:30
finish mi2 range(p) 1 loop
10:54:30
start mi2 range(p) 2 loop
10:54:30
finish mi2 range(p) 2 loop
10:54:30
start mi2 range(NT) loop
10:54:30
finish mi2 range(NT) loop
10:54:30
start mi2 range(n) loop
10:54:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:54:30
start mi2 range(n) 2loop
10:54:30
finish mi2 range(n) 2loop
10:54:30
[[-2.80114273]]
end mi2 loop
10:54:30
estep
10:54:30
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:54:46
start ppi1
10:54:46
start mi0
10:54:46
start mi0 range(p) 1 loop
10:54:46
finish mi0 range(p) 1 loop
10:54:46
start mi0 range(p) 2 loop
10:54:46
finish mi0 range(p) 2 loop
10:54:46
start mi0 range(NT) loop
10:54:46
finish mi0 range(NT) loop
10:54:46
start mi0 range(n) loop
10:54:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:54:46
start mi0 range(n) 2loop
10:54:46
finish mi0 range(n) 2loop
10:54:46
start mi1
10:54:46
start mi1 range(p) 1 loop
10:54:46
finish mi1 range(p) 1 loop
10:54:46
start mi1 range(p) 2 loop
10:54:46
finish mi1 range(p) 2 loop
10:54:46
start mi1 range(NT) loop
10:54:46
finish mi1 range(NT) loop
10:54:46
start mi1 range(n) loop
10:54:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:54:46
start mi1 range(n) 2loop
10:54:46
finish mi1 range(n) 2loop
10:54:46
[[-2.86358755]]
end mi1 loop
10:54:46
estep
10:54:46
end estep
10:55:01
end pa10:55:01
goodness of fit correlation [0.22245351]
start cluster 10:55:01
15
parallel submitted
10:55:21
parallel finished
10:58:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:58:19
start mi0
10:58:19
start mi0 range(p) 1 loop
10:58:19
finish mi0 range(p) 1 loop
10:58:19
start mi0 range(p) 2 loop
10:58:19
finish mi0 range(p) 2 loop
10:58:19
start mi0 range(NT) loop
10:58:19
finish mi0 range(NT) loop
10:58:19
start mi0 range(n) loop
10:58:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:58:19
start mi0 range(n) 2loop
10:58:19
finish mi0 range(n) 2loop
10:58:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:58:19
start mi1 range(p) 1 loop
10:58:19
finish mi1 range(p) 1 loop
10:58:19
start mi1 range(p) 2 loop
10:58:19
finish mi1 range(p) 2 loop
10:58:19
start mi1 range(NT) loop
10:58:19
finish mi1 range(NT) loop
10:58:19
start mi1 range(n) loop
10:58:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:58:19
start mi1 range(n) 2loop
10:58:19
finish mi1 range(n) 2loop
10:58:19
start mi2
10:58:19
start mi2 range(p) 1 loop
10:58:19
finish mi2 range(p) 1 loop
10:58:19
start mi2 range(p) 2 loop
10:58:19
finish mi2 range(p) 2 loop
10:58:19
start mi2 range(NT) loop
10:58:19
finish mi2 range(NT) loop
10:58:19
start mi2 range(n) loop
10:58:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:58:20
start mi2 range(n) 2loop
10:58:20
finish mi2 range(n) 2loop
10:58:20
[[-2.74069511]]
end mi2 loop
10:58:20
estep
10:58:20
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:58:36
start ppi1
10:58:36
start mi0
10:58:36
start mi0 range(p) 1 loop
10:58:36
finish mi0 range(p) 1 loop
10:58:36
start mi0 range(p) 2 loop
10:58:36
finish mi0 range(p) 2 loop
10:58:36
start mi0 range(NT) loop
10:58:36
finish mi0 range(NT) loop
10:58:36
start mi0 range(n) loop
10:58:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:58:36
start mi0 range(n) 2loop
10:58:36
finish mi0 range(n) 2loop
10:58:36
start mi1
10:58:36
start mi1 range(p) 1 loop
10:58:36
finish mi1 range(p) 1 loop
10:58:36
start mi1 range(p) 2 loop
10:58:36
finish mi1 range(p) 2 loop
10:58:36
start mi1 range(NT) loop
10:58:36
finish mi1 range(NT) loop
10:58:36
start mi1 range(n) loop
10:58:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:58:36
start mi1 range(n) 2loop
10:58:36
finish mi1 range(n) 2loop
10:58:36
start mi2
10:58:36
start mi2 range(p) 1 loop
10:58:36
finish mi2 range(p) 1 loop
10:58:36
start mi2 range(p) 2 loop
10:58:36
finish mi2 range(p) 2 loop
10:58:36
start mi2 range(NT) loop
10:58:36
finish mi2 range(NT) loop
10:58:36
start mi2 range(n) loop
10:58:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:58:36
start mi2 range(n) 2loop
10:58:36
finish mi2 range(n) 2loop
10:58:37
[[-2.80318734]]
end mi2 loop
10:58:37
estep
10:58:37
end estep
10:58:53
end pa10:58:53
goodness of fit correlation [0.30173734]
start cluster 10:58:53
16
parallel submitted
10:59:13
parallel finished
11:02:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:02:25
start mi0
11:02:25
start mi0 range(p) 1 loop
11:02:25
finish mi0 range(p) 1 loop
11:02:25
start mi0 range(p) 2 loop
11:02:25
finish mi0 range(p) 2 loop
11:02:25
start mi0 range(NT) loop
11:02:25
finish mi0 range(NT) loop
11:02:25
start mi0 range(n) loop
11:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:02:25
start mi0 range(n) 2loop
11:02:25
finish mi0 range(n) 2loop
11:02:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:02:25
start mi1 range(p) 1 loop
11:02:25
finish mi1 range(p) 1 loop
11:02:25
start mi1 range(p) 2 loop
11:02:25
finish mi1 range(p) 2 loop
11:02:25
start mi1 range(NT) loop
11:02:25
finish mi1 range(NT) loop
11:02:25
start mi1 range(n) loop
11:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:02:25
start mi1 range(n) 2loop
11:02:25
finish mi1 range(n) 2loop
11:02:26
start mi2
11:02:26
start mi2 range(p) 1 loop
11:02:26
finish mi2 range(p) 1 loop
11:02:26
start mi2 range(p) 2 loop
11:02:26
finish mi2 range(p) 2 loop
11:02:26
start mi2 range(NT) loop
11:02:26
finish mi2 range(NT) loop
11:02:26
start mi2 range(n) loop
11:02:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:02:26
start mi2 range(n) 2loop
11:02:26
finish mi2 range(n) 2loop
11:02:26
[[-2.85512964]]
end mi2 loop
11:02:26
estep
11:02:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:02:41
start ppi1
11:02:41
start mi0
11:02:41
start mi0 range(p) 1 loop
11:02:41
finish mi0 range(p) 1 loop
11:02:41
start mi0 range(p) 2 loop
11:02:41
finish mi0 range(p) 2 loop
11:02:41
start mi0 range(NT) loop
11:02:42
finish mi0 range(NT) loop
11:02:42
start mi0 range(n) loop
11:02:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:02:42
start mi0 range(n) 2loop
11:02:42
finish mi0 range(n) 2loop
11:02:42
start mi1
11:02:42
start mi1 range(p) 1 loop
11:02:42
finish mi1 range(p) 1 loop
11:02:42
start mi1 range(p) 2 loop
11:02:42
finish mi1 range(p) 2 loop
11:02:42
start mi1 range(NT) loop
11:02:42
finish mi1 range(NT) loop
11:02:42
start mi1 range(n) loop
11:02:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:02:42
start mi1 range(n) 2loop
11:02:42
finish mi1 range(n) 2loop
11:02:42
[[-2.9176156]]
end mi1 loop
11:02:42
estep
11:02:42
end estep
11:02:58
end pa11:02:58
goodness of fit correlation [0.34125679]
start cluster 11:02:58
17
parallel submitted
11:03:17
parallel finished
11:05:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:06:03
start mi0
11:06:03
start mi0 range(p) 1 loop
11:06:03
finish mi0 range(p) 1 loop
11:06:03
start mi0 range(p) 2 loop
11:06:03
finish mi0 range(p) 2 loop
11:06:03
start mi0 range(NT) loop
11:06:03
finish mi0 range(NT) loop
11:06:03
start mi0 range(n) loop
11:06:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:06:03
start mi0 range(n) 2loop
11:06:03
finish mi0 range(n) 2loop
11:06:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:06:03
start mi1 range(p) 1 loop
11:06:03
finish mi1 range(p) 1 loop
11:06:03
start mi1 range(p) 2 loop
11:06:03
finish mi1 range(p) 2 loop
11:06:03
start mi1 range(NT) loop
11:06:03
finish mi1 range(NT) loop
11:06:03
start mi1 range(n) loop
11:06:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:06:03
start mi1 range(n) 2loop
11:06:03
finish mi1 range(n) 2loop
11:06:03
[[-2.8927539]]
end mi1 loop
11:06:03
estep
11:06:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:06:18
start ppi1
11:06:18
start mi0
11:06:18
start mi0 range(p) 1 loop
11:06:18
finish mi0 range(p) 1 loop
11:06:18
start mi0 range(p) 2 loop
11:06:18
finish mi0 range(p) 2 loop
11:06:18
start mi0 range(NT) loop
11:06:18
finish mi0 range(NT) loop
11:06:18
start mi0 range(n) loop
11:06:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:06:19
start mi0 range(n) 2loop
11:06:19
finish mi0 range(n) 2loop
11:06:19
start mi1
11:06:19
start mi1 range(p) 1 loop
11:06:19
finish mi1 range(p) 1 loop
11:06:19
start mi1 range(p) 2 loop
11:06:19
finish mi1 range(p) 2 loop
11:06:19
start mi1 range(NT) loop
11:06:19
finish mi1 range(NT) loop
11:06:19
start mi1 range(n) loop
11:06:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:06:19
start mi1 range(n) 2loop
11:06:19
finish mi1 range(n) 2loop
11:06:19
[[-2.95526314]]
end mi1 loop
11:06:19
estep
11:06:19
end estep
11:06:35
end pa11:06:35
goodness of fit correlation [0.28088303]
start cluster 11:06:35
18
parallel submitted
11:06:55
parallel finished
11:09:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:09:10
start mi0
11:09:10
start mi0 range(p) 1 loop
11:09:10
finish mi0 range(p) 1 loop
11:09:10
start mi0 range(p) 2 loop
11:09:10
finish mi0 range(p) 2 loop
11:09:10
start mi0 range(NT) loop
11:09:10
finish mi0 range(NT) loop
11:09:10
start mi0 range(n) loop
11:09:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:09:10
start mi0 range(n) 2loop
11:09:10
finish mi0 range(n) 2loop
11:09:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:09:10
start mi1 range(p) 1 loop
11:09:10
finish mi1 range(p) 1 loop
11:09:10
start mi1 range(p) 2 loop
11:09:10
finish mi1 range(p) 2 loop
11:09:10
start mi1 range(NT) loop
11:09:10
finish mi1 range(NT) loop
11:09:10
start mi1 range(n) loop
11:09:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:09:10
start mi1 range(n) 2loop
11:09:10
finish mi1 range(n) 2loop
11:09:10
start mi2
11:09:10
start mi2 range(p) 1 loop
11:09:10
finish mi2 range(p) 1 loop
11:09:10
start mi2 range(p) 2 loop
11:09:10
finish mi2 range(p) 2 loop
11:09:10
start mi2 range(NT) loop
11:09:10
finish mi2 range(NT) loop
11:09:10
start mi2 range(n) loop
11:09:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:09:11
start mi2 range(n) 2loop
11:09:11
finish mi2 range(n) 2loop
11:09:11
[[-2.85045628]]
end mi2 loop
11:09:11
estep
11:09:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:09:27
start ppi1
11:09:27
start mi0
11:09:27
start mi0 range(p) 1 loop
11:09:27
finish mi0 range(p) 1 loop
11:09:27
start mi0 range(p) 2 loop
11:09:27
finish mi0 range(p) 2 loop
11:09:27
start mi0 range(NT) loop
11:09:27
finish mi0 range(NT) loop
11:09:27
start mi0 range(n) loop
11:09:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:09:27
start mi0 range(n) 2loop
11:09:27
finish mi0 range(n) 2loop
11:09:28
start mi1
11:09:28
start mi1 range(p) 1 loop
11:09:28
finish mi1 range(p) 1 loop
11:09:28
start mi1 range(p) 2 loop
11:09:28
finish mi1 range(p) 2 loop
11:09:28
start mi1 range(NT) loop
11:09:28
finish mi1 range(NT) loop
11:09:28
start mi1 range(n) loop
11:09:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:09:28
start mi1 range(n) 2loop
11:09:28
finish mi1 range(n) 2loop
11:09:28
[[-2.91294072]]
end mi1 loop
11:09:28
estep
11:09:28
end estep
11:09:44
end pa11:09:44
goodness of fit correlation [0.29758217]
start cluster 11:09:44
19
parallel submitted
11:10:03
parallel finished
11:12:37
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:12:44
start mi0
11:12:44
start mi0 range(p) 1 loop
11:12:44
finish mi0 range(p) 1 loop
11:12:44
start mi0 range(p) 2 loop
11:12:44
finish mi0 range(p) 2 loop
11:12:44
start mi0 range(NT) loop
11:12:44
finish mi0 range(NT) loop
11:12:44
start mi0 range(n) loop
11:12:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:12:44
start mi0 range(n) 2loop
11:12:44
finish mi0 range(n) 2loop
11:12:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:12:44
start mi1 range(p) 1 loop
11:12:44
finish mi1 range(p) 1 loop
11:12:44
start mi1 range(p) 2 loop
11:12:44
finish mi1 range(p) 2 loop
11:12:44
start mi1 range(NT) loop
11:12:44
finish mi1 range(NT) loop
11:12:44
start mi1 range(n) loop
11:12:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:12:44
start mi1 range(n) 2loop
11:12:44
finish mi1 range(n) 2loop
11:12:45
start mi2
11:12:45
start mi2 range(p) 1 loop
11:12:45
finish mi2 range(p) 1 loop
11:12:45
start mi2 range(p) 2 loop
11:12:45
finish mi2 range(p) 2 loop
11:12:45
start mi2 range(NT) loop
11:12:45
finish mi2 range(NT) loop
11:12:45
start mi2 range(n) loop
11:12:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:12:45
start mi2 range(n) 2loop
11:12:45
finish mi2 range(n) 2loop
11:12:45
[[-2.85473679]]
end mi2 loop
11:12:45
estep
11:12:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:13:00
start ppi1
11:13:00
start mi0
11:13:00
start mi0 range(p) 1 loop
11:13:00
finish mi0 range(p) 1 loop
11:13:00
start mi0 range(p) 2 loop
11:13:00
finish mi0 range(p) 2 loop
11:13:00
start mi0 range(NT) loop
11:13:00
finish mi0 range(NT) loop
11:13:00
start mi0 range(n) loop
11:13:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:13:01
start mi0 range(n) 2loop
11:13:01
finish mi0 range(n) 2loop
11:13:01
start mi1
11:13:01
start mi1 range(p) 1 loop
11:13:01
finish mi1 range(p) 1 loop
11:13:01
start mi1 range(p) 2 loop
11:13:01
finish mi1 range(p) 2 loop
11:13:01
start mi1 range(NT) loop
11:13:01
finish mi1 range(NT) loop
11:13:01
start mi1 range(n) loop
11:13:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:13:01
start mi1 range(n) 2loop
11:13:01
finish mi1 range(n) 2loop
11:13:01
[[-2.91722263]]
end mi1 loop
11:13:01
estep
11:13:01
end estep
11:13:16
end pa11:13:16
goodness of fit correlation [0.28287984]
start cluster 11:13:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40110 instead
  warnings.warn(
20
parallel submitted
11:13:39
parallel finished
11:17:15
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:17:24
start mi0
11:17:24
start mi0 range(p) 1 loop
11:17:24
finish mi0 range(p) 1 loop
11:17:24
start mi0 range(p) 2 loop
11:17:24
finish mi0 range(p) 2 loop
11:17:24
start mi0 range(NT) loop
11:17:24
finish mi0 range(NT) loop
11:17:24
start mi0 range(n) loop
11:17:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:17:25
start mi0 range(n) 2loop
11:17:25
finish mi0 range(n) 2loop
11:17:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:17:25
start mi1 range(p) 1 loop
11:17:25
finish mi1 range(p) 1 loop
11:17:25
start mi1 range(p) 2 loop
11:17:25
finish mi1 range(p) 2 loop
11:17:25
start mi1 range(NT) loop
11:17:25
finish mi1 range(NT) loop
11:17:25
start mi1 range(n) loop
11:17:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:17:25
start mi1 range(n) 2loop
11:17:25
finish mi1 range(n) 2loop
11:17:25
start mi2
11:17:25
start mi2 range(p) 1 loop
11:17:25
finish mi2 range(p) 1 loop
11:17:25
start mi2 range(p) 2 loop
11:17:25
finish mi2 range(p) 2 loop
11:17:25
start mi2 range(NT) loop
11:17:25
finish mi2 range(NT) loop
11:17:25
start mi2 range(n) loop
11:17:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:17:25
start mi2 range(n) 2loop
11:17:25
finish mi2 range(n) 2loop
11:17:25
[[-2.805739]]
end mi2 loop
11:17:25
estep
11:17:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:17:41
start ppi1
11:17:41
start mi0
11:17:41
start mi0 range(p) 1 loop
11:17:41
finish mi0 range(p) 1 loop
11:17:41
start mi0 range(p) 2 loop
11:17:41
finish mi0 range(p) 2 loop
11:17:41
start mi0 range(NT) loop
11:17:41
finish mi0 range(NT) loop
11:17:41
start mi0 range(n) loop
11:17:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:17:41
start mi0 range(n) 2loop
11:17:41
finish mi0 range(n) 2loop
11:17:41
start mi1
11:17:41
start mi1 range(p) 1 loop
11:17:41
finish mi1 range(p) 1 loop
11:17:41
start mi1 range(p) 2 loop
11:17:41
finish mi1 range(p) 2 loop
11:17:41
start mi1 range(NT) loop
11:17:41
finish mi1 range(NT) loop
11:17:41
start mi1 range(n) loop
11:17:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:17:41
start mi1 range(n) 2loop
11:17:41
finish mi1 range(n) 2loop
11:17:41
[[-2.86819]]
end mi1 loop
11:17:41
estep
11:17:41
end estep
11:17:57
end pa11:17:57
goodness of fit correlation [0.27469683]
start cluster 11:17:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44186 instead
  warnings.warn(
21
parallel submitted
11:18:17
parallel finished
11:21:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:21:10
start mi0
11:21:10
start mi0 range(p) 1 loop
11:21:10
finish mi0 range(p) 1 loop
11:21:10
start mi0 range(p) 2 loop
11:21:10
finish mi0 range(p) 2 loop
11:21:10
start mi0 range(NT) loop
11:21:10
finish mi0 range(NT) loop
11:21:10
start mi0 range(n) loop
11:21:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:21:10
start mi0 range(n) 2loop
11:21:10
finish mi0 range(n) 2loop
11:21:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:21:10
start mi1 range(p) 1 loop
11:21:10
finish mi1 range(p) 1 loop
11:21:10
start mi1 range(p) 2 loop
11:21:10
finish mi1 range(p) 2 loop
11:21:10
start mi1 range(NT) loop
11:21:10
finish mi1 range(NT) loop
11:21:10
start mi1 range(n) loop
11:21:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:21:11
start mi1 range(n) 2loop
11:21:11
finish mi1 range(n) 2loop
11:21:11
start mi2
11:21:11
start mi2 range(p) 1 loop
11:21:11
finish mi2 range(p) 1 loop
11:21:11
start mi2 range(p) 2 loop
11:21:11
finish mi2 range(p) 2 loop
11:21:11
start mi2 range(NT) loop
11:21:11
finish mi2 range(NT) loop
11:21:11
start mi2 range(n) loop
11:21:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:21:11
start mi2 range(n) 2loop
11:21:11
finish mi2 range(n) 2loop
11:21:11
[[-2.84586357]]
end mi2 loop
11:21:11
estep
11:21:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:21:28
start ppi1
11:21:28
start mi0
11:21:28
start mi0 range(p) 1 loop
11:21:28
finish mi0 range(p) 1 loop
11:21:28
start mi0 range(p) 2 loop
11:21:28
finish mi0 range(p) 2 loop
11:21:28
start mi0 range(NT) loop
11:21:28
finish mi0 range(NT) loop
11:21:28
start mi0 range(n) loop
11:21:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:21:28
start mi0 range(n) 2loop
11:21:28
finish mi0 range(n) 2loop
11:21:28
start mi1
11:21:28
start mi1 range(p) 1 loop
11:21:28
finish mi1 range(p) 1 loop
11:21:28
start mi1 range(p) 2 loop
11:21:28
finish mi1 range(p) 2 loop
11:21:28
start mi1 range(NT) loop
11:21:28
finish mi1 range(NT) loop
11:21:28
start mi1 range(n) loop
11:21:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:21:28
start mi1 range(n) 2loop
11:21:28
finish mi1 range(n) 2loop
11:21:29
[[-2.90834624]]
end mi1 loop
11:21:29
estep
11:21:29
end estep
11:21:45
end pa11:21:45
goodness of fit correlation [0.31960796]
start cluster 11:21:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38667 instead
  warnings.warn(
22
parallel submitted
11:22:06
parallel finished
11:25:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:25:58
start mi0
11:25:58
start mi0 range(p) 1 loop
11:25:58
finish mi0 range(p) 1 loop
11:25:58
start mi0 range(p) 2 loop
11:25:58
finish mi0 range(p) 2 loop
11:25:58
start mi0 range(NT) loop
11:25:58
finish mi0 range(NT) loop
11:25:58
start mi0 range(n) loop
11:25:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:25:58
start mi0 range(n) 2loop
11:25:58
finish mi0 range(n) 2loop
11:25:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:25:58
start mi1 range(p) 1 loop
11:25:58
finish mi1 range(p) 1 loop
11:25:58
start mi1 range(p) 2 loop
11:25:58
finish mi1 range(p) 2 loop
11:25:58
start mi1 range(NT) loop
11:25:58
finish mi1 range(NT) loop
11:25:58
start mi1 range(n) loop
11:25:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:25:58
start mi1 range(n) 2loop
11:25:58
finish mi1 range(n) 2loop
11:25:59
start mi2
11:25:59
start mi2 range(p) 1 loop
11:25:59
finish mi2 range(p) 1 loop
11:25:59
start mi2 range(p) 2 loop
11:25:59
finish mi2 range(p) 2 loop
11:25:59
start mi2 range(NT) loop
11:25:59
finish mi2 range(NT) loop
11:25:59
start mi2 range(n) loop
11:25:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:25:59
start mi2 range(n) 2loop
11:25:59
finish mi2 range(n) 2loop
11:25:59
[[-2.81180398]]
end mi2 loop
11:25:59
estep
11:25:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:26:15
start ppi1
11:26:15
start mi0
11:26:15
start mi0 range(p) 1 loop
11:26:15
finish mi0 range(p) 1 loop
11:26:15
start mi0 range(p) 2 loop
11:26:15
finish mi0 range(p) 2 loop
11:26:15
start mi0 range(NT) loop
11:26:15
finish mi0 range(NT) loop
11:26:15
start mi0 range(n) loop
11:26:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:26:15
start mi0 range(n) 2loop
11:26:15
finish mi0 range(n) 2loop
11:26:16
start mi1
11:26:16
start mi1 range(p) 1 loop
11:26:16
finish mi1 range(p) 1 loop
11:26:16
start mi1 range(p) 2 loop
11:26:16
finish mi1 range(p) 2 loop
11:26:16
start mi1 range(NT) loop
11:26:16
finish mi1 range(NT) loop
11:26:16
start mi1 range(n) loop
11:26:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:26:16
start mi1 range(n) 2loop
11:26:16
finish mi1 range(n) 2loop
11:26:16
[[-2.87426215]]
end mi1 loop
11:26:16
estep
11:26:16
end estep
11:26:32
end pa11:26:32
goodness of fit correlation [0.27285362]
start cluster 11:26:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37323 instead
  warnings.warn(
23
parallel submitted
11:26:51
parallel finished
11:29:34
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:29:44
start mi0
11:29:44
start mi0 range(p) 1 loop
11:29:44
finish mi0 range(p) 1 loop
11:29:44
start mi0 range(p) 2 loop
11:29:44
finish mi0 range(p) 2 loop
11:29:44
start mi0 range(NT) loop
11:29:44
finish mi0 range(NT) loop
11:29:44
start mi0 range(n) loop
11:29:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:29:44
start mi0 range(n) 2loop
11:29:44
finish mi0 range(n) 2loop
11:29:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:29:44
start mi1 range(p) 1 loop
11:29:44
finish mi1 range(p) 1 loop
11:29:44
start mi1 range(p) 2 loop
11:29:44
finish mi1 range(p) 2 loop
11:29:44
start mi1 range(NT) loop
11:29:45
finish mi1 range(NT) loop
11:29:45
start mi1 range(n) loop
11:29:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:29:45
start mi1 range(n) 2loop
11:29:45
finish mi1 range(n) 2loop
11:29:45
start mi2
11:29:45
start mi2 range(p) 1 loop
11:29:45
finish mi2 range(p) 1 loop
11:29:45
start mi2 range(p) 2 loop
11:29:45
finish mi2 range(p) 2 loop
11:29:45
start mi2 range(NT) loop
11:29:45
finish mi2 range(NT) loop
11:29:45
start mi2 range(n) loop
11:29:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:29:45
start mi2 range(n) 2loop
11:29:45
finish mi2 range(n) 2loop
11:29:45
[[-2.78903299]]
end mi2 loop
11:29:45
estep
11:29:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:30:02
start ppi1
11:30:02
start mi0
11:30:02
start mi0 range(p) 1 loop
11:30:02
finish mi0 range(p) 1 loop
11:30:02
start mi0 range(p) 2 loop
11:30:02
finish mi0 range(p) 2 loop
11:30:02
start mi0 range(NT) loop
11:30:02
finish mi0 range(NT) loop
11:30:02
start mi0 range(n) loop
11:30:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:30:02
start mi0 range(n) 2loop
11:30:02
finish mi0 range(n) 2loop
11:30:02
start mi1
11:30:02
start mi1 range(p) 1 loop
11:30:02
finish mi1 range(p) 1 loop
11:30:02
start mi1 range(p) 2 loop
11:30:02
finish mi1 range(p) 2 loop
11:30:02
start mi1 range(NT) loop
11:30:02
finish mi1 range(NT) loop
11:30:02
start mi1 range(n) loop
11:30:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:30:02
start mi1 range(n) 2loop
11:30:02
finish mi1 range(n) 2loop
11:30:02
start mi2
11:30:02
start mi2 range(p) 1 loop
11:30:02
finish mi2 range(p) 1 loop
11:30:02
start mi2 range(p) 2 loop
11:30:02
finish mi2 range(p) 2 loop
11:30:02
start mi2 range(NT) loop
11:30:02
finish mi2 range(NT) loop
11:30:02
start mi2 range(n) loop
11:30:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:30:02
start mi2 range(n) 2loop
11:30:02
finish mi2 range(n) 2loop
11:30:03
[[-2.85152507]]
end mi2 loop
11:30:03
estep
11:30:03
end estep
11:30:19
end pa11:30:19
goodness of fit correlation [0.2502049]
start cluster 11:30:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42843 instead
  warnings.warn(
24
parallel submitted
11:30:40
parallel finished
11:33:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:33:26
start mi0
11:33:26
start mi0 range(p) 1 loop
11:33:26
finish mi0 range(p) 1 loop
11:33:26
start mi0 range(p) 2 loop
11:33:26
finish mi0 range(p) 2 loop
11:33:26
start mi0 range(NT) loop
11:33:26
finish mi0 range(NT) loop
11:33:26
start mi0 range(n) loop
11:33:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:33:26
start mi0 range(n) 2loop
11:33:26
finish mi0 range(n) 2loop
11:33:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:33:26
start mi1 range(p) 1 loop
11:33:26
finish mi1 range(p) 1 loop
11:33:26
start mi1 range(p) 2 loop
11:33:26
finish mi1 range(p) 2 loop
11:33:26
start mi1 range(NT) loop
11:33:27
finish mi1 range(NT) loop
11:33:27
start mi1 range(n) loop
11:33:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:33:27
start mi1 range(n) 2loop
11:33:27
finish mi1 range(n) 2loop
11:33:27
start mi2
11:33:27
start mi2 range(p) 1 loop
11:33:27
finish mi2 range(p) 1 loop
11:33:27
start mi2 range(p) 2 loop
11:33:27
finish mi2 range(p) 2 loop
11:33:27
start mi2 range(NT) loop
11:33:27
finish mi2 range(NT) loop
11:33:27
start mi2 range(n) loop
11:33:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:33:27
start mi2 range(n) 2loop
11:33:27
finish mi2 range(n) 2loop
11:33:27
[[-2.83245745]]
end mi2 loop
11:33:27
estep
11:33:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:33:43
start ppi1
11:33:43
start mi0
11:33:43
start mi0 range(p) 1 loop
11:33:43
finish mi0 range(p) 1 loop
11:33:43
start mi0 range(p) 2 loop
11:33:43
finish mi0 range(p) 2 loop
11:33:43
start mi0 range(NT) loop
11:33:43
finish mi0 range(NT) loop
11:33:43
start mi0 range(n) loop
11:33:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:33:43
start mi0 range(n) 2loop
11:33:43
finish mi0 range(n) 2loop
11:33:43
start mi1
11:33:43
start mi1 range(p) 1 loop
11:33:43
finish mi1 range(p) 1 loop
11:33:43
start mi1 range(p) 2 loop
11:33:43
finish mi1 range(p) 2 loop
11:33:43
start mi1 range(NT) loop
11:33:43
finish mi1 range(NT) loop
11:33:43
start mi1 range(n) loop
11:33:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:33:43
start mi1 range(n) 2loop
11:33:43
finish mi1 range(n) 2loop
11:33:44
[[-2.89493319]]
end mi1 loop
11:33:44
estep
11:33:44
end estep
11:34:00
end pa11:34:00
goodness of fit correlation [0.26359013]
start cluster 11:34:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44435 instead
  warnings.warn(
25
parallel submitted
11:34:21
parallel finished
11:37:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:37:40
start mi0
11:37:40
start mi0 range(p) 1 loop
11:37:40
finish mi0 range(p) 1 loop
11:37:40
start mi0 range(p) 2 loop
11:37:40
finish mi0 range(p) 2 loop
11:37:40
start mi0 range(NT) loop
11:37:40
finish mi0 range(NT) loop
11:37:40
start mi0 range(n) loop
11:37:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:37:40
start mi0 range(n) 2loop
11:37:40
finish mi0 range(n) 2loop
11:37:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:37:40
start mi1 range(p) 1 loop
11:37:40
finish mi1 range(p) 1 loop
11:37:40
start mi1 range(p) 2 loop
11:37:40
finish mi1 range(p) 2 loop
11:37:40
start mi1 range(NT) loop
11:37:40
finish mi1 range(NT) loop
11:37:40
start mi1 range(n) loop
11:37:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:37:40
start mi1 range(n) 2loop
11:37:40
finish mi1 range(n) 2loop
11:37:41
start mi2
11:37:41
start mi2 range(p) 1 loop
11:37:41
finish mi2 range(p) 1 loop
11:37:41
start mi2 range(p) 2 loop
11:37:41
finish mi2 range(p) 2 loop
11:37:41
start mi2 range(NT) loop
11:37:41
finish mi2 range(NT) loop
11:37:41
start mi2 range(n) loop
11:37:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:37:41
start mi2 range(n) 2loop
11:37:41
finish mi2 range(n) 2loop
11:37:41
[[-2.76728029]]
end mi2 loop
11:37:41
estep
11:37:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:37:57
start ppi1
11:37:57
start mi0
11:37:57
start mi0 range(p) 1 loop
11:37:57
finish mi0 range(p) 1 loop
11:37:57
start mi0 range(p) 2 loop
11:37:57
finish mi0 range(p) 2 loop
11:37:57
start mi0 range(NT) loop
11:37:57
finish mi0 range(NT) loop
11:37:57
start mi0 range(n) loop
11:37:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:37:57
start mi0 range(n) 2loop
11:37:57
finish mi0 range(n) 2loop
11:37:57
start mi1
11:37:57
start mi1 range(p) 1 loop
11:37:57
finish mi1 range(p) 1 loop
11:37:57
start mi1 range(p) 2 loop
11:37:57
finish mi1 range(p) 2 loop
11:37:57
start mi1 range(NT) loop
11:37:57
finish mi1 range(NT) loop
11:37:57
start mi1 range(n) loop
11:37:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:37:57
start mi1 range(n) 2loop
11:37:57
finish mi1 range(n) 2loop
11:37:57
start mi2
11:37:57
start mi2 range(p) 1 loop
11:37:57
finish mi2 range(p) 1 loop
11:37:57
start mi2 range(p) 2 loop
11:37:57
finish mi2 range(p) 2 loop
11:37:57
start mi2 range(NT) loop
11:37:57
finish mi2 range(NT) loop
11:37:57
start mi2 range(n) loop
11:37:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:37:57
start mi2 range(n) 2loop
11:37:57
finish mi2 range(n) 2loop
11:37:57
[[-2.82977241]]
end mi2 loop
11:37:57
estep
11:37:57
end estep
11:38:14
end pa11:38:14
goodness of fit correlation [0.2767146]
start cluster 11:38:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41737 instead
  warnings.warn(
26
parallel submitted
11:38:35
parallel finished
11:42:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:42:13
start mi0
11:42:13
start mi0 range(p) 1 loop
11:42:13
finish mi0 range(p) 1 loop
11:42:13
start mi0 range(p) 2 loop
11:42:13
finish mi0 range(p) 2 loop
11:42:13
start mi0 range(NT) loop
11:42:13
finish mi0 range(NT) loop
11:42:13
start mi0 range(n) loop
11:42:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:42:13
start mi0 range(n) 2loop
11:42:13
finish mi0 range(n) 2loop
11:42:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:42:13
start mi1 range(p) 1 loop
11:42:13
finish mi1 range(p) 1 loop
11:42:13
start mi1 range(p) 2 loop
11:42:13
finish mi1 range(p) 2 loop
11:42:13
start mi1 range(NT) loop
11:42:13
finish mi1 range(NT) loop
11:42:13
start mi1 range(n) loop
11:42:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:42:13
start mi1 range(n) 2loop
11:42:13
finish mi1 range(n) 2loop
11:42:13
start mi2
11:42:13
start mi2 range(p) 1 loop
11:42:13
finish mi2 range(p) 1 loop
11:42:13
start mi2 range(p) 2 loop
11:42:13
finish mi2 range(p) 2 loop
11:42:13
start mi2 range(NT) loop
11:42:13
finish mi2 range(NT) loop
11:42:13
start mi2 range(n) loop
11:42:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:42:14
start mi2 range(n) 2loop
11:42:14
finish mi2 range(n) 2loop
11:42:14
[[-2.84532595]]
end mi2 loop
11:42:14
estep
11:42:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:42:30
start ppi1
11:42:30
start mi0
11:42:30
start mi0 range(p) 1 loop
11:42:30
finish mi0 range(p) 1 loop
11:42:30
start mi0 range(p) 2 loop
11:42:30
finish mi0 range(p) 2 loop
11:42:30
start mi0 range(NT) loop
11:42:30
finish mi0 range(NT) loop
11:42:30
start mi0 range(n) loop
11:42:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:42:30
start mi0 range(n) 2loop
11:42:30
finish mi0 range(n) 2loop
11:42:30
start mi1
11:42:30
start mi1 range(p) 1 loop
11:42:30
finish mi1 range(p) 1 loop
11:42:30
start mi1 range(p) 2 loop
11:42:30
finish mi1 range(p) 2 loop
11:42:30
start mi1 range(NT) loop
11:42:30
finish mi1 range(NT) loop
11:42:30
start mi1 range(n) loop
11:42:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:42:30
start mi1 range(n) 2loop
11:42:30
finish mi1 range(n) 2loop
11:42:30
[[-2.9078084]]
end mi1 loop
11:42:30
estep
11:42:30
end estep
11:42:46
end pa11:42:46
goodness of fit correlation [0.27604534]
start cluster 11:42:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41288 instead
  warnings.warn(
27
parallel submitted
11:43:06
parallel finished
11:47:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:47:27
start mi0
11:47:27
start mi0 range(p) 1 loop
11:47:27
finish mi0 range(p) 1 loop
11:47:27
start mi0 range(p) 2 loop
11:47:27
finish mi0 range(p) 2 loop
11:47:27
start mi0 range(NT) loop
11:47:27
finish mi0 range(NT) loop
11:47:27
start mi0 range(n) loop
11:47:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:47:27
start mi0 range(n) 2loop
11:47:27
finish mi0 range(n) 2loop
11:47:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:47:27
start mi1 range(p) 1 loop
11:47:27
finish mi1 range(p) 1 loop
11:47:27
start mi1 range(p) 2 loop
11:47:27
finish mi1 range(p) 2 loop
11:47:27
start mi1 range(NT) loop
11:47:27
finish mi1 range(NT) loop
11:47:27
start mi1 range(n) loop
11:47:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:47:27
start mi1 range(n) 2loop
11:47:27
finish mi1 range(n) 2loop
11:47:28
start mi2
11:47:28
start mi2 range(p) 1 loop
11:47:28
finish mi2 range(p) 1 loop
11:47:28
start mi2 range(p) 2 loop
11:47:28
finish mi2 range(p) 2 loop
11:47:28
start mi2 range(NT) loop
11:47:28
finish mi2 range(NT) loop
11:47:28
start mi2 range(n) loop
11:47:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:47:28
start mi2 range(n) 2loop
11:47:28
finish mi2 range(n) 2loop
11:47:28
[[-2.7884297]]
end mi2 loop
11:47:28
estep
11:47:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:47:45
start ppi1
11:47:45
start mi0
11:47:45
start mi0 range(p) 1 loop
11:47:45
finish mi0 range(p) 1 loop
11:47:45
start mi0 range(p) 2 loop
11:47:45
finish mi0 range(p) 2 loop
11:47:45
start mi0 range(NT) loop
11:47:45
finish mi0 range(NT) loop
11:47:45
start mi0 range(n) loop
11:47:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:47:45
start mi0 range(n) 2loop
11:47:45
finish mi0 range(n) 2loop
11:47:45
start mi1
11:47:45
start mi1 range(p) 1 loop
11:47:45
finish mi1 range(p) 1 loop
11:47:45
start mi1 range(p) 2 loop
11:47:45
finish mi1 range(p) 2 loop
11:47:45
start mi1 range(NT) loop
11:47:45
finish mi1 range(NT) loop
11:47:45
start mi1 range(n) loop
11:47:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:47:45
start mi1 range(n) 2loop
11:47:45
finish mi1 range(n) 2loop
11:47:45
start mi2
11:47:45
start mi2 range(p) 1 loop
11:47:45
finish mi2 range(p) 1 loop
11:47:45
start mi2 range(p) 2 loop
11:47:45
finish mi2 range(p) 2 loop
11:47:45
start mi2 range(NT) loop
11:47:46
finish mi2 range(NT) loop
11:47:46
start mi2 range(n) loop
11:47:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:47:46
start mi2 range(n) 2loop
11:47:46
finish mi2 range(n) 2loop
11:47:46
[[-2.85092178]]
end mi2 loop
11:47:46
estep
11:47:46
end estep
11:48:03
end pa11:48:03
goodness of fit correlation [0.27189631]
start cluster 11:48:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42678 instead
  warnings.warn(
28
parallel submitted
11:48:24
parallel finished
11:51:05
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:51:15
start mi0
11:51:15
start mi0 range(p) 1 loop
11:51:15
finish mi0 range(p) 1 loop
11:51:15
start mi0 range(p) 2 loop
11:51:15
finish mi0 range(p) 2 loop
11:51:15
start mi0 range(NT) loop
11:51:15
finish mi0 range(NT) loop
11:51:15
start mi0 range(n) loop
11:51:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:51:15
start mi0 range(n) 2loop
11:51:15
finish mi0 range(n) 2loop
11:51:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:51:15
start mi1 range(p) 1 loop
11:51:15
finish mi1 range(p) 1 loop
11:51:15
start mi1 range(p) 2 loop
11:51:15
finish mi1 range(p) 2 loop
11:51:15
start mi1 range(NT) loop
11:51:15
finish mi1 range(NT) loop
11:51:15
start mi1 range(n) loop
11:51:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:51:15
start mi1 range(n) 2loop
11:51:15
finish mi1 range(n) 2loop
11:51:15
start mi2
11:51:15
start mi2 range(p) 1 loop
11:51:15
finish mi2 range(p) 1 loop
11:51:15
start mi2 range(p) 2 loop
11:51:15
finish mi2 range(p) 2 loop
11:51:15
start mi2 range(NT) loop
11:51:15
finish mi2 range(NT) loop
11:51:15
start mi2 range(n) loop
11:51:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:51:16
start mi2 range(n) 2loop
11:51:16
finish mi2 range(n) 2loop
11:51:16
[[-2.82611113]]
end mi2 loop
11:51:16
estep
11:51:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:51:31
start ppi1
11:51:31
start mi0
11:51:31
start mi0 range(p) 1 loop
11:51:31
finish mi0 range(p) 1 loop
11:51:31
start mi0 range(p) 2 loop
11:51:31
finish mi0 range(p) 2 loop
11:51:31
start mi0 range(NT) loop
11:51:31
finish mi0 range(NT) loop
11:51:31
start mi0 range(n) loop
11:51:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:51:32
start mi0 range(n) 2loop
11:51:32
finish mi0 range(n) 2loop
11:51:32
start mi1
11:51:32
start mi1 range(p) 1 loop
11:51:32
finish mi1 range(p) 1 loop
11:51:32
start mi1 range(p) 2 loop
11:51:32
finish mi1 range(p) 2 loop
11:51:32
start mi1 range(NT) loop
11:51:32
finish mi1 range(NT) loop
11:51:32
start mi1 range(n) loop
11:51:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:51:32
start mi1 range(n) 2loop
11:51:32
finish mi1 range(n) 2loop
11:51:32
[[-2.88858247]]
end mi1 loop
11:51:32
estep
11:51:32
end estep
11:51:48
end pa11:51:48
goodness of fit correlation [0.24684117]
start cluster 11:51:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40968 instead
  warnings.warn(
29
parallel submitted
11:52:10
parallel finished
11:55:29
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:55:39
start mi0
11:55:39
start mi0 range(p) 1 loop
11:55:39
finish mi0 range(p) 1 loop
11:55:39
start mi0 range(p) 2 loop
11:55:39
finish mi0 range(p) 2 loop
11:55:39
start mi0 range(NT) loop
11:55:39
finish mi0 range(NT) loop
11:55:39
start mi0 range(n) loop
11:55:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:55:39
start mi0 range(n) 2loop
11:55:39
finish mi0 range(n) 2loop
11:55:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:55:39
start mi1 range(p) 1 loop
11:55:39
finish mi1 range(p) 1 loop
11:55:39
start mi1 range(p) 2 loop
11:55:39
finish mi1 range(p) 2 loop
11:55:39
start mi1 range(NT) loop
11:55:39
finish mi1 range(NT) loop
11:55:39
start mi1 range(n) loop
11:55:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:55:39
start mi1 range(n) 2loop
11:55:39
finish mi1 range(n) 2loop
11:55:39
start mi2
11:55:39
start mi2 range(p) 1 loop
11:55:39
finish mi2 range(p) 1 loop
11:55:39
start mi2 range(p) 2 loop
11:55:39
finish mi2 range(p) 2 loop
11:55:39
start mi2 range(NT) loop
11:55:39
finish mi2 range(NT) loop
11:55:39
start mi2 range(n) loop
11:55:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:55:39
start mi2 range(n) 2loop
11:55:39
finish mi2 range(n) 2loop
11:55:40
[[-2.74604656]]
end mi2 loop
11:55:40
estep
11:55:40
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:55:56
start ppi1
11:55:56
start mi0
11:55:56
start mi0 range(p) 1 loop
11:55:56
finish mi0 range(p) 1 loop
11:55:56
start mi0 range(p) 2 loop
11:55:56
finish mi0 range(p) 2 loop
11:55:56
start mi0 range(NT) loop
11:55:56
finish mi0 range(NT) loop
11:55:56
start mi0 range(n) loop
11:55:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:55:56
start mi0 range(n) 2loop
11:55:56
finish mi0 range(n) 2loop
11:55:56
start mi1
11:55:56
start mi1 range(p) 1 loop
11:55:56
finish mi1 range(p) 1 loop
11:55:56
start mi1 range(p) 2 loop
11:55:56
finish mi1 range(p) 2 loop
11:55:56
start mi1 range(NT) loop
11:55:56
finish mi1 range(NT) loop
11:55:57
start mi1 range(n) loop
11:55:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:55:57
start mi1 range(n) 2loop
11:55:57
finish mi1 range(n) 2loop
11:55:57
start mi2
11:55:57
start mi2 range(p) 1 loop
11:55:57
finish mi2 range(p) 1 loop
11:55:57
start mi2 range(p) 2 loop
11:55:57
finish mi2 range(p) 2 loop
11:55:57
start mi2 range(NT) loop
11:55:57
finish mi2 range(NT) loop
11:55:57
start mi2 range(n) loop
11:55:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:55:57
start mi2 range(n) 2loop
11:55:57
finish mi2 range(n) 2loop
11:55:57
[[-2.80853876]]
end mi2 loop
11:55:57
estep
11:55:57
end estep
11:56:14
end pa11:56:14
goodness of fit correlation [0.17186729]
start cluster 11:56:14
30
parallel submitted
11:56:38
parallel finished
11:59:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:59:52
start mi0
11:59:52
start mi0 range(p) 1 loop
11:59:52
finish mi0 range(p) 1 loop
11:59:52
start mi0 range(p) 2 loop
11:59:52
finish mi0 range(p) 2 loop
11:59:52
start mi0 range(NT) loop
11:59:52
finish mi0 range(NT) loop
11:59:52
start mi0 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:59:52
start mi0 range(n) 2loop
11:59:52
finish mi0 range(n) 2loop
11:59:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:59:52
start mi1 range(p) 1 loop
11:59:52
finish mi1 range(p) 1 loop
11:59:52
start mi1 range(p) 2 loop
11:59:52
finish mi1 range(p) 2 loop
11:59:52
start mi1 range(NT) loop
11:59:52
finish mi1 range(NT) loop
11:59:52
start mi1 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:59:52
start mi1 range(n) 2loop
11:59:52
finish mi1 range(n) 2loop
11:59:52
start mi2
11:59:52
start mi2 range(p) 1 loop
11:59:52
finish mi2 range(p) 1 loop
11:59:52
start mi2 range(p) 2 loop
11:59:52
finish mi2 range(p) 2 loop
11:59:52
start mi2 range(NT) loop
11:59:52
finish mi2 range(NT) loop
11:59:52
start mi2 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:59:52
start mi2 range(n) 2loop
11:59:52
finish mi2 range(n) 2loop
11:59:53
[[-2.69326715]]
end mi2 loop
11:59:53
estep
11:59:53
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:00:08
start ppi1
12:00:08
start mi0
12:00:08
start mi0 range(p) 1 loop
12:00:08
finish mi0 range(p) 1 loop
12:00:08
start mi0 range(p) 2 loop
12:00:08
finish mi0 range(p) 2 loop
12:00:08
start mi0 range(NT) loop
12:00:09
finish mi0 range(NT) loop
12:00:09
start mi0 range(n) loop
12:00:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:00:09
start mi0 range(n) 2loop
12:00:09
finish mi0 range(n) 2loop
12:00:09
start mi1
12:00:09
start mi1 range(p) 1 loop
12:00:09
finish mi1 range(p) 1 loop
12:00:09
start mi1 range(p) 2 loop
12:00:09
finish mi1 range(p) 2 loop
12:00:09
start mi1 range(NT) loop
12:00:09
finish mi1 range(NT) loop
12:00:09
start mi1 range(n) loop
12:00:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:00:09
start mi1 range(n) 2loop
12:00:09
finish mi1 range(n) 2loop
12:00:09
start mi2
12:00:09
start mi2 range(p) 1 loop
12:00:09
finish mi2 range(p) 1 loop
12:00:09
start mi2 range(p) 2 loop
12:00:09
finish mi2 range(p) 2 loop
12:00:09
start mi2 range(NT) loop
12:00:09
finish mi2 range(NT) loop
12:00:09
start mi2 range(n) loop
12:00:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:00:09
start mi2 range(n) 2loop
12:00:09
finish mi2 range(n) 2loop
12:00:09
[[-2.75575995]]
end mi2 loop
12:00:09
estep
12:00:09
end estep
12:00:26
end pa12:00:26
goodness of fit correlation [0.16779968]
start cluster 12:00:26
31
parallel submitted
12:00:50
parallel finished
12:04:08
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:04:22
start mi0
12:04:22
start mi0 range(p) 1 loop
12:04:22
finish mi0 range(p) 1 loop
12:04:22
start mi0 range(p) 2 loop
12:04:22
finish mi0 range(p) 2 loop
12:04:22
start mi0 range(NT) loop
12:04:22
finish mi0 range(NT) loop
12:04:22
start mi0 range(n) loop
12:04:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:04:22
start mi0 range(n) 2loop
12:04:22
finish mi0 range(n) 2loop
12:04:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:04:22
start mi1 range(p) 1 loop
12:04:23
finish mi1 range(p) 1 loop
12:04:23
start mi1 range(p) 2 loop
12:04:23
finish mi1 range(p) 2 loop
12:04:23
start mi1 range(NT) loop
12:04:23
finish mi1 range(NT) loop
12:04:23
start mi1 range(n) loop
12:04:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:04:23
start mi1 range(n) 2loop
12:04:23
finish mi1 range(n) 2loop
12:04:23
start mi2
12:04:23
start mi2 range(p) 1 loop
12:04:23
finish mi2 range(p) 1 loop
12:04:23
start mi2 range(p) 2 loop
12:04:23
finish mi2 range(p) 2 loop
12:04:23
start mi2 range(NT) loop
12:04:23
finish mi2 range(NT) loop
12:04:23
start mi2 range(n) loop
12:04:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:04:23
start mi2 range(n) 2loop
12:04:23
finish mi2 range(n) 2loop
12:04:23
[[-2.70076673]]
end mi2 loop
12:04:23
estep
12:04:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:04:39
start ppi1
12:04:39
start mi0
12:04:39
start mi0 range(p) 1 loop
12:04:39
finish mi0 range(p) 1 loop
12:04:39
start mi0 range(p) 2 loop
12:04:39
finish mi0 range(p) 2 loop
12:04:39
start mi0 range(NT) loop
12:04:39
finish mi0 range(NT) loop
12:04:39
start mi0 range(n) loop
12:04:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:04:39
start mi0 range(n) 2loop
12:04:39
finish mi0 range(n) 2loop
12:04:39
start mi1
12:04:39
start mi1 range(p) 1 loop
12:04:39
finish mi1 range(p) 1 loop
12:04:39
start mi1 range(p) 2 loop
12:04:39
finish mi1 range(p) 2 loop
12:04:39
start mi1 range(NT) loop
12:04:39
finish mi1 range(NT) loop
12:04:39
start mi1 range(n) loop
12:04:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:04:39
start mi1 range(n) 2loop
12:04:39
finish mi1 range(n) 2loop
12:04:39
start mi2
12:04:39
start mi2 range(p) 1 loop
12:04:39
finish mi2 range(p) 1 loop
12:04:39
start mi2 range(p) 2 loop
12:04:39
finish mi2 range(p) 2 loop
12:04:39
start mi2 range(NT) loop
12:04:39
finish mi2 range(NT) loop
12:04:39
start mi2 range(n) loop
12:04:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:04:39
start mi2 range(n) 2loop
12:04:39
finish mi2 range(n) 2loop
12:04:39
[[-2.76325939]]
end mi2 loop
12:04:39
estep
12:04:39
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
end estep
12:04:55
end pa12:04:55
goodness of fit correlation [0.31713962]
start cluster 12:04:55
32
parallel submitted
12:05:18
parallel finished
12:08:21
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:08:31
start mi0
12:08:31
start mi0 range(p) 1 loop
12:08:31
finish mi0 range(p) 1 loop
12:08:31
start mi0 range(p) 2 loop
12:08:31
finish mi0 range(p) 2 loop
12:08:31
start mi0 range(NT) loop
12:08:31
finish mi0 range(NT) loop
12:08:31
start mi0 range(n) loop
12:08:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:08:32
start mi0 range(n) 2loop
12:08:32
finish mi0 range(n) 2loop
12:08:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:08:32
start mi1 range(p) 1 loop
12:08:32
finish mi1 range(p) 1 loop
12:08:32
start mi1 range(p) 2 loop
12:08:32
finish mi1 range(p) 2 loop
12:08:32
start mi1 range(NT) loop
12:08:32
finish mi1 range(NT) loop
12:08:32
start mi1 range(n) loop
12:08:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:08:32
start mi1 range(n) 2loop
12:08:32
finish mi1 range(n) 2loop
12:08:32
start mi2
12:08:32
start mi2 range(p) 1 loop
12:08:32
finish mi2 range(p) 1 loop
12:08:32
start mi2 range(p) 2 loop
12:08:32
finish mi2 range(p) 2 loop
12:08:32
start mi2 range(NT) loop
12:08:32
finish mi2 range(NT) loop
12:08:32
start mi2 range(n) loop
12:08:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:08:32
start mi2 range(n) 2loop
12:08:32
finish mi2 range(n) 2loop
12:08:32
[[-2.82627933]]
end mi2 loop
12:08:32
estep
12:08:32
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:08:49
start ppi1
12:08:49
start mi0
12:08:49
start mi0 range(p) 1 loop
12:08:49
finish mi0 range(p) 1 loop
12:08:49
start mi0 range(p) 2 loop
12:08:49
finish mi0 range(p) 2 loop
12:08:49
start mi0 range(NT) loop
12:08:49
finish mi0 range(NT) loop
12:08:49
start mi0 range(n) loop
12:08:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:08:49
start mi0 range(n) 2loop
12:08:49
finish mi0 range(n) 2loop
12:08:49
start mi1
12:08:49
start mi1 range(p) 1 loop
12:08:49
finish mi1 range(p) 1 loop
12:08:49
start mi1 range(p) 2 loop
12:08:49
finish mi1 range(p) 2 loop
12:08:49
start mi1 range(NT) loop
12:08:49
finish mi1 range(NT) loop
12:08:49
start mi1 range(n) loop
12:08:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:08:49
start mi1 range(n) 2loop
12:08:49
finish mi1 range(n) 2loop
12:08:49
[[-2.88875079]]
end mi1 loop
12:08:49
estep
12:08:49
end estep
12:09:05
end pa12:09:05
goodness of fit correlation [0.23632242]
start cluster 12:09:05
33
parallel submitted
12:09:26
parallel finished
12:11:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:11:36
start mi0
12:11:36
start mi0 range(p) 1 loop
12:11:36
finish mi0 range(p) 1 loop
12:11:36
start mi0 range(p) 2 loop
12:11:36
finish mi0 range(p) 2 loop
12:11:36
start mi0 range(NT) loop
12:11:36
finish mi0 range(NT) loop
12:11:36
start mi0 range(n) loop
12:11:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:11:36
start mi0 range(n) 2loop
12:11:36
finish mi0 range(n) 2loop
12:11:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:11:36
start mi1 range(p) 1 loop
12:11:36
finish mi1 range(p) 1 loop
12:11:36
start mi1 range(p) 2 loop
12:11:36
finish mi1 range(p) 2 loop
12:11:36
start mi1 range(NT) loop
12:11:36
finish mi1 range(NT) loop
12:11:36
start mi1 range(n) loop
12:11:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:11:36
start mi1 range(n) 2loop
12:11:36
finish mi1 range(n) 2loop
12:11:36
start mi2
12:11:36
start mi2 range(p) 1 loop
12:11:36
finish mi2 range(p) 1 loop
12:11:36
start mi2 range(p) 2 loop
12:11:36
finish mi2 range(p) 2 loop
12:11:36
start mi2 range(NT) loop
12:11:36
finish mi2 range(NT) loop
12:11:36
start mi2 range(n) loop
12:11:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:11:36
start mi2 range(n) 2loop
12:11:36
finish mi2 range(n) 2loop
12:11:36
[[-2.78052552]]
end mi2 loop
12:11:36
estep
12:11:36
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:11:54
start ppi1
12:11:54
start mi0
12:11:54
start mi0 range(p) 1 loop
12:11:54
finish mi0 range(p) 1 loop
12:11:54
start mi0 range(p) 2 loop
12:11:54
finish mi0 range(p) 2 loop
12:11:54
start mi0 range(NT) loop
12:11:54
finish mi0 range(NT) loop
12:11:54
start mi0 range(n) loop
12:11:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:11:54
start mi0 range(n) 2loop
12:11:54
finish mi0 range(n) 2loop
12:11:54
start mi1
12:11:54
start mi1 range(p) 1 loop
12:11:54
finish mi1 range(p) 1 loop
12:11:54
start mi1 range(p) 2 loop
12:11:54
finish mi1 range(p) 2 loop
12:11:54
start mi1 range(NT) loop
12:11:54
finish mi1 range(NT) loop
12:11:54
start mi1 range(n) loop
12:11:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:11:54
start mi1 range(n) 2loop
12:11:54
finish mi1 range(n) 2loop
12:11:54
start mi2
12:11:54
start mi2 range(p) 1 loop
12:11:54
finish mi2 range(p) 1 loop
12:11:54
start mi2 range(p) 2 loop
12:11:54
finish mi2 range(p) 2 loop
12:11:54
start mi2 range(NT) loop
12:11:54
finish mi2 range(NT) loop
12:11:54
start mi2 range(n) loop
12:11:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:11:54
start mi2 range(n) 2loop
12:11:54
finish mi2 range(n) 2loop
12:11:55
[[-2.84301761]]
end mi2 loop
12:11:55
estep
12:11:55
end estep
12:12:12
end pa12:12:12
goodness of fit correlation [0.23176752]
start cluster 12:12:12
34
parallel submitted
12:12:35
parallel finished
12:16:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:16:55
start mi0
12:16:55
start mi0 range(p) 1 loop
12:16:55
finish mi0 range(p) 1 loop
12:16:55
start mi0 range(p) 2 loop
12:16:55
finish mi0 range(p) 2 loop
12:16:55
start mi0 range(NT) loop
12:16:55
finish mi0 range(NT) loop
12:16:55
start mi0 range(n) loop
12:16:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:16:55
start mi0 range(n) 2loop
12:16:55
finish mi0 range(n) 2loop
12:16:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:16:55
start mi1 range(p) 1 loop
12:16:55
finish mi1 range(p) 1 loop
12:16:55
start mi1 range(p) 2 loop
12:16:55
finish mi1 range(p) 2 loop
12:16:55
start mi1 range(NT) loop
12:16:55
finish mi1 range(NT) loop
12:16:55
start mi1 range(n) loop
12:16:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:16:55
start mi1 range(n) 2loop
12:16:55
finish mi1 range(n) 2loop
12:16:55
start mi2
12:16:55
start mi2 range(p) 1 loop
12:16:55
finish mi2 range(p) 1 loop
12:16:55
start mi2 range(p) 2 loop
12:16:55
finish mi2 range(p) 2 loop
12:16:55
start mi2 range(NT) loop
12:16:55
finish mi2 range(NT) loop
12:16:55
start mi2 range(n) loop
12:16:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:16:55
start mi2 range(n) 2loop
12:16:55
finish mi2 range(n) 2loop
12:16:56
[[-2.76862386]]
end mi2 loop
12:16:56
estep
12:16:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:17:12
start ppi1
12:17:12
start mi0
12:17:12
start mi0 range(p) 1 loop
12:17:12
finish mi0 range(p) 1 loop
12:17:12
start mi0 range(p) 2 loop
12:17:12
finish mi0 range(p) 2 loop
12:17:12
start mi0 range(NT) loop
12:17:12
finish mi0 range(NT) loop
12:17:12
start mi0 range(n) loop
12:17:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:17:12
start mi0 range(n) 2loop
12:17:12
finish mi0 range(n) 2loop
12:17:12
start mi1
12:17:12
start mi1 range(p) 1 loop
12:17:12
finish mi1 range(p) 1 loop
12:17:12
start mi1 range(p) 2 loop
12:17:12
finish mi1 range(p) 2 loop
12:17:12
start mi1 range(NT) loop
12:17:12
finish mi1 range(NT) loop
12:17:12
start mi1 range(n) loop
12:17:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:17:12
start mi1 range(n) 2loop
12:17:12
finish mi1 range(n) 2loop
12:17:12
start mi2
12:17:12
start mi2 range(p) 1 loop
12:17:12
finish mi2 range(p) 1 loop
12:17:12
start mi2 range(p) 2 loop
12:17:12
finish mi2 range(p) 2 loop
12:17:12
start mi2 range(NT) loop
12:17:12
finish mi2 range(NT) loop
12:17:12
start mi2 range(n) loop
12:17:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:17:13
start mi2 range(n) 2loop
12:17:13
finish mi2 range(n) 2loop
12:17:13
[[-2.83111598]]
end mi2 loop
12:17:13
estep
12:17:13
end estep
12:17:29
end pa12:17:29
goodness of fit correlation [0.18362233]
start cluster 12:17:29
35
parallel submitted
12:17:50
parallel finished
12:22:22
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:22:35
start mi0
12:22:35
start mi0 range(p) 1 loop
12:22:35
finish mi0 range(p) 1 loop
12:22:35
start mi0 range(p) 2 loop
12:22:35
finish mi0 range(p) 2 loop
12:22:35
start mi0 range(NT) loop
12:22:35
finish mi0 range(NT) loop
12:22:35
start mi0 range(n) loop
12:22:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:22:35
start mi0 range(n) 2loop
12:22:35
finish mi0 range(n) 2loop
12:22:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:22:35
start mi1 range(p) 1 loop
12:22:35
finish mi1 range(p) 1 loop
12:22:35
start mi1 range(p) 2 loop
12:22:35
finish mi1 range(p) 2 loop
12:22:35
start mi1 range(NT) loop
12:22:35
finish mi1 range(NT) loop
12:22:35
start mi1 range(n) loop
12:22:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:22:35
start mi1 range(n) 2loop
12:22:35
finish mi1 range(n) 2loop
12:22:35
start mi2
12:22:35
start mi2 range(p) 1 loop
12:22:35
finish mi2 range(p) 1 loop
12:22:35
start mi2 range(p) 2 loop
12:22:35
finish mi2 range(p) 2 loop
12:22:35
start mi2 range(NT) loop
12:22:35
finish mi2 range(NT) loop
12:22:35
start mi2 range(n) loop
12:22:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:22:35
start mi2 range(n) 2loop
12:22:35
finish mi2 range(n) 2loop
12:22:35
[[-2.70533269]]
end mi2 loop
12:22:35
estep
12:22:35
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:22:52
start ppi1
12:22:52
start mi0
12:22:52
start mi0 range(p) 1 loop
12:22:52
finish mi0 range(p) 1 loop
12:22:52
start mi0 range(p) 2 loop
12:22:52
finish mi0 range(p) 2 loop
12:22:52
start mi0 range(NT) loop
12:22:52
finish mi0 range(NT) loop
12:22:52
start mi0 range(n) loop
12:22:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:22:52
start mi0 range(n) 2loop
12:22:52
finish mi0 range(n) 2loop
12:22:52
start mi1
12:22:52
start mi1 range(p) 1 loop
12:22:52
finish mi1 range(p) 1 loop
12:22:52
start mi1 range(p) 2 loop
12:22:52
finish mi1 range(p) 2 loop
12:22:52
start mi1 range(NT) loop
12:22:52
finish mi1 range(NT) loop
12:22:52
start mi1 range(n) loop
12:22:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:22:52
start mi1 range(n) 2loop
12:22:52
finish mi1 range(n) 2loop
12:22:52
start mi2
12:22:52
start mi2 range(p) 1 loop
12:22:52
finish mi2 range(p) 1 loop
12:22:52
start mi2 range(p) 2 loop
12:22:52
finish mi2 range(p) 2 loop
12:22:52
start mi2 range(NT) loop
12:22:52
finish mi2 range(NT) loop
12:22:52
start mi2 range(n) loop
12:22:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:22:52
start mi2 range(n) 2loop
12:22:52
finish mi2 range(n) 2loop
12:22:52
[[-2.76782528]]
end mi2 loop
12:22:52
estep
12:22:52
end estep
12:23:09
end pa12:23:09
goodness of fit correlation [0.16620697]
start cluster 12:23:09
36
parallel submitted
12:23:33
parallel finished
12:26:36
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:26:48
start mi0
12:26:48
start mi0 range(p) 1 loop
12:26:48
finish mi0 range(p) 1 loop
12:26:48
start mi0 range(p) 2 loop
12:26:48
finish mi0 range(p) 2 loop
12:26:48
start mi0 range(NT) loop
12:26:48
finish mi0 range(NT) loop
12:26:48
start mi0 range(n) loop
12:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:26:48
start mi0 range(n) 2loop
12:26:48
finish mi0 range(n) 2loop
12:26:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:26:48
start mi1 range(p) 1 loop
12:26:48
finish mi1 range(p) 1 loop
12:26:48
start mi1 range(p) 2 loop
12:26:48
finish mi1 range(p) 2 loop
12:26:48
start mi1 range(NT) loop
12:26:48
finish mi1 range(NT) loop
12:26:48
start mi1 range(n) loop
12:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:26:48
start mi1 range(n) 2loop
12:26:48
finish mi1 range(n) 2loop
12:26:48
start mi2
12:26:48
start mi2 range(p) 1 loop
12:26:48
finish mi2 range(p) 1 loop
12:26:48
start mi2 range(p) 2 loop
12:26:48
finish mi2 range(p) 2 loop
12:26:48
start mi2 range(NT) loop
12:26:48
finish mi2 range(NT) loop
12:26:48
start mi2 range(n) loop
12:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:26:48
start mi2 range(n) 2loop
12:26:48
finish mi2 range(n) 2loop
12:26:48
[[-2.71537117]]
end mi2 loop
12:26:48
estep
12:26:48
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:27:05
start ppi1
12:27:05
start mi0
12:27:05
start mi0 range(p) 1 loop
12:27:05
finish mi0 range(p) 1 loop
12:27:05
start mi0 range(p) 2 loop
12:27:05
finish mi0 range(p) 2 loop
12:27:05
start mi0 range(NT) loop
12:27:05
finish mi0 range(NT) loop
12:27:05
start mi0 range(n) loop
12:27:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:27:06
start mi0 range(n) 2loop
12:27:06
finish mi0 range(n) 2loop
12:27:06
start mi1
12:27:06
start mi1 range(p) 1 loop
12:27:06
finish mi1 range(p) 1 loop
12:27:06
start mi1 range(p) 2 loop
12:27:06
finish mi1 range(p) 2 loop
12:27:06
start mi1 range(NT) loop
12:27:06
finish mi1 range(NT) loop
12:27:06
start mi1 range(n) loop
12:27:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:27:06
start mi1 range(n) 2loop
12:27:06
finish mi1 range(n) 2loop
12:27:06
start mi2
12:27:06
start mi2 range(p) 1 loop
12:27:06
finish mi2 range(p) 1 loop
12:27:06
start mi2 range(p) 2 loop
12:27:06
finish mi2 range(p) 2 loop
12:27:06
start mi2 range(NT) loop
12:27:06
finish mi2 range(NT) loop
12:27:06
start mi2 range(n) loop
12:27:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:27:06
start mi2 range(n) 2loop
12:27:06
finish mi2 range(n) 2loop
12:27:06
[[-2.77786363]]
end mi2 loop
12:27:06
estep
12:27:06
end estep
12:27:23
end pa12:27:23
goodness of fit correlation [0.27134474]
start cluster 12:27:23
37
parallel submitted
12:27:45
parallel finished
12:31:30
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:31:44
start mi0
12:31:44
start mi0 range(p) 1 loop
12:31:44
finish mi0 range(p) 1 loop
12:31:44
start mi0 range(p) 2 loop
12:31:44
finish mi0 range(p) 2 loop
12:31:44
start mi0 range(NT) loop
12:31:44
finish mi0 range(NT) loop
12:31:44
start mi0 range(n) loop
12:31:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:31:44
start mi0 range(n) 2loop
12:31:44
finish mi0 range(n) 2loop
12:31:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:31:44
start mi1 range(p) 1 loop
12:31:44
finish mi1 range(p) 1 loop
12:31:44
start mi1 range(p) 2 loop
12:31:44
finish mi1 range(p) 2 loop
12:31:44
start mi1 range(NT) loop
12:31:44
finish mi1 range(NT) loop
12:31:44
start mi1 range(n) loop
12:31:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:31:44
start mi1 range(n) 2loop
12:31:44
finish mi1 range(n) 2loop
12:31:44
start mi2
12:31:44
start mi2 range(p) 1 loop
12:31:44
finish mi2 range(p) 1 loop
12:31:44
start mi2 range(p) 2 loop
12:31:44
finish mi2 range(p) 2 loop
12:31:44
start mi2 range(NT) loop
12:31:45
finish mi2 range(NT) loop
12:31:45
start mi2 range(n) loop
12:31:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:31:45
start mi2 range(n) 2loop
12:31:45
finish mi2 range(n) 2loop
12:31:45
[[-2.80288419]]
end mi2 loop
12:31:45
estep
12:31:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:32:01
start ppi1
12:32:01
start mi0
12:32:01
start mi0 range(p) 1 loop
12:32:01
finish mi0 range(p) 1 loop
12:32:01
start mi0 range(p) 2 loop
12:32:01
finish mi0 range(p) 2 loop
12:32:01
start mi0 range(NT) loop
12:32:01
finish mi0 range(NT) loop
12:32:01
start mi0 range(n) loop
12:32:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:32:01
start mi0 range(n) 2loop
12:32:01
finish mi0 range(n) 2loop
12:32:02
start mi1
12:32:02
start mi1 range(p) 1 loop
12:32:02
finish mi1 range(p) 1 loop
12:32:02
start mi1 range(p) 2 loop
12:32:02
finish mi1 range(p) 2 loop
12:32:02
start mi1 range(NT) loop
12:32:02
finish mi1 range(NT) loop
12:32:02
start mi1 range(n) loop
12:32:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:32:02
start mi1 range(n) 2loop
12:32:02
finish mi1 range(n) 2loop
12:32:02
[[-2.86533144]]
end mi1 loop
12:32:02
estep
12:32:02
end estep
12:32:19
end pa12:32:19
goodness of fit correlation [0.18955392]
start cluster 12:32:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35728 instead
  warnings.warn(
38
parallel submitted
12:32:43
parallel finished
12:35:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:36:12
start mi0
12:36:12
start mi0 range(p) 1 loop
12:36:12
finish mi0 range(p) 1 loop
12:36:12
start mi0 range(p) 2 loop
12:36:12
finish mi0 range(p) 2 loop
12:36:12
start mi0 range(NT) loop
12:36:12
finish mi0 range(NT) loop
12:36:12
start mi0 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:36:12
start mi0 range(n) 2loop
12:36:12
finish mi0 range(n) 2loop
12:36:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:36:12
start mi1 range(p) 1 loop
12:36:12
finish mi1 range(p) 1 loop
12:36:12
start mi1 range(p) 2 loop
12:36:12
finish mi1 range(p) 2 loop
12:36:12
start mi1 range(NT) loop
12:36:12
finish mi1 range(NT) loop
12:36:12
start mi1 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:36:12
start mi1 range(n) 2loop
12:36:12
finish mi1 range(n) 2loop
12:36:12
start mi2
12:36:12
start mi2 range(p) 1 loop
12:36:12
finish mi2 range(p) 1 loop
12:36:12
start mi2 range(p) 2 loop
12:36:12
finish mi2 range(p) 2 loop
12:36:12
start mi2 range(NT) loop
12:36:12
finish mi2 range(NT) loop
12:36:12
start mi2 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:36:12
start mi2 range(n) 2loop
12:36:12
finish mi2 range(n) 2loop
12:36:12
[[-2.72154674]]
end mi2 loop
12:36:12
estep
12:36:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:36:28
start ppi1
12:36:28
start mi0
12:36:28
start mi0 range(p) 1 loop
12:36:28
finish mi0 range(p) 1 loop
12:36:28
start mi0 range(p) 2 loop
12:36:28
finish mi0 range(p) 2 loop
12:36:28
start mi0 range(NT) loop
12:36:28
finish mi0 range(NT) loop
12:36:28
start mi0 range(n) loop
12:36:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:36:29
start mi0 range(n) 2loop
12:36:29
finish mi0 range(n) 2loop
12:36:29
start mi1
12:36:29
start mi1 range(p) 1 loop
12:36:29
finish mi1 range(p) 1 loop
12:36:29
start mi1 range(p) 2 loop
12:36:29
finish mi1 range(p) 2 loop
12:36:29
start mi1 range(NT) loop
12:36:29
finish mi1 range(NT) loop
12:36:29
start mi1 range(n) loop
12:36:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:36:29
start mi1 range(n) 2loop
12:36:29
finish mi1 range(n) 2loop
12:36:29
start mi2
12:36:29
start mi2 range(p) 1 loop
12:36:29
finish mi2 range(p) 1 loop
12:36:29
start mi2 range(p) 2 loop
12:36:29
finish mi2 range(p) 2 loop
12:36:29
start mi2 range(NT) loop
12:36:29
finish mi2 range(NT) loop
12:36:29
start mi2 range(n) loop
12:36:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:36:29
start mi2 range(n) 2loop
12:36:29
finish mi2 range(n) 2loop
12:36:29
[[-2.78403913]]
end mi2 loop
12:36:29
estep
12:36:29
end estep
12:36:46
end pa12:36:46
goodness of fit correlation [0.17394437]
start cluster 12:36:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34946 instead
  warnings.warn(
39
parallel submitted
12:37:10
parallel finished
12:40:25
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:40:39
start mi0
12:40:39
start mi0 range(p) 1 loop
12:40:39
finish mi0 range(p) 1 loop
12:40:39
start mi0 range(p) 2 loop
12:40:39
finish mi0 range(p) 2 loop
12:40:39
start mi0 range(NT) loop
12:40:39
finish mi0 range(NT) loop
12:40:39
start mi0 range(n) loop
12:40:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:40:39
start mi0 range(n) 2loop
12:40:39
finish mi0 range(n) 2loop
12:40:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:40:39
start mi1 range(p) 1 loop
12:40:39
finish mi1 range(p) 1 loop
12:40:39
start mi1 range(p) 2 loop
12:40:39
finish mi1 range(p) 2 loop
12:40:39
start mi1 range(NT) loop
12:40:39
finish mi1 range(NT) loop
12:40:39
start mi1 range(n) loop
12:40:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:40:40
start mi1 range(n) 2loop
12:40:40
finish mi1 range(n) 2loop
12:40:40
start mi2
12:40:40
start mi2 range(p) 1 loop
12:40:40
finish mi2 range(p) 1 loop
12:40:40
start mi2 range(p) 2 loop
12:40:40
finish mi2 range(p) 2 loop
12:40:40
start mi2 range(NT) loop
12:40:40
finish mi2 range(NT) loop
12:40:40
start mi2 range(n) loop
12:40:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:40:40
start mi2 range(n) 2loop
12:40:40
finish mi2 range(n) 2loop
12:40:40
[[-2.68584012]]
end mi2 loop
12:40:40
estep
12:40:40
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:40:56
start ppi1
12:40:56
start mi0
12:40:56
start mi0 range(p) 1 loop
12:40:56
finish mi0 range(p) 1 loop
12:40:56
start mi0 range(p) 2 loop
12:40:56
finish mi0 range(p) 2 loop
12:40:56
start mi0 range(NT) loop
12:40:56
finish mi0 range(NT) loop
12:40:56
start mi0 range(n) loop
12:40:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:40:56
start mi0 range(n) 2loop
12:40:56
finish mi0 range(n) 2loop
12:40:56
start mi1
12:40:56
start mi1 range(p) 1 loop
12:40:56
finish mi1 range(p) 1 loop
12:40:56
start mi1 range(p) 2 loop
12:40:56
finish mi1 range(p) 2 loop
12:40:56
start mi1 range(NT) loop
12:40:56
finish mi1 range(NT) loop
12:40:56
start mi1 range(n) loop
12:40:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:40:57
start mi1 range(n) 2loop
12:40:57
finish mi1 range(n) 2loop
12:40:57
start mi2
12:40:57
start mi2 range(p) 1 loop
12:40:57
finish mi2 range(p) 1 loop
12:40:57
start mi2 range(p) 2 loop
12:40:57
finish mi2 range(p) 2 loop
12:40:57
start mi2 range(NT) loop
12:40:57
finish mi2 range(NT) loop
12:40:57
start mi2 range(n) loop
12:40:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:40:57
start mi2 range(n) 2loop
12:40:57
finish mi2 range(n) 2loop
12:40:57
[[-2.74833308]]
end mi2 loop
12:40:57
estep
12:40:57
end estep
12:41:13
end pa12:41:13
goodness of fit correlation [0.24691751]
start cluster 12:41:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33565 instead
  warnings.warn(
40
parallel submitted
12:41:37
parallel finished
12:44:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:45:02
start mi0
12:45:02
start mi0 range(p) 1 loop
12:45:02
finish mi0 range(p) 1 loop
12:45:02
start mi0 range(p) 2 loop
12:45:02
finish mi0 range(p) 2 loop
12:45:02
start mi0 range(NT) loop
12:45:02
finish mi0 range(NT) loop
12:45:02
start mi0 range(n) loop
12:45:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:45:02
start mi0 range(n) 2loop
12:45:02
finish mi0 range(n) 2loop
12:45:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:45:02
start mi1 range(p) 1 loop
12:45:02
finish mi1 range(p) 1 loop
12:45:02
start mi1 range(p) 2 loop
12:45:02
finish mi1 range(p) 2 loop
12:45:02
start mi1 range(NT) loop
12:45:02
finish mi1 range(NT) loop
12:45:02
start mi1 range(n) loop
12:45:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:45:03
start mi1 range(n) 2loop
12:45:03
finish mi1 range(n) 2loop
12:45:03
start mi2
12:45:03
start mi2 range(p) 1 loop
12:45:03
finish mi2 range(p) 1 loop
12:45:03
start mi2 range(p) 2 loop
12:45:03
finish mi2 range(p) 2 loop
12:45:03
start mi2 range(NT) loop
12:45:03
finish mi2 range(NT) loop
12:45:03
start mi2 range(n) loop
12:45:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:45:03
start mi2 range(n) 2loop
12:45:03
finish mi2 range(n) 2loop
12:45:03
[[-2.83366193]]
end mi2 loop
12:45:03
estep
12:45:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:45:20
start ppi1
12:45:20
start mi0
12:45:20
start mi0 range(p) 1 loop
12:45:20
finish mi0 range(p) 1 loop
12:45:20
start mi0 range(p) 2 loop
12:45:20
finish mi0 range(p) 2 loop
12:45:20
start mi0 range(NT) loop
12:45:20
finish mi0 range(NT) loop
12:45:20
start mi0 range(n) loop
12:45:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:45:20
start mi0 range(n) 2loop
12:45:20
finish mi0 range(n) 2loop
12:45:20
start mi1
12:45:20
start mi1 range(p) 1 loop
12:45:20
finish mi1 range(p) 1 loop
12:45:20
start mi1 range(p) 2 loop
12:45:20
finish mi1 range(p) 2 loop
12:45:20
start mi1 range(NT) loop
12:45:20
finish mi1 range(NT) loop
12:45:20
start mi1 range(n) loop
12:45:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:45:20
start mi1 range(n) 2loop
12:45:20
finish mi1 range(n) 2loop
12:45:21
[[-2.89613842]]
end mi1 loop
12:45:21
estep
12:45:21
end estep
12:45:37
end pa12:45:37
goodness of fit correlation [0.24426725]
start cluster 12:45:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37328 instead
  warnings.warn(
41
parallel submitted
12:46:02
parallel finished
12:49:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:49:28
start mi0
12:49:28
start mi0 range(p) 1 loop
12:49:28
finish mi0 range(p) 1 loop
12:49:28
start mi0 range(p) 2 loop
12:49:28
finish mi0 range(p) 2 loop
12:49:28
start mi0 range(NT) loop
12:49:28
finish mi0 range(NT) loop
12:49:28
start mi0 range(n) loop
12:49:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:49:28
start mi0 range(n) 2loop
12:49:28
finish mi0 range(n) 2loop
12:49:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:49:28
start mi1 range(p) 1 loop
12:49:28
finish mi1 range(p) 1 loop
12:49:28
start mi1 range(p) 2 loop
12:49:28
finish mi1 range(p) 2 loop
12:49:28
start mi1 range(NT) loop
12:49:28
finish mi1 range(NT) loop
12:49:28
start mi1 range(n) loop
12:49:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:49:28
start mi1 range(n) 2loop
12:49:28
finish mi1 range(n) 2loop
12:49:28
start mi2
12:49:28
start mi2 range(p) 1 loop
12:49:28
finish mi2 range(p) 1 loop
12:49:28
start mi2 range(p) 2 loop
12:49:28
finish mi2 range(p) 2 loop
12:49:28
start mi2 range(NT) loop
12:49:28
finish mi2 range(NT) loop
12:49:28
start mi2 range(n) loop
12:49:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:49:28
start mi2 range(n) 2loop
12:49:28
finish mi2 range(n) 2loop
12:49:29
[[-2.71209724]]
end mi2 loop
12:49:29
estep
12:49:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:49:46
start ppi1
12:49:46
start mi0
12:49:46
start mi0 range(p) 1 loop
12:49:46
finish mi0 range(p) 1 loop
12:49:46
start mi0 range(p) 2 loop
12:49:46
finish mi0 range(p) 2 loop
12:49:46
start mi0 range(NT) loop
12:49:46
finish mi0 range(NT) loop
12:49:46
start mi0 range(n) loop
12:49:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:49:47
start mi0 range(n) 2loop
12:49:47
finish mi0 range(n) 2loop
12:49:47
start mi1
12:49:47
start mi1 range(p) 1 loop
12:49:47
finish mi1 range(p) 1 loop
12:49:47
start mi1 range(p) 2 loop
12:49:47
finish mi1 range(p) 2 loop
12:49:47
start mi1 range(NT) loop
12:49:47
finish mi1 range(NT) loop
12:49:47
start mi1 range(n) loop
12:49:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:49:47
start mi1 range(n) 2loop
12:49:47
finish mi1 range(n) 2loop
12:49:47
start mi2
12:49:47
start mi2 range(p) 1 loop
12:49:47
finish mi2 range(p) 1 loop
12:49:47
start mi2 range(p) 2 loop
12:49:47
finish mi2 range(p) 2 loop
12:49:47
start mi2 range(NT) loop
12:49:47
finish mi2 range(NT) loop
12:49:47
start mi2 range(n) loop
12:49:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:49:47
start mi2 range(n) 2loop
12:49:47
finish mi2 range(n) 2loop
12:49:47
[[-2.77458974]]
end mi2 loop
12:49:47
estep
12:49:47
end estep
12:50:04
end pa12:50:04
goodness of fit correlation [0.18052769]
start cluster 12:50:04
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43187 instead
  warnings.warn(
42
parallel submitted
12:50:27
parallel finished
12:54:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:54:34
start mi0
12:54:34
start mi0 range(p) 1 loop
12:54:34
finish mi0 range(p) 1 loop
12:54:34
start mi0 range(p) 2 loop
12:54:34
finish mi0 range(p) 2 loop
12:54:34
start mi0 range(NT) loop
12:54:34
finish mi0 range(NT) loop
12:54:34
start mi0 range(n) loop
12:54:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:54:34
start mi0 range(n) 2loop
12:54:34
finish mi0 range(n) 2loop
12:54:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:54:34
start mi1 range(p) 1 loop
12:54:34
finish mi1 range(p) 1 loop
12:54:34
start mi1 range(p) 2 loop
12:54:34
finish mi1 range(p) 2 loop
12:54:34
start mi1 range(NT) loop
12:54:34
finish mi1 range(NT) loop
12:54:34
start mi1 range(n) loop
12:54:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:54:34
start mi1 range(n) 2loop
12:54:34
finish mi1 range(n) 2loop
12:54:34
start mi2
12:54:34
start mi2 range(p) 1 loop
12:54:34
finish mi2 range(p) 1 loop
12:54:34
start mi2 range(p) 2 loop
12:54:34
finish mi2 range(p) 2 loop
12:54:34
start mi2 range(NT) loop
12:54:34
finish mi2 range(NT) loop
12:54:34
start mi2 range(n) loop
12:54:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:54:34
start mi2 range(n) 2loop
12:54:34
finish mi2 range(n) 2loop
12:54:34
[[-2.71894382]]
end mi2 loop
12:54:34
estep
12:54:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:54:51
start ppi1
12:54:51
start mi0
12:54:51
start mi0 range(p) 1 loop
12:54:51
finish mi0 range(p) 1 loop
12:54:51
start mi0 range(p) 2 loop
12:54:51
finish mi0 range(p) 2 loop
12:54:51
start mi0 range(NT) loop
12:54:51
finish mi0 range(NT) loop
12:54:51
start mi0 range(n) loop
12:54:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:54:51
start mi0 range(n) 2loop
12:54:51
finish mi0 range(n) 2loop
12:54:51
start mi1
12:54:51
start mi1 range(p) 1 loop
12:54:51
finish mi1 range(p) 1 loop
12:54:51
start mi1 range(p) 2 loop
12:54:51
finish mi1 range(p) 2 loop
12:54:51
start mi1 range(NT) loop
12:54:51
finish mi1 range(NT) loop
12:54:51
start mi1 range(n) loop
12:54:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:54:51
start mi1 range(n) 2loop
12:54:51
finish mi1 range(n) 2loop
12:54:52
start mi2
12:54:52
start mi2 range(p) 1 loop
12:54:52
finish mi2 range(p) 1 loop
12:54:52
start mi2 range(p) 2 loop
12:54:52
finish mi2 range(p) 2 loop
12:54:52
start mi2 range(NT) loop
12:54:52
finish mi2 range(NT) loop
12:54:52
start mi2 range(n) loop
12:54:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:54:52
start mi2 range(n) 2loop
12:54:52
finish mi2 range(n) 2loop
12:54:52
[[-2.78143623]]
end mi2 loop
12:54:52
estep
12:54:52
end estep
12:55:10
end pa12:55:10
goodness of fit correlation [0.15275172]
start cluster 12:55:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45033 instead
  warnings.warn(
43
parallel submitted
12:55:34
parallel finished
12:58:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:59:01
start mi0
12:59:01
start mi0 range(p) 1 loop
12:59:01
finish mi0 range(p) 1 loop
12:59:01
start mi0 range(p) 2 loop
12:59:01
finish mi0 range(p) 2 loop
12:59:01
start mi0 range(NT) loop
12:59:01
finish mi0 range(NT) loop
12:59:01
start mi0 range(n) loop
12:59:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:59:01
start mi0 range(n) 2loop
12:59:01
finish mi0 range(n) 2loop
12:59:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:59:01
start mi1 range(p) 1 loop
12:59:01
finish mi1 range(p) 1 loop
12:59:01
start mi1 range(p) 2 loop
12:59:01
finish mi1 range(p) 2 loop
12:59:01
start mi1 range(NT) loop
12:59:01
finish mi1 range(NT) loop
12:59:01
start mi1 range(n) loop
12:59:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:59:01
start mi1 range(n) 2loop
12:59:01
finish mi1 range(n) 2loop
12:59:01
start mi2
12:59:01
start mi2 range(p) 1 loop
12:59:01
finish mi2 range(p) 1 loop
12:59:01
start mi2 range(p) 2 loop
12:59:01
finish mi2 range(p) 2 loop
12:59:01
start mi2 range(NT) loop
12:59:01
finish mi2 range(NT) loop
12:59:02
start mi2 range(n) loop
12:59:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:59:02
start mi2 range(n) 2loop
12:59:02
finish mi2 range(n) 2loop
12:59:02
[[-2.65818967]]
end mi2 loop
12:59:02
estep
12:59:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:59:19
start ppi1
12:59:19
start mi0
12:59:19
start mi0 range(p) 1 loop
12:59:19
finish mi0 range(p) 1 loop
12:59:19
start mi0 range(p) 2 loop
12:59:19
finish mi0 range(p) 2 loop
12:59:19
start mi0 range(NT) loop
12:59:19
finish mi0 range(NT) loop
12:59:19
start mi0 range(n) loop
12:59:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:59:20
start mi0 range(n) 2loop
12:59:20
finish mi0 range(n) 2loop
12:59:20
start mi1
12:59:20
start mi1 range(p) 1 loop
12:59:20
finish mi1 range(p) 1 loop
12:59:20
start mi1 range(p) 2 loop
12:59:20
finish mi1 range(p) 2 loop
12:59:20
start mi1 range(NT) loop
12:59:20
finish mi1 range(NT) loop
12:59:20
start mi1 range(n) loop
12:59:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:59:20
start mi1 range(n) 2loop
12:59:20
finish mi1 range(n) 2loop
12:59:20
start mi2
12:59:20
start mi2 range(p) 1 loop
12:59:20
finish mi2 range(p) 1 loop
12:59:20
start mi2 range(p) 2 loop
12:59:20
finish mi2 range(p) 2 loop
12:59:20
start mi2 range(NT) loop
12:59:20
finish mi2 range(NT) loop
12:59:20
start mi2 range(n) loop
12:59:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:59:20
start mi2 range(n) 2loop
12:59:20
finish mi2 range(n) 2loop
12:59:20
[[-2.72068352]]
end mi2 loop
12:59:20
estep
12:59:20
end estep
12:59:38
end pa12:59:38
goodness of fit correlation [0.15384461]
start cluster 12:59:38
44
parallel submitted
13:00:05
parallel finished
13:03:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:03:20
start mi0
13:03:20
start mi0 range(p) 1 loop
13:03:20
finish mi0 range(p) 1 loop
13:03:20
start mi0 range(p) 2 loop
13:03:20
finish mi0 range(p) 2 loop
13:03:20
start mi0 range(NT) loop
13:03:20
finish mi0 range(NT) loop
13:03:20
start mi0 range(n) loop
13:03:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:03:21
start mi0 range(n) 2loop
13:03:21
finish mi0 range(n) 2loop
13:03:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:03:21
start mi1 range(p) 1 loop
13:03:21
finish mi1 range(p) 1 loop
13:03:21
start mi1 range(p) 2 loop
13:03:21
finish mi1 range(p) 2 loop
13:03:21
start mi1 range(NT) loop
13:03:21
finish mi1 range(NT) loop
13:03:21
start mi1 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:03:21
start mi1 range(n) 2loop
13:03:21
finish mi1 range(n) 2loop
13:03:21
start mi2
13:03:21
start mi2 range(p) 1 loop
13:03:21
finish mi2 range(p) 1 loop
13:03:21
start mi2 range(p) 2 loop
13:03:21
finish mi2 range(p) 2 loop
13:03:21
start mi2 range(NT) loop
13:03:21
finish mi2 range(NT) loop
13:03:21
start mi2 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:03:21
start mi2 range(n) 2loop
13:03:21
finish mi2 range(n) 2loop
13:03:21
[[-2.70298866]]
end mi2 loop
13:03:21
estep
13:03:21
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:03:38
start ppi1
13:03:38
start mi0
13:03:38
start mi0 range(p) 1 loop
13:03:38
finish mi0 range(p) 1 loop
13:03:38
start mi0 range(p) 2 loop
13:03:38
finish mi0 range(p) 2 loop
13:03:38
start mi0 range(NT) loop
13:03:38
finish mi0 range(NT) loop
13:03:38
start mi0 range(n) loop
13:03:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:03:38
start mi0 range(n) 2loop
13:03:38
finish mi0 range(n) 2loop
13:03:38
start mi1
13:03:38
start mi1 range(p) 1 loop
13:03:38
finish mi1 range(p) 1 loop
13:03:38
start mi1 range(p) 2 loop
13:03:38
finish mi1 range(p) 2 loop
13:03:38
start mi1 range(NT) loop
13:03:38
finish mi1 range(NT) loop
13:03:38
start mi1 range(n) loop
13:03:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:03:38
start mi1 range(n) 2loop
13:03:38
finish mi1 range(n) 2loop
13:03:38
start mi2
13:03:38
start mi2 range(p) 1 loop
13:03:38
finish mi2 range(p) 1 loop
13:03:38
start mi2 range(p) 2 loop
13:03:38
finish mi2 range(p) 2 loop
13:03:38
start mi2 range(NT) loop
13:03:39
finish mi2 range(NT) loop
13:03:39
start mi2 range(n) loop
13:03:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:03:39
start mi2 range(n) 2loop
13:03:39
finish mi2 range(n) 2loop
13:03:39
[[-2.76548129]]
end mi2 loop
13:03:39
estep
13:03:39
end estep
13:03:56
end pa13:03:56
goodness of fit correlation [0.26061731]
start cluster 13:03:56
45
parallel submitted
13:04:21
parallel finished
13:07:30
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:07:44
start mi0
13:07:44
start mi0 range(p) 1 loop
13:07:44
finish mi0 range(p) 1 loop
13:07:44
start mi0 range(p) 2 loop
13:07:44
finish mi0 range(p) 2 loop
13:07:44
start mi0 range(NT) loop
13:07:44
finish mi0 range(NT) loop
13:07:44
start mi0 range(n) loop
13:07:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:07:44
start mi0 range(n) 2loop
13:07:44
finish mi0 range(n) 2loop
13:07:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:07:44
start mi1 range(p) 1 loop
13:07:44
finish mi1 range(p) 1 loop
13:07:44
start mi1 range(p) 2 loop
13:07:44
finish mi1 range(p) 2 loop
13:07:44
start mi1 range(NT) loop
13:07:44
finish mi1 range(NT) loop
13:07:44
start mi1 range(n) loop
13:07:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:07:44
start mi1 range(n) 2loop
13:07:44
finish mi1 range(n) 2loop
13:07:45
start mi2
13:07:45
start mi2 range(p) 1 loop
13:07:45
finish mi2 range(p) 1 loop
13:07:45
start mi2 range(p) 2 loop
13:07:45
finish mi2 range(p) 2 loop
13:07:45
start mi2 range(NT) loop
13:07:45
finish mi2 range(NT) loop
13:07:45
start mi2 range(n) loop
13:07:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:07:45
start mi2 range(n) 2loop
13:07:45
finish mi2 range(n) 2loop
13:07:45
[[-2.80414471]]
end mi2 loop
13:07:45
estep
13:07:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:08:03
start ppi1
13:08:03
start mi0
13:08:03
start mi0 range(p) 1 loop
13:08:03
finish mi0 range(p) 1 loop
13:08:03
start mi0 range(p) 2 loop
13:08:03
finish mi0 range(p) 2 loop
13:08:03
start mi0 range(NT) loop
13:08:03
finish mi0 range(NT) loop
13:08:03
start mi0 range(n) loop
13:08:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:08:03
start mi0 range(n) 2loop
13:08:03
finish mi0 range(n) 2loop
13:08:03
start mi1
13:08:03
start mi1 range(p) 1 loop
13:08:03
finish mi1 range(p) 1 loop
13:08:03
start mi1 range(p) 2 loop
13:08:03
finish mi1 range(p) 2 loop
13:08:03
start mi1 range(NT) loop
13:08:03
finish mi1 range(NT) loop
13:08:03
start mi1 range(n) loop
13:08:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:08:03
start mi1 range(n) 2loop
13:08:03
finish mi1 range(n) 2loop
13:08:03
[[-2.86659364]]
end mi1 loop
13:08:03
estep
13:08:03
end estep
13:08:20
end pa13:08:20
goodness of fit correlation [0.20186062]
start cluster 13:08:20
46
parallel submitted
13:08:47
parallel finished
13:11:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:11:55
start mi0
13:11:55
start mi0 range(p) 1 loop
13:11:55
finish mi0 range(p) 1 loop
13:11:55
start mi0 range(p) 2 loop
13:11:55
finish mi0 range(p) 2 loop
13:11:55
start mi0 range(NT) loop
13:11:55
finish mi0 range(NT) loop
13:11:55
start mi0 range(n) loop
13:11:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:11:55
start mi0 range(n) 2loop
13:11:55
finish mi0 range(n) 2loop
13:11:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:11:55
start mi1 range(p) 1 loop
13:11:55
finish mi1 range(p) 1 loop
13:11:55
start mi1 range(p) 2 loop
13:11:55
finish mi1 range(p) 2 loop
13:11:55
start mi1 range(NT) loop
13:11:55
finish mi1 range(NT) loop
13:11:55
start mi1 range(n) loop
13:11:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:11:55
start mi1 range(n) 2loop
13:11:55
finish mi1 range(n) 2loop
13:11:55
start mi2
13:11:55
start mi2 range(p) 1 loop
13:11:55
finish mi2 range(p) 1 loop
13:11:55
start mi2 range(p) 2 loop
13:11:55
finish mi2 range(p) 2 loop
13:11:55
start mi2 range(NT) loop
13:11:55
finish mi2 range(NT) loop
13:11:55
start mi2 range(n) loop
13:11:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:11:55
start mi2 range(n) 2loop
13:11:55
finish mi2 range(n) 2loop
13:11:56
[[-2.6970949]]
end mi2 loop
13:11:56
estep
13:11:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:12:14
start ppi1
13:12:14
start mi0
13:12:14
start mi0 range(p) 1 loop
13:12:14
finish mi0 range(p) 1 loop
13:12:14
start mi0 range(p) 2 loop
13:12:14
finish mi0 range(p) 2 loop
13:12:14
start mi0 range(NT) loop
13:12:14
finish mi0 range(NT) loop
13:12:14
start mi0 range(n) loop
13:12:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:12:14
start mi0 range(n) 2loop
13:12:14
finish mi0 range(n) 2loop
13:12:14
start mi1
13:12:14
start mi1 range(p) 1 loop
13:12:14
finish mi1 range(p) 1 loop
13:12:14
start mi1 range(p) 2 loop
13:12:14
finish mi1 range(p) 2 loop
13:12:14
start mi1 range(NT) loop
13:12:14
finish mi1 range(NT) loop
13:12:14
start mi1 range(n) loop
13:12:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:12:15
start mi1 range(n) 2loop
13:12:15
finish mi1 range(n) 2loop
13:12:15
start mi2
13:12:15
start mi2 range(p) 1 loop
13:12:15
finish mi2 range(p) 1 loop
13:12:15
start mi2 range(p) 2 loop
13:12:15
finish mi2 range(p) 2 loop
13:12:15
start mi2 range(NT) loop
13:12:15
finish mi2 range(NT) loop
13:12:15
start mi2 range(n) loop
13:12:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:12:15
start mi2 range(n) 2loop
13:12:15
finish mi2 range(n) 2loop
13:12:15
[[-2.75958762]]
end mi2 loop
13:12:15
estep
13:12:15
end estep
13:12:33
end pa13:12:33
goodness of fit correlation [0.17132817]
start cluster 13:12:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38485 instead
  warnings.warn(
47
parallel submitted
13:12:58
parallel finished
13:16:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:16:59
start mi0
13:16:59
start mi0 range(p) 1 loop
13:16:59
finish mi0 range(p) 1 loop
13:16:59
start mi0 range(p) 2 loop
13:16:59
finish mi0 range(p) 2 loop
13:16:59
start mi0 range(NT) loop
13:16:59
finish mi0 range(NT) loop
13:16:59
start mi0 range(n) loop
13:16:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:16:59
start mi0 range(n) 2loop
13:16:59
finish mi0 range(n) 2loop
13:16:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:16:59
start mi1 range(p) 1 loop
13:16:59
finish mi1 range(p) 1 loop
13:16:59
start mi1 range(p) 2 loop
13:16:59
finish mi1 range(p) 2 loop
13:16:59
start mi1 range(NT) loop
13:16:59
finish mi1 range(NT) loop
13:16:59
start mi1 range(n) loop
13:16:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:16:59
start mi1 range(n) 2loop
13:16:59
finish mi1 range(n) 2loop
13:16:59
start mi2
13:16:59
start mi2 range(p) 1 loop
13:16:59
finish mi2 range(p) 1 loop
13:16:59
start mi2 range(p) 2 loop
13:16:59
finish mi2 range(p) 2 loop
13:16:59
start mi2 range(NT) loop
13:17:00
finish mi2 range(NT) loop
13:17:00
start mi2 range(n) loop
13:17:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:17:00
start mi2 range(n) 2loop
13:17:00
finish mi2 range(n) 2loop
13:17:00
[[-2.71035657]]
end mi2 loop
13:17:00
estep
13:17:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:17:17
start ppi1
13:17:17
start mi0
13:17:17
start mi0 range(p) 1 loop
13:17:17
finish mi0 range(p) 1 loop
13:17:17
start mi0 range(p) 2 loop
13:17:17
finish mi0 range(p) 2 loop
13:17:17
start mi0 range(NT) loop
13:17:17
finish mi0 range(NT) loop
13:17:17
start mi0 range(n) loop
13:17:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:17:17
start mi0 range(n) 2loop
13:17:17
finish mi0 range(n) 2loop
13:17:17
start mi1
13:17:17
start mi1 range(p) 1 loop
13:17:17
finish mi1 range(p) 1 loop
13:17:17
start mi1 range(p) 2 loop
13:17:17
finish mi1 range(p) 2 loop
13:17:17
start mi1 range(NT) loop
13:17:17
finish mi1 range(NT) loop
13:17:17
start mi1 range(n) loop
13:17:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:17:17
start mi1 range(n) 2loop
13:17:17
finish mi1 range(n) 2loop
13:17:17
start mi2
13:17:17
start mi2 range(p) 1 loop
13:17:17
finish mi2 range(p) 1 loop
13:17:17
start mi2 range(p) 2 loop
13:17:17
finish mi2 range(p) 2 loop
13:17:17
start mi2 range(NT) loop
13:17:18
finish mi2 range(NT) loop
13:17:18
start mi2 range(n) loop
13:17:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:17:18
start mi2 range(n) 2loop
13:17:18
finish mi2 range(n) 2loop
13:17:18
[[-2.77284909]]
end mi2 loop
13:17:18
estep
13:17:18
end estep
13:17:34
end pa13:17:34
goodness of fit correlation [0.29962659]
start cluster 13:17:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38986 instead
  warnings.warn(
48
parallel submitted
13:17:59
parallel finished
13:24:10
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:24:27
start mi0
13:24:27
start mi0 range(p) 1 loop
13:24:27
finish mi0 range(p) 1 loop
13:24:27
start mi0 range(p) 2 loop
13:24:27
finish mi0 range(p) 2 loop
13:24:27
start mi0 range(NT) loop
13:24:27
finish mi0 range(NT) loop
13:24:27
start mi0 range(n) loop
13:24:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:24:27
start mi0 range(n) 2loop
13:24:27
finish mi0 range(n) 2loop
13:24:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:24:27
start mi1 range(p) 1 loop
13:24:27
finish mi1 range(p) 1 loop
13:24:27
start mi1 range(p) 2 loop
13:24:27
finish mi1 range(p) 2 loop
13:24:27
start mi1 range(NT) loop
13:24:27
finish mi1 range(NT) loop
13:24:27
start mi1 range(n) loop
13:24:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:24:28
start mi1 range(n) 2loop
13:24:28
finish mi1 range(n) 2loop
13:24:28
start mi2
13:24:28
start mi2 range(p) 1 loop
13:24:28
finish mi2 range(p) 1 loop
13:24:28
start mi2 range(p) 2 loop
13:24:28
finish mi2 range(p) 2 loop
13:24:28
start mi2 range(NT) loop
13:24:28
finish mi2 range(NT) loop
13:24:28
start mi2 range(n) loop
13:24:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:24:28
start mi2 range(n) 2loop
13:24:28
finish mi2 range(n) 2loop
13:24:28
[[-2.85845094]]
end mi2 loop
13:24:28
estep
13:24:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:24:45
start ppi1
13:24:45
start mi0
13:24:45
start mi0 range(p) 1 loop
13:24:45
finish mi0 range(p) 1 loop
13:24:45
start mi0 range(p) 2 loop
13:24:45
finish mi0 range(p) 2 loop
13:24:45
start mi0 range(NT) loop
13:24:45
finish mi0 range(NT) loop
13:24:45
start mi0 range(n) loop
13:24:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:24:45
start mi0 range(n) 2loop
13:24:45
finish mi0 range(n) 2loop
13:24:45
start mi1
13:24:45
start mi1 range(p) 1 loop
13:24:45
finish mi1 range(p) 1 loop
13:24:45
start mi1 range(p) 2 loop
13:24:45
finish mi1 range(p) 2 loop
13:24:45
start mi1 range(NT) loop
13:24:45
finish mi1 range(NT) loop
13:24:45
start mi1 range(n) loop
13:24:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:24:45
start mi1 range(n) 2loop
13:24:45
finish mi1 range(n) 2loop
13:24:46
[[-2.92093783]]
end mi1 loop
13:24:46
estep
13:24:46
end estep
13:25:02
end pa13:25:02
goodness of fit correlation [0.33335969]
start cluster 13:25:02
49
parallel submitted
13:25:28
parallel finished
13:30:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:31:16
start mi0
13:31:16
start mi0 range(p) 1 loop
13:31:16
finish mi0 range(p) 1 loop
13:31:16
start mi0 range(p) 2 loop
13:31:16
finish mi0 range(p) 2 loop
13:31:16
start mi0 range(NT) loop
13:31:16
finish mi0 range(NT) loop
13:31:16
start mi0 range(n) loop
13:31:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:31:16
start mi0 range(n) 2loop
13:31:16
finish mi0 range(n) 2loop
13:31:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:31:16
start mi1 range(p) 1 loop
13:31:16
finish mi1 range(p) 1 loop
13:31:16
start mi1 range(p) 2 loop
13:31:16
finish mi1 range(p) 2 loop
13:31:16
start mi1 range(NT) loop
13:31:16
finish mi1 range(NT) loop
13:31:16
start mi1 range(n) loop
13:31:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:31:16
start mi1 range(n) 2loop
13:31:16
finish mi1 range(n) 2loop
13:31:17
[[-2.86757273]]
end mi1 loop
13:31:17
estep
13:31:17
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:31:34
start ppi1
13:31:34
start mi0
13:31:34
start mi0 range(p) 1 loop
13:31:34
finish mi0 range(p) 1 loop
13:31:34
start mi0 range(p) 2 loop
13:31:34
finish mi0 range(p) 2 loop
13:31:34
start mi0 range(NT) loop
13:31:34
finish mi0 range(NT) loop
13:31:34
start mi0 range(n) loop
13:31:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:31:34
start mi0 range(n) 2loop
13:31:34
finish mi0 range(n) 2loop
13:31:34
start mi1
13:31:34
start mi1 range(p) 1 loop
13:31:34
finish mi1 range(p) 1 loop
13:31:34
start mi1 range(p) 2 loop
13:31:34
finish mi1 range(p) 2 loop
13:31:34
start mi1 range(NT) loop
13:31:34
finish mi1 range(NT) loop
13:31:34
start mi1 range(n) loop
13:31:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:31:34
start mi1 range(n) 2loop
13:31:34
finish mi1 range(n) 2loop
13:31:35
[[-2.9301035]]
end mi1 loop
13:31:35
estep
13:31:35
end estep
13:31:51
end pa13:31:51
goodness of fit correlation [0.31103637]
start cluster 13:31:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33364 instead
  warnings.warn(
50
parallel submitted
13:32:16
parallel finished
13:38:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:38:57
start mi0
13:38:57
start mi0 range(p) 1 loop
13:38:57
finish mi0 range(p) 1 loop
13:38:57
start mi0 range(p) 2 loop
13:38:57
finish mi0 range(p) 2 loop
13:38:57
start mi0 range(NT) loop
13:38:57
finish mi0 range(NT) loop
13:38:57
start mi0 range(n) loop
13:38:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:38:57
start mi0 range(n) 2loop
13:38:57
finish mi0 range(n) 2loop
13:38:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:38:57
start mi1 range(p) 1 loop
13:38:57
finish mi1 range(p) 1 loop
13:38:57
start mi1 range(p) 2 loop
13:38:57
finish mi1 range(p) 2 loop
13:38:57
start mi1 range(NT) loop
13:38:57
finish mi1 range(NT) loop
13:38:57
start mi1 range(n) loop
13:38:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:38:57
start mi1 range(n) 2loop
13:38:57
finish mi1 range(n) 2loop
13:38:58
[[-2.90793807]]
end mi1 loop
13:38:58
estep
13:38:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:39:15
start ppi1
13:39:15
start mi0
13:39:15
start mi0 range(p) 1 loop
13:39:15
finish mi0 range(p) 1 loop
13:39:15
start mi0 range(p) 2 loop
13:39:15
finish mi0 range(p) 2 loop
13:39:15
start mi0 range(NT) loop
13:39:15
finish mi0 range(NT) loop
13:39:15
start mi0 range(n) loop
13:39:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:39:15
start mi0 range(n) 2loop
13:39:15
finish mi0 range(n) 2loop
13:39:15
start mi1
13:39:15
start mi1 range(p) 1 loop
13:39:15
finish mi1 range(p) 1 loop
13:39:15
start mi1 range(p) 2 loop
13:39:15
finish mi1 range(p) 2 loop
13:39:15
start mi1 range(NT) loop
13:39:15
finish mi1 range(NT) loop
13:39:15
start mi1 range(n) loop
13:39:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:39:15
start mi1 range(n) 2loop
13:39:15
finish mi1 range(n) 2loop
13:39:16
[[-2.97043955]]
end mi1 loop
13:39:16
estep
13:39:16
end estep
13:39:34
end pa13:39:34
goodness of fit correlation [0.35056016]
start cluster 13:39:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42956 instead
  warnings.warn(
51
parallel submitted
13:40:01
parallel finished
13:45:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:45:18
start mi0
13:45:18
start mi0 range(p) 1 loop
13:45:18
finish mi0 range(p) 1 loop
13:45:18
start mi0 range(p) 2 loop
13:45:18
finish mi0 range(p) 2 loop
13:45:18
start mi0 range(NT) loop
13:45:18
finish mi0 range(NT) loop
13:45:18
start mi0 range(n) loop
13:45:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:45:18
start mi0 range(n) 2loop
13:45:18
finish mi0 range(n) 2loop
13:45:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:45:18
start mi1 range(p) 1 loop
13:45:18
finish mi1 range(p) 1 loop
13:45:18
start mi1 range(p) 2 loop
13:45:18
finish mi1 range(p) 2 loop
13:45:18
start mi1 range(NT) loop
13:45:18
finish mi1 range(NT) loop
13:45:18
start mi1 range(n) loop
13:45:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:45:18
start mi1 range(n) 2loop
13:45:18
finish mi1 range(n) 2loop
13:45:19
[[-2.98862947]]
end mi1 loop
13:45:19
estep
13:45:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:45:36
start ppi1
13:45:36
start mi0
13:45:36
start mi0 range(p) 1 loop
13:45:36
finish mi0 range(p) 1 loop
13:45:36
start mi0 range(p) 2 loop
13:45:36
finish mi0 range(p) 2 loop
13:45:36
start mi0 range(NT) loop
13:45:36
finish mi0 range(NT) loop
13:45:36
start mi0 range(n) loop
13:45:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:45:36
start mi0 range(n) 2loop
13:45:36
finish mi0 range(n) 2loop
13:45:36
start mi1
13:45:36
start mi1 range(p) 1 loop
13:45:36
finish mi1 range(p) 1 loop
13:45:36
start mi1 range(p) 2 loop
13:45:36
finish mi1 range(p) 2 loop
13:45:36
start mi1 range(NT) loop
13:45:36
finish mi1 range(NT) loop
13:45:36
start mi1 range(n) loop
13:45:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:45:36
start mi1 range(n) 2loop
13:45:36
finish mi1 range(n) 2loop
13:45:36
[[-3.05112068]]
end mi1 loop
13:45:36
estep
13:45:36
end estep
13:45:55
end pa13:45:55
goodness of fit correlation [0.35659609]
start cluster 13:45:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44357 instead
  warnings.warn(
52
parallel submitted
13:46:21
parallel finished
13:51:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:51:32
start mi0
13:51:32
start mi0 range(p) 1 loop
13:51:32
finish mi0 range(p) 1 loop
13:51:32
start mi0 range(p) 2 loop
13:51:32
finish mi0 range(p) 2 loop
13:51:32
start mi0 range(NT) loop
13:51:33
finish mi0 range(NT) loop
13:51:33
start mi0 range(n) loop
13:51:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:51:33
start mi0 range(n) 2loop
13:51:33
finish mi0 range(n) 2loop
13:51:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:51:33
start mi1 range(p) 1 loop
13:51:33
finish mi1 range(p) 1 loop
13:51:33
start mi1 range(p) 2 loop
13:51:33
finish mi1 range(p) 2 loop
13:51:33
start mi1 range(NT) loop
13:51:33
finish mi1 range(NT) loop
13:51:33
start mi1 range(n) loop
13:51:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:51:33
start mi1 range(n) 2loop
13:51:33
finish mi1 range(n) 2loop
13:51:33
[[-3.06475267]]
end mi1 loop
13:51:33
estep
13:51:33
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:51:50
start ppi1
13:51:50
start mi0
13:51:50
start mi0 range(p) 1 loop
13:51:50
finish mi0 range(p) 1 loop
13:51:50
start mi0 range(p) 2 loop
13:51:50
finish mi0 range(p) 2 loop
13:51:50
start mi0 range(NT) loop
13:51:51
finish mi0 range(NT) loop
13:51:51
start mi0 range(n) loop
13:51:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:51:51
start mi0 range(n) 2loop
13:51:51
finish mi0 range(n) 2loop
13:51:51
start mi1
13:51:51
start mi1 range(p) 1 loop
13:51:51
finish mi1 range(p) 1 loop
13:51:51
start mi1 range(p) 2 loop
13:51:51
finish mi1 range(p) 2 loop
13:51:51
start mi1 range(NT) loop
13:51:51
finish mi1 range(NT) loop
13:51:51
start mi1 range(n) loop
13:51:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:51:51
start mi1 range(n) 2loop
13:51:51
finish mi1 range(n) 2loop
13:51:51
[[-3.12721675]]
end mi1 loop
13:51:51
estep
13:51:51
end estep
13:52:09
end pa13:52:09
goodness of fit correlation [0.36502214]
start cluster 13:52:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43448 instead
  warnings.warn(
53
parallel submitted
13:52:34
slurmstepd: error: *** JOB 1825851 ON nodec13 CANCELLED AT 2020-11-06T13:53:19 ***
