26
first_dask
0
start cluster 14:26:12
parallel submitted
14:26:27
parallel finished
14:28:33
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:28:35
start mi 0 14:28:35
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:28:36
start mi 2 14:28:36
start mi 3 14:28:36
start mi 4 14:28:37
[[-2.0028163]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:28:51
start mi 0 14:28:51
start mi 1 14:28:51
start mi 2 14:28:52
start mi 3 14:28:52
start mi 4 14:28:52
[[-2.0028163]]
goodness of fit correlation [0.07491391]
1
start cluster 14:29:06
parallel submitted
14:29:20
parallel finished
14:31:04
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:31:07
start mi 0 14:31:07
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:31:08
start mi 2 14:31:08
start mi 3 14:31:08
start mi 4 14:31:09
[[-2.01382237]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:31:23
start mi 0 14:31:23
start mi 1 14:31:23
start mi 2 14:31:23
start mi 3 14:31:24
start mi 4 14:31:24
[[-2.07631441]]
goodness of fit correlation [0.0932322]
2
start cluster 14:31:38
parallel submitted
14:31:52
parallel finished
14:33:45
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:33:50
start mi 0 14:33:50
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:33:50
start mi 2 14:33:50
start mi 3 14:33:51
start mi 4 14:33:51
[[-2.04434322]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:34:05
start mi 0 14:34:05
start mi 1 14:34:05
start mi 2 14:34:06
start mi 3 14:34:06
[[-2.1068056]]
goodness of fit correlation [0.18570787]
3
start cluster 14:34:20
parallel submitted
14:34:35
parallel finished
14:36:26
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:36:29
start mi 0 14:36:29
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:36:29
start mi 2 14:36:30
start mi 3 14:36:30
[[-2.0947141]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:36:44
start mi 0 14:36:44
start mi 1 14:36:44
start mi 2 14:36:45
start mi 3 14:36:45
[[-2.15723218]]
goodness of fit correlation [0.26237894]
4
start cluster 14:36:59
parallel submitted
14:37:14
parallel finished
14:39:10
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:39:14
start mi 0 14:39:14
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:39:15
start mi 2 14:39:15
start mi 3 14:39:15
[[-2.08021409]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:39:29
start mi 0 14:39:29
start mi 1 14:39:30
start mi 2 14:39:30
start mi 3 14:39:31
[[-2.14273978]]
goodness of fit correlation [0.25011833]
5
start cluster 14:39:44
parallel submitted
14:39:59
parallel finished
14:41:45
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:41:48
start mi 0 14:41:48
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:41:49
start mi 2 14:41:49
start mi 3 14:41:50
[[-2.11312405]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:42:04
start mi 0 14:42:04
start mi 1 14:42:04
start mi 2 14:42:04
start mi 3 14:42:05
[[-2.17563475]]
goodness of fit correlation [0.26677711]
6
start cluster 14:42:19
parallel submitted
14:42:35
parallel finished
14:44:24
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:44:27
start mi 0 14:44:27
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:44:28
start mi 2 14:44:28
start mi 3 14:44:28
[[-2.14150312]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:44:43
start mi 0 14:44:43
start mi 1 14:44:43
start mi 2 14:44:43
start mi 3 14:44:44
[[-2.20400614]]
goodness of fit correlation [0.22015197]
7
start cluster 14:44:58
parallel submitted
14:45:14
parallel finished
14:46:49
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:46:52
start mi 0 14:46:52
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:46:53
start mi 2 14:46:53
start mi 3 14:46:54
[[-2.10719072]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:47:08
start mi 0 14:47:08
start mi 1 14:47:08
start mi 2 14:47:08
start mi 3 14:47:09
[[-2.16970355]]
goodness of fit correlation [0.20296961]
8
start cluster 14:47:23
parallel submitted
14:47:38
parallel finished
14:49:17
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:49:23
start mi 0 14:49:23
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:49:23
start mi 2 14:49:24
start mi 3 14:49:24
[[-2.09132015]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:49:38
start mi 0 14:49:38
start mi 1 14:49:39
start mi 2 14:49:39
start mi 3 14:49:39
[[-2.15383984]]
goodness of fit correlation [0.34264526]
9
start cluster 14:49:53
parallel submitted
14:50:10
parallel finished
14:51:44
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:51:48
start mi 0 14:51:48
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:51:49
start mi 2 14:51:49
start mi 3 14:51:50
[[-2.20913779]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:52:04
start mi 0 14:52:04
start mi 1 14:52:04
start mi 2 14:52:05
start mi 3 14:52:05
[[-2.27163268]]
goodness of fit correlation [0.31672333]
10
start cluster 14:52:19
parallel submitted
14:52:35
parallel finished
14:54:17
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:54:22
start mi 0 14:54:22
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:54:23
start mi 2 14:54:23
start mi 3 14:54:23
[[-2.13837794]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:54:38
start mi 0 14:54:38
start mi 1 14:54:38
start mi 2 14:54:38
start mi 3 14:54:39
[[-2.20088164]]
goodness of fit correlation [0.28033035]
11
start cluster 14:54:53
parallel submitted
14:55:10
parallel finished
14:56:56
estimation_first_dask.py:124: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi 0 14:57:01
start mi 0 14:57:01
estimation_first_dask.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi 1 14:57:01
start mi 2 14:57:01
start mi 3 14:57:02
[[-2.11809225]]
/users/k1201869/wang_model/wang_functions_old.py:459: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_first_dask.py:281: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation_first_dask.py:288: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_first_dask.py:292: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_first_dask.py:296: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
start ppi 1 14:57:16
start mi 0 14:57:16
start mi 1 14:57:16
start mi 2 14:57:17
start mi 3 14:57:17
[[-2.18060132]]
goodness of fit correlation [0.17662049]
0.34264525503695076
[5.23079640e-01 4.84936853e-01 5.35050752e-01 4.80941994e-01
 4.93093720e-01 5.34251247e-01 5.86253573e-01 5.36349019e-01
 4.85669374e-01 4.84565762e-01 5.01574621e-01 4.88101671e-01
 4.88313227e-01 5.21462605e-01 4.92608814e-01 5.17023868e-01
 5.66258486e-01 4.97210880e-01 4.89096824e-01 4.95536792e-01
 6.28579766e-01 5.37765500e-01 5.50053992e-01 6.27164434e-01
 4.92940758e-01 5.58852518e-01 5.66760925e-01 5.76220537e-01
 5.69576581e-01 5.24688152e-01 4.83625448e-01 5.04690409e-01
 5.00858329e-01 4.84043482e-01 4.98062175e-01 5.32018164e-01
 5.18552638e-01 5.13074958e-01 4.92089474e-01 5.26709646e-01
 5.35815038e-01 5.34304294e-01 5.18541583e-01 5.07795776e-01
 5.11353721e-01 5.27338972e-01 5.09065842e-01 5.50238309e-01
 5.10511759e-01 5.56354839e-01 5.44233578e-01 5.07075103e-01
 5.12636627e-01 5.37718239e-01 5.67334308e-01 5.63571836e-01
 6.47664652e-01 5.83559042e-01 5.23283179e-01 5.79057844e-01
 5.60161423e-01 6.04365199e-01 5.53923941e-01 5.69333312e-01
 5.19287882e-01 5.05557696e-01 5.17409941e-01 5.56332224e-01
 3.61504794e-01 2.62364992e-01 3.31113153e-01 2.64948710e-01
 2.78107126e-01 3.87356991e-01 3.48532816e-01 3.64658707e-01
 2.72640757e-01 2.57816612e-01 3.10736092e-01 2.66703186e-01
 2.66916910e-01 3.50054156e-01 2.74018826e-01 3.55549137e-01
 3.39581840e-01 2.91921596e-01 2.79221239e-01 2.76376090e-01
 3.44591748e-01 3.66393977e-01 3.32332986e-01 3.46198448e-01
 2.83173075e-01 3.22745952e-01 3.31486146e-01 3.34909265e-01
 4.03152100e-01 3.42043351e-01 3.02035488e-01 2.98894128e-01
 3.39392651e-01 2.28501173e-01 3.46631046e-01 3.75015833e-01
 4.00065430e-01 3.76144839e-01 3.15449281e-01 3.61597843e-01
 3.43055113e-01 3.88945224e-01 3.71888894e-01 3.60841729e-01
 3.49145187e-01 3.41188730e-01 3.46653148e-01 3.43707953e-01
 3.56616844e-01 3.43208995e-01 3.72187576e-01 3.36795262e-01
 3.74637473e-01 3.77062184e-01 3.49517657e-01 3.51898722e-01
 3.09186687e-01 3.42694517e-01 3.77584564e-01 3.48956498e-01
 2.85477338e-01 3.35366576e-01 3.74885794e-01 3.58978795e-01
 3.55763949e-01 3.44481975e-01 3.72131323e-01 3.63345103e-01
 1.59671197e+00 1.01336121e-03]
