4
subject 1004_01_MR
start cluster 09:44:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34178 instead
  warnings.warn(
0
parallel submitted
09:44:36
parallel finished
09:49:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:49:58
start mi0
09:49:58
start mi0 range(p) 1 loop
09:49:58
finish mi0 range(p) 1 loop
09:49:58
start mi0 range(p) 2 loop
09:49:58
finish mi0 range(p) 2 loop
09:49:58
start mi0 range(NT) loop
09:49:58
finish mi0 range(NT) loop
09:49:59
start mi0 range(n) loop
09:49:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:49:59
start mi0 range(n) 2loop
09:49:59
finish mi0 range(n) 2loop
09:49:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:49:59
start mi1 range(p) 1 loop
09:49:59
finish mi1 range(p) 1 loop
09:49:59
start mi1 range(p) 2 loop
09:49:59
finish mi1 range(p) 2 loop
09:49:59
start mi1 range(NT) loop
09:49:59
finish mi1 range(NT) loop
09:49:59
start mi1 range(n) loop
09:49:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:49:59
start mi1 range(n) 2loop
09:49:59
finish mi1 range(n) 2loop
09:49:59
[[-2.88589849]]
end mi1 loop
09:49:59
estep
09:49:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:50:14
start ppi1
09:50:14
start mi0
09:50:14
start mi0 range(p) 1 loop
09:50:14
finish mi0 range(p) 1 loop
09:50:14
start mi0 range(p) 2 loop
09:50:14
finish mi0 range(p) 2 loop
09:50:14
start mi0 range(NT) loop
09:50:14
finish mi0 range(NT) loop
09:50:14
start mi0 range(n) loop
09:50:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:50:14
start mi0 range(n) 2loop
09:50:14
finish mi0 range(n) 2loop
09:50:14
start mi1
09:50:14
start mi1 range(p) 1 loop
09:50:14
finish mi1 range(p) 1 loop
09:50:14
start mi1 range(p) 2 loop
09:50:14
finish mi1 range(p) 2 loop
09:50:14
start mi1 range(NT) loop
09:50:14
finish mi1 range(NT) loop
09:50:14
start mi1 range(n) loop
09:50:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:50:14
start mi1 range(n) 2loop
09:50:14
finish mi1 range(n) 2loop
09:50:14
[[-2.88589849]]
end mi1 loop
09:50:14
estep
09:50:14
end estep
09:50:29
end pa09:50:29
goodness of fit correlation [0.08815424]
start cluster 09:50:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42405 instead
  warnings.warn(
1
parallel submitted
09:50:45
parallel finished
09:57:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:57:26
start mi0
09:57:26
start mi0 range(p) 1 loop
09:57:26
finish mi0 range(p) 1 loop
09:57:26
start mi0 range(p) 2 loop
09:57:26
finish mi0 range(p) 2 loop
09:57:26
start mi0 range(NT) loop
09:57:26
finish mi0 range(NT) loop
09:57:26
start mi0 range(n) loop
09:57:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:57:26
start mi0 range(n) 2loop
09:57:26
finish mi0 range(n) 2loop
09:57:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:57:26
start mi1 range(p) 1 loop
09:57:26
finish mi1 range(p) 1 loop
09:57:26
start mi1 range(p) 2 loop
09:57:26
finish mi1 range(p) 2 loop
09:57:26
start mi1 range(NT) loop
09:57:26
finish mi1 range(NT) loop
09:57:26
start mi1 range(n) loop
09:57:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:57:26
start mi1 range(n) 2loop
09:57:26
finish mi1 range(n) 2loop
09:57:27
[[-2.9056123]]
end mi1 loop
09:57:27
estep
09:57:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:57:42
start ppi1
09:57:42
start mi0
09:57:42
start mi0 range(p) 1 loop
09:57:42
finish mi0 range(p) 1 loop
09:57:42
start mi0 range(p) 2 loop
09:57:42
finish mi0 range(p) 2 loop
09:57:42
start mi0 range(NT) loop
09:57:42
finish mi0 range(NT) loop
09:57:42
start mi0 range(n) loop
09:57:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:57:42
start mi0 range(n) 2loop
09:57:42
finish mi0 range(n) 2loop
09:57:42
start mi1
09:57:42
start mi1 range(p) 1 loop
09:57:42
finish mi1 range(p) 1 loop
09:57:42
start mi1 range(p) 2 loop
09:57:42
finish mi1 range(p) 2 loop
09:57:42
start mi1 range(NT) loop
09:57:42
finish mi1 range(NT) loop
09:57:42
start mi1 range(n) loop
09:57:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:57:42
start mi1 range(n) 2loop
09:57:42
finish mi1 range(n) 2loop
09:57:42
[[-2.96811475]]
end mi1 loop
09:57:42
estep
09:57:42
end estep
09:57:57
end pa09:57:57
goodness of fit correlation [0.20441696]
start cluster 09:57:57
2
parallel submitted
09:58:15
parallel finished
10:01:55
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:01:58
start mi0
10:01:58
start mi0 range(p) 1 loop
10:01:58
finish mi0 range(p) 1 loop
10:01:58
start mi0 range(p) 2 loop
10:01:58
finish mi0 range(p) 2 loop
10:01:58
start mi0 range(NT) loop
10:01:58
finish mi0 range(NT) loop
10:01:58
start mi0 range(n) loop
10:01:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:01:58
start mi0 range(n) 2loop
10:01:58
finish mi0 range(n) 2loop
10:01:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:01:58
start mi1 range(p) 1 loop
10:01:58
finish mi1 range(p) 1 loop
10:01:58
start mi1 range(p) 2 loop
10:01:58
finish mi1 range(p) 2 loop
10:01:58
start mi1 range(NT) loop
10:01:58
finish mi1 range(NT) loop
10:01:59
start mi1 range(n) loop
10:01:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:01:59
start mi1 range(n) 2loop
10:01:59
finish mi1 range(n) 2loop
10:01:59
[[-3.01807973]]
end mi1 loop
10:01:59
estep
10:01:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:02:14
start ppi1
10:02:14
start mi0
10:02:14
start mi0 range(p) 1 loop
10:02:14
finish mi0 range(p) 1 loop
10:02:14
start mi0 range(p) 2 loop
10:02:14
finish mi0 range(p) 2 loop
10:02:14
start mi0 range(NT) loop
10:02:14
finish mi0 range(NT) loop
10:02:14
start mi0 range(n) loop
10:02:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:02:14
start mi0 range(n) 2loop
10:02:14
finish mi0 range(n) 2loop
10:02:14
start mi1
10:02:14
start mi1 range(p) 1 loop
10:02:14
finish mi1 range(p) 1 loop
10:02:14
start mi1 range(p) 2 loop
10:02:14
finish mi1 range(p) 2 loop
10:02:14
start mi1 range(NT) loop
10:02:14
finish mi1 range(NT) loop
10:02:14
start mi1 range(n) loop
10:02:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:02:14
start mi1 range(n) 2loop
10:02:14
finish mi1 range(n) 2loop
10:02:14
[[-3.08056679]]
end mi1 loop
10:02:14
estep
10:02:14
end estep
10:02:29
end pa10:02:29
goodness of fit correlation [0.27272384]
start cluster 10:02:29
3
parallel submitted
10:02:44
parallel finished
10:08:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:08:43
start mi0
10:08:43
start mi0 range(p) 1 loop
10:08:43
finish mi0 range(p) 1 loop
10:08:43
start mi0 range(p) 2 loop
10:08:43
finish mi0 range(p) 2 loop
10:08:43
start mi0 range(NT) loop
10:08:44
finish mi0 range(NT) loop
10:08:44
start mi0 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:08:44
start mi0 range(n) 2loop
10:08:44
finish mi0 range(n) 2loop
10:08:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:08:44
start mi1 range(p) 1 loop
10:08:44
finish mi1 range(p) 1 loop
10:08:44
start mi1 range(p) 2 loop
10:08:44
finish mi1 range(p) 2 loop
10:08:44
start mi1 range(NT) loop
10:08:44
finish mi1 range(NT) loop
10:08:44
start mi1 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:08:44
start mi1 range(n) 2loop
10:08:44
finish mi1 range(n) 2loop
10:08:44
[[-3.06934998]]
end mi1 loop
10:08:44
estep
10:08:44
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:08:59
start ppi1
10:08:59
start mi0
10:08:59
start mi0 range(p) 1 loop
10:08:59
finish mi0 range(p) 1 loop
10:08:59
start mi0 range(p) 2 loop
10:08:59
finish mi0 range(p) 2 loop
10:08:59
start mi0 range(NT) loop
10:08:59
finish mi0 range(NT) loop
10:08:59
start mi0 range(n) loop
10:08:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:08:59
start mi0 range(n) 2loop
10:08:59
finish mi0 range(n) 2loop
10:08:59
start mi1
10:08:59
start mi1 range(p) 1 loop
10:08:59
finish mi1 range(p) 1 loop
10:08:59
start mi1 range(p) 2 loop
10:08:59
finish mi1 range(p) 2 loop
10:08:59
start mi1 range(NT) loop
10:08:59
finish mi1 range(NT) loop
10:08:59
start mi1 range(n) loop
10:08:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:08:59
start mi1 range(n) 2loop
10:08:59
finish mi1 range(n) 2loop
10:09:00
[[-3.13181024]]
end mi1 loop
10:09:00
estep
10:09:00
end estep
10:09:14
end pa10:09:14
goodness of fit correlation [0.31461899]
start cluster 10:09:14
4
parallel submitted
10:09:31
parallel finished
10:15:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:15:17
start mi0
10:15:17
start mi0 range(p) 1 loop
10:15:17
finish mi0 range(p) 1 loop
10:15:17
start mi0 range(p) 2 loop
10:15:17
finish mi0 range(p) 2 loop
10:15:17
start mi0 range(NT) loop
10:15:18
finish mi0 range(NT) loop
10:15:18
start mi0 range(n) loop
10:15:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:15:18
start mi0 range(n) 2loop
10:15:18
finish mi0 range(n) 2loop
10:15:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:15:18
start mi1 range(p) 1 loop
10:15:18
finish mi1 range(p) 1 loop
10:15:18
start mi1 range(p) 2 loop
10:15:18
finish mi1 range(p) 2 loop
10:15:18
start mi1 range(NT) loop
10:15:18
finish mi1 range(NT) loop
10:15:18
start mi1 range(n) loop
10:15:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:15:18
start mi1 range(n) 2loop
10:15:18
finish mi1 range(n) 2loop
10:15:18
[[-3.12597481]]
end mi1 loop
10:15:18
estep
10:15:18
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:15:33
start ppi1
10:15:33
start mi0
10:15:33
start mi0 range(p) 1 loop
10:15:33
finish mi0 range(p) 1 loop
10:15:33
start mi0 range(p) 2 loop
10:15:33
finish mi0 range(p) 2 loop
10:15:33
start mi0 range(NT) loop
10:15:33
finish mi0 range(NT) loop
10:15:33
start mi0 range(n) loop
10:15:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:15:33
start mi0 range(n) 2loop
10:15:33
finish mi0 range(n) 2loop
10:15:33
start mi1
10:15:33
start mi1 range(p) 1 loop
10:15:33
finish mi1 range(p) 1 loop
10:15:33
start mi1 range(p) 2 loop
10:15:33
finish mi1 range(p) 2 loop
10:15:33
start mi1 range(NT) loop
10:15:33
finish mi1 range(NT) loop
10:15:33
start mi1 range(n) loop
10:15:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:15:33
start mi1 range(n) 2loop
10:15:33
finish mi1 range(n) 2loop
10:15:34
start mi2
10:15:34
start mi2 range(p) 1 loop
10:15:34
finish mi2 range(p) 1 loop
10:15:34
start mi2 range(p) 2 loop
10:15:34
finish mi2 range(p) 2 loop
10:15:34
start mi2 range(NT) loop
10:15:34
finish mi2 range(NT) loop
10:15:34
start mi2 range(n) loop
10:15:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:15:34
start mi2 range(n) 2loop
10:15:34
finish mi2 range(n) 2loop
10:15:34
[[-3.18849576]]
end mi2 loop
10:15:34
estep
10:15:34
end estep
10:15:48
end pa10:15:48
goodness of fit correlation [0.30845733]
start cluster 10:15:48
5
parallel submitted
10:16:03
parallel finished
10:22:05
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:22:09
start mi0
10:22:09
start mi0 range(p) 1 loop
10:22:09
finish mi0 range(p) 1 loop
10:22:09
start mi0 range(p) 2 loop
10:22:09
finish mi0 range(p) 2 loop
10:22:09
start mi0 range(NT) loop
10:22:09
finish mi0 range(NT) loop
10:22:09
start mi0 range(n) loop
10:22:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:22:09
start mi0 range(n) 2loop
10:22:09
finish mi0 range(n) 2loop
10:22:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:22:09
start mi1 range(p) 1 loop
10:22:09
finish mi1 range(p) 1 loop
10:22:09
start mi1 range(p) 2 loop
10:22:09
finish mi1 range(p) 2 loop
10:22:09
start mi1 range(NT) loop
10:22:10
finish mi1 range(NT) loop
10:22:10
start mi1 range(n) loop
10:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:22:10
start mi1 range(n) 2loop
10:22:10
finish mi1 range(n) 2loop
10:22:10
[[-3.09084457]]
end mi1 loop
10:22:10
estep
10:22:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:22:25
start ppi1
10:22:25
start mi0
10:22:25
start mi0 range(p) 1 loop
10:22:25
finish mi0 range(p) 1 loop
10:22:25
start mi0 range(p) 2 loop
10:22:25
finish mi0 range(p) 2 loop
10:22:25
start mi0 range(NT) loop
10:22:25
finish mi0 range(NT) loop
10:22:25
start mi0 range(n) loop
10:22:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:22:25
start mi0 range(n) 2loop
10:22:25
finish mi0 range(n) 2loop
10:22:25
start mi1
10:22:25
start mi1 range(p) 1 loop
10:22:25
finish mi1 range(p) 1 loop
10:22:25
start mi1 range(p) 2 loop
10:22:25
finish mi1 range(p) 2 loop
10:22:25
start mi1 range(NT) loop
10:22:25
finish mi1 range(NT) loop
10:22:25
start mi1 range(n) loop
10:22:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:22:25
start mi1 range(n) 2loop
10:22:25
finish mi1 range(n) 2loop
10:22:25
start mi2
10:22:25
start mi2 range(p) 1 loop
10:22:25
finish mi2 range(p) 1 loop
10:22:25
start mi2 range(p) 2 loop
10:22:25
finish mi2 range(p) 2 loop
10:22:25
start mi2 range(NT) loop
10:22:25
finish mi2 range(NT) loop
10:22:25
start mi2 range(n) loop
10:22:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:22:26
start mi2 range(n) 2loop
10:22:26
finish mi2 range(n) 2loop
10:22:26
[[-3.15334461]]
end mi2 loop
10:22:26
estep
10:22:26
end estep
10:22:41
end pa10:22:41
goodness of fit correlation [0.26802975]
start cluster 10:22:41
6
parallel submitted
10:22:58
parallel finished
10:28:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:28:53
start mi0
10:28:53
start mi0 range(p) 1 loop
10:28:53
finish mi0 range(p) 1 loop
10:28:53
start mi0 range(p) 2 loop
10:28:53
finish mi0 range(p) 2 loop
10:28:53
start mi0 range(NT) loop
10:28:53
finish mi0 range(NT) loop
10:28:53
start mi0 range(n) loop
10:28:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:28:53
start mi0 range(n) 2loop
10:28:53
finish mi0 range(n) 2loop
10:28:53
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:28:53
start mi1 range(p) 1 loop
10:28:53
finish mi1 range(p) 1 loop
10:28:53
start mi1 range(p) 2 loop
10:28:53
finish mi1 range(p) 2 loop
10:28:53
start mi1 range(NT) loop
10:28:53
finish mi1 range(NT) loop
10:28:53
start mi1 range(n) loop
10:28:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:28:53
start mi1 range(n) 2loop
10:28:53
finish mi1 range(n) 2loop
10:28:53
[[-3.09992993]]
end mi1 loop
10:28:53
estep
10:28:53
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:29:09
start ppi1
10:29:09
start mi0
10:29:09
start mi0 range(p) 1 loop
10:29:09
finish mi0 range(p) 1 loop
10:29:09
start mi0 range(p) 2 loop
10:29:09
finish mi0 range(p) 2 loop
10:29:09
start mi0 range(NT) loop
10:29:09
finish mi0 range(NT) loop
10:29:09
start mi0 range(n) loop
10:29:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:29:09
start mi0 range(n) 2loop
10:29:09
finish mi0 range(n) 2loop
10:29:09
start mi1
10:29:09
start mi1 range(p) 1 loop
10:29:09
finish mi1 range(p) 1 loop
10:29:09
start mi1 range(p) 2 loop
10:29:09
finish mi1 range(p) 2 loop
10:29:09
start mi1 range(NT) loop
10:29:09
finish mi1 range(NT) loop
10:29:09
start mi1 range(n) loop
10:29:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:29:09
start mi1 range(n) 2loop
10:29:09
finish mi1 range(n) 2loop
10:29:09
start mi2
10:29:09
start mi2 range(p) 1 loop
10:29:09
finish mi2 range(p) 1 loop
10:29:09
start mi2 range(p) 2 loop
10:29:09
finish mi2 range(p) 2 loop
10:29:09
start mi2 range(NT) loop
10:29:09
finish mi2 range(NT) loop
10:29:09
start mi2 range(n) loop
10:29:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:29:09
start mi2 range(n) 2loop
10:29:09
finish mi2 range(n) 2loop
10:29:10
[[-3.16243362]]
end mi2 loop
10:29:10
estep
10:29:10
end estep
10:29:25
end pa10:29:25
goodness of fit correlation [0.27638396]
start cluster 10:29:25
7
parallel submitted
10:29:42
parallel finished
10:32:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:32:56
start mi0
10:32:56
start mi0 range(p) 1 loop
10:32:56
finish mi0 range(p) 1 loop
10:32:56
start mi0 range(p) 2 loop
10:32:56
finish mi0 range(p) 2 loop
10:32:56
start mi0 range(NT) loop
10:32:56
finish mi0 range(NT) loop
10:32:56
start mi0 range(n) loop
10:32:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:32:56
start mi0 range(n) 2loop
10:32:56
finish mi0 range(n) 2loop
10:32:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:32:56
start mi1 range(p) 1 loop
10:32:56
finish mi1 range(p) 1 loop
10:32:56
start mi1 range(p) 2 loop
10:32:56
finish mi1 range(p) 2 loop
10:32:56
start mi1 range(NT) loop
10:32:56
finish mi1 range(NT) loop
10:32:56
start mi1 range(n) loop
10:32:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:32:56
start mi1 range(n) 2loop
10:32:56
finish mi1 range(n) 2loop
10:32:56
[[-3.08021347]]
end mi1 loop
10:32:56
estep
10:32:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:33:12
start ppi1
10:33:12
start mi0
10:33:12
start mi0 range(p) 1 loop
10:33:12
finish mi0 range(p) 1 loop
10:33:12
start mi0 range(p) 2 loop
10:33:12
finish mi0 range(p) 2 loop
10:33:12
start mi0 range(NT) loop
10:33:12
finish mi0 range(NT) loop
10:33:12
start mi0 range(n) loop
10:33:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:33:12
start mi0 range(n) 2loop
10:33:12
finish mi0 range(n) 2loop
10:33:12
start mi1
10:33:12
start mi1 range(p) 1 loop
10:33:12
finish mi1 range(p) 1 loop
10:33:12
start mi1 range(p) 2 loop
10:33:12
finish mi1 range(p) 2 loop
10:33:12
start mi1 range(NT) loop
10:33:12
finish mi1 range(NT) loop
10:33:12
start mi1 range(n) loop
10:33:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:33:12
start mi1 range(n) 2loop
10:33:12
finish mi1 range(n) 2loop
10:33:12
[[-3.14266337]]
end mi1 loop
10:33:12
estep
10:33:12
end estep
10:33:28
end pa10:33:28
goodness of fit correlation [0.24791152]
start cluster 10:33:28
8
parallel submitted
10:33:45
parallel finished
10:36:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:36:44
start mi0
10:36:44
start mi0 range(p) 1 loop
10:36:44
finish mi0 range(p) 1 loop
10:36:44
start mi0 range(p) 2 loop
10:36:44
finish mi0 range(p) 2 loop
10:36:44
start mi0 range(NT) loop
10:36:44
finish mi0 range(NT) loop
10:36:44
start mi0 range(n) loop
10:36:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:36:44
start mi0 range(n) 2loop
10:36:44
finish mi0 range(n) 2loop
10:36:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:36:44
start mi1 range(p) 1 loop
10:36:44
finish mi1 range(p) 1 loop
10:36:44
start mi1 range(p) 2 loop
10:36:44
finish mi1 range(p) 2 loop
10:36:44
start mi1 range(NT) loop
10:36:44
finish mi1 range(NT) loop
10:36:44
start mi1 range(n) loop
10:36:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:36:44
start mi1 range(n) 2loop
10:36:44
finish mi1 range(n) 2loop
10:36:44
[[-3.10286134]]
end mi1 loop
10:36:44
estep
10:36:44
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:36:59
start ppi1
10:36:59
start mi0
10:36:59
start mi0 range(p) 1 loop
10:36:59
finish mi0 range(p) 1 loop
10:36:59
start mi0 range(p) 2 loop
10:36:59
finish mi0 range(p) 2 loop
10:36:59
start mi0 range(NT) loop
10:36:59
finish mi0 range(NT) loop
10:36:59
start mi0 range(n) loop
10:36:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:36:59
start mi0 range(n) 2loop
10:36:59
finish mi0 range(n) 2loop
10:36:59
start mi1
10:36:59
start mi1 range(p) 1 loop
10:36:59
finish mi1 range(p) 1 loop
10:36:59
start mi1 range(p) 2 loop
10:36:59
finish mi1 range(p) 2 loop
10:36:59
start mi1 range(NT) loop
10:36:59
finish mi1 range(NT) loop
10:36:59
start mi1 range(n) loop
10:36:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:36:59
start mi1 range(n) 2loop
10:36:59
finish mi1 range(n) 2loop
10:36:59
start mi2
10:36:59
start mi2 range(p) 1 loop
10:36:59
finish mi2 range(p) 1 loop
10:36:59
start mi2 range(p) 2 loop
10:36:59
finish mi2 range(p) 2 loop
10:36:59
start mi2 range(NT) loop
10:36:59
finish mi2 range(NT) loop
10:36:59
start mi2 range(n) loop
10:36:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:36:59
start mi2 range(n) 2loop
10:36:59
finish mi2 range(n) 2loop
10:36:59
[[-3.16536643]]
end mi2 loop
10:36:59
estep
10:36:59
end estep
10:37:15
end pa10:37:15
goodness of fit correlation [0.2977639]
start cluster 10:37:15
9
parallel submitted
10:37:32
parallel finished
10:41:35
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:41:40
start mi0
10:41:40
start mi0 range(p) 1 loop
10:41:40
finish mi0 range(p) 1 loop
10:41:40
start mi0 range(p) 2 loop
10:41:40
finish mi0 range(p) 2 loop
10:41:40
start mi0 range(NT) loop
10:41:40
finish mi0 range(NT) loop
10:41:40
start mi0 range(n) loop
10:41:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:41:40
start mi0 range(n) 2loop
10:41:40
finish mi0 range(n) 2loop
10:41:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:41:40
start mi1 range(p) 1 loop
10:41:40
finish mi1 range(p) 1 loop
10:41:40
start mi1 range(p) 2 loop
10:41:40
finish mi1 range(p) 2 loop
10:41:40
start mi1 range(NT) loop
10:41:40
finish mi1 range(NT) loop
10:41:40
start mi1 range(n) loop
10:41:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:41:40
start mi1 range(n) 2loop
10:41:40
finish mi1 range(n) 2loop
10:41:41
[[-3.06153776]]
end mi1 loop
10:41:41
estep
10:41:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:41:56
start ppi1
10:41:56
start mi0
10:41:56
start mi0 range(p) 1 loop
10:41:56
finish mi0 range(p) 1 loop
10:41:56
start mi0 range(p) 2 loop
10:41:56
finish mi0 range(p) 2 loop
10:41:56
start mi0 range(NT) loop
10:41:56
finish mi0 range(NT) loop
10:41:56
start mi0 range(n) loop
10:41:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:41:56
start mi0 range(n) 2loop
10:41:56
finish mi0 range(n) 2loop
10:41:56
start mi1
10:41:56
start mi1 range(p) 1 loop
10:41:56
finish mi1 range(p) 1 loop
10:41:56
start mi1 range(p) 2 loop
10:41:56
finish mi1 range(p) 2 loop
10:41:56
start mi1 range(NT) loop
10:41:56
finish mi1 range(NT) loop
10:41:56
start mi1 range(n) loop
10:41:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:41:56
start mi1 range(n) 2loop
10:41:56
finish mi1 range(n) 2loop
10:41:57
[[-3.12400432]]
end mi1 loop
10:41:57
estep
10:41:57
end estep
10:42:12
end pa10:42:12
goodness of fit correlation [0.2520232]
start cluster 10:42:12
10
parallel submitted
10:42:30
parallel finished
10:46:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:46:45
start mi0
10:46:45
start mi0 range(p) 1 loop
10:46:45
finish mi0 range(p) 1 loop
10:46:45
start mi0 range(p) 2 loop
10:46:45
finish mi0 range(p) 2 loop
10:46:45
start mi0 range(NT) loop
10:46:45
finish mi0 range(NT) loop
10:46:45
start mi0 range(n) loop
10:46:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:46:45
start mi0 range(n) 2loop
10:46:45
finish mi0 range(n) 2loop
10:46:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:46:45
start mi1 range(p) 1 loop
10:46:45
finish mi1 range(p) 1 loop
10:46:45
start mi1 range(p) 2 loop
10:46:45
finish mi1 range(p) 2 loop
10:46:45
start mi1 range(NT) loop
10:46:45
finish mi1 range(NT) loop
10:46:45
start mi1 range(n) loop
10:46:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:46:45
start mi1 range(n) 2loop
10:46:45
finish mi1 range(n) 2loop
10:46:45
[[-3.05923984]]
end mi1 loop
10:46:45
estep
10:46:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:46:59
start ppi1
10:46:59
start mi0
10:46:59
start mi0 range(p) 1 loop
10:46:59
finish mi0 range(p) 1 loop
10:46:59
start mi0 range(p) 2 loop
10:46:59
finish mi0 range(p) 2 loop
10:46:59
start mi0 range(NT) loop
10:47:00
finish mi0 range(NT) loop
10:47:00
start mi0 range(n) loop
10:47:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:47:00
start mi0 range(n) 2loop
10:47:00
finish mi0 range(n) 2loop
10:47:00
start mi1
10:47:00
start mi1 range(p) 1 loop
10:47:00
finish mi1 range(p) 1 loop
10:47:00
start mi1 range(p) 2 loop
10:47:00
finish mi1 range(p) 2 loop
10:47:00
start mi1 range(NT) loop
10:47:00
finish mi1 range(NT) loop
10:47:00
start mi1 range(n) loop
10:47:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:47:00
start mi1 range(n) 2loop
10:47:00
finish mi1 range(n) 2loop
10:47:00
[[-3.12170809]]
end mi1 loop
10:47:00
estep
10:47:00
end estep
10:47:14
end pa10:47:14
goodness of fit correlation [0.24197644]
start cluster 10:47:14
11
parallel submitted
10:47:33
parallel finished
10:51:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:51:47
start mi0
10:51:47
start mi0 range(p) 1 loop
10:51:47
finish mi0 range(p) 1 loop
10:51:47
start mi0 range(p) 2 loop
10:51:47
finish mi0 range(p) 2 loop
10:51:47
start mi0 range(NT) loop
10:51:47
finish mi0 range(NT) loop
10:51:48
start mi0 range(n) loop
10:51:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:51:48
start mi0 range(n) 2loop
10:51:48
finish mi0 range(n) 2loop
10:51:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:51:48
start mi1 range(p) 1 loop
10:51:48
finish mi1 range(p) 1 loop
10:51:48
start mi1 range(p) 2 loop
10:51:48
finish mi1 range(p) 2 loop
10:51:48
start mi1 range(NT) loop
10:51:48
finish mi1 range(NT) loop
10:51:48
start mi1 range(n) loop
10:51:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:51:48
start mi1 range(n) 2loop
10:51:48
finish mi1 range(n) 2loop
10:51:48
[[-3.03027339]]
end mi1 loop
10:51:48
estep
10:51:48
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:52:02
start ppi1
10:52:02
start mi0
10:52:02
start mi0 range(p) 1 loop
10:52:02
finish mi0 range(p) 1 loop
10:52:02
start mi0 range(p) 2 loop
10:52:02
finish mi0 range(p) 2 loop
10:52:02
start mi0 range(NT) loop
10:52:02
finish mi0 range(NT) loop
10:52:02
start mi0 range(n) loop
10:52:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:52:02
start mi0 range(n) 2loop
10:52:02
finish mi0 range(n) 2loop
10:52:02
start mi1
10:52:02
start mi1 range(p) 1 loop
10:52:02
finish mi1 range(p) 1 loop
10:52:02
start mi1 range(p) 2 loop
10:52:02
finish mi1 range(p) 2 loop
10:52:02
start mi1 range(NT) loop
10:52:02
finish mi1 range(NT) loop
10:52:02
start mi1 range(n) loop
10:52:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:52:02
start mi1 range(n) 2loop
10:52:02
finish mi1 range(n) 2loop
10:52:02
[[-3.09275684]]
end mi1 loop
10:52:02
estep
10:52:02
end estep
10:52:17
end pa10:52:17
goodness of fit correlation [0.23254209]
start cluster 10:52:17
12
parallel submitted
10:52:38
parallel finished
10:54:20
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:54:28
start mi0
10:54:28
start mi0 range(p) 1 loop
10:54:28
finish mi0 range(p) 1 loop
10:54:28
start mi0 range(p) 2 loop
10:54:28
finish mi0 range(p) 2 loop
10:54:28
start mi0 range(NT) loop
10:54:28
finish mi0 range(NT) loop
10:54:28
start mi0 range(n) loop
10:54:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:54:28
start mi0 range(n) 2loop
10:54:28
finish mi0 range(n) 2loop
10:54:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:54:28
start mi1 range(p) 1 loop
10:54:28
finish mi1 range(p) 1 loop
10:54:28
start mi1 range(p) 2 loop
10:54:28
finish mi1 range(p) 2 loop
10:54:28
start mi1 range(NT) loop
10:54:28
finish mi1 range(NT) loop
10:54:28
start mi1 range(n) loop
10:54:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:54:29
start mi1 range(n) 2loop
10:54:29
finish mi1 range(n) 2loop
10:54:29
[[-3.03373542]]
end mi1 loop
10:54:29
estep
10:54:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:54:43
start ppi1
10:54:43
start mi0
10:54:43
start mi0 range(p) 1 loop
10:54:43
finish mi0 range(p) 1 loop
10:54:43
start mi0 range(p) 2 loop
10:54:43
finish mi0 range(p) 2 loop
10:54:43
start mi0 range(NT) loop
10:54:43
finish mi0 range(NT) loop
10:54:43
start mi0 range(n) loop
10:54:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:54:43
start mi0 range(n) 2loop
10:54:43
finish mi0 range(n) 2loop
10:54:43
start mi1
10:54:43
start mi1 range(p) 1 loop
10:54:43
finish mi1 range(p) 1 loop
10:54:43
start mi1 range(p) 2 loop
10:54:43
finish mi1 range(p) 2 loop
10:54:43
start mi1 range(NT) loop
10:54:43
finish mi1 range(NT) loop
10:54:43
start mi1 range(n) loop
10:54:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:54:43
start mi1 range(n) 2loop
10:54:43
finish mi1 range(n) 2loop
10:54:43
[[-3.09621757]]
end mi1 loop
10:54:43
estep
10:54:43
end estep
10:54:57
end pa10:54:57
goodness of fit correlation [0.3123159]
start cluster 10:54:57
13
parallel submitted
10:55:14
parallel finished
10:58:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:58:19
start mi0
10:58:19
start mi0 range(p) 1 loop
10:58:19
finish mi0 range(p) 1 loop
10:58:19
start mi0 range(p) 2 loop
10:58:19
finish mi0 range(p) 2 loop
10:58:19
start mi0 range(NT) loop
10:58:19
finish mi0 range(NT) loop
10:58:19
start mi0 range(n) loop
10:58:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:58:19
start mi0 range(n) 2loop
10:58:19
finish mi0 range(n) 2loop
10:58:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:58:19
start mi1 range(p) 1 loop
10:58:19
finish mi1 range(p) 1 loop
10:58:19
start mi1 range(p) 2 loop
10:58:19
finish mi1 range(p) 2 loop
10:58:19
start mi1 range(NT) loop
10:58:19
finish mi1 range(NT) loop
10:58:19
start mi1 range(n) loop
10:58:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:58:19
start mi1 range(n) 2loop
10:58:19
finish mi1 range(n) 2loop
10:58:19
start mi2
10:58:19
start mi2 range(p) 1 loop
10:58:19
finish mi2 range(p) 1 loop
10:58:19
start mi2 range(p) 2 loop
10:58:19
finish mi2 range(p) 2 loop
10:58:19
start mi2 range(NT) loop
10:58:19
finish mi2 range(NT) loop
10:58:19
start mi2 range(n) loop
10:58:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:58:19
start mi2 range(n) 2loop
10:58:19
finish mi2 range(n) 2loop
10:58:19
[[-3.1898152]]
end mi2 loop
10:58:19
estep
10:58:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:58:34
start ppi1
10:58:34
start mi0
10:58:34
start mi0 range(p) 1 loop
10:58:34
finish mi0 range(p) 1 loop
10:58:34
start mi0 range(p) 2 loop
10:58:34
finish mi0 range(p) 2 loop
10:58:34
start mi0 range(NT) loop
10:58:34
finish mi0 range(NT) loop
10:58:34
start mi0 range(n) loop
10:58:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:58:34
start mi0 range(n) 2loop
10:58:34
finish mi0 range(n) 2loop
10:58:35
start mi1
10:58:35
start mi1 range(p) 1 loop
10:58:35
finish mi1 range(p) 1 loop
10:58:35
start mi1 range(p) 2 loop
10:58:35
finish mi1 range(p) 2 loop
10:58:35
start mi1 range(NT) loop
10:58:35
finish mi1 range(NT) loop
10:58:35
start mi1 range(n) loop
10:58:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:58:35
start mi1 range(n) 2loop
10:58:35
finish mi1 range(n) 2loop
10:58:35
start mi2
10:58:35
start mi2 range(p) 1 loop
10:58:35
finish mi2 range(p) 1 loop
10:58:35
start mi2 range(p) 2 loop
10:58:35
finish mi2 range(p) 2 loop
10:58:35
start mi2 range(NT) loop
10:58:35
finish mi2 range(NT) loop
10:58:35
start mi2 range(n) loop
10:58:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:58:35
start mi2 range(n) 2loop
10:58:35
finish mi2 range(n) 2loop
10:58:35
[[-3.25230715]]
end mi2 loop
10:58:35
estep
10:58:35
end estep
10:58:51
end pa10:58:51
goodness of fit correlation [0.33708002]
start cluster 10:58:51
14
parallel submitted
10:59:09
parallel finished
11:02:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:02:25
start mi0
11:02:25
start mi0 range(p) 1 loop
11:02:25
finish mi0 range(p) 1 loop
11:02:25
start mi0 range(p) 2 loop
11:02:25
finish mi0 range(p) 2 loop
11:02:25
start mi0 range(NT) loop
11:02:25
finish mi0 range(NT) loop
11:02:25
start mi0 range(n) loop
11:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:02:25
start mi0 range(n) 2loop
11:02:25
finish mi0 range(n) 2loop
11:02:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:02:25
start mi1 range(p) 1 loop
11:02:25
finish mi1 range(p) 1 loop
11:02:25
start mi1 range(p) 2 loop
11:02:25
finish mi1 range(p) 2 loop
11:02:25
start mi1 range(NT) loop
11:02:25
finish mi1 range(NT) loop
11:02:25
start mi1 range(n) loop
11:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:02:25
start mi1 range(n) 2loop
11:02:25
finish mi1 range(n) 2loop
11:02:26
start mi2
11:02:26
start mi2 range(p) 1 loop
11:02:26
finish mi2 range(p) 1 loop
11:02:26
start mi2 range(p) 2 loop
11:02:26
finish mi2 range(p) 2 loop
11:02:26
start mi2 range(NT) loop
11:02:26
finish mi2 range(NT) loop
11:02:26
start mi2 range(n) loop
11:02:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:02:26
start mi2 range(n) 2loop
11:02:26
finish mi2 range(n) 2loop
11:02:26
[[-3.20828573]]
end mi2 loop
11:02:26
estep
11:02:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:02:40
start ppi1
11:02:40
start mi0
11:02:40
start mi0 range(p) 1 loop
11:02:40
finish mi0 range(p) 1 loop
11:02:40
start mi0 range(p) 2 loop
11:02:40
finish mi0 range(p) 2 loop
11:02:40
start mi0 range(NT) loop
11:02:40
finish mi0 range(NT) loop
11:02:40
start mi0 range(n) loop
11:02:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:02:40
start mi0 range(n) 2loop
11:02:40
finish mi0 range(n) 2loop
11:02:40
start mi1
11:02:40
start mi1 range(p) 1 loop
11:02:40
finish mi1 range(p) 1 loop
11:02:40
start mi1 range(p) 2 loop
11:02:40
finish mi1 range(p) 2 loop
11:02:40
start mi1 range(NT) loop
11:02:40
finish mi1 range(NT) loop
11:02:40
start mi1 range(n) loop
11:02:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:02:40
start mi1 range(n) 2loop
11:02:40
finish mi1 range(n) 2loop
11:02:41
start mi2
11:02:41
start mi2 range(p) 1 loop
11:02:41
finish mi2 range(p) 1 loop
11:02:41
start mi2 range(p) 2 loop
11:02:41
finish mi2 range(p) 2 loop
11:02:41
start mi2 range(NT) loop
11:02:41
finish mi2 range(NT) loop
11:02:41
start mi2 range(n) loop
11:02:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:02:41
start mi2 range(n) 2loop
11:02:41
finish mi2 range(n) 2loop
11:02:41
[[-3.27077764]]
end mi2 loop
11:02:41
estep
11:02:41
end estep
11:02:55
end pa11:02:55
goodness of fit correlation [0.31085241]
start cluster 11:02:55
15
parallel submitted
11:03:14
parallel finished
11:05:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:05:53
start mi0
11:05:53
start mi0 range(p) 1 loop
11:05:53
finish mi0 range(p) 1 loop
11:05:53
start mi0 range(p) 2 loop
11:05:53
finish mi0 range(p) 2 loop
11:05:53
start mi0 range(NT) loop
11:05:53
finish mi0 range(NT) loop
11:05:53
start mi0 range(n) loop
11:05:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:05:53
start mi0 range(n) 2loop
11:05:53
finish mi0 range(n) 2loop
11:05:53
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:05:53
start mi1 range(p) 1 loop
11:05:53
finish mi1 range(p) 1 loop
11:05:53
start mi1 range(p) 2 loop
11:05:53
finish mi1 range(p) 2 loop
11:05:53
start mi1 range(NT) loop
11:05:54
finish mi1 range(NT) loop
11:05:54
start mi1 range(n) loop
11:05:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:05:54
start mi1 range(n) 2loop
11:05:54
finish mi1 range(n) 2loop
11:05:54
start mi2
11:05:54
start mi2 range(p) 1 loop
11:05:54
finish mi2 range(p) 1 loop
11:05:54
start mi2 range(p) 2 loop
11:05:54
finish mi2 range(p) 2 loop
11:05:54
start mi2 range(NT) loop
11:05:54
finish mi2 range(NT) loop
11:05:54
start mi2 range(n) loop
11:05:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:05:54
start mi2 range(n) 2loop
11:05:54
finish mi2 range(n) 2loop
11:05:54
[[-3.16980152]]
end mi2 loop
11:05:54
estep
11:05:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:06:08
start ppi1
11:06:08
start mi0
11:06:08
start mi0 range(p) 1 loop
11:06:08
finish mi0 range(p) 1 loop
11:06:08
start mi0 range(p) 2 loop
11:06:08
finish mi0 range(p) 2 loop
11:06:08
start mi0 range(NT) loop
11:06:08
finish mi0 range(NT) loop
11:06:08
start mi0 range(n) loop
11:06:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:06:08
start mi0 range(n) 2loop
11:06:08
finish mi0 range(n) 2loop
11:06:08
start mi1
11:06:08
start mi1 range(p) 1 loop
11:06:08
finish mi1 range(p) 1 loop
11:06:08
start mi1 range(p) 2 loop
11:06:08
finish mi1 range(p) 2 loop
11:06:08
start mi1 range(NT) loop
11:06:08
finish mi1 range(NT) loop
11:06:08
start mi1 range(n) loop
11:06:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:06:08
start mi1 range(n) 2loop
11:06:08
finish mi1 range(n) 2loop
11:06:08
start mi2
11:06:08
start mi2 range(p) 1 loop
11:06:08
finish mi2 range(p) 1 loop
11:06:08
start mi2 range(p) 2 loop
11:06:08
finish mi2 range(p) 2 loop
11:06:08
start mi2 range(NT) loop
11:06:09
finish mi2 range(NT) loop
11:06:09
start mi2 range(n) loop
11:06:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:06:09
start mi2 range(n) 2loop
11:06:09
finish mi2 range(n) 2loop
11:06:09
[[-3.23229352]]
end mi2 loop
11:06:09
estep
11:06:09
end estep
11:06:23
end pa11:06:23
goodness of fit correlation [0.32159327]
start cluster 11:06:23
16
parallel submitted
11:06:42
parallel finished
11:08:33
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:08:40
start mi0
11:08:40
start mi0 range(p) 1 loop
11:08:40
finish mi0 range(p) 1 loop
11:08:40
start mi0 range(p) 2 loop
11:08:40
finish mi0 range(p) 2 loop
11:08:40
start mi0 range(NT) loop
11:08:40
finish mi0 range(NT) loop
11:08:40
start mi0 range(n) loop
11:08:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:08:40
start mi0 range(n) 2loop
11:08:40
finish mi0 range(n) 2loop
11:08:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:08:40
start mi1 range(p) 1 loop
11:08:40
finish mi1 range(p) 1 loop
11:08:40
start mi1 range(p) 2 loop
11:08:40
finish mi1 range(p) 2 loop
11:08:40
start mi1 range(NT) loop
11:08:40
finish mi1 range(NT) loop
11:08:40
start mi1 range(n) loop
11:08:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:08:40
start mi1 range(n) 2loop
11:08:40
finish mi1 range(n) 2loop
11:08:41
start mi2
11:08:41
start mi2 range(p) 1 loop
11:08:41
finish mi2 range(p) 1 loop
11:08:41
start mi2 range(p) 2 loop
11:08:41
finish mi2 range(p) 2 loop
11:08:41
start mi2 range(NT) loop
11:08:41
finish mi2 range(NT) loop
11:08:41
start mi2 range(n) loop
11:08:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:08:41
start mi2 range(n) 2loop
11:08:41
finish mi2 range(n) 2loop
11:08:41
[[-3.18330233]]
end mi2 loop
11:08:41
estep
11:08:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:08:56
start ppi1
11:08:56
start mi0
11:08:56
start mi0 range(p) 1 loop
11:08:56
finish mi0 range(p) 1 loop
11:08:56
start mi0 range(p) 2 loop
11:08:56
finish mi0 range(p) 2 loop
11:08:56
start mi0 range(NT) loop
11:08:56
finish mi0 range(NT) loop
11:08:57
start mi0 range(n) loop
11:08:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:08:57
start mi0 range(n) 2loop
11:08:57
finish mi0 range(n) 2loop
11:08:57
start mi1
11:08:57
start mi1 range(p) 1 loop
11:08:57
finish mi1 range(p) 1 loop
11:08:57
start mi1 range(p) 2 loop
11:08:57
finish mi1 range(p) 2 loop
11:08:57
start mi1 range(NT) loop
11:08:57
finish mi1 range(NT) loop
11:08:57
start mi1 range(n) loop
11:08:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:08:57
start mi1 range(n) 2loop
11:08:57
finish mi1 range(n) 2loop
11:08:57
start mi2
11:08:57
start mi2 range(p) 1 loop
11:08:57
finish mi2 range(p) 1 loop
11:08:57
start mi2 range(p) 2 loop
11:08:57
finish mi2 range(p) 2 loop
11:08:57
start mi2 range(NT) loop
11:08:57
finish mi2 range(NT) loop
11:08:57
start mi2 range(n) loop
11:08:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:08:57
start mi2 range(n) 2loop
11:08:57
finish mi2 range(n) 2loop
11:08:57
[[-3.2457943]]
end mi2 loop
11:08:57
estep
11:08:57
end estep
11:09:13
end pa11:09:13
goodness of fit correlation [0.33773689]
start cluster 11:09:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36563 instead
  warnings.warn(
17
parallel submitted
11:09:32
parallel finished
11:12:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:12:47
start mi0
11:12:47
start mi0 range(p) 1 loop
11:12:47
finish mi0 range(p) 1 loop
11:12:47
start mi0 range(p) 2 loop
11:12:47
finish mi0 range(p) 2 loop
11:12:47
start mi0 range(NT) loop
11:12:47
finish mi0 range(NT) loop
11:12:47
start mi0 range(n) loop
11:12:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:12:47
start mi0 range(n) 2loop
11:12:47
finish mi0 range(n) 2loop
11:12:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:12:47
start mi1 range(p) 1 loop
11:12:47
finish mi1 range(p) 1 loop
11:12:47
start mi1 range(p) 2 loop
11:12:47
finish mi1 range(p) 2 loop
11:12:47
start mi1 range(NT) loop
11:12:47
finish mi1 range(NT) loop
11:12:47
start mi1 range(n) loop
11:12:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:12:47
start mi1 range(n) 2loop
11:12:47
finish mi1 range(n) 2loop
11:12:48
start mi2
11:12:48
start mi2 range(p) 1 loop
11:12:48
finish mi2 range(p) 1 loop
11:12:48
start mi2 range(p) 2 loop
11:12:48
finish mi2 range(p) 2 loop
11:12:48
start mi2 range(NT) loop
11:12:48
finish mi2 range(NT) loop
11:12:48
start mi2 range(n) loop
11:12:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:12:48
start mi2 range(n) 2loop
11:12:48
finish mi2 range(n) 2loop
11:12:48
[[-3.20304692]]
end mi2 loop
11:12:48
estep
11:12:48
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:13:03
start ppi1
11:13:03
start mi0
11:13:03
start mi0 range(p) 1 loop
11:13:03
finish mi0 range(p) 1 loop
11:13:03
start mi0 range(p) 2 loop
11:13:03
finish mi0 range(p) 2 loop
11:13:03
start mi0 range(NT) loop
11:13:04
finish mi0 range(NT) loop
11:13:04
start mi0 range(n) loop
11:13:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:13:04
start mi0 range(n) 2loop
11:13:04
finish mi0 range(n) 2loop
11:13:04
start mi1
11:13:04
start mi1 range(p) 1 loop
11:13:04
finish mi1 range(p) 1 loop
11:13:04
start mi1 range(p) 2 loop
11:13:04
finish mi1 range(p) 2 loop
11:13:04
start mi1 range(NT) loop
11:13:04
finish mi1 range(NT) loop
11:13:04
start mi1 range(n) loop
11:13:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:13:04
start mi1 range(n) 2loop
11:13:04
finish mi1 range(n) 2loop
11:13:04
start mi2
11:13:04
start mi2 range(p) 1 loop
11:13:04
finish mi2 range(p) 1 loop
11:13:04
start mi2 range(p) 2 loop
11:13:04
finish mi2 range(p) 2 loop
11:13:04
start mi2 range(NT) loop
11:13:04
finish mi2 range(NT) loop
11:13:04
start mi2 range(n) loop
11:13:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:13:04
start mi2 range(n) 2loop
11:13:04
finish mi2 range(n) 2loop
11:13:04
[[-3.26553884]]
end mi2 loop
11:13:04
estep
11:13:04
end estep
11:13:22
end pa11:13:22
goodness of fit correlation [0.31878144]
start cluster 11:13:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45484 instead
  warnings.warn(
18
parallel submitted
11:13:41
parallel finished
11:17:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:17:27
start mi0
11:17:27
start mi0 range(p) 1 loop
11:17:27
finish mi0 range(p) 1 loop
11:17:27
start mi0 range(p) 2 loop
11:17:27
finish mi0 range(p) 2 loop
11:17:27
start mi0 range(NT) loop
11:17:27
finish mi0 range(NT) loop
11:17:27
start mi0 range(n) loop
11:17:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:17:27
start mi0 range(n) 2loop
11:17:27
finish mi0 range(n) 2loop
11:17:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:17:27
start mi1 range(p) 1 loop
11:17:27
finish mi1 range(p) 1 loop
11:17:27
start mi1 range(p) 2 loop
11:17:27
finish mi1 range(p) 2 loop
11:17:27
start mi1 range(NT) loop
11:17:27
finish mi1 range(NT) loop
11:17:27
start mi1 range(n) loop
11:17:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:17:27
start mi1 range(n) 2loop
11:17:27
finish mi1 range(n) 2loop
11:17:27
start mi2
11:17:27
start mi2 range(p) 1 loop
11:17:27
finish mi2 range(p) 1 loop
11:17:27
start mi2 range(p) 2 loop
11:17:27
finish mi2 range(p) 2 loop
11:17:27
start mi2 range(NT) loop
11:17:28
finish mi2 range(NT) loop
11:17:28
start mi2 range(n) loop
11:17:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:17:28
start mi2 range(n) 2loop
11:17:28
finish mi2 range(n) 2loop
11:17:28
[[-3.21009841]]
end mi2 loop
11:17:28
estep
11:17:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:17:42
start ppi1
11:17:42
start mi0
11:17:42
start mi0 range(p) 1 loop
11:17:42
finish mi0 range(p) 1 loop
11:17:42
start mi0 range(p) 2 loop
11:17:42
finish mi0 range(p) 2 loop
11:17:42
start mi0 range(NT) loop
11:17:42
finish mi0 range(NT) loop
11:17:42
start mi0 range(n) loop
11:17:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:17:42
start mi0 range(n) 2loop
11:17:42
finish mi0 range(n) 2loop
11:17:42
start mi1
11:17:42
start mi1 range(p) 1 loop
11:17:42
finish mi1 range(p) 1 loop
11:17:42
start mi1 range(p) 2 loop
11:17:42
finish mi1 range(p) 2 loop
11:17:42
start mi1 range(NT) loop
11:17:42
finish mi1 range(NT) loop
11:17:42
start mi1 range(n) loop
11:17:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:17:42
start mi1 range(n) 2loop
11:17:42
finish mi1 range(n) 2loop
11:17:42
start mi2
11:17:42
start mi2 range(p) 1 loop
11:17:42
finish mi2 range(p) 1 loop
11:17:42
start mi2 range(p) 2 loop
11:17:42
finish mi2 range(p) 2 loop
11:17:42
start mi2 range(NT) loop
11:17:43
finish mi2 range(NT) loop
11:17:43
start mi2 range(n) loop
11:17:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:17:43
start mi2 range(n) 2loop
11:17:43
finish mi2 range(n) 2loop
11:17:43
[[-3.27259031]]
end mi2 loop
11:17:43
estep
11:17:43
end estep
11:17:57
end pa11:17:57
goodness of fit correlation [0.32949412]
start cluster 11:17:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35126 instead
  warnings.warn(
19
parallel submitted
11:18:17
parallel finished
11:21:05
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:21:14
start mi0
11:21:14
start mi0 range(p) 1 loop
11:21:14
finish mi0 range(p) 1 loop
11:21:14
start mi0 range(p) 2 loop
11:21:14
finish mi0 range(p) 2 loop
11:21:14
start mi0 range(NT) loop
11:21:14
finish mi0 range(NT) loop
11:21:14
start mi0 range(n) loop
11:21:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:21:14
start mi0 range(n) 2loop
11:21:14
finish mi0 range(n) 2loop
11:21:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:21:14
start mi1 range(p) 1 loop
11:21:14
finish mi1 range(p) 1 loop
11:21:14
start mi1 range(p) 2 loop
11:21:14
finish mi1 range(p) 2 loop
11:21:14
start mi1 range(NT) loop
11:21:14
finish mi1 range(NT) loop
11:21:14
start mi1 range(n) loop
11:21:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:21:14
start mi1 range(n) 2loop
11:21:14
finish mi1 range(n) 2loop
11:21:14
start mi2
11:21:14
start mi2 range(p) 1 loop
11:21:14
finish mi2 range(p) 1 loop
11:21:14
start mi2 range(p) 2 loop
11:21:14
finish mi2 range(p) 2 loop
11:21:14
start mi2 range(NT) loop
11:21:15
finish mi2 range(NT) loop
11:21:15
start mi2 range(n) loop
11:21:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:21:15
start mi2 range(n) 2loop
11:21:15
finish mi2 range(n) 2loop
11:21:15
[[-3.23797236]]
end mi2 loop
11:21:15
estep
11:21:15
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:21:30
start ppi1
11:21:30
start mi0
11:21:30
start mi0 range(p) 1 loop
11:21:30
finish mi0 range(p) 1 loop
11:21:30
start mi0 range(p) 2 loop
11:21:30
finish mi0 range(p) 2 loop
11:21:30
start mi0 range(NT) loop
11:21:31
finish mi0 range(NT) loop
11:21:31
start mi0 range(n) loop
11:21:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:21:31
start mi0 range(n) 2loop
11:21:31
finish mi0 range(n) 2loop
11:21:31
start mi1
11:21:31
start mi1 range(p) 1 loop
11:21:31
finish mi1 range(p) 1 loop
11:21:31
start mi1 range(p) 2 loop
11:21:31
finish mi1 range(p) 2 loop
11:21:31
start mi1 range(NT) loop
11:21:31
finish mi1 range(NT) loop
11:21:31
start mi1 range(n) loop
11:21:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:21:31
start mi1 range(n) 2loop
11:21:31
finish mi1 range(n) 2loop
11:21:31
start mi2
11:21:31
start mi2 range(p) 1 loop
11:21:31
finish mi2 range(p) 1 loop
11:21:31
start mi2 range(p) 2 loop
11:21:31
finish mi2 range(p) 2 loop
11:21:31
start mi2 range(NT) loop
11:21:31
finish mi2 range(NT) loop
11:21:31
start mi2 range(n) loop
11:21:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:21:31
start mi2 range(n) 2loop
11:21:31
finish mi2 range(n) 2loop
11:21:31
[[-3.30046411]]
end mi2 loop
11:21:31
estep
11:21:31
end estep
11:21:47
end pa11:21:47
goodness of fit correlation [0.34565403]
start cluster 11:21:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38736 instead
  warnings.warn(
20
parallel submitted
11:22:07
parallel finished
11:26:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:26:28
start mi0
11:26:28
start mi0 range(p) 1 loop
11:26:28
finish mi0 range(p) 1 loop
11:26:28
start mi0 range(p) 2 loop
11:26:28
finish mi0 range(p) 2 loop
11:26:28
start mi0 range(NT) loop
11:26:28
finish mi0 range(NT) loop
11:26:28
start mi0 range(n) loop
11:26:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:26:28
start mi0 range(n) 2loop
11:26:28
finish mi0 range(n) 2loop
11:26:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:26:28
start mi1 range(p) 1 loop
11:26:28
finish mi1 range(p) 1 loop
11:26:28
start mi1 range(p) 2 loop
11:26:28
finish mi1 range(p) 2 loop
11:26:28
start mi1 range(NT) loop
11:26:28
finish mi1 range(NT) loop
11:26:28
start mi1 range(n) loop
11:26:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:26:28
start mi1 range(n) 2loop
11:26:28
finish mi1 range(n) 2loop
11:26:28
start mi2
11:26:28
start mi2 range(p) 1 loop
11:26:28
finish mi2 range(p) 1 loop
11:26:28
start mi2 range(p) 2 loop
11:26:28
finish mi2 range(p) 2 loop
11:26:28
start mi2 range(NT) loop
11:26:28
finish mi2 range(NT) loop
11:26:29
start mi2 range(n) loop
11:26:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:26:29
start mi2 range(n) 2loop
11:26:29
finish mi2 range(n) 2loop
11:26:29
[[-3.19503639]]
end mi2 loop
11:26:29
estep
11:26:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:26:43
start ppi1
11:26:43
start mi0
11:26:43
start mi0 range(p) 1 loop
11:26:43
finish mi0 range(p) 1 loop
11:26:43
start mi0 range(p) 2 loop
11:26:43
finish mi0 range(p) 2 loop
11:26:43
start mi0 range(NT) loop
11:26:43
finish mi0 range(NT) loop
11:26:43
start mi0 range(n) loop
11:26:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:26:43
start mi0 range(n) 2loop
11:26:43
finish mi0 range(n) 2loop
11:26:43
start mi1
11:26:43
start mi1 range(p) 1 loop
11:26:43
finish mi1 range(p) 1 loop
11:26:43
start mi1 range(p) 2 loop
11:26:43
finish mi1 range(p) 2 loop
11:26:43
start mi1 range(NT) loop
11:26:43
finish mi1 range(NT) loop
11:26:43
start mi1 range(n) loop
11:26:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:26:43
start mi1 range(n) 2loop
11:26:43
finish mi1 range(n) 2loop
11:26:43
start mi2
11:26:43
start mi2 range(p) 1 loop
11:26:43
finish mi2 range(p) 1 loop
11:26:43
start mi2 range(p) 2 loop
11:26:43
finish mi2 range(p) 2 loop
11:26:43
start mi2 range(NT) loop
11:26:44
finish mi2 range(NT) loop
11:26:44
start mi2 range(n) loop
11:26:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:26:44
start mi2 range(n) 2loop
11:26:44
finish mi2 range(n) 2loop
11:26:44
[[-3.25752834]]
end mi2 loop
11:26:44
estep
11:26:44
end estep
11:26:58
end pa11:26:58
goodness of fit correlation [0.31981181]
start cluster 11:26:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36855 instead
  warnings.warn(
21
parallel submitted
11:27:18
parallel finished
11:30:11
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:30:22
start mi0
11:30:22
start mi0 range(p) 1 loop
11:30:22
finish mi0 range(p) 1 loop
11:30:22
start mi0 range(p) 2 loop
11:30:22
finish mi0 range(p) 2 loop
11:30:22
start mi0 range(NT) loop
11:30:22
finish mi0 range(NT) loop
11:30:22
start mi0 range(n) loop
11:30:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:30:22
start mi0 range(n) 2loop
11:30:22
finish mi0 range(n) 2loop
11:30:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:30:22
start mi1 range(p) 1 loop
11:30:22
finish mi1 range(p) 1 loop
11:30:22
start mi1 range(p) 2 loop
11:30:22
finish mi1 range(p) 2 loop
11:30:22
start mi1 range(NT) loop
11:30:22
finish mi1 range(NT) loop
11:30:22
start mi1 range(n) loop
11:30:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:30:22
start mi1 range(n) 2loop
11:30:22
finish mi1 range(n) 2loop
11:30:22
start mi2
11:30:22
start mi2 range(p) 1 loop
11:30:22
finish mi2 range(p) 1 loop
11:30:22
start mi2 range(p) 2 loop
11:30:22
finish mi2 range(p) 2 loop
11:30:22
start mi2 range(NT) loop
11:30:22
finish mi2 range(NT) loop
11:30:22
start mi2 range(n) loop
11:30:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:30:23
start mi2 range(n) 2loop
11:30:23
finish mi2 range(n) 2loop
11:30:23
[[-3.25577922]]
end mi2 loop
11:30:23
estep
11:30:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:30:38
start ppi1
11:30:38
start mi0
11:30:38
start mi0 range(p) 1 loop
11:30:38
finish mi0 range(p) 1 loop
11:30:38
start mi0 range(p) 2 loop
11:30:38
finish mi0 range(p) 2 loop
11:30:38
start mi0 range(NT) loop
11:30:38
finish mi0 range(NT) loop
11:30:39
start mi0 range(n) loop
11:30:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:30:39
start mi0 range(n) 2loop
11:30:39
finish mi0 range(n) 2loop
11:30:39
start mi1
11:30:39
start mi1 range(p) 1 loop
11:30:39
finish mi1 range(p) 1 loop
11:30:39
start mi1 range(p) 2 loop
11:30:39
finish mi1 range(p) 2 loop
11:30:39
start mi1 range(NT) loop
11:30:39
finish mi1 range(NT) loop
11:30:39
start mi1 range(n) loop
11:30:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:30:39
start mi1 range(n) 2loop
11:30:39
finish mi1 range(n) 2loop
11:30:39
start mi2
11:30:39
start mi2 range(p) 1 loop
11:30:39
finish mi2 range(p) 1 loop
11:30:39
start mi2 range(p) 2 loop
11:30:39
finish mi2 range(p) 2 loop
11:30:39
start mi2 range(NT) loop
11:30:39
finish mi2 range(NT) loop
11:30:39
start mi2 range(n) loop
11:30:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:30:39
start mi2 range(n) 2loop
11:30:39
finish mi2 range(n) 2loop
11:30:39
[[-3.31827083]]
end mi2 loop
11:30:39
estep
11:30:39
end estep
11:30:54
end pa11:30:54
goodness of fit correlation [0.35588642]
start cluster 11:30:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33666 instead
  warnings.warn(
22
parallel submitted
11:31:12
parallel finished
11:34:22
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:34:31
start mi0
11:34:31
start mi0 range(p) 1 loop
11:34:31
finish mi0 range(p) 1 loop
11:34:31
start mi0 range(p) 2 loop
11:34:31
finish mi0 range(p) 2 loop
11:34:31
start mi0 range(NT) loop
11:34:31
finish mi0 range(NT) loop
11:34:31
start mi0 range(n) loop
11:34:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:34:31
start mi0 range(n) 2loop
11:34:31
finish mi0 range(n) 2loop
11:34:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:34:31
start mi1 range(p) 1 loop
11:34:31
finish mi1 range(p) 1 loop
11:34:31
start mi1 range(p) 2 loop
11:34:31
finish mi1 range(p) 2 loop
11:34:31
start mi1 range(NT) loop
11:34:31
finish mi1 range(NT) loop
11:34:31
start mi1 range(n) loop
11:34:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:34:31
start mi1 range(n) 2loop
11:34:31
finish mi1 range(n) 2loop
11:34:31
start mi2
11:34:31
start mi2 range(p) 1 loop
11:34:31
finish mi2 range(p) 1 loop
11:34:31
start mi2 range(p) 2 loop
11:34:31
finish mi2 range(p) 2 loop
11:34:31
start mi2 range(NT) loop
11:34:31
finish mi2 range(NT) loop
11:34:31
start mi2 range(n) loop
11:34:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:34:31
start mi2 range(n) 2loop
11:34:31
finish mi2 range(n) 2loop
11:34:32
[[-3.1823276]]
end mi2 loop
11:34:32
estep
11:34:32
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:34:47
start ppi1
11:34:47
start mi0
11:34:47
start mi0 range(p) 1 loop
11:34:47
finish mi0 range(p) 1 loop
11:34:47
start mi0 range(p) 2 loop
11:34:47
finish mi0 range(p) 2 loop
11:34:47
start mi0 range(NT) loop
11:34:48
finish mi0 range(NT) loop
11:34:48
start mi0 range(n) loop
11:34:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:34:48
start mi0 range(n) 2loop
11:34:48
finish mi0 range(n) 2loop
11:34:48
start mi1
11:34:48
start mi1 range(p) 1 loop
11:34:48
finish mi1 range(p) 1 loop
11:34:48
start mi1 range(p) 2 loop
11:34:48
finish mi1 range(p) 2 loop
11:34:48
start mi1 range(NT) loop
11:34:48
finish mi1 range(NT) loop
11:34:48
start mi1 range(n) loop
11:34:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:34:48
start mi1 range(n) 2loop
11:34:48
finish mi1 range(n) 2loop
11:34:48
start mi2
11:34:48
start mi2 range(p) 1 loop
11:34:48
finish mi2 range(p) 1 loop
11:34:48
start mi2 range(p) 2 loop
11:34:48
finish mi2 range(p) 2 loop
11:34:48
start mi2 range(NT) loop
11:34:48
finish mi2 range(NT) loop
11:34:48
start mi2 range(n) loop
11:34:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:34:48
start mi2 range(n) 2loop
11:34:48
finish mi2 range(n) 2loop
11:34:48
[[-3.24481957]]
end mi2 loop
11:34:48
estep
11:34:48
end estep
11:35:04
end pa11:35:04
goodness of fit correlation [0.2945892]
start cluster 11:35:04
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40859 instead
  warnings.warn(
23
parallel submitted
11:35:24
parallel finished
11:37:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:38:12
start mi0
11:38:12
start mi0 range(p) 1 loop
11:38:12
finish mi0 range(p) 1 loop
11:38:12
start mi0 range(p) 2 loop
11:38:12
finish mi0 range(p) 2 loop
11:38:12
start mi0 range(NT) loop
11:38:12
finish mi0 range(NT) loop
11:38:12
start mi0 range(n) loop
11:38:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:38:12
start mi0 range(n) 2loop
11:38:12
finish mi0 range(n) 2loop
11:38:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:38:12
start mi1 range(p) 1 loop
11:38:12
finish mi1 range(p) 1 loop
11:38:12
start mi1 range(p) 2 loop
11:38:12
finish mi1 range(p) 2 loop
11:38:12
start mi1 range(NT) loop
11:38:12
finish mi1 range(NT) loop
11:38:12
start mi1 range(n) loop
11:38:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:38:12
start mi1 range(n) 2loop
11:38:12
finish mi1 range(n) 2loop
11:38:12
start mi2
11:38:12
start mi2 range(p) 1 loop
11:38:12
finish mi2 range(p) 1 loop
11:38:12
start mi2 range(p) 2 loop
11:38:12
finish mi2 range(p) 2 loop
11:38:12
start mi2 range(NT) loop
11:38:12
finish mi2 range(NT) loop
11:38:12
start mi2 range(n) loop
11:38:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:38:12
start mi2 range(n) 2loop
11:38:12
finish mi2 range(n) 2loop
11:38:12
[[-3.20825972]]
end mi2 loop
11:38:12
estep
11:38:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:38:29
start ppi1
11:38:29
start mi0
11:38:29
start mi0 range(p) 1 loop
11:38:29
finish mi0 range(p) 1 loop
11:38:29
start mi0 range(p) 2 loop
11:38:29
finish mi0 range(p) 2 loop
11:38:29
start mi0 range(NT) loop
11:38:29
finish mi0 range(NT) loop
11:38:29
start mi0 range(n) loop
11:38:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:38:29
start mi0 range(n) 2loop
11:38:29
finish mi0 range(n) 2loop
11:38:29
start mi1
11:38:29
start mi1 range(p) 1 loop
11:38:29
finish mi1 range(p) 1 loop
11:38:29
start mi1 range(p) 2 loop
11:38:29
finish mi1 range(p) 2 loop
11:38:29
start mi1 range(NT) loop
11:38:29
finish mi1 range(NT) loop
11:38:29
start mi1 range(n) loop
11:38:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:38:29
start mi1 range(n) 2loop
11:38:29
finish mi1 range(n) 2loop
11:38:29
start mi2
11:38:29
start mi2 range(p) 1 loop
11:38:29
finish mi2 range(p) 1 loop
11:38:29
start mi2 range(p) 2 loop
11:38:29
finish mi2 range(p) 2 loop
11:38:29
start mi2 range(NT) loop
11:38:29
finish mi2 range(NT) loop
11:38:29
start mi2 range(n) loop
11:38:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:38:29
start mi2 range(n) 2loop
11:38:29
finish mi2 range(n) 2loop
11:38:29
[[-3.27075163]]
end mi2 loop
11:38:29
estep
11:38:29
end estep
11:38:45
end pa11:38:45
goodness of fit correlation [0.31841061]
start cluster 11:38:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39887 instead
  warnings.warn(
24
parallel submitted
11:39:06
parallel finished
11:43:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:43:20
start mi0
11:43:20
start mi0 range(p) 1 loop
11:43:20
finish mi0 range(p) 1 loop
11:43:20
start mi0 range(p) 2 loop
11:43:20
finish mi0 range(p) 2 loop
11:43:20
start mi0 range(NT) loop
11:43:20
finish mi0 range(NT) loop
11:43:20
start mi0 range(n) loop
11:43:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:43:20
start mi0 range(n) 2loop
11:43:20
finish mi0 range(n) 2loop
11:43:20
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:43:20
start mi1 range(p) 1 loop
11:43:20
finish mi1 range(p) 1 loop
11:43:20
start mi1 range(p) 2 loop
11:43:20
finish mi1 range(p) 2 loop
11:43:20
start mi1 range(NT) loop
11:43:21
finish mi1 range(NT) loop
11:43:21
start mi1 range(n) loop
11:43:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:43:21
start mi1 range(n) 2loop
11:43:21
finish mi1 range(n) 2loop
11:43:21
start mi2
11:43:21
start mi2 range(p) 1 loop
11:43:21
finish mi2 range(p) 1 loop
11:43:21
start mi2 range(p) 2 loop
11:43:21
finish mi2 range(p) 2 loop
11:43:21
start mi2 range(NT) loop
11:43:21
finish mi2 range(NT) loop
11:43:21
start mi2 range(n) loop
11:43:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:43:21
start mi2 range(n) 2loop
11:43:21
finish mi2 range(n) 2loop
11:43:21
[[-3.24747396]]
end mi2 loop
11:43:21
estep
11:43:21
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:43:37
start ppi1
11:43:37
start mi0
11:43:37
start mi0 range(p) 1 loop
11:43:37
finish mi0 range(p) 1 loop
11:43:37
start mi0 range(p) 2 loop
11:43:37
finish mi0 range(p) 2 loop
11:43:37
start mi0 range(NT) loop
11:43:37
finish mi0 range(NT) loop
11:43:37
start mi0 range(n) loop
11:43:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:43:37
start mi0 range(n) 2loop
11:43:37
finish mi0 range(n) 2loop
11:43:38
start mi1
11:43:38
start mi1 range(p) 1 loop
11:43:38
finish mi1 range(p) 1 loop
11:43:38
start mi1 range(p) 2 loop
11:43:38
finish mi1 range(p) 2 loop
11:43:38
start mi1 range(NT) loop
11:43:38
finish mi1 range(NT) loop
11:43:38
start mi1 range(n) loop
11:43:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:43:38
start mi1 range(n) 2loop
11:43:38
finish mi1 range(n) 2loop
11:43:38
start mi2
11:43:38
start mi2 range(p) 1 loop
11:43:38
finish mi2 range(p) 1 loop
11:43:38
start mi2 range(p) 2 loop
11:43:38
finish mi2 range(p) 2 loop
11:43:38
start mi2 range(NT) loop
11:43:38
finish mi2 range(NT) loop
11:43:38
start mi2 range(n) loop
11:43:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:43:38
start mi2 range(n) 2loop
11:43:38
finish mi2 range(n) 2loop
11:43:38
[[-3.30996565]]
end mi2 loop
11:43:38
estep
11:43:38
end estep
11:43:57
end pa11:43:57
goodness of fit correlation [0.34747104]
start cluster 11:43:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33517 instead
  warnings.warn(
25
parallel submitted
11:44:17
parallel finished
11:48:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:48:57
start mi0
11:48:57
start mi0 range(p) 1 loop
11:48:57
finish mi0 range(p) 1 loop
11:48:57
start mi0 range(p) 2 loop
11:48:57
finish mi0 range(p) 2 loop
11:48:57
start mi0 range(NT) loop
11:48:57
finish mi0 range(NT) loop
11:48:57
start mi0 range(n) loop
11:48:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:48:57
start mi0 range(n) 2loop
11:48:57
finish mi0 range(n) 2loop
11:48:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:48:58
start mi1 range(p) 1 loop
11:48:58
finish mi1 range(p) 1 loop
11:48:58
start mi1 range(p) 2 loop
11:48:58
finish mi1 range(p) 2 loop
11:48:58
start mi1 range(NT) loop
11:48:58
finish mi1 range(NT) loop
11:48:58
start mi1 range(n) loop
11:48:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:48:58
start mi1 range(n) 2loop
11:48:58
finish mi1 range(n) 2loop
11:48:58
start mi2
11:48:58
start mi2 range(p) 1 loop
11:48:58
finish mi2 range(p) 1 loop
11:48:58
start mi2 range(p) 2 loop
11:48:58
finish mi2 range(p) 2 loop
11:48:58
start mi2 range(NT) loop
11:48:58
finish mi2 range(NT) loop
11:48:58
start mi2 range(n) loop
11:48:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:48:58
start mi2 range(n) 2loop
11:48:58
finish mi2 range(n) 2loop
11:48:58
[[-3.21291917]]
end mi2 loop
11:48:58
estep
11:48:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:49:13
start ppi1
11:49:13
start mi0
11:49:13
start mi0 range(p) 1 loop
11:49:13
finish mi0 range(p) 1 loop
11:49:13
start mi0 range(p) 2 loop
11:49:13
finish mi0 range(p) 2 loop
11:49:13
start mi0 range(NT) loop
11:49:13
finish mi0 range(NT) loop
11:49:13
start mi0 range(n) loop
11:49:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:49:13
start mi0 range(n) 2loop
11:49:13
finish mi0 range(n) 2loop
11:49:13
start mi1
11:49:13
start mi1 range(p) 1 loop
11:49:13
finish mi1 range(p) 1 loop
11:49:13
start mi1 range(p) 2 loop
11:49:13
finish mi1 range(p) 2 loop
11:49:13
start mi1 range(NT) loop
11:49:13
finish mi1 range(NT) loop
11:49:13
start mi1 range(n) loop
11:49:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:49:13
start mi1 range(n) 2loop
11:49:13
finish mi1 range(n) 2loop
11:49:13
start mi2
11:49:13
start mi2 range(p) 1 loop
11:49:13
finish mi2 range(p) 1 loop
11:49:13
start mi2 range(p) 2 loop
11:49:13
finish mi2 range(p) 2 loop
11:49:13
start mi2 range(NT) loop
11:49:13
finish mi2 range(NT) loop
11:49:13
start mi2 range(n) loop
11:49:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:49:13
start mi2 range(n) 2loop
11:49:13
finish mi2 range(n) 2loop
11:49:13
[[-3.27541105]]
end mi2 loop
11:49:13
estep
11:49:13
end estep
11:49:28
end pa11:49:28
goodness of fit correlation [0.32067685]
start cluster 11:49:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39533 instead
  warnings.warn(
26
parallel submitted
11:49:49
parallel finished
11:53:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:53:26
start mi0
11:53:26
start mi0 range(p) 1 loop
11:53:26
finish mi0 range(p) 1 loop
11:53:26
start mi0 range(p) 2 loop
11:53:26
finish mi0 range(p) 2 loop
11:53:26
start mi0 range(NT) loop
11:53:26
finish mi0 range(NT) loop
11:53:26
start mi0 range(n) loop
11:53:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:53:26
start mi0 range(n) 2loop
11:53:26
finish mi0 range(n) 2loop
11:53:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:53:26
start mi1 range(p) 1 loop
11:53:26
finish mi1 range(p) 1 loop
11:53:26
start mi1 range(p) 2 loop
11:53:26
finish mi1 range(p) 2 loop
11:53:26
start mi1 range(NT) loop
11:53:26
finish mi1 range(NT) loop
11:53:26
start mi1 range(n) loop
11:53:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:53:26
start mi1 range(n) 2loop
11:53:26
finish mi1 range(n) 2loop
11:53:26
start mi2
11:53:26
start mi2 range(p) 1 loop
11:53:26
finish mi2 range(p) 1 loop
11:53:26
start mi2 range(p) 2 loop
11:53:26
finish mi2 range(p) 2 loop
11:53:26
start mi2 range(NT) loop
11:53:26
finish mi2 range(NT) loop
11:53:26
start mi2 range(n) loop
11:53:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:53:26
start mi2 range(n) 2loop
11:53:26
finish mi2 range(n) 2loop
11:53:26
[[-3.27040686]]
end mi2 loop
11:53:26
estep
11:53:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:53:41
start ppi1
11:53:41
start mi0
11:53:41
start mi0 range(p) 1 loop
11:53:41
finish mi0 range(p) 1 loop
11:53:41
start mi0 range(p) 2 loop
11:53:41
finish mi0 range(p) 2 loop
11:53:41
start mi0 range(NT) loop
11:53:41
finish mi0 range(NT) loop
11:53:41
start mi0 range(n) loop
11:53:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:53:41
start mi0 range(n) 2loop
11:53:41
finish mi0 range(n) 2loop
11:53:41
start mi1
11:53:41
start mi1 range(p) 1 loop
11:53:41
finish mi1 range(p) 1 loop
11:53:41
start mi1 range(p) 2 loop
11:53:41
finish mi1 range(p) 2 loop
11:53:41
start mi1 range(NT) loop
11:53:41
finish mi1 range(NT) loop
11:53:41
start mi1 range(n) loop
11:53:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:53:41
start mi1 range(n) 2loop
11:53:41
finish mi1 range(n) 2loop
11:53:41
start mi2
11:53:41
start mi2 range(p) 1 loop
11:53:41
finish mi2 range(p) 1 loop
11:53:41
start mi2 range(p) 2 loop
11:53:41
finish mi2 range(p) 2 loop
11:53:41
start mi2 range(NT) loop
11:53:42
finish mi2 range(NT) loop
11:53:42
start mi2 range(n) loop
11:53:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:53:42
start mi2 range(n) 2loop
11:53:42
finish mi2 range(n) 2loop
11:53:42
[[-3.33289831]]
end mi2 loop
11:53:42
estep
11:53:42
end estep
11:53:57
end pa11:53:57
goodness of fit correlation [0.36503458]
start cluster 11:53:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44405 instead
  warnings.warn(
27
parallel submitted
11:54:18
parallel finished
11:56:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:56:50
start mi0
11:56:50
start mi0 range(p) 1 loop
11:56:50
finish mi0 range(p) 1 loop
11:56:50
start mi0 range(p) 2 loop
11:56:50
finish mi0 range(p) 2 loop
11:56:50
start mi0 range(NT) loop
11:56:50
finish mi0 range(NT) loop
11:56:50
start mi0 range(n) loop
11:56:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:56:50
start mi0 range(n) 2loop
11:56:50
finish mi0 range(n) 2loop
11:56:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:56:51
start mi1 range(p) 1 loop
11:56:51
finish mi1 range(p) 1 loop
11:56:51
start mi1 range(p) 2 loop
11:56:51
finish mi1 range(p) 2 loop
11:56:51
start mi1 range(NT) loop
11:56:51
finish mi1 range(NT) loop
11:56:51
start mi1 range(n) loop
11:56:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:56:51
start mi1 range(n) 2loop
11:56:51
finish mi1 range(n) 2loop
11:56:51
start mi2
11:56:51
start mi2 range(p) 1 loop
11:56:51
finish mi2 range(p) 1 loop
11:56:51
start mi2 range(p) 2 loop
11:56:51
finish mi2 range(p) 2 loop
11:56:51
start mi2 range(NT) loop
11:56:51
finish mi2 range(NT) loop
11:56:51
start mi2 range(n) loop
11:56:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:56:51
start mi2 range(n) 2loop
11:56:51
finish mi2 range(n) 2loop
11:56:51
[[-3.2410073]]
end mi2 loop
11:56:51
estep
11:56:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:57:07
start ppi1
11:57:07
start mi0
11:57:07
start mi0 range(p) 1 loop
11:57:07
finish mi0 range(p) 1 loop
11:57:07
start mi0 range(p) 2 loop
11:57:07
finish mi0 range(p) 2 loop
11:57:07
start mi0 range(NT) loop
11:57:07
finish mi0 range(NT) loop
11:57:07
start mi0 range(n) loop
11:57:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:57:07
start mi0 range(n) 2loop
11:57:07
finish mi0 range(n) 2loop
11:57:07
start mi1
11:57:08
start mi1 range(p) 1 loop
11:57:08
finish mi1 range(p) 1 loop
11:57:08
start mi1 range(p) 2 loop
11:57:08
finish mi1 range(p) 2 loop
11:57:08
start mi1 range(NT) loop
11:57:08
finish mi1 range(NT) loop
11:57:08
start mi1 range(n) loop
11:57:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:57:08
start mi1 range(n) 2loop
11:57:08
finish mi1 range(n) 2loop
11:57:08
start mi2
11:57:08
start mi2 range(p) 1 loop
11:57:08
finish mi2 range(p) 1 loop
11:57:08
start mi2 range(p) 2 loop
11:57:08
finish mi2 range(p) 2 loop
11:57:08
start mi2 range(NT) loop
11:57:08
finish mi2 range(NT) loop
11:57:08
start mi2 range(n) loop
11:57:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:57:08
start mi2 range(n) 2loop
11:57:08
finish mi2 range(n) 2loop
11:57:08
[[-3.30349903]]
end mi2 loop
11:57:08
estep
11:57:08
end estep
11:57:24
end pa11:57:24
goodness of fit correlation [0.34621938]
start cluster 11:57:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38430 instead
  warnings.warn(
28
parallel submitted
11:57:44
parallel finished
12:00:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:00:13
start mi0
12:00:13
start mi0 range(p) 1 loop
12:00:13
finish mi0 range(p) 1 loop
12:00:13
start mi0 range(p) 2 loop
12:00:13
finish mi0 range(p) 2 loop
12:00:13
start mi0 range(NT) loop
12:00:13
finish mi0 range(NT) loop
12:00:13
start mi0 range(n) loop
12:00:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:00:13
start mi0 range(n) 2loop
12:00:13
finish mi0 range(n) 2loop
12:00:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:00:13
start mi1 range(p) 1 loop
12:00:13
finish mi1 range(p) 1 loop
12:00:13
start mi1 range(p) 2 loop
12:00:13
finish mi1 range(p) 2 loop
12:00:13
start mi1 range(NT) loop
12:00:13
finish mi1 range(NT) loop
12:00:13
start mi1 range(n) loop
12:00:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:00:13
start mi1 range(n) 2loop
12:00:13
finish mi1 range(n) 2loop
12:00:14
start mi2
12:00:14
start mi2 range(p) 1 loop
12:00:14
finish mi2 range(p) 1 loop
12:00:14
start mi2 range(p) 2 loop
12:00:14
finish mi2 range(p) 2 loop
12:00:14
start mi2 range(NT) loop
12:00:14
finish mi2 range(NT) loop
12:00:14
start mi2 range(n) loop
12:00:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:00:14
start mi2 range(n) 2loop
12:00:14
finish mi2 range(n) 2loop
12:00:14
[[-3.25258235]]
end mi2 loop
12:00:14
estep
12:00:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:00:30
start ppi1
12:00:30
start mi0
12:00:30
start mi0 range(p) 1 loop
12:00:30
finish mi0 range(p) 1 loop
12:00:30
start mi0 range(p) 2 loop
12:00:30
finish mi0 range(p) 2 loop
12:00:30
start mi0 range(NT) loop
12:00:30
finish mi0 range(NT) loop
12:00:30
start mi0 range(n) loop
12:00:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:00:30
start mi0 range(n) 2loop
12:00:30
finish mi0 range(n) 2loop
12:00:30
start mi1
12:00:30
start mi1 range(p) 1 loop
12:00:30
finish mi1 range(p) 1 loop
12:00:30
start mi1 range(p) 2 loop
12:00:30
finish mi1 range(p) 2 loop
12:00:30
start mi1 range(NT) loop
12:00:30
finish mi1 range(NT) loop
12:00:30
start mi1 range(n) loop
12:00:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:00:30
start mi1 range(n) 2loop
12:00:30
finish mi1 range(n) 2loop
12:00:30
start mi2
12:00:30
start mi2 range(p) 1 loop
12:00:30
finish mi2 range(p) 1 loop
12:00:30
start mi2 range(p) 2 loop
12:00:30
finish mi2 range(p) 2 loop
12:00:30
start mi2 range(NT) loop
12:00:30
finish mi2 range(NT) loop
12:00:30
start mi2 range(n) loop
12:00:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:00:30
start mi2 range(n) 2loop
12:00:30
finish mi2 range(n) 2loop
12:00:30
[[-3.31507399]]
end mi2 loop
12:00:30
estep
12:00:30
end estep
12:00:46
end pa12:00:46
goodness of fit correlation [0.35550965]
start cluster 12:00:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33809 instead
  warnings.warn(
29
parallel submitted
12:01:09
parallel finished
12:04:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:04:22
start mi0
12:04:22
start mi0 range(p) 1 loop
12:04:22
finish mi0 range(p) 1 loop
12:04:22
start mi0 range(p) 2 loop
12:04:22
finish mi0 range(p) 2 loop
12:04:22
start mi0 range(NT) loop
12:04:23
finish mi0 range(NT) loop
12:04:23
start mi0 range(n) loop
12:04:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:04:23
start mi0 range(n) 2loop
12:04:23
finish mi0 range(n) 2loop
12:04:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:04:23
start mi1 range(p) 1 loop
12:04:23
finish mi1 range(p) 1 loop
12:04:23
start mi1 range(p) 2 loop
12:04:23
finish mi1 range(p) 2 loop
12:04:23
start mi1 range(NT) loop
12:04:23
finish mi1 range(NT) loop
12:04:23
start mi1 range(n) loop
12:04:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:04:23
start mi1 range(n) 2loop
12:04:23
finish mi1 range(n) 2loop
12:04:23
start mi2
12:04:23
start mi2 range(p) 1 loop
12:04:23
finish mi2 range(p) 1 loop
12:04:23
start mi2 range(p) 2 loop
12:04:23
finish mi2 range(p) 2 loop
12:04:23
start mi2 range(NT) loop
12:04:23
finish mi2 range(NT) loop
12:04:23
start mi2 range(n) loop
12:04:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:04:23
start mi2 range(n) 2loop
12:04:23
finish mi2 range(n) 2loop
12:04:23
[[-3.24945926]]
end mi2 loop
12:04:23
estep
12:04:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:04:38
start ppi1
12:04:38
start mi0
12:04:38
start mi0 range(p) 1 loop
12:04:38
finish mi0 range(p) 1 loop
12:04:38
start mi0 range(p) 2 loop
12:04:38
finish mi0 range(p) 2 loop
12:04:38
start mi0 range(NT) loop
12:04:38
finish mi0 range(NT) loop
12:04:38
start mi0 range(n) loop
12:04:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:04:38
start mi0 range(n) 2loop
12:04:38
finish mi0 range(n) 2loop
12:04:38
start mi1
12:04:38
start mi1 range(p) 1 loop
12:04:38
finish mi1 range(p) 1 loop
12:04:38
start mi1 range(p) 2 loop
12:04:38
finish mi1 range(p) 2 loop
12:04:38
start mi1 range(NT) loop
12:04:38
finish mi1 range(NT) loop
12:04:38
start mi1 range(n) loop
12:04:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:04:38
start mi1 range(n) 2loop
12:04:38
finish mi1 range(n) 2loop
12:04:38
start mi2
12:04:38
start mi2 range(p) 1 loop
12:04:38
finish mi2 range(p) 1 loop
12:04:38
start mi2 range(p) 2 loop
12:04:38
finish mi2 range(p) 2 loop
12:04:38
start mi2 range(NT) loop
12:04:39
finish mi2 range(NT) loop
12:04:39
start mi2 range(n) loop
12:04:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:04:39
start mi2 range(n) 2loop
12:04:39
finish mi2 range(n) 2loop
12:04:39
[[-3.31195093]]
end mi2 loop
12:04:39
estep
12:04:39
end estep
12:04:55
end pa12:04:55
goodness of fit correlation [0.17278656]
0.36503457882611584
[5.89389533e-01 5.61609388e-01 5.47246202e-01 5.68510936e-01
 4.93067193e-01 5.90104877e-01 6.14008459e-01 6.15690606e-01
 6.52280049e-01 6.28427989e-01 6.12347687e-01 5.52217804e-01
 5.48042610e-01 5.47720033e-01 5.28785994e-01 6.26614667e-01
 5.48653486e-01 6.69534638e-01 6.15549210e-01 4.90347665e-01
 6.08031664e-01 6.16316393e-01 5.29442725e-01 5.65625901e-01
 5.21829096e-01 5.61605201e-01 5.21284999e-01 5.65384052e-01
 6.15623031e-01 5.69538766e-01 4.84057034e-01 5.11872716e-01
 5.08018353e-01 6.70517927e-01 5.42165411e-01 5.38773097e-01
 5.43434688e-01 5.48350560e-01 4.94257006e-01 5.51847925e-01
 5.74261283e-01 5.83225944e-01 6.32064916e-01 6.00520973e-01
 5.51603511e-01 5.22256995e-01 5.86785203e-01 5.80451032e-01
 5.40800896e-01 5.59842297e-01 7.14285128e-01 5.78327965e-01
 6.13994752e-01 4.57860878e-01 6.17798569e-01 6.36003353e-01
 5.33702022e-01 5.84070314e-01 5.44951423e-01 5.52626620e-01
 5.15563046e-01 5.28630307e-01 6.41776045e-01 5.94475159e-01
 4.91907217e-01 5.15505902e-01 5.20608318e-01 6.38971853e-01
 3.69477961e-01 3.54428814e-01 3.34156482e-01 3.54327347e-01
 3.26632655e-01 3.71145359e-01 3.31534339e-01 3.50234040e-01
 3.47338107e-01 3.42439059e-01 3.52802792e-01 3.70088930e-01
 3.47857245e-01 3.48904327e-01 3.73718999e-01 3.42353960e-01
 3.34833999e-01 3.47144573e-01 3.53181019e-01 3.88839408e-01
 3.39175370e-01 3.51535019e-01 3.36431835e-01 3.41717549e-01
 3.58050741e-01 3.44606144e-01 3.20131051e-01 3.29348126e-01
 3.44630349e-01 3.49747268e-01 3.33716508e-01 3.20617108e-01
 3.43015179e-01 3.38032536e-01 3.88966572e-01 3.42270778e-01
 3.34125013e-01 3.61739499e-01 3.25557899e-01 3.70016023e-01
 3.35787350e-01 3.74341312e-01 3.47838442e-01 3.45390439e-01
 3.53586554e-01 3.69984470e-01 3.51236622e-01 3.56123750e-01
 3.76952712e-01 3.37214816e-01 3.39671794e-01 3.59895543e-01
 3.51572061e-01 3.89793362e-01 3.39578172e-01 3.49479865e-01
 3.41344892e-01 3.36674584e-01 3.62947993e-01 3.44954342e-01
 3.18207681e-01 3.28921305e-01 3.39638226e-01 3.50548975e-01
 2.55033050e-01 3.43297918e-01 3.47969492e-01 3.38630811e-01
 1.45220018e+00 1.05555872e-03]
start cluster 12:04:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42544 instead
  warnings.warn(
0
parallel submitted
12:05:17
parallel finished
12:08:33
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:08:44
start mi0
12:08:44
start mi0 range(p) 1 loop
12:08:44
finish mi0 range(p) 1 loop
12:08:44
start mi0 range(p) 2 loop
12:08:44
finish mi0 range(p) 2 loop
12:08:44
start mi0 range(NT) loop
12:08:44
finish mi0 range(NT) loop
12:08:44
start mi0 range(n) loop
12:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:08:44
start mi0 range(n) 2loop
12:08:44
finish mi0 range(n) 2loop
12:08:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:08:44
start mi1 range(p) 1 loop
12:08:44
finish mi1 range(p) 1 loop
12:08:44
start mi1 range(p) 2 loop
12:08:44
finish mi1 range(p) 2 loop
12:08:44
start mi1 range(NT) loop
12:08:44
finish mi1 range(NT) loop
12:08:44
start mi1 range(n) loop
12:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:08:44
start mi1 range(n) 2loop
12:08:44
finish mi1 range(n) 2loop
12:08:44
[[-2.87941976]]
end mi1 loop
12:08:44
estep
12:08:44
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:09:00
start ppi1
12:09:00
start mi0
12:09:00
start mi0 range(p) 1 loop
12:09:00
finish mi0 range(p) 1 loop
12:09:00
start mi0 range(p) 2 loop
12:09:00
finish mi0 range(p) 2 loop
12:09:00
start mi0 range(NT) loop
12:09:00
finish mi0 range(NT) loop
12:09:00
start mi0 range(n) loop
12:09:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:09:00
start mi0 range(n) 2loop
12:09:00
finish mi0 range(n) 2loop
12:09:00
start mi1
12:09:00
start mi1 range(p) 1 loop
12:09:00
finish mi1 range(p) 1 loop
12:09:00
start mi1 range(p) 2 loop
12:09:00
finish mi1 range(p) 2 loop
12:09:00
start mi1 range(NT) loop
12:09:00
finish mi1 range(NT) loop
12:09:00
start mi1 range(n) loop
12:09:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:09:01
start mi1 range(n) 2loop
12:09:01
finish mi1 range(n) 2loop
12:09:01
[[-2.87941976]]
end mi1 loop
12:09:01
estep
12:09:01
end estep
12:09:17
end pa12:09:17
goodness of fit correlation [0.06291199]
start cluster 12:09:17
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34296 instead
  warnings.warn(
1
parallel submitted
12:09:38
parallel finished
12:13:15
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:13:28
start mi0
12:13:28
start mi0 range(p) 1 loop
12:13:28
finish mi0 range(p) 1 loop
12:13:28
start mi0 range(p) 2 loop
12:13:28
finish mi0 range(p) 2 loop
12:13:28
start mi0 range(NT) loop
12:13:28
finish mi0 range(NT) loop
12:13:28
start mi0 range(n) loop
12:13:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:13:28
start mi0 range(n) 2loop
12:13:28
finish mi0 range(n) 2loop
12:13:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:13:28
start mi1 range(p) 1 loop
12:13:28
finish mi1 range(p) 1 loop
12:13:28
start mi1 range(p) 2 loop
12:13:28
finish mi1 range(p) 2 loop
12:13:28
start mi1 range(NT) loop
12:13:29
finish mi1 range(NT) loop
12:13:29
start mi1 range(n) loop
12:13:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:13:29
start mi1 range(n) 2loop
12:13:29
finish mi1 range(n) 2loop
12:13:29
[[-2.9244866]]
end mi1 loop
12:13:29
estep
12:13:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:13:44
start ppi1
12:13:44
start mi0
12:13:44
start mi0 range(p) 1 loop
12:13:44
finish mi0 range(p) 1 loop
12:13:44
start mi0 range(p) 2 loop
12:13:44
finish mi0 range(p) 2 loop
12:13:44
start mi0 range(NT) loop
12:13:44
finish mi0 range(NT) loop
12:13:44
start mi0 range(n) loop
12:13:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:13:44
start mi0 range(n) 2loop
12:13:44
finish mi0 range(n) 2loop
12:13:44
start mi1
12:13:44
start mi1 range(p) 1 loop
12:13:44
finish mi1 range(p) 1 loop
12:13:44
start mi1 range(p) 2 loop
12:13:44
finish mi1 range(p) 2 loop
12:13:44
start mi1 range(NT) loop
12:13:44
finish mi1 range(NT) loop
12:13:44
start mi1 range(n) loop
12:13:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:13:44
start mi1 range(n) 2loop
12:13:44
finish mi1 range(n) 2loop
12:13:44
[[-2.9869829]]
end mi1 loop
12:13:44
estep
12:13:44
end estep
12:13:59
end pa12:13:59
goodness of fit correlation [0.21162056]
start cluster 12:13:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39986 instead
  warnings.warn(
2
parallel submitted
12:14:18
parallel finished
12:16:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:16:58
start mi0
12:16:58
start mi0 range(p) 1 loop
12:16:58
finish mi0 range(p) 1 loop
12:16:58
start mi0 range(p) 2 loop
12:16:58
finish mi0 range(p) 2 loop
12:16:58
start mi0 range(NT) loop
12:16:58
finish mi0 range(NT) loop
12:16:58
start mi0 range(n) loop
12:16:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:16:58
start mi0 range(n) 2loop
12:16:58
finish mi0 range(n) 2loop
12:16:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:16:58
start mi1 range(p) 1 loop
12:16:58
finish mi1 range(p) 1 loop
12:16:58
start mi1 range(p) 2 loop
12:16:58
finish mi1 range(p) 2 loop
12:16:58
start mi1 range(NT) loop
12:16:58
finish mi1 range(NT) loop
12:16:58
start mi1 range(n) loop
12:16:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:16:58
start mi1 range(n) 2loop
12:16:58
finish mi1 range(n) 2loop
12:16:58
[[-3.01142361]]
end mi1 loop
12:16:58
estep
12:16:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:17:13
start ppi1
12:17:13
start mi0
12:17:13
start mi0 range(p) 1 loop
12:17:13
finish mi0 range(p) 1 loop
12:17:13
start mi0 range(p) 2 loop
12:17:13
finish mi0 range(p) 2 loop
12:17:13
start mi0 range(NT) loop
12:17:13
finish mi0 range(NT) loop
12:17:13
start mi0 range(n) loop
12:17:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:17:13
start mi0 range(n) 2loop
12:17:13
finish mi0 range(n) 2loop
12:17:13
start mi1
12:17:13
start mi1 range(p) 1 loop
12:17:13
finish mi1 range(p) 1 loop
12:17:13
start mi1 range(p) 2 loop
12:17:13
finish mi1 range(p) 2 loop
12:17:13
start mi1 range(NT) loop
12:17:13
finish mi1 range(NT) loop
12:17:13
start mi1 range(n) loop
12:17:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:17:13
start mi1 range(n) 2loop
12:17:13
finish mi1 range(n) 2loop
12:17:13
[[-3.0739121]]
end mi1 loop
12:17:13
estep
12:17:13
end estep
12:17:28
end pa12:17:28
goodness of fit correlation [0.29750324]
start cluster 12:17:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36644 instead
  warnings.warn(
3
parallel submitted
12:17:48
parallel finished
12:22:21
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:22:34
start mi0
12:22:34
start mi0 range(p) 1 loop
12:22:34
finish mi0 range(p) 1 loop
12:22:34
start mi0 range(p) 2 loop
12:22:34
finish mi0 range(p) 2 loop
12:22:34
start mi0 range(NT) loop
12:22:34
finish mi0 range(NT) loop
12:22:34
start mi0 range(n) loop
12:22:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:22:34
start mi0 range(n) 2loop
12:22:34
finish mi0 range(n) 2loop
12:22:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:22:34
start mi1 range(p) 1 loop
12:22:34
finish mi1 range(p) 1 loop
12:22:34
start mi1 range(p) 2 loop
12:22:34
finish mi1 range(p) 2 loop
12:22:34
start mi1 range(NT) loop
12:22:34
finish mi1 range(NT) loop
12:22:34
start mi1 range(n) loop
12:22:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:22:34
start mi1 range(n) 2loop
12:22:34
finish mi1 range(n) 2loop
12:22:34
[[-3.075709]]
end mi1 loop
12:22:34
estep
12:22:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:22:49
start ppi1
12:22:49
start mi0
12:22:49
start mi0 range(p) 1 loop
12:22:49
finish mi0 range(p) 1 loop
12:22:49
start mi0 range(p) 2 loop
12:22:49
finish mi0 range(p) 2 loop
12:22:49
start mi0 range(NT) loop
12:22:49
finish mi0 range(NT) loop
12:22:49
start mi0 range(n) loop
12:22:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:22:49
start mi0 range(n) 2loop
12:22:49
finish mi0 range(n) 2loop
12:22:49
start mi1
12:22:49
start mi1 range(p) 1 loop
12:22:49
finish mi1 range(p) 1 loop
12:22:49
start mi1 range(p) 2 loop
12:22:49
finish mi1 range(p) 2 loop
12:22:49
start mi1 range(NT) loop
12:22:49
finish mi1 range(NT) loop
12:22:49
start mi1 range(n) loop
12:22:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:22:50
start mi1 range(n) 2loop
12:22:50
finish mi1 range(n) 2loop
12:22:50
[[-3.13816343]]
end mi1 loop
12:22:50
estep
12:22:50
end estep
12:23:07
end pa12:23:07
goodness of fit correlation [0.29394049]
start cluster 12:23:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37150 instead
  warnings.warn(
4
parallel submitted
12:23:30
parallel finished
12:26:06
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:26:19
start mi0
12:26:19
start mi0 range(p) 1 loop
12:26:19
finish mi0 range(p) 1 loop
12:26:19
start mi0 range(p) 2 loop
12:26:19
finish mi0 range(p) 2 loop
12:26:19
start mi0 range(NT) loop
12:26:19
finish mi0 range(NT) loop
12:26:19
start mi0 range(n) loop
12:26:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:26:19
start mi0 range(n) 2loop
12:26:19
finish mi0 range(n) 2loop
12:26:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:26:19
start mi1 range(p) 1 loop
12:26:19
finish mi1 range(p) 1 loop
12:26:19
start mi1 range(p) 2 loop
12:26:19
finish mi1 range(p) 2 loop
12:26:19
start mi1 range(NT) loop
12:26:19
finish mi1 range(NT) loop
12:26:19
start mi1 range(n) loop
12:26:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:26:19
start mi1 range(n) 2loop
12:26:19
finish mi1 range(n) 2loop
12:26:19
[[-3.06595333]]
end mi1 loop
12:26:19
estep
12:26:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:26:35
start ppi1
12:26:35
start mi0
12:26:35
start mi0 range(p) 1 loop
12:26:35
finish mi0 range(p) 1 loop
12:26:35
start mi0 range(p) 2 loop
12:26:36
finish mi0 range(p) 2 loop
12:26:36
start mi0 range(NT) loop
12:26:36
finish mi0 range(NT) loop
12:26:36
start mi0 range(n) loop
12:26:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:26:36
start mi0 range(n) 2loop
12:26:36
finish mi0 range(n) 2loop
12:26:36
start mi1
12:26:36
start mi1 range(p) 1 loop
12:26:36
finish mi1 range(p) 1 loop
12:26:36
start mi1 range(p) 2 loop
12:26:36
finish mi1 range(p) 2 loop
12:26:36
start mi1 range(NT) loop
12:26:36
finish mi1 range(NT) loop
12:26:36
start mi1 range(n) loop
12:26:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:26:36
start mi1 range(n) 2loop
12:26:36
finish mi1 range(n) 2loop
12:26:36
[[-3.12841645]]
end mi1 loop
12:26:36
estep
12:26:36
end estep
12:26:53
end pa12:26:53
goodness of fit correlation [0.28277317]
start cluster 12:26:53
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40619 instead
  warnings.warn(
5
parallel submitted
12:27:15
parallel finished
12:30:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:30:43
start mi0
12:30:43
start mi0 range(p) 1 loop
12:30:43
finish mi0 range(p) 1 loop
12:30:43
start mi0 range(p) 2 loop
12:30:43
finish mi0 range(p) 2 loop
12:30:43
start mi0 range(NT) loop
12:30:43
finish mi0 range(NT) loop
12:30:43
start mi0 range(n) loop
12:30:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:30:43
start mi0 range(n) 2loop
12:30:43
finish mi0 range(n) 2loop
12:30:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:30:43
start mi1 range(p) 1 loop
12:30:43
finish mi1 range(p) 1 loop
12:30:43
start mi1 range(p) 2 loop
12:30:43
finish mi1 range(p) 2 loop
12:30:43
start mi1 range(NT) loop
12:30:43
finish mi1 range(NT) loop
12:30:44
start mi1 range(n) loop
12:30:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:30:44
start mi1 range(n) 2loop
12:30:44
finish mi1 range(n) 2loop
12:30:44
[[-3.11416836]]
end mi1 loop
12:30:44
estep
12:30:44
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:31:01
start ppi1
12:31:01
start mi0
12:31:01
start mi0 range(p) 1 loop
12:31:01
finish mi0 range(p) 1 loop
12:31:01
start mi0 range(p) 2 loop
12:31:01
finish mi0 range(p) 2 loop
12:31:01
start mi0 range(NT) loop
12:31:01
finish mi0 range(NT) loop
12:31:01
start mi0 range(n) loop
12:31:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:31:01
start mi0 range(n) 2loop
12:31:01
finish mi0 range(n) 2loop
12:31:01
start mi1
12:31:01
start mi1 range(p) 1 loop
12:31:01
finish mi1 range(p) 1 loop
12:31:01
start mi1 range(p) 2 loop
12:31:01
finish mi1 range(p) 2 loop
12:31:01
start mi1 range(NT) loop
12:31:01
finish mi1 range(NT) loop
12:31:01
start mi1 range(n) loop
12:31:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:31:01
start mi1 range(n) 2loop
12:31:01
finish mi1 range(n) 2loop
12:31:01
start mi2
12:31:01
start mi2 range(p) 1 loop
12:31:01
finish mi2 range(p) 1 loop
12:31:01
start mi2 range(p) 2 loop
12:31:01
finish mi2 range(p) 2 loop
12:31:01
start mi2 range(NT) loop
12:31:01
finish mi2 range(NT) loop
12:31:01
start mi2 range(n) loop
12:31:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:31:01
start mi2 range(n) 2loop
12:31:01
finish mi2 range(n) 2loop
12:31:02
[[-3.17668006]]
end mi2 loop
12:31:02
estep
12:31:02
end estep
12:31:18
end pa12:31:18
goodness of fit correlation [0.31078821]
start cluster 12:31:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38541 instead
  warnings.warn(
6
parallel submitted
12:31:40
parallel finished
12:34:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:35:00
start mi0
12:35:00
start mi0 range(p) 1 loop
12:35:00
finish mi0 range(p) 1 loop
12:35:00
start mi0 range(p) 2 loop
12:35:00
finish mi0 range(p) 2 loop
12:35:00
start mi0 range(NT) loop
12:35:00
finish mi0 range(NT) loop
12:35:00
start mi0 range(n) loop
12:35:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:35:00
start mi0 range(n) 2loop
12:35:00
finish mi0 range(n) 2loop
12:35:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:35:00
start mi1 range(p) 1 loop
12:35:00
finish mi1 range(p) 1 loop
12:35:00
start mi1 range(p) 2 loop
12:35:00
finish mi1 range(p) 2 loop
12:35:00
start mi1 range(NT) loop
12:35:00
finish mi1 range(NT) loop
12:35:00
start mi1 range(n) loop
12:35:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:35:00
start mi1 range(n) 2loop
12:35:00
finish mi1 range(n) 2loop
12:35:00
[[-3.12967649]]
end mi1 loop
12:35:00
estep
12:35:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:35:17
start ppi1
12:35:17
start mi0
12:35:17
start mi0 range(p) 1 loop
12:35:17
finish mi0 range(p) 1 loop
12:35:17
start mi0 range(p) 2 loop
12:35:17
finish mi0 range(p) 2 loop
12:35:17
start mi0 range(NT) loop
12:35:17
finish mi0 range(NT) loop
12:35:17
start mi0 range(n) loop
12:35:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:35:17
start mi0 range(n) 2loop
12:35:17
finish mi0 range(n) 2loop
12:35:17
start mi1
12:35:17
start mi1 range(p) 1 loop
12:35:17
finish mi1 range(p) 1 loop
12:35:17
start mi1 range(p) 2 loop
12:35:17
finish mi1 range(p) 2 loop
12:35:17
start mi1 range(NT) loop
12:35:17
finish mi1 range(NT) loop
12:35:17
start mi1 range(n) loop
12:35:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:35:18
start mi1 range(n) 2loop
12:35:18
finish mi1 range(n) 2loop
12:35:18
start mi2
12:35:18
start mi2 range(p) 1 loop
12:35:18
finish mi2 range(p) 1 loop
12:35:18
start mi2 range(p) 2 loop
12:35:18
finish mi2 range(p) 2 loop
12:35:18
start mi2 range(NT) loop
12:35:18
finish mi2 range(NT) loop
12:35:18
start mi2 range(n) loop
12:35:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:35:18
start mi2 range(n) 2loop
12:35:18
finish mi2 range(n) 2loop
12:35:18
[[-3.19220091]]
end mi2 loop
12:35:18
estep
12:35:18
end estep
12:35:35
end pa12:35:35
goodness of fit correlation [0.28263458]
start cluster 12:35:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42297 instead
  warnings.warn(
7
parallel submitted
12:35:57
parallel finished
12:39:28
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:39:40
start mi0
12:39:40
start mi0 range(p) 1 loop
12:39:40
finish mi0 range(p) 1 loop
12:39:40
start mi0 range(p) 2 loop
12:39:40
finish mi0 range(p) 2 loop
12:39:40
start mi0 range(NT) loop
12:39:41
finish mi0 range(NT) loop
12:39:41
start mi0 range(n) loop
12:39:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:39:41
start mi0 range(n) 2loop
12:39:41
finish mi0 range(n) 2loop
12:39:41
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:39:41
start mi1 range(p) 1 loop
12:39:41
finish mi1 range(p) 1 loop
12:39:41
start mi1 range(p) 2 loop
12:39:41
finish mi1 range(p) 2 loop
12:39:41
start mi1 range(NT) loop
12:39:41
finish mi1 range(NT) loop
12:39:41
start mi1 range(n) loop
12:39:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:39:41
start mi1 range(n) 2loop
12:39:41
finish mi1 range(n) 2loop
12:39:41
start mi2
12:39:41
start mi2 range(p) 1 loop
12:39:41
finish mi2 range(p) 1 loop
12:39:41
start mi2 range(p) 2 loop
12:39:41
finish mi2 range(p) 2 loop
12:39:41
start mi2 range(NT) loop
12:39:41
finish mi2 range(NT) loop
12:39:41
start mi2 range(n) loop
12:39:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:39:41
start mi2 range(n) 2loop
12:39:41
finish mi2 range(n) 2loop
12:39:41
[[-3.14560442]]
end mi2 loop
12:39:41
estep
12:39:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:39:58
start ppi1
12:39:58
start mi0
12:39:58
start mi0 range(p) 1 loop
12:39:58
finish mi0 range(p) 1 loop
12:39:58
start mi0 range(p) 2 loop
12:39:58
finish mi0 range(p) 2 loop
12:39:58
start mi0 range(NT) loop
12:39:58
finish mi0 range(NT) loop
12:39:58
start mi0 range(n) loop
12:39:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:39:58
start mi0 range(n) 2loop
12:39:58
finish mi0 range(n) 2loop
12:39:58
start mi1
12:39:58
start mi1 range(p) 1 loop
12:39:58
finish mi1 range(p) 1 loop
12:39:58
start mi1 range(p) 2 loop
12:39:58
finish mi1 range(p) 2 loop
12:39:58
start mi1 range(NT) loop
12:39:59
finish mi1 range(NT) loop
12:39:59
start mi1 range(n) loop
12:39:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:39:59
start mi1 range(n) 2loop
12:39:59
finish mi1 range(n) 2loop
12:39:59
start mi2
12:39:59
start mi2 range(p) 1 loop
12:39:59
finish mi2 range(p) 1 loop
12:39:59
start mi2 range(p) 2 loop
12:39:59
finish mi2 range(p) 2 loop
12:39:59
start mi2 range(NT) loop
12:39:59
finish mi2 range(NT) loop
12:39:59
start mi2 range(n) loop
12:39:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:39:59
start mi2 range(n) 2loop
12:39:59
finish mi2 range(n) 2loop
12:39:59
[[-3.20809644]]
end mi2 loop
12:39:59
estep
12:39:59
end estep
12:40:16
end pa12:40:16
goodness of fit correlation [0.35238742]
start cluster 12:40:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37923 instead
  warnings.warn(
8
parallel submitted
12:40:37
parallel finished
12:42:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:43:07
start mi0
12:43:07
start mi0 range(p) 1 loop
12:43:07
finish mi0 range(p) 1 loop
12:43:07
start mi0 range(p) 2 loop
12:43:07
finish mi0 range(p) 2 loop
12:43:07
start mi0 range(NT) loop
12:43:07
finish mi0 range(NT) loop
12:43:07
start mi0 range(n) loop
12:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:43:07
start mi0 range(n) 2loop
12:43:07
finish mi0 range(n) 2loop
12:43:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:43:07
start mi1 range(p) 1 loop
12:43:07
finish mi1 range(p) 1 loop
12:43:07
start mi1 range(p) 2 loop
12:43:07
finish mi1 range(p) 2 loop
12:43:07
start mi1 range(NT) loop
12:43:07
finish mi1 range(NT) loop
12:43:07
start mi1 range(n) loop
12:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:43:07
start mi1 range(n) 2loop
12:43:07
finish mi1 range(n) 2loop
12:43:07
start mi2
12:43:07
start mi2 range(p) 1 loop
12:43:07
finish mi2 range(p) 1 loop
12:43:07
start mi2 range(p) 2 loop
12:43:07
finish mi2 range(p) 2 loop
12:43:07
start mi2 range(NT) loop
12:43:07
finish mi2 range(NT) loop
12:43:07
start mi2 range(n) loop
12:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:43:07
start mi2 range(n) 2loop
12:43:07
finish mi2 range(n) 2loop
12:43:07
[[-3.17399452]]
end mi2 loop
12:43:07
estep
12:43:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:43:22
start ppi1
12:43:22
start mi0
12:43:22
start mi0 range(p) 1 loop
12:43:22
finish mi0 range(p) 1 loop
12:43:22
start mi0 range(p) 2 loop
12:43:22
finish mi0 range(p) 2 loop
12:43:22
start mi0 range(NT) loop
12:43:22
finish mi0 range(NT) loop
12:43:22
start mi0 range(n) loop
12:43:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:43:22
start mi0 range(n) 2loop
12:43:22
finish mi0 range(n) 2loop
12:43:22
start mi1
12:43:22
start mi1 range(p) 1 loop
12:43:22
finish mi1 range(p) 1 loop
12:43:22
start mi1 range(p) 2 loop
12:43:23
finish mi1 range(p) 2 loop
12:43:23
start mi1 range(NT) loop
12:43:23
finish mi1 range(NT) loop
12:43:23
start mi1 range(n) loop
12:43:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:43:23
start mi1 range(n) 2loop
12:43:23
finish mi1 range(n) 2loop
12:43:23
start mi2
12:43:23
start mi2 range(p) 1 loop
12:43:23
finish mi2 range(p) 1 loop
12:43:23
start mi2 range(p) 2 loop
12:43:23
finish mi2 range(p) 2 loop
12:43:23
start mi2 range(NT) loop
12:43:23
finish mi2 range(NT) loop
12:43:23
start mi2 range(n) loop
12:43:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:43:23
start mi2 range(n) 2loop
12:43:23
finish mi2 range(n) 2loop
12:43:23
[[-3.2364865]]
end mi2 loop
12:43:23
estep
12:43:23
end estep
12:43:39
end pa12:43:39
goodness of fit correlation [0.31140694]
start cluster 12:43:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42400 instead
  warnings.warn(
9
parallel submitted
12:44:02
parallel finished
12:47:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:48:01
start mi0
12:48:01
start mi0 range(p) 1 loop
12:48:01
finish mi0 range(p) 1 loop
12:48:01
start mi0 range(p) 2 loop
12:48:01
finish mi0 range(p) 2 loop
12:48:01
start mi0 range(NT) loop
12:48:01
finish mi0 range(NT) loop
12:48:02
start mi0 range(n) loop
12:48:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:48:02
start mi0 range(n) 2loop
12:48:02
finish mi0 range(n) 2loop
12:48:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:48:02
start mi1 range(p) 1 loop
12:48:02
finish mi1 range(p) 1 loop
12:48:02
start mi1 range(p) 2 loop
12:48:02
finish mi1 range(p) 2 loop
12:48:02
start mi1 range(NT) loop
12:48:02
finish mi1 range(NT) loop
12:48:02
start mi1 range(n) loop
12:48:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:48:02
start mi1 range(n) 2loop
12:48:02
finish mi1 range(n) 2loop
12:48:02
[[-3.13480724]]
end mi1 loop
12:48:02
estep
12:48:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:48:18
start ppi1
12:48:18
start mi0
12:48:18
start mi0 range(p) 1 loop
12:48:18
finish mi0 range(p) 1 loop
12:48:18
start mi0 range(p) 2 loop
12:48:18
finish mi0 range(p) 2 loop
12:48:18
start mi0 range(NT) loop
12:48:18
finish mi0 range(NT) loop
12:48:18
start mi0 range(n) loop
12:48:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:48:18
start mi0 range(n) 2loop
12:48:18
finish mi0 range(n) 2loop
12:48:19
start mi1
12:48:19
start mi1 range(p) 1 loop
12:48:19
finish mi1 range(p) 1 loop
12:48:19
start mi1 range(p) 2 loop
12:48:19
finish mi1 range(p) 2 loop
12:48:19
start mi1 range(NT) loop
12:48:19
finish mi1 range(NT) loop
12:48:19
start mi1 range(n) loop
12:48:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:48:19
start mi1 range(n) 2loop
12:48:19
finish mi1 range(n) 2loop
12:48:19
start mi2
12:48:19
start mi2 range(p) 1 loop
12:48:19
finish mi2 range(p) 1 loop
12:48:19
start mi2 range(p) 2 loop
12:48:19
finish mi2 range(p) 2 loop
12:48:19
start mi2 range(NT) loop
12:48:19
finish mi2 range(NT) loop
12:48:19
start mi2 range(n) loop
12:48:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:48:19
start mi2 range(n) 2loop
12:48:19
finish mi2 range(n) 2loop
12:48:19
[[-3.19733696]]
end mi2 loop
12:48:19
estep
12:48:19
end estep
12:48:36
end pa12:48:36
goodness of fit correlation [0.33283823]
start cluster 12:48:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42557 instead
  warnings.warn(
10
parallel submitted
12:49:02
parallel finished
12:52:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:52:18
start mi0
12:52:18
start mi0 range(p) 1 loop
12:52:18
finish mi0 range(p) 1 loop
12:52:18
start mi0 range(p) 2 loop
12:52:18
finish mi0 range(p) 2 loop
12:52:18
start mi0 range(NT) loop
12:52:18
finish mi0 range(NT) loop
12:52:18
start mi0 range(n) loop
12:52:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:52:18
start mi0 range(n) 2loop
12:52:18
finish mi0 range(n) 2loop
12:52:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:52:18
start mi1 range(p) 1 loop
12:52:18
finish mi1 range(p) 1 loop
12:52:19
start mi1 range(p) 2 loop
12:52:19
finish mi1 range(p) 2 loop
12:52:19
start mi1 range(NT) loop
12:52:19
finish mi1 range(NT) loop
12:52:19
start mi1 range(n) loop
12:52:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:52:19
start mi1 range(n) 2loop
12:52:19
finish mi1 range(n) 2loop
12:52:19
start mi2
12:52:19
start mi2 range(p) 1 loop
12:52:19
finish mi2 range(p) 1 loop
12:52:19
start mi2 range(p) 2 loop
12:52:19
finish mi2 range(p) 2 loop
12:52:19
start mi2 range(NT) loop
12:52:19
finish mi2 range(NT) loop
12:52:19
start mi2 range(n) loop
12:52:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:52:19
start mi2 range(n) 2loop
12:52:19
finish mi2 range(n) 2loop
12:52:19
[[-3.19045652]]
end mi2 loop
12:52:19
estep
12:52:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:52:34
start ppi1
12:52:34
start mi0
12:52:34
start mi0 range(p) 1 loop
12:52:34
finish mi0 range(p) 1 loop
12:52:34
start mi0 range(p) 2 loop
12:52:34
finish mi0 range(p) 2 loop
12:52:34
start mi0 range(NT) loop
12:52:34
finish mi0 range(NT) loop
12:52:34
start mi0 range(n) loop
12:52:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:52:34
start mi0 range(n) 2loop
12:52:34
finish mi0 range(n) 2loop
12:52:34
start mi1
12:52:34
start mi1 range(p) 1 loop
12:52:34
finish mi1 range(p) 1 loop
12:52:34
start mi1 range(p) 2 loop
12:52:34
finish mi1 range(p) 2 loop
12:52:34
start mi1 range(NT) loop
12:52:34
finish mi1 range(NT) loop
12:52:34
start mi1 range(n) loop
12:52:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:52:34
start mi1 range(n) 2loop
12:52:34
finish mi1 range(n) 2loop
12:52:35
start mi2
12:52:35
start mi2 range(p) 1 loop
12:52:35
finish mi2 range(p) 1 loop
12:52:35
start mi2 range(p) 2 loop
12:52:35
finish mi2 range(p) 2 loop
12:52:35
start mi2 range(NT) loop
12:52:35
finish mi2 range(NT) loop
12:52:35
start mi2 range(n) loop
12:52:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:52:35
start mi2 range(n) 2loop
12:52:35
finish mi2 range(n) 2loop
12:52:35
[[-3.25294847]]
end mi2 loop
12:52:35
estep
12:52:35
end estep
12:52:51
end pa12:52:51
goodness of fit correlation [0.32739571]
start cluster 12:52:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37417 instead
  warnings.warn(
11
parallel submitted
12:53:15
parallel finished
12:56:35
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:56:48
start mi0
12:56:48
start mi0 range(p) 1 loop
12:56:48
finish mi0 range(p) 1 loop
12:56:48
start mi0 range(p) 2 loop
12:56:48
finish mi0 range(p) 2 loop
12:56:48
start mi0 range(NT) loop
12:56:48
finish mi0 range(NT) loop
12:56:48
start mi0 range(n) loop
12:56:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:56:48
start mi0 range(n) 2loop
12:56:48
finish mi0 range(n) 2loop
12:56:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:56:48
start mi1 range(p) 1 loop
12:56:48
finish mi1 range(p) 1 loop
12:56:48
start mi1 range(p) 2 loop
12:56:48
finish mi1 range(p) 2 loop
12:56:48
start mi1 range(NT) loop
12:56:49
finish mi1 range(NT) loop
12:56:49
start mi1 range(n) loop
12:56:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:56:49
start mi1 range(n) 2loop
12:56:49
finish mi1 range(n) 2loop
12:56:49
start mi2
12:56:49
start mi2 range(p) 1 loop
12:56:49
finish mi2 range(p) 1 loop
12:56:49
start mi2 range(p) 2 loop
12:56:49
finish mi2 range(p) 2 loop
12:56:49
start mi2 range(NT) loop
12:56:49
finish mi2 range(NT) loop
12:56:49
start mi2 range(n) loop
12:56:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:56:49
start mi2 range(n) 2loop
12:56:49
finish mi2 range(n) 2loop
12:56:49
[[-3.21204011]]
end mi2 loop
12:56:49
estep
12:56:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:57:04
start ppi1
12:57:04
start mi0
12:57:04
start mi0 range(p) 1 loop
12:57:04
finish mi0 range(p) 1 loop
12:57:04
start mi0 range(p) 2 loop
12:57:04
finish mi0 range(p) 2 loop
12:57:04
start mi0 range(NT) loop
12:57:04
finish mi0 range(NT) loop
12:57:04
start mi0 range(n) loop
12:57:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:57:05
start mi0 range(n) 2loop
12:57:05
finish mi0 range(n) 2loop
12:57:05
start mi1
12:57:05
start mi1 range(p) 1 loop
12:57:05
finish mi1 range(p) 1 loop
12:57:05
start mi1 range(p) 2 loop
12:57:05
finish mi1 range(p) 2 loop
12:57:05
start mi1 range(NT) loop
12:57:05
finish mi1 range(NT) loop
12:57:05
start mi1 range(n) loop
12:57:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:57:05
start mi1 range(n) 2loop
12:57:05
finish mi1 range(n) 2loop
12:57:05
start mi2
12:57:05
start mi2 range(p) 1 loop
12:57:05
finish mi2 range(p) 1 loop
12:57:05
start mi2 range(p) 2 loop
12:57:05
finish mi2 range(p) 2 loop
12:57:05
start mi2 range(NT) loop
12:57:05
finish mi2 range(NT) loop
12:57:05
start mi2 range(n) loop
12:57:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:57:05
start mi2 range(n) 2loop
12:57:05
finish mi2 range(n) 2loop
12:57:05
[[-3.274532]]
end mi2 loop
12:57:05
estep
12:57:05
end estep
12:57:22
end pa12:57:22
goodness of fit correlation [0.35421685]
start cluster 12:57:22
12
parallel submitted
12:57:46
parallel finished
13:00:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:01:01
start mi0
13:01:01
start mi0 range(p) 1 loop
13:01:01
finish mi0 range(p) 1 loop
13:01:01
start mi0 range(p) 2 loop
13:01:01
finish mi0 range(p) 2 loop
13:01:01
start mi0 range(NT) loop
13:01:01
finish mi0 range(NT) loop
13:01:01
start mi0 range(n) loop
13:01:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:01:02
start mi0 range(n) 2loop
13:01:02
finish mi0 range(n) 2loop
13:01:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:01:02
start mi1 range(p) 1 loop
13:01:02
finish mi1 range(p) 1 loop
13:01:02
start mi1 range(p) 2 loop
13:01:02
finish mi1 range(p) 2 loop
13:01:02
start mi1 range(NT) loop
13:01:02
finish mi1 range(NT) loop
13:01:02
start mi1 range(n) loop
13:01:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:01:02
start mi1 range(n) 2loop
13:01:02
finish mi1 range(n) 2loop
13:01:02
start mi2
13:01:02
start mi2 range(p) 1 loop
13:01:02
finish mi2 range(p) 1 loop
13:01:02
start mi2 range(p) 2 loop
13:01:02
finish mi2 range(p) 2 loop
13:01:02
start mi2 range(NT) loop
13:01:02
finish mi2 range(NT) loop
13:01:02
start mi2 range(n) loop
13:01:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:01:02
start mi2 range(n) 2loop
13:01:02
finish mi2 range(n) 2loop
13:01:02
[[-3.30718556]]
end mi2 loop
13:01:02
estep
13:01:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:01:17
start ppi1
13:01:17
start mi0
13:01:17
start mi0 range(p) 1 loop
13:01:17
finish mi0 range(p) 1 loop
13:01:17
start mi0 range(p) 2 loop
13:01:17
finish mi0 range(p) 2 loop
13:01:17
start mi0 range(NT) loop
13:01:17
finish mi0 range(NT) loop
13:01:17
start mi0 range(n) loop
13:01:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:01:18
start mi0 range(n) 2loop
13:01:18
finish mi0 range(n) 2loop
13:01:18
start mi1
13:01:18
start mi1 range(p) 1 loop
13:01:18
finish mi1 range(p) 1 loop
13:01:18
start mi1 range(p) 2 loop
13:01:18
finish mi1 range(p) 2 loop
13:01:18
start mi1 range(NT) loop
13:01:18
finish mi1 range(NT) loop
13:01:18
start mi1 range(n) loop
13:01:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:01:18
start mi1 range(n) 2loop
13:01:18
finish mi1 range(n) 2loop
13:01:18
start mi2
13:01:18
start mi2 range(p) 1 loop
13:01:18
finish mi2 range(p) 1 loop
13:01:18
start mi2 range(p) 2 loop
13:01:18
finish mi2 range(p) 2 loop
13:01:18
start mi2 range(NT) loop
13:01:18
finish mi2 range(NT) loop
13:01:18
start mi2 range(n) loop
13:01:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:01:18
start mi2 range(n) 2loop
13:01:18
finish mi2 range(n) 2loop
13:01:18
[[-3.36967638]]
end mi2 loop
13:01:18
estep
13:01:18
end estep
13:01:35
end pa13:01:35
goodness of fit correlation [0.38105189]
start cluster 13:01:35
13
parallel submitted
13:01:59
parallel finished
13:05:07
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:05:21
start mi0
13:05:21
start mi0 range(p) 1 loop
13:05:21
finish mi0 range(p) 1 loop
13:05:21
start mi0 range(p) 2 loop
13:05:21
finish mi0 range(p) 2 loop
13:05:21
start mi0 range(NT) loop
13:05:21
finish mi0 range(NT) loop
13:05:21
start mi0 range(n) loop
13:05:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:05:21
start mi0 range(n) 2loop
13:05:21
finish mi0 range(n) 2loop
13:05:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:05:22
start mi1 range(p) 1 loop
13:05:22
finish mi1 range(p) 1 loop
13:05:22
start mi1 range(p) 2 loop
13:05:22
finish mi1 range(p) 2 loop
13:05:22
start mi1 range(NT) loop
13:05:22
finish mi1 range(NT) loop
13:05:22
start mi1 range(n) loop
13:05:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:05:22
start mi1 range(n) 2loop
13:05:22
finish mi1 range(n) 2loop
13:05:22
start mi2
13:05:22
start mi2 range(p) 1 loop
13:05:22
finish mi2 range(p) 1 loop
13:05:22
start mi2 range(p) 2 loop
13:05:22
finish mi2 range(p) 2 loop
13:05:22
start mi2 range(NT) loop
13:05:22
finish mi2 range(NT) loop
13:05:22
start mi2 range(n) loop
13:05:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:05:22
start mi2 range(n) 2loop
13:05:22
finish mi2 range(n) 2loop
13:05:22
[[-3.30153695]]
end mi2 loop
13:05:22
estep
13:05:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:05:39
start ppi1
13:05:39
start mi0
13:05:39
start mi0 range(p) 1 loop
13:05:39
finish mi0 range(p) 1 loop
13:05:39
start mi0 range(p) 2 loop
13:05:39
finish mi0 range(p) 2 loop
13:05:39
start mi0 range(NT) loop
13:05:39
finish mi0 range(NT) loop
13:05:39
start mi0 range(n) loop
13:05:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:05:39
start mi0 range(n) 2loop
13:05:39
finish mi0 range(n) 2loop
13:05:39
start mi1
13:05:39
start mi1 range(p) 1 loop
13:05:39
finish mi1 range(p) 1 loop
13:05:39
start mi1 range(p) 2 loop
13:05:40
finish mi1 range(p) 2 loop
13:05:40
start mi1 range(NT) loop
13:05:40
finish mi1 range(NT) loop
13:05:40
start mi1 range(n) loop
13:05:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:05:40
start mi1 range(n) 2loop
13:05:40
finish mi1 range(n) 2loop
13:05:40
start mi2
13:05:40
start mi2 range(p) 1 loop
13:05:40
finish mi2 range(p) 1 loop
13:05:40
start mi2 range(p) 2 loop
13:05:40
finish mi2 range(p) 2 loop
13:05:40
start mi2 range(NT) loop
13:05:40
finish mi2 range(NT) loop
13:05:40
start mi2 range(n) loop
13:05:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:05:40
start mi2 range(n) 2loop
13:05:40
finish mi2 range(n) 2loop
13:05:40
[[-3.36402789]]
end mi2 loop
13:05:40
estep
13:05:40
end estep
13:05:57
end pa13:05:57
goodness of fit correlation [0.35617497]
start cluster 13:05:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39733 instead
  warnings.warn(
14
parallel submitted
13:06:27
parallel finished
13:09:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:09:41
start mi0
13:09:41
start mi0 range(p) 1 loop
13:09:41
finish mi0 range(p) 1 loop
13:09:41
start mi0 range(p) 2 loop
13:09:41
finish mi0 range(p) 2 loop
13:09:41
start mi0 range(NT) loop
13:09:41
finish mi0 range(NT) loop
13:09:41
start mi0 range(n) loop
13:09:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:09:42
start mi0 range(n) 2loop
13:09:42
finish mi0 range(n) 2loop
13:09:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:09:42
start mi1 range(p) 1 loop
13:09:42
finish mi1 range(p) 1 loop
13:09:42
start mi1 range(p) 2 loop
13:09:42
finish mi1 range(p) 2 loop
13:09:42
start mi1 range(NT) loop
13:09:42
finish mi1 range(NT) loop
13:09:42
start mi1 range(n) loop
13:09:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:09:42
start mi1 range(n) 2loop
13:09:42
finish mi1 range(n) 2loop
13:09:42
start mi2
13:09:42
start mi2 range(p) 1 loop
13:09:42
finish mi2 range(p) 1 loop
13:09:42
start mi2 range(p) 2 loop
13:09:42
finish mi2 range(p) 2 loop
13:09:42
start mi2 range(NT) loop
13:09:42
finish mi2 range(NT) loop
13:09:42
start mi2 range(n) loop
13:09:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:09:42
start mi2 range(n) 2loop
13:09:42
finish mi2 range(n) 2loop
13:09:42
[[-3.27777842]]
end mi2 loop
13:09:42
estep
13:09:42
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:09:59
start ppi1
13:09:59
start mi0
13:09:59
start mi0 range(p) 1 loop
13:09:59
finish mi0 range(p) 1 loop
13:09:59
start mi0 range(p) 2 loop
13:09:59
finish mi0 range(p) 2 loop
13:09:59
start mi0 range(NT) loop
13:09:59
finish mi0 range(NT) loop
13:09:59
start mi0 range(n) loop
13:09:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:10:00
start mi0 range(n) 2loop
13:10:00
finish mi0 range(n) 2loop
13:10:00
start mi1
13:10:00
start mi1 range(p) 1 loop
13:10:00
finish mi1 range(p) 1 loop
13:10:00
start mi1 range(p) 2 loop
13:10:00
finish mi1 range(p) 2 loop
13:10:00
start mi1 range(NT) loop
13:10:00
finish mi1 range(NT) loop
13:10:00
start mi1 range(n) loop
13:10:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:10:00
start mi1 range(n) 2loop
13:10:00
finish mi1 range(n) 2loop
13:10:00
start mi2
13:10:00
start mi2 range(p) 1 loop
13:10:00
finish mi2 range(p) 1 loop
13:10:00
start mi2 range(p) 2 loop
13:10:00
finish mi2 range(p) 2 loop
13:10:00
start mi2 range(NT) loop
13:10:00
finish mi2 range(NT) loop
13:10:00
start mi2 range(n) loop
13:10:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:10:00
start mi2 range(n) 2loop
13:10:00
finish mi2 range(n) 2loop
13:10:00
[[-3.34026978]]
end mi2 loop
13:10:00
estep
13:10:00
end estep
13:10:16
end pa13:10:16
goodness of fit correlation [0.36869129]
start cluster 13:10:16
15
parallel submitted
13:10:40
parallel finished
13:13:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:13:21
start mi0
13:13:21
start mi0 range(p) 1 loop
13:13:21
finish mi0 range(p) 1 loop
13:13:21
start mi0 range(p) 2 loop
13:13:21
finish mi0 range(p) 2 loop
13:13:21
start mi0 range(NT) loop
13:13:21
finish mi0 range(NT) loop
13:13:21
start mi0 range(n) loop
13:13:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:13:22
start mi0 range(n) 2loop
13:13:22
finish mi0 range(n) 2loop
13:13:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:13:22
start mi1 range(p) 1 loop
13:13:22
finish mi1 range(p) 1 loop
13:13:22
start mi1 range(p) 2 loop
13:13:22
finish mi1 range(p) 2 loop
13:13:22
start mi1 range(NT) loop
13:13:22
finish mi1 range(NT) loop
13:13:22
start mi1 range(n) loop
13:13:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:13:22
start mi1 range(n) 2loop
13:13:22
finish mi1 range(n) 2loop
13:13:22
start mi2
13:13:22
start mi2 range(p) 1 loop
13:13:22
finish mi2 range(p) 1 loop
13:13:22
start mi2 range(p) 2 loop
13:13:22
finish mi2 range(p) 2 loop
13:13:22
start mi2 range(NT) loop
13:13:22
finish mi2 range(NT) loop
13:13:22
start mi2 range(n) loop
13:13:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:13:22
start mi2 range(n) 2loop
13:13:22
finish mi2 range(n) 2loop
13:13:22
[[-3.30784689]]
end mi2 loop
13:13:22
estep
13:13:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:13:38
start ppi1
13:13:38
start mi0
13:13:38
start mi0 range(p) 1 loop
13:13:38
finish mi0 range(p) 1 loop
13:13:38
start mi0 range(p) 2 loop
13:13:38
finish mi0 range(p) 2 loop
13:13:38
start mi0 range(NT) loop
13:13:38
finish mi0 range(NT) loop
13:13:38
start mi0 range(n) loop
13:13:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:13:38
start mi0 range(n) 2loop
13:13:38
finish mi0 range(n) 2loop
13:13:38
start mi1
13:13:38
start mi1 range(p) 1 loop
13:13:38
finish mi1 range(p) 1 loop
13:13:38
start mi1 range(p) 2 loop
13:13:38
finish mi1 range(p) 2 loop
13:13:38
start mi1 range(NT) loop
13:13:38
finish mi1 range(NT) loop
13:13:38
start mi1 range(n) loop
13:13:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:13:39
start mi1 range(n) 2loop
13:13:39
finish mi1 range(n) 2loop
13:13:39
start mi2
13:13:39
start mi2 range(p) 1 loop
13:13:39
finish mi2 range(p) 1 loop
13:13:39
start mi2 range(p) 2 loop
13:13:39
finish mi2 range(p) 2 loop
13:13:39
start mi2 range(NT) loop
13:13:39
finish mi2 range(NT) loop
13:13:39
start mi2 range(n) loop
13:13:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:13:39
start mi2 range(n) 2loop
13:13:39
finish mi2 range(n) 2loop
13:13:39
[[-3.37033769]]
end mi2 loop
13:13:39
estep
13:13:39
end estep
13:13:54
end pa13:13:54
goodness of fit correlation [0.38735173]
start cluster 13:13:54
16
parallel submitted
13:14:16
parallel finished
13:20:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:21:04
start mi0
13:21:04
start mi0 range(p) 1 loop
13:21:04
finish mi0 range(p) 1 loop
13:21:04
start mi0 range(p) 2 loop
13:21:04
finish mi0 range(p) 2 loop
13:21:04
start mi0 range(NT) loop
13:21:04
finish mi0 range(NT) loop
13:21:04
start mi0 range(n) loop
13:21:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:21:04
start mi0 range(n) 2loop
13:21:04
finish mi0 range(n) 2loop
13:21:04
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:21:04
start mi1 range(p) 1 loop
13:21:04
finish mi1 range(p) 1 loop
13:21:04
start mi1 range(p) 2 loop
13:21:04
finish mi1 range(p) 2 loop
13:21:04
start mi1 range(NT) loop
13:21:04
finish mi1 range(NT) loop
13:21:04
start mi1 range(n) loop
13:21:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:21:04
start mi1 range(n) 2loop
13:21:04
finish mi1 range(n) 2loop
13:21:04
start mi2
13:21:04
start mi2 range(p) 1 loop
13:21:04
finish mi2 range(p) 1 loop
13:21:04
start mi2 range(p) 2 loop
13:21:04
finish mi2 range(p) 2 loop
13:21:04
start mi2 range(NT) loop
13:21:04
finish mi2 range(NT) loop
13:21:04
start mi2 range(n) loop
13:21:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:21:04
start mi2 range(n) 2loop
13:21:04
finish mi2 range(n) 2loop
13:21:05
[[-3.32180167]]
end mi2 loop
13:21:05
estep
13:21:05
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:21:20
start ppi1
13:21:20
start mi0
13:21:20
start mi0 range(p) 1 loop
13:21:20
finish mi0 range(p) 1 loop
13:21:20
start mi0 range(p) 2 loop
13:21:20
finish mi0 range(p) 2 loop
13:21:20
start mi0 range(NT) loop
13:21:20
finish mi0 range(NT) loop
13:21:20
start mi0 range(n) loop
13:21:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:21:20
start mi0 range(n) 2loop
13:21:20
finish mi0 range(n) 2loop
13:21:20
start mi1
13:21:20
start mi1 range(p) 1 loop
13:21:20
finish mi1 range(p) 1 loop
13:21:20
start mi1 range(p) 2 loop
13:21:20
finish mi1 range(p) 2 loop
13:21:20
start mi1 range(NT) loop
13:21:21
finish mi1 range(NT) loop
13:21:21
start mi1 range(n) loop
13:21:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:21:21
start mi1 range(n) 2loop
13:21:21
finish mi1 range(n) 2loop
13:21:21
start mi2
13:21:21
start mi2 range(p) 1 loop
13:21:21
finish mi2 range(p) 1 loop
13:21:21
start mi2 range(p) 2 loop
13:21:21
finish mi2 range(p) 2 loop
13:21:21
start mi2 range(NT) loop
13:21:21
finish mi2 range(NT) loop
13:21:21
start mi2 range(n) loop
13:21:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:21:21
start mi2 range(n) 2loop
13:21:21
finish mi2 range(n) 2loop
13:21:21
[[-3.38429212]]
end mi2 loop
13:21:21
estep
13:21:21
end estep
13:21:36
end pa13:21:36
goodness of fit correlation [0.35903936]
start cluster 13:21:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37123 instead
  warnings.warn(
17
parallel submitted
13:21:59
parallel finished
13:26:32
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:26:48
start mi0
13:26:48
start mi0 range(p) 1 loop
13:26:48
finish mi0 range(p) 1 loop
13:26:48
start mi0 range(p) 2 loop
13:26:48
finish mi0 range(p) 2 loop
13:26:48
start mi0 range(NT) loop
13:26:48
finish mi0 range(NT) loop
13:26:48
start mi0 range(n) loop
13:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:26:48
start mi0 range(n) 2loop
13:26:48
finish mi0 range(n) 2loop
13:26:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:26:48
start mi1 range(p) 1 loop
13:26:48
finish mi1 range(p) 1 loop
13:26:48
start mi1 range(p) 2 loop
13:26:48
finish mi1 range(p) 2 loop
13:26:48
start mi1 range(NT) loop
13:26:48
finish mi1 range(NT) loop
13:26:48
start mi1 range(n) loop
13:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:26:49
start mi1 range(n) 2loop
13:26:49
finish mi1 range(n) 2loop
13:26:49
start mi2
13:26:49
start mi2 range(p) 1 loop
13:26:49
finish mi2 range(p) 1 loop
13:26:49
start mi2 range(p) 2 loop
13:26:49
finish mi2 range(p) 2 loop
13:26:49
start mi2 range(NT) loop
13:26:49
finish mi2 range(NT) loop
13:26:49
start mi2 range(n) loop
13:26:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:26:49
start mi2 range(n) 2loop
13:26:49
finish mi2 range(n) 2loop
13:26:49
[[-3.29905585]]
end mi2 loop
13:26:49
estep
13:26:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:27:06
start ppi1
13:27:06
start mi0
13:27:06
start mi0 range(p) 1 loop
13:27:06
finish mi0 range(p) 1 loop
13:27:06
start mi0 range(p) 2 loop
13:27:06
finish mi0 range(p) 2 loop
13:27:06
start mi0 range(NT) loop
13:27:06
finish mi0 range(NT) loop
13:27:07
start mi0 range(n) loop
13:27:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:27:07
start mi0 range(n) 2loop
13:27:07
finish mi0 range(n) 2loop
13:27:07
start mi1
13:27:07
start mi1 range(p) 1 loop
13:27:07
finish mi1 range(p) 1 loop
13:27:07
start mi1 range(p) 2 loop
13:27:07
finish mi1 range(p) 2 loop
13:27:07
start mi1 range(NT) loop
13:27:07
finish mi1 range(NT) loop
13:27:07
start mi1 range(n) loop
13:27:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:27:07
start mi1 range(n) 2loop
13:27:07
finish mi1 range(n) 2loop
13:27:07
start mi2
13:27:07
start mi2 range(p) 1 loop
13:27:07
finish mi2 range(p) 1 loop
13:27:07
start mi2 range(p) 2 loop
13:27:07
finish mi2 range(p) 2 loop
13:27:07
start mi2 range(NT) loop
13:27:07
finish mi2 range(NT) loop
13:27:07
start mi2 range(n) loop
13:27:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:27:07
start mi2 range(n) 2loop
13:27:07
finish mi2 range(n) 2loop
13:27:07
[[-3.36154684]]
end mi2 loop
13:27:07
estep
13:27:07
end estep
13:27:24
end pa13:27:24
goodness of fit correlation [0.36874264]
start cluster 13:27:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36953 instead
  warnings.warn(
18
parallel submitted
13:27:47
parallel finished
13:33:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:33:42
start mi0
13:33:42
start mi0 range(p) 1 loop
13:33:42
finish mi0 range(p) 1 loop
13:33:42
start mi0 range(p) 2 loop
13:33:42
finish mi0 range(p) 2 loop
13:33:42
start mi0 range(NT) loop
13:33:42
finish mi0 range(NT) loop
13:33:42
start mi0 range(n) loop
13:33:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:33:42
start mi0 range(n) 2loop
13:33:42
finish mi0 range(n) 2loop
13:33:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:33:42
start mi1 range(p) 1 loop
13:33:42
finish mi1 range(p) 1 loop
13:33:42
start mi1 range(p) 2 loop
13:33:42
finish mi1 range(p) 2 loop
13:33:42
start mi1 range(NT) loop
13:33:42
finish mi1 range(NT) loop
13:33:42
start mi1 range(n) loop
13:33:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:33:42
start mi1 range(n) 2loop
13:33:42
finish mi1 range(n) 2loop
13:33:42
start mi2
13:33:42
start mi2 range(p) 1 loop
13:33:42
finish mi2 range(p) 1 loop
13:33:42
start mi2 range(p) 2 loop
13:33:42
finish mi2 range(p) 2 loop
13:33:42
start mi2 range(NT) loop
13:33:42
finish mi2 range(NT) loop
13:33:42
start mi2 range(n) loop
13:33:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:33:43
start mi2 range(n) 2loop
13:33:43
finish mi2 range(n) 2loop
13:33:43
[[-3.2759894]]
end mi2 loop
13:33:43
estep
13:33:43
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:34:00
start ppi1
13:34:00
start mi0
13:34:00
start mi0 range(p) 1 loop
13:34:00
finish mi0 range(p) 1 loop
13:34:00
start mi0 range(p) 2 loop
13:34:00
finish mi0 range(p) 2 loop
13:34:00
start mi0 range(NT) loop
13:34:00
finish mi0 range(NT) loop
13:34:00
start mi0 range(n) loop
13:34:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:34:00
start mi0 range(n) 2loop
13:34:00
finish mi0 range(n) 2loop
13:34:00
start mi1
13:34:00
start mi1 range(p) 1 loop
13:34:00
finish mi1 range(p) 1 loop
13:34:00
start mi1 range(p) 2 loop
13:34:00
finish mi1 range(p) 2 loop
13:34:00
start mi1 range(NT) loop
13:34:01
finish mi1 range(NT) loop
13:34:01
start mi1 range(n) loop
13:34:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:34:01
start mi1 range(n) 2loop
13:34:01
finish mi1 range(n) 2loop
13:34:01
start mi2
13:34:01
start mi2 range(p) 1 loop
13:34:01
finish mi2 range(p) 1 loop
13:34:01
start mi2 range(p) 2 loop
13:34:01
finish mi2 range(p) 2 loop
13:34:01
start mi2 range(NT) loop
13:34:01
finish mi2 range(NT) loop
13:34:01
start mi2 range(n) loop
13:34:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:34:01
start mi2 range(n) 2loop
13:34:01
finish mi2 range(n) 2loop
13:34:01
[[-3.33848078]]
end mi2 loop
13:34:01
estep
13:34:01
end estep
13:34:19
end pa13:34:19
goodness of fit correlation [0.38215739]
start cluster 13:34:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37614 instead
  warnings.warn(
19
parallel submitted
13:34:42
parallel finished
13:40:37
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:40:55
start mi0
13:40:55
start mi0 range(p) 1 loop
13:40:55
finish mi0 range(p) 1 loop
13:40:55
start mi0 range(p) 2 loop
13:40:55
finish mi0 range(p) 2 loop
13:40:55
start mi0 range(NT) loop
13:40:55
finish mi0 range(NT) loop
13:40:55
start mi0 range(n) loop
13:40:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:40:55
start mi0 range(n) 2loop
13:40:55
finish mi0 range(n) 2loop
13:40:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:40:55
start mi1 range(p) 1 loop
13:40:55
finish mi1 range(p) 1 loop
13:40:55
start mi1 range(p) 2 loop
13:40:55
finish mi1 range(p) 2 loop
13:40:55
start mi1 range(NT) loop
13:40:55
finish mi1 range(NT) loop
13:40:55
start mi1 range(n) loop
13:40:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:40:55
start mi1 range(n) 2loop
13:40:55
finish mi1 range(n) 2loop
13:40:55
start mi2
13:40:55
start mi2 range(p) 1 loop
13:40:55
finish mi2 range(p) 1 loop
13:40:55
start mi2 range(p) 2 loop
13:40:55
finish mi2 range(p) 2 loop
13:40:55
start mi2 range(NT) loop
13:40:56
finish mi2 range(NT) loop
13:40:56
start mi2 range(n) loop
13:40:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:40:56
start mi2 range(n) 2loop
13:40:56
finish mi2 range(n) 2loop
13:40:56
[[-3.28035254]]
end mi2 loop
13:40:56
estep
13:40:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:41:12
start ppi1
13:41:12
start mi0
13:41:12
start mi0 range(p) 1 loop
13:41:12
finish mi0 range(p) 1 loop
13:41:12
start mi0 range(p) 2 loop
13:41:12
finish mi0 range(p) 2 loop
13:41:12
start mi0 range(NT) loop
13:41:12
finish mi0 range(NT) loop
13:41:12
start mi0 range(n) loop
13:41:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:41:12
start mi0 range(n) 2loop
13:41:12
finish mi0 range(n) 2loop
13:41:12
start mi1
13:41:12
start mi1 range(p) 1 loop
13:41:12
finish mi1 range(p) 1 loop
13:41:12
start mi1 range(p) 2 loop
13:41:12
finish mi1 range(p) 2 loop
13:41:12
start mi1 range(NT) loop
13:41:12
finish mi1 range(NT) loop
13:41:12
start mi1 range(n) loop
13:41:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:41:12
start mi1 range(n) 2loop
13:41:12
finish mi1 range(n) 2loop
13:41:12
start mi2
13:41:12
start mi2 range(p) 1 loop
13:41:12
finish mi2 range(p) 1 loop
13:41:12
start mi2 range(p) 2 loop
13:41:12
finish mi2 range(p) 2 loop
13:41:12
start mi2 range(NT) loop
13:41:12
finish mi2 range(NT) loop
13:41:12
start mi2 range(n) loop
13:41:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:41:13
start mi2 range(n) 2loop
13:41:13
finish mi2 range(n) 2loop
13:41:13
[[-3.34284386]]
end mi2 loop
13:41:13
estep
13:41:13
end estep
13:41:28
end pa13:41:28
goodness of fit correlation [0.36386131]
start cluster 13:41:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42039 instead
  warnings.warn(
20
parallel submitted
13:41:59
parallel finished
13:45:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:45:59
start mi0
13:45:59
start mi0 range(p) 1 loop
13:45:59
finish mi0 range(p) 1 loop
13:45:59
start mi0 range(p) 2 loop
13:45:59
finish mi0 range(p) 2 loop
13:45:59
start mi0 range(NT) loop
13:45:59
finish mi0 range(NT) loop
13:45:59
start mi0 range(n) loop
13:45:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:45:59
start mi0 range(n) 2loop
13:45:59
finish mi0 range(n) 2loop
13:45:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:45:59
start mi1 range(p) 1 loop
13:45:59
finish mi1 range(p) 1 loop
13:45:59
start mi1 range(p) 2 loop
13:45:59
finish mi1 range(p) 2 loop
13:45:59
start mi1 range(NT) loop
13:45:59
finish mi1 range(NT) loop
13:45:59
start mi1 range(n) loop
13:45:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:45:59
start mi1 range(n) 2loop
13:45:59
finish mi1 range(n) 2loop
13:45:59
start mi2
13:46:00
start mi2 range(p) 1 loop
13:46:00
finish mi2 range(p) 1 loop
13:46:00
start mi2 range(p) 2 loop
13:46:00
finish mi2 range(p) 2 loop
13:46:00
start mi2 range(NT) loop
13:46:00
finish mi2 range(NT) loop
13:46:00
start mi2 range(n) loop
13:46:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:46:00
start mi2 range(n) 2loop
13:46:00
finish mi2 range(n) 2loop
13:46:00
[[-3.34519719]]
end mi2 loop
13:46:00
estep
13:46:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:46:17
start ppi1
13:46:17
start mi0
13:46:17
start mi0 range(p) 1 loop
13:46:17
finish mi0 range(p) 1 loop
13:46:17
start mi0 range(p) 2 loop
13:46:17
finish mi0 range(p) 2 loop
13:46:17
start mi0 range(NT) loop
13:46:17
finish mi0 range(NT) loop
13:46:18
start mi0 range(n) loop
13:46:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:46:18
start mi0 range(n) 2loop
13:46:18
finish mi0 range(n) 2loop
13:46:18
start mi1
13:46:18
start mi1 range(p) 1 loop
13:46:18
finish mi1 range(p) 1 loop
13:46:18
start mi1 range(p) 2 loop
13:46:18
finish mi1 range(p) 2 loop
13:46:18
start mi1 range(NT) loop
13:46:18
finish mi1 range(NT) loop
13:46:18
start mi1 range(n) loop
13:46:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:46:18
start mi1 range(n) 2loop
13:46:18
finish mi1 range(n) 2loop
13:46:18
start mi2
13:46:18
start mi2 range(p) 1 loop
13:46:18
finish mi2 range(p) 1 loop
13:46:18
start mi2 range(p) 2 loop
13:46:18
finish mi2 range(p) 2 loop
13:46:18
start mi2 range(NT) loop
13:46:18
finish mi2 range(NT) loop
13:46:18
start mi2 range(n) loop
13:46:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:46:18
start mi2 range(n) 2loop
13:46:18
finish mi2 range(n) 2loop
13:46:18
[[-3.40768684]]
end mi2 loop
13:46:18
estep
13:46:18
end estep
13:46:36
end pa13:46:36
goodness of fit correlation [0.39541783]
start cluster 13:46:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35458 instead
  warnings.warn(
21
parallel submitted
13:47:03
parallel finished
13:51:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:52:10
start mi0
13:52:10
start mi0 range(p) 1 loop
13:52:10
finish mi0 range(p) 1 loop
13:52:10
start mi0 range(p) 2 loop
13:52:10
finish mi0 range(p) 2 loop
13:52:10
start mi0 range(NT) loop
13:52:10
finish mi0 range(NT) loop
13:52:10
start mi0 range(n) loop
13:52:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:52:10
start mi0 range(n) 2loop
13:52:10
finish mi0 range(n) 2loop
13:52:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:52:10
start mi1 range(p) 1 loop
13:52:10
finish mi1 range(p) 1 loop
13:52:10
start mi1 range(p) 2 loop
13:52:10
finish mi1 range(p) 2 loop
13:52:10
start mi1 range(NT) loop
13:52:10
finish mi1 range(NT) loop
13:52:10
start mi1 range(n) loop
13:52:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:52:11
start mi1 range(n) 2loop
13:52:11
finish mi1 range(n) 2loop
13:52:11
start mi2
13:52:11
start mi2 range(p) 1 loop
13:52:11
finish mi2 range(p) 1 loop
13:52:11
start mi2 range(p) 2 loop
13:52:11
finish mi2 range(p) 2 loop
13:52:11
start mi2 range(NT) loop
13:52:11
finish mi2 range(NT) loop
13:52:11
start mi2 range(n) loop
13:52:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:52:11
start mi2 range(n) 2loop
13:52:11
finish mi2 range(n) 2loop
13:52:11
[[-3.28137469]]
end mi2 loop
13:52:11
estep
13:52:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:52:27
start ppi1
13:52:27
start mi0
13:52:27
start mi0 range(p) 1 loop
13:52:27
finish mi0 range(p) 1 loop
13:52:27
start mi0 range(p) 2 loop
13:52:27
finish mi0 range(p) 2 loop
13:52:27
start mi0 range(NT) loop
13:52:27
finish mi0 range(NT) loop
13:52:27
start mi0 range(n) loop
13:52:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:52:27
start mi0 range(n) 2loop
13:52:27
finish mi0 range(n) 2loop
13:52:27
start mi1
13:52:27
start mi1 range(p) 1 loop
13:52:27
finish mi1 range(p) 1 loop
13:52:27
start mi1 range(p) 2 loop
13:52:27
finish mi1 range(p) 2 loop
13:52:27
start mi1 range(NT) loop
13:52:27
finish mi1 range(NT) loop
13:52:27
start mi1 range(n) loop
13:52:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:52:27
start mi1 range(n) 2loop
13:52:27
finish mi1 range(n) 2loop
13:52:27
start mi2
13:52:27
start mi2 range(p) 1 loop
13:52:27
finish mi2 range(p) 1 loop
13:52:27
start mi2 range(p) 2 loop
13:52:27
finish mi2 range(p) 2 loop
13:52:27
start mi2 range(NT) loop
13:52:27
finish mi2 range(NT) loop
13:52:27
start mi2 range(n) loop
13:52:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:52:27
start mi2 range(n) 2loop
13:52:27
finish mi2 range(n) 2loop
13:52:27
[[-3.34386599]]
end mi2 loop
13:52:27
estep
13:52:27
end estep
13:52:43
end pa13:52:43
goodness of fit correlation [0.31426494]
start cluster 13:52:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43635 instead
  warnings.warn(
22
parallel submitted
13:53:06
slurmstepd: error: *** JOB 1829255 ON nodeb22 CANCELLED AT 2020-11-06T13:53:19 ***
