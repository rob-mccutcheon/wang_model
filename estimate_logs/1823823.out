2
subject 1002_01_MR
start cluster 09:16:44
0
parallel submitted
09:17:00
parallel finished
09:19:08
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:19:10
start mi0
09:19:10
start mi0 range(p) 1 loop
09:19:10
finish mi0 range(p) 1 loop
09:19:10
start mi0 range(p) 2 loop
09:19:10
finish mi0 range(p) 2 loop
09:19:10
start mi0 range(NT) loop
09:19:10
finish mi0 range(NT) loop
09:19:10
start mi0 range(n) loop
09:19:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:19:10
start mi0 range(n) 2loop
09:19:10
finish mi0 range(n) 2loop
09:19:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:19:11
start mi1 range(p) 1 loop
09:19:11
finish mi1 range(p) 1 loop
09:19:11
start mi1 range(p) 2 loop
09:19:11
finish mi1 range(p) 2 loop
09:19:11
start mi1 range(NT) loop
09:19:11
finish mi1 range(NT) loop
09:19:11
start mi1 range(n) loop
09:19:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:19:11
start mi1 range(n) 2loop
09:19:11
finish mi1 range(n) 2loop
09:19:11
start mi2
09:19:11
start mi2 range(p) 1 loop
09:19:11
finish mi2 range(p) 1 loop
09:19:11
start mi2 range(p) 2 loop
09:19:11
finish mi2 range(p) 2 loop
09:19:11
start mi2 range(NT) loop
09:19:11
finish mi2 range(NT) loop
09:19:11
start mi2 range(n) loop
09:19:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:19:11
start mi2 range(n) 2loop
09:19:11
finish mi2 range(n) 2loop
09:19:11
start mi3
09:19:11
start mi3 range(p) 1 loop
09:19:11
finish mi3 range(p) 1 loop
09:19:11
start mi3 range(p) 2 loop
09:19:11
finish mi3 range(p) 2 loop
09:19:11
start mi3 range(NT) loop
09:19:11
finish mi3 range(NT) loop
09:19:11
start mi3 range(n) loop
09:19:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:19:11
start mi3 range(n) 2loop
09:19:11
finish mi3 range(n) 2loop
09:19:11
[[-2.34874691]]
end mi3 loop
09:19:11
estep
09:19:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:19:27
start ppi1
09:19:27
start mi0
09:19:27
start mi0 range(p) 1 loop
09:19:27
finish mi0 range(p) 1 loop
09:19:27
start mi0 range(p) 2 loop
09:19:27
finish mi0 range(p) 2 loop
09:19:27
start mi0 range(NT) loop
09:19:27
finish mi0 range(NT) loop
09:19:27
start mi0 range(n) loop
09:19:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:19:27
start mi0 range(n) 2loop
09:19:27
finish mi0 range(n) 2loop
09:19:27
start mi1
09:19:27
start mi1 range(p) 1 loop
09:19:27
finish mi1 range(p) 1 loop
09:19:27
start mi1 range(p) 2 loop
09:19:27
finish mi1 range(p) 2 loop
09:19:27
start mi1 range(NT) loop
09:19:27
finish mi1 range(NT) loop
09:19:27
start mi1 range(n) loop
09:19:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:19:27
start mi1 range(n) 2loop
09:19:27
finish mi1 range(n) 2loop
09:19:27
start mi2
09:19:27
start mi2 range(p) 1 loop
09:19:27
finish mi2 range(p) 1 loop
09:19:27
start mi2 range(p) 2 loop
09:19:27
finish mi2 range(p) 2 loop
09:19:27
start mi2 range(NT) loop
09:19:27
finish mi2 range(NT) loop
09:19:27
start mi2 range(n) loop
09:19:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:19:27
start mi2 range(n) 2loop
09:19:27
finish mi2 range(n) 2loop
09:19:28
start mi3
09:19:28
start mi3 range(p) 1 loop
09:19:28
finish mi3 range(p) 1 loop
09:19:28
start mi3 range(p) 2 loop
09:19:28
finish mi3 range(p) 2 loop
09:19:28
start mi3 range(NT) loop
09:19:28
finish mi3 range(NT) loop
09:19:28
start mi3 range(n) loop
09:19:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:19:28
start mi3 range(n) 2loop
09:19:28
finish mi3 range(n) 2loop
09:19:28
[[-2.34874691]]
end mi3 loop
09:19:28
estep
09:19:28
end estep
09:19:43
end pa09:19:43
goodness of fit correlation [0.05592261]
start cluster 09:19:43
1
parallel submitted
09:19:59
parallel finished
09:22:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:22:29
start mi0
09:22:29
start mi0 range(p) 1 loop
09:22:29
finish mi0 range(p) 1 loop
09:22:29
start mi0 range(p) 2 loop
09:22:29
finish mi0 range(p) 2 loop
09:22:29
start mi0 range(NT) loop
09:22:29
finish mi0 range(NT) loop
09:22:29
start mi0 range(n) loop
09:22:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:22:29
start mi0 range(n) 2loop
09:22:29
finish mi0 range(n) 2loop
09:22:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:22:29
start mi1 range(p) 1 loop
09:22:29
finish mi1 range(p) 1 loop
09:22:29
start mi1 range(p) 2 loop
09:22:29
finish mi1 range(p) 2 loop
09:22:29
start mi1 range(NT) loop
09:22:29
finish mi1 range(NT) loop
09:22:29
start mi1 range(n) loop
09:22:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:22:29
start mi1 range(n) 2loop
09:22:29
finish mi1 range(n) 2loop
09:22:29
start mi2
09:22:29
start mi2 range(p) 1 loop
09:22:29
finish mi2 range(p) 1 loop
09:22:29
start mi2 range(p) 2 loop
09:22:29
finish mi2 range(p) 2 loop
09:22:29
start mi2 range(NT) loop
09:22:29
finish mi2 range(NT) loop
09:22:29
start mi2 range(n) loop
09:22:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:22:29
start mi2 range(n) 2loop
09:22:29
finish mi2 range(n) 2loop
09:22:30
start mi3
09:22:30
start mi3 range(p) 1 loop
09:22:30
finish mi3 range(p) 1 loop
09:22:30
start mi3 range(p) 2 loop
09:22:30
finish mi3 range(p) 2 loop
09:22:30
start mi3 range(NT) loop
09:22:30
finish mi3 range(NT) loop
09:22:30
start mi3 range(n) loop
09:22:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:22:30
start mi3 range(n) 2loop
09:22:30
finish mi3 range(n) 2loop
09:22:30
[[-2.3503971]]
end mi3 loop
09:22:30
estep
09:22:30
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:22:44
start ppi1
09:22:44
start mi0
09:22:44
start mi0 range(p) 1 loop
09:22:44
finish mi0 range(p) 1 loop
09:22:44
start mi0 range(p) 2 loop
09:22:44
finish mi0 range(p) 2 loop
09:22:44
start mi0 range(NT) loop
09:22:44
finish mi0 range(NT) loop
09:22:44
start mi0 range(n) loop
09:22:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:22:44
start mi0 range(n) 2loop
09:22:44
finish mi0 range(n) 2loop
09:22:44
start mi1
09:22:44
start mi1 range(p) 1 loop
09:22:44
finish mi1 range(p) 1 loop
09:22:44
start mi1 range(p) 2 loop
09:22:44
finish mi1 range(p) 2 loop
09:22:44
start mi1 range(NT) loop
09:22:44
finish mi1 range(NT) loop
09:22:44
start mi1 range(n) loop
09:22:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:22:45
start mi1 range(n) 2loop
09:22:45
finish mi1 range(n) 2loop
09:22:45
start mi2
09:22:45
start mi2 range(p) 1 loop
09:22:45
finish mi2 range(p) 1 loop
09:22:45
start mi2 range(p) 2 loop
09:22:45
finish mi2 range(p) 2 loop
09:22:45
start mi2 range(NT) loop
09:22:45
finish mi2 range(NT) loop
09:22:45
start mi2 range(n) loop
09:22:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:22:45
start mi2 range(n) 2loop
09:22:45
finish mi2 range(n) 2loop
09:22:45
start mi3
09:22:45
start mi3 range(p) 1 loop
09:22:45
finish mi3 range(p) 1 loop
09:22:45
start mi3 range(p) 2 loop
09:22:45
finish mi3 range(p) 2 loop
09:22:45
start mi3 range(NT) loop
09:22:45
finish mi3 range(NT) loop
09:22:45
start mi3 range(n) loop
09:22:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:22:45
start mi3 range(n) 2loop
09:22:45
finish mi3 range(n) 2loop
09:22:45
[[-2.41288924]]
end mi3 loop
09:22:45
estep
09:22:45
end estep
09:23:01
end pa09:23:01
goodness of fit correlation [0.17877925]
start cluster 09:23:02
2
parallel submitted
09:23:18
parallel finished
09:24:54
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:24:59
start mi0
09:24:59
start mi0 range(p) 1 loop
09:24:59
finish mi0 range(p) 1 loop
09:24:59
start mi0 range(p) 2 loop
09:24:59
finish mi0 range(p) 2 loop
09:24:59
start mi0 range(NT) loop
09:24:59
finish mi0 range(NT) loop
09:24:59
start mi0 range(n) loop
09:24:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:24:59
start mi0 range(n) 2loop
09:24:59
finish mi0 range(n) 2loop
09:24:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:24:59
start mi1 range(p) 1 loop
09:24:59
finish mi1 range(p) 1 loop
09:24:59
start mi1 range(p) 2 loop
09:24:59
finish mi1 range(p) 2 loop
09:24:59
start mi1 range(NT) loop
09:24:59
finish mi1 range(NT) loop
09:24:59
start mi1 range(n) loop
09:24:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:25:00
start mi1 range(n) 2loop
09:25:00
finish mi1 range(n) 2loop
09:25:00
start mi2
09:25:00
start mi2 range(p) 1 loop
09:25:00
finish mi2 range(p) 1 loop
09:25:00
start mi2 range(p) 2 loop
09:25:00
finish mi2 range(p) 2 loop
09:25:00
start mi2 range(NT) loop
09:25:00
finish mi2 range(NT) loop
09:25:00
start mi2 range(n) loop
09:25:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:25:00
start mi2 range(n) 2loop
09:25:00
finish mi2 range(n) 2loop
09:25:00
start mi3
09:25:00
start mi3 range(p) 1 loop
09:25:00
finish mi3 range(p) 1 loop
09:25:00
start mi3 range(p) 2 loop
09:25:00
finish mi3 range(p) 2 loop
09:25:00
start mi3 range(NT) loop
09:25:00
finish mi3 range(NT) loop
09:25:00
start mi3 range(n) loop
09:25:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:25:00
start mi3 range(n) 2loop
09:25:00
finish mi3 range(n) 2loop
09:25:00
[[-2.45814698]]
end mi3 loop
09:25:00
estep
09:25:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:25:15
start ppi1
09:25:15
start mi0
09:25:15
start mi0 range(p) 1 loop
09:25:15
finish mi0 range(p) 1 loop
09:25:15
start mi0 range(p) 2 loop
09:25:15
finish mi0 range(p) 2 loop
09:25:15
start mi0 range(NT) loop
09:25:15
finish mi0 range(NT) loop
09:25:15
start mi0 range(n) loop
09:25:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:25:15
start mi0 range(n) 2loop
09:25:15
finish mi0 range(n) 2loop
09:25:16
start mi1
09:25:16
start mi1 range(p) 1 loop
09:25:16
finish mi1 range(p) 1 loop
09:25:16
start mi1 range(p) 2 loop
09:25:16
finish mi1 range(p) 2 loop
09:25:16
start mi1 range(NT) loop
09:25:16
finish mi1 range(NT) loop
09:25:16
start mi1 range(n) loop
09:25:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:25:16
start mi1 range(n) 2loop
09:25:16
finish mi1 range(n) 2loop
09:25:16
start mi2
09:25:16
start mi2 range(p) 1 loop
09:25:16
finish mi2 range(p) 1 loop
09:25:16
start mi2 range(p) 2 loop
09:25:16
finish mi2 range(p) 2 loop
09:25:16
start mi2 range(NT) loop
09:25:16
finish mi2 range(NT) loop
09:25:16
start mi2 range(n) loop
09:25:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:25:16
start mi2 range(n) 2loop
09:25:16
finish mi2 range(n) 2loop
09:25:16
[[-2.5206004]]
end mi2 loop
09:25:16
estep
09:25:16
end estep
09:25:31
end pa09:25:31
goodness of fit correlation [0.22599895]
start cluster 09:25:31
3
parallel submitted
09:25:48
parallel finished
09:29:30
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:29:33
start mi0
09:29:33
start mi0 range(p) 1 loop
09:29:33
finish mi0 range(p) 1 loop
09:29:33
start mi0 range(p) 2 loop
09:29:33
finish mi0 range(p) 2 loop
09:29:33
start mi0 range(NT) loop
09:29:33
finish mi0 range(NT) loop
09:29:33
start mi0 range(n) loop
09:29:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:29:33
start mi0 range(n) 2loop
09:29:33
finish mi0 range(n) 2loop
09:29:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:29:33
start mi1 range(p) 1 loop
09:29:33
finish mi1 range(p) 1 loop
09:29:33
start mi1 range(p) 2 loop
09:29:33
finish mi1 range(p) 2 loop
09:29:33
start mi1 range(NT) loop
09:29:33
finish mi1 range(NT) loop
09:29:33
start mi1 range(n) loop
09:29:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:29:33
start mi1 range(n) 2loop
09:29:33
finish mi1 range(n) 2loop
09:29:33
start mi2
09:29:33
start mi2 range(p) 1 loop
09:29:33
finish mi2 range(p) 1 loop
09:29:33
start mi2 range(p) 2 loop
09:29:33
finish mi2 range(p) 2 loop
09:29:33
start mi2 range(NT) loop
09:29:33
finish mi2 range(NT) loop
09:29:33
start mi2 range(n) loop
09:29:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:29:33
start mi2 range(n) 2loop
09:29:33
finish mi2 range(n) 2loop
09:29:34
start mi3
09:29:34
start mi3 range(p) 1 loop
09:29:34
finish mi3 range(p) 1 loop
09:29:34
start mi3 range(p) 2 loop
09:29:34
finish mi3 range(p) 2 loop
09:29:34
start mi3 range(NT) loop
09:29:34
finish mi3 range(NT) loop
09:29:34
start mi3 range(n) loop
09:29:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:29:34
start mi3 range(n) 2loop
09:29:34
finish mi3 range(n) 2loop
09:29:34
[[-2.46123268]]
end mi3 loop
09:29:34
estep
09:29:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:29:49
start ppi1
09:29:49
start mi0
09:29:49
start mi0 range(p) 1 loop
09:29:49
finish mi0 range(p) 1 loop
09:29:49
start mi0 range(p) 2 loop
09:29:49
finish mi0 range(p) 2 loop
09:29:49
start mi0 range(NT) loop
09:29:49
finish mi0 range(NT) loop
09:29:49
start mi0 range(n) loop
09:29:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:29:49
start mi0 range(n) 2loop
09:29:49
finish mi0 range(n) 2loop
09:29:49
start mi1
09:29:49
start mi1 range(p) 1 loop
09:29:49
finish mi1 range(p) 1 loop
09:29:49
start mi1 range(p) 2 loop
09:29:49
finish mi1 range(p) 2 loop
09:29:49
start mi1 range(NT) loop
09:29:49
finish mi1 range(NT) loop
09:29:49
start mi1 range(n) loop
09:29:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:29:50
start mi1 range(n) 2loop
09:29:50
finish mi1 range(n) 2loop
09:29:50
start mi2
09:29:50
start mi2 range(p) 1 loop
09:29:50
finish mi2 range(p) 1 loop
09:29:50
start mi2 range(p) 2 loop
09:29:50
finish mi2 range(p) 2 loop
09:29:50
start mi2 range(NT) loop
09:29:50
finish mi2 range(NT) loop
09:29:50
start mi2 range(n) loop
09:29:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:29:50
start mi2 range(n) 2loop
09:29:50
finish mi2 range(n) 2loop
09:29:50
[[-2.52368816]]
end mi2 loop
09:29:50
estep
09:29:50
end estep
09:30:06
end pa09:30:06
goodness of fit correlation [0.1933057]
start cluster 09:30:06
4
parallel submitted
09:30:24
parallel finished
09:32:22
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:32:26
start mi0
09:32:26
start mi0 range(p) 1 loop
09:32:26
finish mi0 range(p) 1 loop
09:32:26
start mi0 range(p) 2 loop
09:32:26
finish mi0 range(p) 2 loop
09:32:26
start mi0 range(NT) loop
09:32:26
finish mi0 range(NT) loop
09:32:26
start mi0 range(n) loop
09:32:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:32:26
start mi0 range(n) 2loop
09:32:26
finish mi0 range(n) 2loop
09:32:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:32:26
start mi1 range(p) 1 loop
09:32:26
finish mi1 range(p) 1 loop
09:32:26
start mi1 range(p) 2 loop
09:32:26
finish mi1 range(p) 2 loop
09:32:26
start mi1 range(NT) loop
09:32:26
finish mi1 range(NT) loop
09:32:26
start mi1 range(n) loop
09:32:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:32:27
start mi1 range(n) 2loop
09:32:27
finish mi1 range(n) 2loop
09:32:27
start mi2
09:32:27
start mi2 range(p) 1 loop
09:32:27
finish mi2 range(p) 1 loop
09:32:27
start mi2 range(p) 2 loop
09:32:27
finish mi2 range(p) 2 loop
09:32:27
start mi2 range(NT) loop
09:32:27
finish mi2 range(NT) loop
09:32:27
start mi2 range(n) loop
09:32:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:32:27
start mi2 range(n) 2loop
09:32:27
finish mi2 range(n) 2loop
09:32:27
start mi3
09:32:27
start mi3 range(p) 1 loop
09:32:27
finish mi3 range(p) 1 loop
09:32:27
start mi3 range(p) 2 loop
09:32:27
finish mi3 range(p) 2 loop
09:32:27
start mi3 range(NT) loop
09:32:27
finish mi3 range(NT) loop
09:32:27
start mi3 range(n) loop
09:32:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:32:27
start mi3 range(n) 2loop
09:32:27
finish mi3 range(n) 2loop
09:32:27
[[-2.42873391]]
end mi3 loop
09:32:27
estep
09:32:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:32:43
start ppi1
09:32:43
start mi0
09:32:43
start mi0 range(p) 1 loop
09:32:43
finish mi0 range(p) 1 loop
09:32:43
start mi0 range(p) 2 loop
09:32:43
finish mi0 range(p) 2 loop
09:32:43
start mi0 range(NT) loop
09:32:43
finish mi0 range(NT) loop
09:32:43
start mi0 range(n) loop
09:32:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:32:43
start mi0 range(n) 2loop
09:32:43
finish mi0 range(n) 2loop
09:32:43
start mi1
09:32:43
start mi1 range(p) 1 loop
09:32:43
finish mi1 range(p) 1 loop
09:32:43
start mi1 range(p) 2 loop
09:32:43
finish mi1 range(p) 2 loop
09:32:43
start mi1 range(NT) loop
09:32:43
finish mi1 range(NT) loop
09:32:43
start mi1 range(n) loop
09:32:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:32:43
start mi1 range(n) 2loop
09:32:43
finish mi1 range(n) 2loop
09:32:43
start mi2
09:32:43
start mi2 range(p) 1 loop
09:32:43
finish mi2 range(p) 1 loop
09:32:43
start mi2 range(p) 2 loop
09:32:43
finish mi2 range(p) 2 loop
09:32:43
start mi2 range(NT) loop
09:32:43
finish mi2 range(NT) loop
09:32:43
start mi2 range(n) loop
09:32:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:32:43
start mi2 range(n) 2loop
09:32:43
finish mi2 range(n) 2loop
09:32:43
start mi3
09:32:43
start mi3 range(p) 1 loop
09:32:43
finish mi3 range(p) 1 loop
09:32:43
start mi3 range(p) 2 loop
09:32:43
finish mi3 range(p) 2 loop
09:32:43
start mi3 range(NT) loop
09:32:43
finish mi3 range(NT) loop
09:32:44
start mi3 range(n) loop
09:32:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:32:44
start mi3 range(n) 2loop
09:32:44
finish mi3 range(n) 2loop
09:32:44
[[-2.49122595]]
end mi3 loop
09:32:44
estep
09:32:44
end estep
09:32:58
end pa09:32:58
goodness of fit correlation [0.25463314]
start cluster 09:32:58
5
parallel submitted
09:33:17
parallel finished
09:35:15
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:35:19
start mi0
09:35:19
start mi0 range(p) 1 loop
09:35:19
finish mi0 range(p) 1 loop
09:35:19
start mi0 range(p) 2 loop
09:35:19
finish mi0 range(p) 2 loop
09:35:19
start mi0 range(NT) loop
09:35:19
finish mi0 range(NT) loop
09:35:19
start mi0 range(n) loop
09:35:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:35:19
start mi0 range(n) 2loop
09:35:19
finish mi0 range(n) 2loop
09:35:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:35:19
start mi1 range(p) 1 loop
09:35:19
finish mi1 range(p) 1 loop
09:35:19
start mi1 range(p) 2 loop
09:35:19
finish mi1 range(p) 2 loop
09:35:19
start mi1 range(NT) loop
09:35:19
finish mi1 range(NT) loop
09:35:20
start mi1 range(n) loop
09:35:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:35:20
start mi1 range(n) 2loop
09:35:20
finish mi1 range(n) 2loop
09:35:20
start mi2
09:35:20
start mi2 range(p) 1 loop
09:35:20
finish mi2 range(p) 1 loop
09:35:20
start mi2 range(p) 2 loop
09:35:20
finish mi2 range(p) 2 loop
09:35:20
start mi2 range(NT) loop
09:35:20
finish mi2 range(NT) loop
09:35:20
start mi2 range(n) loop
09:35:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:35:20
start mi2 range(n) 2loop
09:35:20
finish mi2 range(n) 2loop
09:35:20
start mi3
09:35:20
start mi3 range(p) 1 loop
09:35:20
finish mi3 range(p) 1 loop
09:35:20
start mi3 range(p) 2 loop
09:35:20
finish mi3 range(p) 2 loop
09:35:20
start mi3 range(NT) loop
09:35:20
finish mi3 range(NT) loop
09:35:20
start mi3 range(n) loop
09:35:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:35:20
start mi3 range(n) 2loop
09:35:20
finish mi3 range(n) 2loop
09:35:20
[[-2.45771415]]
end mi3 loop
09:35:20
estep
09:35:20
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:35:36
start ppi1
09:35:36
start mi0
09:35:36
start mi0 range(p) 1 loop
09:35:36
finish mi0 range(p) 1 loop
09:35:36
start mi0 range(p) 2 loop
09:35:36
finish mi0 range(p) 2 loop
09:35:36
start mi0 range(NT) loop
09:35:36
finish mi0 range(NT) loop
09:35:36
start mi0 range(n) loop
09:35:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:35:36
start mi0 range(n) 2loop
09:35:36
finish mi0 range(n) 2loop
09:35:36
start mi1
09:35:36
start mi1 range(p) 1 loop
09:35:36
finish mi1 range(p) 1 loop
09:35:36
start mi1 range(p) 2 loop
09:35:36
finish mi1 range(p) 2 loop
09:35:36
start mi1 range(NT) loop
09:35:36
finish mi1 range(NT) loop
09:35:36
start mi1 range(n) loop
09:35:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:35:36
start mi1 range(n) 2loop
09:35:36
finish mi1 range(n) 2loop
09:35:36
start mi2
09:35:36
start mi2 range(p) 1 loop
09:35:36
finish mi2 range(p) 1 loop
09:35:36
start mi2 range(p) 2 loop
09:35:36
finish mi2 range(p) 2 loop
09:35:36
start mi2 range(NT) loop
09:35:36
finish mi2 range(NT) loop
09:35:36
start mi2 range(n) loop
09:35:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:35:36
start mi2 range(n) 2loop
09:35:36
finish mi2 range(n) 2loop
09:35:36
[[-2.52016727]]
end mi2 loop
09:35:36
estep
09:35:36
end estep
09:35:52
end pa09:35:52
goodness of fit correlation [0.14644216]
start cluster 09:35:52
6
parallel submitted
09:36:09
parallel finished
09:37:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:37:49
start mi0
09:37:49
start mi0 range(p) 1 loop
09:37:49
finish mi0 range(p) 1 loop
09:37:49
start mi0 range(p) 2 loop
09:37:49
finish mi0 range(p) 2 loop
09:37:49
start mi0 range(NT) loop
09:37:49
finish mi0 range(NT) loop
09:37:49
start mi0 range(n) loop
09:37:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:37:49
start mi0 range(n) 2loop
09:37:49
finish mi0 range(n) 2loop
09:37:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:37:49
start mi1 range(p) 1 loop
09:37:49
finish mi1 range(p) 1 loop
09:37:49
start mi1 range(p) 2 loop
09:37:49
finish mi1 range(p) 2 loop
09:37:49
start mi1 range(NT) loop
09:37:50
finish mi1 range(NT) loop
09:37:50
start mi1 range(n) loop
09:37:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:37:50
start mi1 range(n) 2loop
09:37:50
finish mi1 range(n) 2loop
09:37:50
start mi2
09:37:50
start mi2 range(p) 1 loop
09:37:50
finish mi2 range(p) 1 loop
09:37:50
start mi2 range(p) 2 loop
09:37:50
finish mi2 range(p) 2 loop
09:37:50
start mi2 range(NT) loop
09:37:50
finish mi2 range(NT) loop
09:37:50
start mi2 range(n) loop
09:37:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:37:50
start mi2 range(n) 2loop
09:37:50
finish mi2 range(n) 2loop
09:37:50
start mi3
09:37:50
start mi3 range(p) 1 loop
09:37:50
finish mi3 range(p) 1 loop
09:37:50
start mi3 range(p) 2 loop
09:37:50
finish mi3 range(p) 2 loop
09:37:50
start mi3 range(NT) loop
09:37:50
finish mi3 range(NT) loop
09:37:50
start mi3 range(n) loop
09:37:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:37:50
start mi3 range(n) 2loop
09:37:50
finish mi3 range(n) 2loop
09:37:50
[[-2.42511594]]
end mi3 loop
09:37:50
estep
09:37:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:38:04
start ppi1
09:38:04
start mi0
09:38:04
start mi0 range(p) 1 loop
09:38:04
finish mi0 range(p) 1 loop
09:38:04
start mi0 range(p) 2 loop
09:38:04
finish mi0 range(p) 2 loop
09:38:04
start mi0 range(NT) loop
09:38:04
finish mi0 range(NT) loop
09:38:05
start mi0 range(n) loop
09:38:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:38:05
start mi0 range(n) 2loop
09:38:05
finish mi0 range(n) 2loop
09:38:05
start mi1
09:38:05
start mi1 range(p) 1 loop
09:38:05
finish mi1 range(p) 1 loop
09:38:05
start mi1 range(p) 2 loop
09:38:05
finish mi1 range(p) 2 loop
09:38:05
start mi1 range(NT) loop
09:38:05
finish mi1 range(NT) loop
09:38:05
start mi1 range(n) loop
09:38:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:38:05
start mi1 range(n) 2loop
09:38:05
finish mi1 range(n) 2loop
09:38:05
start mi2
09:38:05
start mi2 range(p) 1 loop
09:38:05
finish mi2 range(p) 1 loop
09:38:05
start mi2 range(p) 2 loop
09:38:05
finish mi2 range(p) 2 loop
09:38:05
start mi2 range(NT) loop
09:38:05
finish mi2 range(NT) loop
09:38:05
start mi2 range(n) loop
09:38:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:38:05
start mi2 range(n) 2loop
09:38:05
finish mi2 range(n) 2loop
09:38:05
start mi3
09:38:05
start mi3 range(p) 1 loop
09:38:05
finish mi3 range(p) 1 loop
09:38:05
start mi3 range(p) 2 loop
09:38:05
finish mi3 range(p) 2 loop
09:38:05
start mi3 range(NT) loop
09:38:05
finish mi3 range(NT) loop
09:38:05
start mi3 range(n) loop
09:38:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:38:05
start mi3 range(n) 2loop
09:38:05
finish mi3 range(n) 2loop
09:38:05
[[-2.48760799]]
end mi3 loop
09:38:05
estep
09:38:05
end estep
09:38:20
end pa09:38:20
goodness of fit correlation [0.16436172]
start cluster 09:38:20
7
parallel submitted
09:38:38
parallel finished
09:42:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:42:53
start mi0
09:42:53
start mi0 range(p) 1 loop
09:42:53
finish mi0 range(p) 1 loop
09:42:53
start mi0 range(p) 2 loop
09:42:54
finish mi0 range(p) 2 loop
09:42:54
start mi0 range(NT) loop
09:42:54
finish mi0 range(NT) loop
09:42:54
start mi0 range(n) loop
09:42:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:42:54
start mi0 range(n) 2loop
09:42:54
finish mi0 range(n) 2loop
09:42:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:42:54
start mi1 range(p) 1 loop
09:42:54
finish mi1 range(p) 1 loop
09:42:54
start mi1 range(p) 2 loop
09:42:54
finish mi1 range(p) 2 loop
09:42:54
start mi1 range(NT) loop
09:42:54
finish mi1 range(NT) loop
09:42:54
start mi1 range(n) loop
09:42:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:42:54
start mi1 range(n) 2loop
09:42:54
finish mi1 range(n) 2loop
09:42:54
start mi2
09:42:54
start mi2 range(p) 1 loop
09:42:54
finish mi2 range(p) 1 loop
09:42:54
start mi2 range(p) 2 loop
09:42:54
finish mi2 range(p) 2 loop
09:42:54
start mi2 range(NT) loop
09:42:54
finish mi2 range(NT) loop
09:42:54
start mi2 range(n) loop
09:42:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:42:54
start mi2 range(n) 2loop
09:42:54
finish mi2 range(n) 2loop
09:42:54
start mi3
09:42:54
start mi3 range(p) 1 loop
09:42:54
finish mi3 range(p) 1 loop
09:42:54
start mi3 range(p) 2 loop
09:42:54
finish mi3 range(p) 2 loop
09:42:54
start mi3 range(NT) loop
09:42:54
finish mi3 range(NT) loop
09:42:54
start mi3 range(n) loop
09:42:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:42:55
start mi3 range(n) 2loop
09:42:55
finish mi3 range(n) 2loop
09:42:55
[[-2.4301121]]
end mi3 loop
09:42:55
estep
09:42:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:43:10
start ppi1
09:43:10
start mi0
09:43:10
start mi0 range(p) 1 loop
09:43:10
finish mi0 range(p) 1 loop
09:43:10
start mi0 range(p) 2 loop
09:43:10
finish mi0 range(p) 2 loop
09:43:10
start mi0 range(NT) loop
09:43:10
finish mi0 range(NT) loop
09:43:10
start mi0 range(n) loop
09:43:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:43:10
start mi0 range(n) 2loop
09:43:10
finish mi0 range(n) 2loop
09:43:10
start mi1
09:43:10
start mi1 range(p) 1 loop
09:43:10
finish mi1 range(p) 1 loop
09:43:10
start mi1 range(p) 2 loop
09:43:10
finish mi1 range(p) 2 loop
09:43:10
start mi1 range(NT) loop
09:43:10
finish mi1 range(NT) loop
09:43:10
start mi1 range(n) loop
09:43:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:43:11
start mi1 range(n) 2loop
09:43:11
finish mi1 range(n) 2loop
09:43:11
start mi2
09:43:11
start mi2 range(p) 1 loop
09:43:11
finish mi2 range(p) 1 loop
09:43:11
start mi2 range(p) 2 loop
09:43:11
finish mi2 range(p) 2 loop
09:43:11
start mi2 range(NT) loop
09:43:11
finish mi2 range(NT) loop
09:43:11
start mi2 range(n) loop
09:43:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:43:11
start mi2 range(n) 2loop
09:43:11
finish mi2 range(n) 2loop
09:43:11
start mi3
09:43:11
start mi3 range(p) 1 loop
09:43:11
finish mi3 range(p) 1 loop
09:43:11
start mi3 range(p) 2 loop
09:43:11
finish mi3 range(p) 2 loop
09:43:11
start mi3 range(NT) loop
09:43:11
finish mi3 range(NT) loop
09:43:11
start mi3 range(n) loop
09:43:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:43:11
start mi3 range(n) 2loop
09:43:11
finish mi3 range(n) 2loop
09:43:11
[[-2.49260415]]
end mi3 loop
09:43:11
estep
09:43:11
end estep
09:43:27
end pa09:43:27
goodness of fit correlation [0.23564458]
start cluster 09:43:27
8
parallel submitted
09:43:45
parallel finished
09:48:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:48:38
start mi0
09:48:38
start mi0 range(p) 1 loop
09:48:38
finish mi0 range(p) 1 loop
09:48:38
start mi0 range(p) 2 loop
09:48:38
finish mi0 range(p) 2 loop
09:48:38
start mi0 range(NT) loop
09:48:38
finish mi0 range(NT) loop
09:48:38
start mi0 range(n) loop
09:48:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:48:38
start mi0 range(n) 2loop
09:48:38
finish mi0 range(n) 2loop
09:48:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:48:38
start mi1 range(p) 1 loop
09:48:38
finish mi1 range(p) 1 loop
09:48:38
start mi1 range(p) 2 loop
09:48:38
finish mi1 range(p) 2 loop
09:48:38
start mi1 range(NT) loop
09:48:38
finish mi1 range(NT) loop
09:48:38
start mi1 range(n) loop
09:48:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:48:38
start mi1 range(n) 2loop
09:48:38
finish mi1 range(n) 2loop
09:48:38
start mi2
09:48:38
start mi2 range(p) 1 loop
09:48:38
finish mi2 range(p) 1 loop
09:48:38
start mi2 range(p) 2 loop
09:48:38
finish mi2 range(p) 2 loop
09:48:38
start mi2 range(NT) loop
09:48:38
finish mi2 range(NT) loop
09:48:38
start mi2 range(n) loop
09:48:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:48:38
start mi2 range(n) 2loop
09:48:38
finish mi2 range(n) 2loop
09:48:39
[[-2.50891719]]
end mi2 loop
09:48:39
estep
09:48:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:48:54
start ppi1
09:48:54
start mi0
09:48:54
start mi0 range(p) 1 loop
09:48:54
finish mi0 range(p) 1 loop
09:48:54
start mi0 range(p) 2 loop
09:48:54
finish mi0 range(p) 2 loop
09:48:54
start mi0 range(NT) loop
09:48:54
finish mi0 range(NT) loop
09:48:54
start mi0 range(n) loop
09:48:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:48:54
start mi0 range(n) 2loop
09:48:54
finish mi0 range(n) 2loop
09:48:55
start mi1
09:48:55
start mi1 range(p) 1 loop
09:48:55
finish mi1 range(p) 1 loop
09:48:55
start mi1 range(p) 2 loop
09:48:55
finish mi1 range(p) 2 loop
09:48:55
start mi1 range(NT) loop
09:48:55
finish mi1 range(NT) loop
09:48:55
start mi1 range(n) loop
09:48:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:48:55
start mi1 range(n) 2loop
09:48:55
finish mi1 range(n) 2loop
09:48:55
start mi2
09:48:55
start mi2 range(p) 1 loop
09:48:55
finish mi2 range(p) 1 loop
09:48:55
start mi2 range(p) 2 loop
09:48:55
finish mi2 range(p) 2 loop
09:48:55
start mi2 range(NT) loop
09:48:55
finish mi2 range(NT) loop
09:48:55
start mi2 range(n) loop
09:48:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:48:55
start mi2 range(n) 2loop
09:48:55
finish mi2 range(n) 2loop
09:48:55
[[-2.57144166]]
end mi2 loop
09:48:55
estep
09:48:55
end estep
09:49:11
end pa09:49:11
goodness of fit correlation [0.19371631]
start cluster 09:49:11
9
parallel submitted
09:49:28
parallel finished
09:54:27
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:54:35
start mi0
09:54:35
start mi0 range(p) 1 loop
09:54:35
finish mi0 range(p) 1 loop
09:54:35
start mi0 range(p) 2 loop
09:54:35
finish mi0 range(p) 2 loop
09:54:35
start mi0 range(NT) loop
09:54:35
finish mi0 range(NT) loop
09:54:35
start mi0 range(n) loop
09:54:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:54:35
start mi0 range(n) 2loop
09:54:35
finish mi0 range(n) 2loop
09:54:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:54:35
start mi1 range(p) 1 loop
09:54:35
finish mi1 range(p) 1 loop
09:54:35
start mi1 range(p) 2 loop
09:54:35
finish mi1 range(p) 2 loop
09:54:35
start mi1 range(NT) loop
09:54:35
finish mi1 range(NT) loop
09:54:35
start mi1 range(n) loop
09:54:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:54:35
start mi1 range(n) 2loop
09:54:35
finish mi1 range(n) 2loop
09:54:35
start mi2
09:54:35
start mi2 range(p) 1 loop
09:54:35
finish mi2 range(p) 1 loop
09:54:35
start mi2 range(p) 2 loop
09:54:35
finish mi2 range(p) 2 loop
09:54:35
start mi2 range(NT) loop
09:54:35
finish mi2 range(NT) loop
09:54:35
start mi2 range(n) loop
09:54:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:54:35
start mi2 range(n) 2loop
09:54:35
finish mi2 range(n) 2loop
09:54:35
start mi3
09:54:35
start mi3 range(p) 1 loop
09:54:35
finish mi3 range(p) 1 loop
09:54:35
start mi3 range(p) 2 loop
09:54:35
finish mi3 range(p) 2 loop
09:54:35
start mi3 range(NT) loop
09:54:36
finish mi3 range(NT) loop
09:54:36
start mi3 range(n) loop
09:54:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:54:36
start mi3 range(n) 2loop
09:54:36
finish mi3 range(n) 2loop
09:54:36
[[-2.40602838]]
end mi3 loop
09:54:36
estep
09:54:36
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:54:50
start ppi1
09:54:50
start mi0
09:54:50
start mi0 range(p) 1 loop
09:54:50
finish mi0 range(p) 1 loop
09:54:50
start mi0 range(p) 2 loop
09:54:50
finish mi0 range(p) 2 loop
09:54:50
start mi0 range(NT) loop
09:54:50
finish mi0 range(NT) loop
09:54:50
start mi0 range(n) loop
09:54:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:54:50
start mi0 range(n) 2loop
09:54:50
finish mi0 range(n) 2loop
09:54:50
start mi1
09:54:50
start mi1 range(p) 1 loop
09:54:50
finish mi1 range(p) 1 loop
09:54:50
start mi1 range(p) 2 loop
09:54:50
finish mi1 range(p) 2 loop
09:54:50
start mi1 range(NT) loop
09:54:50
finish mi1 range(NT) loop
09:54:50
start mi1 range(n) loop
09:54:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:54:50
start mi1 range(n) 2loop
09:54:50
finish mi1 range(n) 2loop
09:54:50
start mi2
09:54:50
start mi2 range(p) 1 loop
09:54:50
finish mi2 range(p) 1 loop
09:54:50
start mi2 range(p) 2 loop
09:54:50
finish mi2 range(p) 2 loop
09:54:50
start mi2 range(NT) loop
09:54:50
finish mi2 range(NT) loop
09:54:50
start mi2 range(n) loop
09:54:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:54:50
start mi2 range(n) 2loop
09:54:50
finish mi2 range(n) 2loop
09:54:51
start mi3
09:54:51
start mi3 range(p) 1 loop
09:54:51
finish mi3 range(p) 1 loop
09:54:51
start mi3 range(p) 2 loop
09:54:51
finish mi3 range(p) 2 loop
09:54:51
start mi3 range(NT) loop
09:54:51
finish mi3 range(NT) loop
09:54:51
start mi3 range(n) loop
09:54:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:54:51
start mi3 range(n) 2loop
09:54:51
finish mi3 range(n) 2loop
09:54:51
[[-2.46852044]]
end mi3 loop
09:54:51
estep
09:54:51
end estep
09:55:05
end pa09:55:05
goodness of fit correlation [0.17668515]
start cluster 09:55:05
10
parallel submitted
09:55:21
parallel finished
10:00:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:00:58
start mi0
10:00:58
start mi0 range(p) 1 loop
10:00:58
finish mi0 range(p) 1 loop
10:00:58
start mi0 range(p) 2 loop
10:00:58
finish mi0 range(p) 2 loop
10:00:58
start mi0 range(NT) loop
10:00:58
finish mi0 range(NT) loop
10:00:58
start mi0 range(n) loop
10:00:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:00:59
start mi0 range(n) 2loop
10:00:59
finish mi0 range(n) 2loop
10:00:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:00:59
start mi1 range(p) 1 loop
10:00:59
finish mi1 range(p) 1 loop
10:00:59
start mi1 range(p) 2 loop
10:00:59
finish mi1 range(p) 2 loop
10:00:59
start mi1 range(NT) loop
10:00:59
finish mi1 range(NT) loop
10:00:59
start mi1 range(n) loop
10:00:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:00:59
start mi1 range(n) 2loop
10:00:59
finish mi1 range(n) 2loop
10:00:59
start mi2
10:00:59
start mi2 range(p) 1 loop
10:00:59
finish mi2 range(p) 1 loop
10:00:59
start mi2 range(p) 2 loop
10:00:59
finish mi2 range(p) 2 loop
10:00:59
start mi2 range(NT) loop
10:00:59
finish mi2 range(NT) loop
10:00:59
start mi2 range(n) loop
10:00:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:00:59
start mi2 range(n) 2loop
10:00:59
finish mi2 range(n) 2loop
10:00:59
start mi3
10:00:59
start mi3 range(p) 1 loop
10:00:59
finish mi3 range(p) 1 loop
10:00:59
start mi3 range(p) 2 loop
10:00:59
finish mi3 range(p) 2 loop
10:00:59
start mi3 range(NT) loop
10:00:59
finish mi3 range(NT) loop
10:00:59
start mi3 range(n) loop
10:00:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:00:59
start mi3 range(n) 2loop
10:00:59
finish mi3 range(n) 2loop
10:00:59
[[-2.44015682]]
end mi3 loop
10:00:59
estep
10:00:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:01:15
start ppi1
10:01:15
start mi0
10:01:15
start mi0 range(p) 1 loop
10:01:15
finish mi0 range(p) 1 loop
10:01:15
start mi0 range(p) 2 loop
10:01:15
finish mi0 range(p) 2 loop
10:01:15
start mi0 range(NT) loop
10:01:15
finish mi0 range(NT) loop
10:01:15
start mi0 range(n) loop
10:01:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:01:15
start mi0 range(n) 2loop
10:01:15
finish mi0 range(n) 2loop
10:01:15
start mi1
10:01:15
start mi1 range(p) 1 loop
10:01:15
finish mi1 range(p) 1 loop
10:01:15
start mi1 range(p) 2 loop
10:01:15
finish mi1 range(p) 2 loop
10:01:15
start mi1 range(NT) loop
10:01:15
finish mi1 range(NT) loop
10:01:15
start mi1 range(n) loop
10:01:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:01:16
start mi1 range(n) 2loop
10:01:16
finish mi1 range(n) 2loop
10:01:16
start mi2
10:01:16
start mi2 range(p) 1 loop
10:01:16
finish mi2 range(p) 1 loop
10:01:16
start mi2 range(p) 2 loop
10:01:16
finish mi2 range(p) 2 loop
10:01:16
start mi2 range(NT) loop
10:01:16
finish mi2 range(NT) loop
10:01:16
start mi2 range(n) loop
10:01:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:01:16
start mi2 range(n) 2loop
10:01:16
finish mi2 range(n) 2loop
10:01:16
start mi3
10:01:16
start mi3 range(p) 1 loop
10:01:16
finish mi3 range(p) 1 loop
10:01:16
start mi3 range(p) 2 loop
10:01:16
finish mi3 range(p) 2 loop
10:01:16
start mi3 range(NT) loop
10:01:16
finish mi3 range(NT) loop
10:01:16
start mi3 range(n) loop
10:01:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:01:16
start mi3 range(n) 2loop
10:01:16
finish mi3 range(n) 2loop
10:01:16
[[-2.50264886]]
end mi3 loop
10:01:16
estep
10:01:16
end estep
10:01:32
end pa10:01:32
goodness of fit correlation [0.25082303]
start cluster 10:01:32
11
parallel submitted
10:01:50
parallel finished
10:08:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:08:46
start mi0
10:08:46
start mi0 range(p) 1 loop
10:08:46
finish mi0 range(p) 1 loop
10:08:46
start mi0 range(p) 2 loop
10:08:46
finish mi0 range(p) 2 loop
10:08:46
start mi0 range(NT) loop
10:08:46
finish mi0 range(NT) loop
10:08:46
start mi0 range(n) loop
10:08:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:08:46
start mi0 range(n) 2loop
10:08:46
finish mi0 range(n) 2loop
10:08:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:08:46
start mi1 range(p) 1 loop
10:08:46
finish mi1 range(p) 1 loop
10:08:46
start mi1 range(p) 2 loop
10:08:46
finish mi1 range(p) 2 loop
10:08:46
start mi1 range(NT) loop
10:08:46
finish mi1 range(NT) loop
10:08:46
start mi1 range(n) loop
10:08:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:08:46
start mi1 range(n) 2loop
10:08:46
finish mi1 range(n) 2loop
10:08:46
start mi2
10:08:46
start mi2 range(p) 1 loop
10:08:46
finish mi2 range(p) 1 loop
10:08:46
start mi2 range(p) 2 loop
10:08:46
finish mi2 range(p) 2 loop
10:08:46
start mi2 range(NT) loop
10:08:46
finish mi2 range(NT) loop
10:08:46
start mi2 range(n) loop
10:08:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:08:46
start mi2 range(n) 2loop
10:08:46
finish mi2 range(n) 2loop
10:08:47
start mi3
10:08:47
start mi3 range(p) 1 loop
10:08:47
finish mi3 range(p) 1 loop
10:08:47
start mi3 range(p) 2 loop
10:08:47
finish mi3 range(p) 2 loop
10:08:47
start mi3 range(NT) loop
10:08:47
finish mi3 range(NT) loop
10:08:47
start mi3 range(n) loop
10:08:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:08:47
start mi3 range(n) 2loop
10:08:47
finish mi3 range(n) 2loop
10:08:47
[[-2.49129966]]
end mi3 loop
10:08:47
estep
10:08:47
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:09:03
start ppi1
10:09:03
start mi0
10:09:03
start mi0 range(p) 1 loop
10:09:03
finish mi0 range(p) 1 loop
10:09:03
start mi0 range(p) 2 loop
10:09:03
finish mi0 range(p) 2 loop
10:09:03
start mi0 range(NT) loop
10:09:03
finish mi0 range(NT) loop
10:09:03
start mi0 range(n) loop
10:09:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:09:03
start mi0 range(n) 2loop
10:09:03
finish mi0 range(n) 2loop
10:09:03
start mi1
10:09:03
start mi1 range(p) 1 loop
10:09:03
finish mi1 range(p) 1 loop
10:09:03
start mi1 range(p) 2 loop
10:09:03
finish mi1 range(p) 2 loop
10:09:03
start mi1 range(NT) loop
10:09:03
finish mi1 range(NT) loop
10:09:03
start mi1 range(n) loop
10:09:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:09:03
start mi1 range(n) 2loop
10:09:03
finish mi1 range(n) 2loop
10:09:03
start mi2
10:09:03
start mi2 range(p) 1 loop
10:09:03
finish mi2 range(p) 1 loop
10:09:03
start mi2 range(p) 2 loop
10:09:03
finish mi2 range(p) 2 loop
10:09:03
start mi2 range(NT) loop
10:09:03
finish mi2 range(NT) loop
10:09:03
start mi2 range(n) loop
10:09:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:09:03
start mi2 range(n) 2loop
10:09:03
finish mi2 range(n) 2loop
10:09:03
[[-2.55377066]]
end mi2 loop
10:09:03
estep
10:09:03
end estep
10:09:19
end pa10:09:19
goodness of fit correlation [0.30880445]
start cluster 10:09:19
12
parallel submitted
10:09:41
parallel finished
10:20:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:20:06
start mi0
10:20:06
start mi0 range(p) 1 loop
10:20:06
finish mi0 range(p) 1 loop
10:20:06
start mi0 range(p) 2 loop
10:20:06
finish mi0 range(p) 2 loop
10:20:06
start mi0 range(NT) loop
10:20:06
finish mi0 range(NT) loop
10:20:06
start mi0 range(n) loop
10:20:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:20:06
start mi0 range(n) 2loop
10:20:06
finish mi0 range(n) 2loop
10:20:06
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:20:06
start mi1 range(p) 1 loop
10:20:06
finish mi1 range(p) 1 loop
10:20:06
start mi1 range(p) 2 loop
10:20:06
finish mi1 range(p) 2 loop
10:20:06
start mi1 range(NT) loop
10:20:06
finish mi1 range(NT) loop
10:20:06
start mi1 range(n) loop
10:20:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:20:06
start mi1 range(n) 2loop
10:20:06
finish mi1 range(n) 2loop
10:20:06
start mi2
10:20:06
start mi2 range(p) 1 loop
10:20:06
finish mi2 range(p) 1 loop
10:20:06
start mi2 range(p) 2 loop
10:20:06
finish mi2 range(p) 2 loop
10:20:06
start mi2 range(NT) loop
10:20:06
finish mi2 range(NT) loop
10:20:06
start mi2 range(n) loop
10:20:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:20:06
start mi2 range(n) 2loop
10:20:06
finish mi2 range(n) 2loop
10:20:06
[[-2.5448778]]
end mi2 loop
10:20:06
estep
10:20:06
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:20:21
start ppi1
10:20:21
start mi0
10:20:21
start mi0 range(p) 1 loop
10:20:21
finish mi0 range(p) 1 loop
10:20:21
start mi0 range(p) 2 loop
10:20:21
finish mi0 range(p) 2 loop
10:20:21
start mi0 range(NT) loop
10:20:21
finish mi0 range(NT) loop
10:20:21
start mi0 range(n) loop
10:20:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:20:21
start mi0 range(n) 2loop
10:20:21
finish mi0 range(n) 2loop
10:20:22
start mi1
10:20:22
start mi1 range(p) 1 loop
10:20:22
finish mi1 range(p) 1 loop
10:20:22
start mi1 range(p) 2 loop
10:20:22
finish mi1 range(p) 2 loop
10:20:22
start mi1 range(NT) loop
10:20:22
finish mi1 range(NT) loop
10:20:22
start mi1 range(n) loop
10:20:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:20:22
start mi1 range(n) 2loop
10:20:22
finish mi1 range(n) 2loop
10:20:22
start mi2
10:20:22
start mi2 range(p) 1 loop
10:20:22
finish mi2 range(p) 1 loop
10:20:22
start mi2 range(p) 2 loop
10:20:22
finish mi2 range(p) 2 loop
10:20:22
start mi2 range(NT) loop
10:20:22
finish mi2 range(NT) loop
10:20:22
start mi2 range(n) loop
10:20:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:20:22
start mi2 range(n) 2loop
10:20:22
finish mi2 range(n) 2loop
10:20:22
[[-2.60738757]]
end mi2 loop
10:20:22
estep
10:20:22
end estep
10:20:38
end pa10:20:38
goodness of fit correlation [0.2255233]
start cluster 10:20:38
13
parallel submitted
10:20:59
parallel finished
10:25:33
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:25:40
start mi0
10:25:40
start mi0 range(p) 1 loop
10:25:40
finish mi0 range(p) 1 loop
10:25:40
start mi0 range(p) 2 loop
10:25:40
finish mi0 range(p) 2 loop
10:25:40
start mi0 range(NT) loop
10:25:40
finish mi0 range(NT) loop
10:25:40
start mi0 range(n) loop
10:25:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:25:40
start mi0 range(n) 2loop
10:25:40
finish mi0 range(n) 2loop
10:25:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:25:40
start mi1 range(p) 1 loop
10:25:40
finish mi1 range(p) 1 loop
10:25:40
start mi1 range(p) 2 loop
10:25:40
finish mi1 range(p) 2 loop
10:25:40
start mi1 range(NT) loop
10:25:40
finish mi1 range(NT) loop
10:25:40
start mi1 range(n) loop
10:25:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:25:40
start mi1 range(n) 2loop
10:25:40
finish mi1 range(n) 2loop
10:25:40
start mi2
10:25:40
start mi2 range(p) 1 loop
10:25:40
finish mi2 range(p) 1 loop
10:25:40
start mi2 range(p) 2 loop
10:25:40
finish mi2 range(p) 2 loop
10:25:40
start mi2 range(NT) loop
10:25:40
finish mi2 range(NT) loop
10:25:40
start mi2 range(n) loop
10:25:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:25:40
start mi2 range(n) 2loop
10:25:40
finish mi2 range(n) 2loop
10:25:40
start mi3
10:25:40
start mi3 range(p) 1 loop
10:25:40
finish mi3 range(p) 1 loop
10:25:40
start mi3 range(p) 2 loop
10:25:40
finish mi3 range(p) 2 loop
10:25:40
start mi3 range(NT) loop
10:25:41
finish mi3 range(NT) loop
10:25:41
start mi3 range(n) loop
10:25:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:25:41
start mi3 range(n) 2loop
10:25:41
finish mi3 range(n) 2loop
10:25:41
[[-2.50104635]]
end mi3 loop
10:25:41
estep
10:25:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:25:56
start ppi1
10:25:56
start mi0
10:25:56
start mi0 range(p) 1 loop
10:25:56
finish mi0 range(p) 1 loop
10:25:56
start mi0 range(p) 2 loop
10:25:56
finish mi0 range(p) 2 loop
10:25:56
start mi0 range(NT) loop
10:25:57
finish mi0 range(NT) loop
10:25:57
start mi0 range(n) loop
10:25:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:25:57
start mi0 range(n) 2loop
10:25:57
finish mi0 range(n) 2loop
10:25:57
start mi1
10:25:57
start mi1 range(p) 1 loop
10:25:57
finish mi1 range(p) 1 loop
10:25:57
start mi1 range(p) 2 loop
10:25:57
finish mi1 range(p) 2 loop
10:25:57
start mi1 range(NT) loop
10:25:57
finish mi1 range(NT) loop
10:25:57
start mi1 range(n) loop
10:25:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:25:57
start mi1 range(n) 2loop
10:25:57
finish mi1 range(n) 2loop
10:25:57
start mi2
10:25:57
start mi2 range(p) 1 loop
10:25:57
finish mi2 range(p) 1 loop
10:25:57
start mi2 range(p) 2 loop
10:25:57
finish mi2 range(p) 2 loop
10:25:57
start mi2 range(NT) loop
10:25:57
finish mi2 range(NT) loop
10:25:57
start mi2 range(n) loop
10:25:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:25:57
start mi2 range(n) 2loop
10:25:57
finish mi2 range(n) 2loop
10:25:57
[[-2.56352093]]
end mi2 loop
10:25:57
estep
10:25:57
end estep
10:26:13
end pa10:26:13
goodness of fit correlation [0.22836743]
start cluster 10:26:13
14
parallel submitted
10:26:31
parallel finished
10:30:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:31:01
start mi0
10:31:01
start mi0 range(p) 1 loop
10:31:01
finish mi0 range(p) 1 loop
10:31:01
start mi0 range(p) 2 loop
10:31:01
finish mi0 range(p) 2 loop
10:31:01
start mi0 range(NT) loop
10:31:01
finish mi0 range(NT) loop
10:31:01
start mi0 range(n) loop
10:31:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:31:01
start mi0 range(n) 2loop
10:31:01
finish mi0 range(n) 2loop
10:31:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:31:02
start mi1 range(p) 1 loop
10:31:02
finish mi1 range(p) 1 loop
10:31:02
start mi1 range(p) 2 loop
10:31:02
finish mi1 range(p) 2 loop
10:31:02
start mi1 range(NT) loop
10:31:02
finish mi1 range(NT) loop
10:31:02
start mi1 range(n) loop
10:31:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:31:02
start mi1 range(n) 2loop
10:31:02
finish mi1 range(n) 2loop
10:31:02
start mi2
10:31:02
start mi2 range(p) 1 loop
10:31:02
finish mi2 range(p) 1 loop
10:31:02
start mi2 range(p) 2 loop
10:31:02
finish mi2 range(p) 2 loop
10:31:02
start mi2 range(NT) loop
10:31:02
finish mi2 range(NT) loop
10:31:02
start mi2 range(n) loop
10:31:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:31:02
start mi2 range(n) 2loop
10:31:02
finish mi2 range(n) 2loop
10:31:02
start mi3
10:31:02
start mi3 range(p) 1 loop
10:31:02
finish mi3 range(p) 1 loop
10:31:02
start mi3 range(p) 2 loop
10:31:02
finish mi3 range(p) 2 loop
10:31:02
start mi3 range(NT) loop
10:31:02
finish mi3 range(NT) loop
10:31:02
start mi3 range(n) loop
10:31:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:31:02
start mi3 range(n) 2loop
10:31:02
finish mi3 range(n) 2loop
10:31:02
[[-2.45239345]]
end mi3 loop
10:31:02
estep
10:31:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:31:18
start ppi1
10:31:18
start mi0
10:31:18
start mi0 range(p) 1 loop
10:31:18
finish mi0 range(p) 1 loop
10:31:18
start mi0 range(p) 2 loop
10:31:18
finish mi0 range(p) 2 loop
10:31:18
start mi0 range(NT) loop
10:31:18
finish mi0 range(NT) loop
10:31:18
start mi0 range(n) loop
10:31:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:31:18
start mi0 range(n) 2loop
10:31:18
finish mi0 range(n) 2loop
10:31:19
start mi1
10:31:19
start mi1 range(p) 1 loop
10:31:19
finish mi1 range(p) 1 loop
10:31:19
start mi1 range(p) 2 loop
10:31:19
finish mi1 range(p) 2 loop
10:31:19
start mi1 range(NT) loop
10:31:19
finish mi1 range(NT) loop
10:31:19
start mi1 range(n) loop
10:31:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:31:19
start mi1 range(n) 2loop
10:31:19
finish mi1 range(n) 2loop
10:31:19
start mi2
10:31:19
start mi2 range(p) 1 loop
10:31:19
finish mi2 range(p) 1 loop
10:31:19
start mi2 range(p) 2 loop
10:31:19
finish mi2 range(p) 2 loop
10:31:19
start mi2 range(NT) loop
10:31:19
finish mi2 range(NT) loop
10:31:19
start mi2 range(n) loop
10:31:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:31:19
start mi2 range(n) 2loop
10:31:19
finish mi2 range(n) 2loop
10:31:19
[[-2.51484275]]
end mi2 loop
10:31:19
estep
10:31:19
end estep
10:31:35
end pa10:31:35
goodness of fit correlation [0.27345614]
start cluster 10:31:35
15
parallel submitted
10:31:53
parallel finished
10:35:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:35:52
start mi0
10:35:52
start mi0 range(p) 1 loop
10:35:52
finish mi0 range(p) 1 loop
10:35:52
start mi0 range(p) 2 loop
10:35:52
finish mi0 range(p) 2 loop
10:35:52
start mi0 range(NT) loop
10:35:52
finish mi0 range(NT) loop
10:35:52
start mi0 range(n) loop
10:35:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:35:52
start mi0 range(n) 2loop
10:35:52
finish mi0 range(n) 2loop
10:35:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:35:52
start mi1 range(p) 1 loop
10:35:52
finish mi1 range(p) 1 loop
10:35:52
start mi1 range(p) 2 loop
10:35:52
finish mi1 range(p) 2 loop
10:35:52
start mi1 range(NT) loop
10:35:52
finish mi1 range(NT) loop
10:35:52
start mi1 range(n) loop
10:35:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:35:52
start mi1 range(n) 2loop
10:35:52
finish mi1 range(n) 2loop
10:35:52
start mi2
10:35:52
start mi2 range(p) 1 loop
10:35:52
finish mi2 range(p) 1 loop
10:35:52
start mi2 range(p) 2 loop
10:35:52
finish mi2 range(p) 2 loop
10:35:52
start mi2 range(NT) loop
10:35:52
finish mi2 range(NT) loop
10:35:52
start mi2 range(n) loop
10:35:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:35:52
start mi2 range(n) 2loop
10:35:52
finish mi2 range(n) 2loop
10:35:53
[[-2.51660395]]
end mi2 loop
10:35:53
estep
10:35:53
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:36:08
start ppi1
10:36:08
start mi0
10:36:08
start mi0 range(p) 1 loop
10:36:08
finish mi0 range(p) 1 loop
10:36:08
start mi0 range(p) 2 loop
10:36:08
finish mi0 range(p) 2 loop
10:36:08
start mi0 range(NT) loop
10:36:08
finish mi0 range(NT) loop
10:36:08
start mi0 range(n) loop
10:36:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:36:08
start mi0 range(n) 2loop
10:36:08
finish mi0 range(n) 2loop
10:36:09
start mi1
10:36:09
start mi1 range(p) 1 loop
10:36:09
finish mi1 range(p) 1 loop
10:36:09
start mi1 range(p) 2 loop
10:36:09
finish mi1 range(p) 2 loop
10:36:09
start mi1 range(NT) loop
10:36:09
finish mi1 range(NT) loop
10:36:09
start mi1 range(n) loop
10:36:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:36:09
start mi1 range(n) 2loop
10:36:09
finish mi1 range(n) 2loop
10:36:09
start mi2
10:36:09
start mi2 range(p) 1 loop
10:36:09
finish mi2 range(p) 1 loop
10:36:09
start mi2 range(p) 2 loop
10:36:09
finish mi2 range(p) 2 loop
10:36:09
start mi2 range(NT) loop
10:36:09
finish mi2 range(NT) loop
10:36:09
start mi2 range(n) loop
10:36:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:36:09
start mi2 range(n) 2loop
10:36:09
finish mi2 range(n) 2loop
10:36:09
[[-2.5791246]]
end mi2 loop
10:36:09
estep
10:36:09
end estep
10:36:25
end pa10:36:25
goodness of fit correlation [0.16654564]
0.30880445310410337
[5.25180287e-01 5.13348647e-01 5.33450784e-01 5.14965514e-01
 5.03089572e-01 5.04678243e-01 5.53415552e-01 5.22050723e-01
 5.35048773e-01 5.43158049e-01 5.18201931e-01 5.10252926e-01
 5.07856946e-01 5.78152393e-01 5.00272993e-01 5.13931981e-01
 5.31049197e-01 5.15741552e-01 5.10537947e-01 4.93797635e-01
 6.17497323e-01 4.89662045e-01 5.14722952e-01 5.08566025e-01
 5.01723076e-01 5.63447577e-01 5.23873197e-01 5.03753170e-01
 5.27279116e-01 5.43753165e-01 5.14818830e-01 5.04282462e-01
 5.21702430e-01 4.99686421e-01 5.19310900e-01 5.09625215e-01
 5.12306177e-01 4.93656057e-01 5.01107352e-01 5.49934095e-01
 5.19618729e-01 5.11650272e-01 5.10116238e-01 5.30701623e-01
 5.35306072e-01 5.06707306e-01 5.16430635e-01 5.76152289e-01
 5.02535167e-01 5.23420952e-01 5.18626943e-01 4.95839751e-01
 5.15523733e-01 4.99392827e-01 5.95015692e-01 4.80187714e-01
 5.13358749e-01 4.99610790e-01 5.09758108e-01 5.48580707e-01
 5.04091081e-01 4.96198553e-01 5.45835062e-01 5.33411620e-01
 5.09425157e-01 4.98489467e-01 5.06145380e-01 5.62433111e-01
 3.57473618e-01 3.46972917e-01 3.33774621e-01 3.42768166e-01
 3.10156649e-01 3.62579128e-01 3.40528576e-01 3.48640390e-01
 3.71432519e-01 3.35247010e-01 3.69873795e-01 3.71133029e-01
 3.66320368e-01 3.29275155e-01 3.30124867e-01 3.52590280e-01
 3.48107386e-01 3.54491535e-01 3.60142455e-01 3.51174278e-01
 3.34460372e-01 3.48405396e-01 3.45177724e-01 3.45822623e-01
 3.52668570e-01 3.45197921e-01 3.18667875e-01 3.33885080e-01
 3.51191766e-01 3.51321477e-01 3.68346405e-01 3.28036080e-01
 3.64694188e-01 3.57807446e-01 3.55363396e-01 3.57597311e-01
 3.37164792e-01 3.50435043e-01 3.06812753e-01 3.56789494e-01
 3.35210243e-01 3.38406426e-01 3.44703499e-01 3.38676431e-01
 3.40956560e-01 3.65812577e-01 3.57424853e-01 3.45883895e-01
 3.19950489e-01 3.50965474e-01 3.58581098e-01 3.02922869e-01
 3.55096333e-01 3.49619593e-01 3.42383928e-01 3.56250315e-01
 3.48638062e-01 3.38953252e-01 3.48879192e-01 3.39340192e-01
 3.17947186e-01 3.34739010e-01 3.43176028e-01 3.39923989e-01
 3.44873922e-01 3.03906135e-01 3.47434144e-01 3.41203933e-01
 1.53755664e+00 9.90788501e-04]
start cluster 10:36:25
0
parallel submitted
10:36:44
parallel finished
10:40:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:41:05
start mi0
10:41:05
start mi0 range(p) 1 loop
10:41:05
finish mi0 range(p) 1 loop
10:41:05
start mi0 range(p) 2 loop
10:41:05
finish mi0 range(p) 2 loop
10:41:05
start mi0 range(NT) loop
10:41:05
finish mi0 range(NT) loop
10:41:05
start mi0 range(n) loop
10:41:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:41:05
start mi0 range(n) 2loop
10:41:05
finish mi0 range(n) 2loop
10:41:06
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:41:06
start mi1 range(p) 1 loop
10:41:06
finish mi1 range(p) 1 loop
10:41:06
start mi1 range(p) 2 loop
10:41:06
finish mi1 range(p) 2 loop
10:41:06
start mi1 range(NT) loop
10:41:06
finish mi1 range(NT) loop
10:41:06
start mi1 range(n) loop
10:41:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:41:06
start mi1 range(n) 2loop
10:41:06
finish mi1 range(n) 2loop
10:41:06
start mi2
10:41:06
start mi2 range(p) 1 loop
10:41:06
finish mi2 range(p) 1 loop
10:41:06
start mi2 range(p) 2 loop
10:41:06
finish mi2 range(p) 2 loop
10:41:06
start mi2 range(NT) loop
10:41:06
finish mi2 range(NT) loop
10:41:06
start mi2 range(n) loop
10:41:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:41:06
start mi2 range(n) 2loop
10:41:06
finish mi2 range(n) 2loop
10:41:06
start mi3
10:41:06
start mi3 range(p) 1 loop
10:41:06
finish mi3 range(p) 1 loop
10:41:06
start mi3 range(p) 2 loop
10:41:06
finish mi3 range(p) 2 loop
10:41:06
start mi3 range(NT) loop
10:41:06
finish mi3 range(NT) loop
10:41:06
start mi3 range(n) loop
10:41:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:41:06
start mi3 range(n) 2loop
10:41:06
finish mi3 range(n) 2loop
10:41:06
[[-2.3400627]]
end mi3 loop
10:41:06
estep
10:41:06
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:41:22
start ppi1
10:41:22
start mi0
10:41:22
start mi0 range(p) 1 loop
10:41:22
finish mi0 range(p) 1 loop
10:41:22
start mi0 range(p) 2 loop
10:41:22
finish mi0 range(p) 2 loop
10:41:22
start mi0 range(NT) loop
10:41:22
finish mi0 range(NT) loop
10:41:22
start mi0 range(n) loop
10:41:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:41:22
start mi0 range(n) 2loop
10:41:22
finish mi0 range(n) 2loop
10:41:23
start mi1
10:41:23
start mi1 range(p) 1 loop
10:41:23
finish mi1 range(p) 1 loop
10:41:23
start mi1 range(p) 2 loop
10:41:23
finish mi1 range(p) 2 loop
10:41:23
start mi1 range(NT) loop
10:41:23
finish mi1 range(NT) loop
10:41:23
start mi1 range(n) loop
10:41:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:41:23
start mi1 range(n) 2loop
10:41:23
finish mi1 range(n) 2loop
10:41:23
start mi2
10:41:23
start mi2 range(p) 1 loop
10:41:23
finish mi2 range(p) 1 loop
10:41:23
start mi2 range(p) 2 loop
10:41:23
finish mi2 range(p) 2 loop
10:41:23
start mi2 range(NT) loop
10:41:23
finish mi2 range(NT) loop
10:41:23
start mi2 range(n) loop
10:41:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:41:23
start mi2 range(n) 2loop
10:41:23
finish mi2 range(n) 2loop
10:41:23
start mi3
10:41:23
start mi3 range(p) 1 loop
10:41:23
finish mi3 range(p) 1 loop
10:41:23
start mi3 range(p) 2 loop
10:41:23
finish mi3 range(p) 2 loop
10:41:23
start mi3 range(NT) loop
10:41:23
finish mi3 range(NT) loop
10:41:23
start mi3 range(n) loop
10:41:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:41:23
start mi3 range(n) 2loop
10:41:23
finish mi3 range(n) 2loop
10:41:23
[[-2.3400627]]
end mi3 loop
10:41:23
estep
10:41:23
end estep
10:41:39
end pa10:41:39
goodness of fit correlation [0.0175866]
start cluster 10:41:39
1
parallel submitted
10:41:58
parallel finished
10:45:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:45:59
start mi0
10:45:59
start mi0 range(p) 1 loop
10:45:59
finish mi0 range(p) 1 loop
10:45:59
start mi0 range(p) 2 loop
10:45:59
finish mi0 range(p) 2 loop
10:45:59
start mi0 range(NT) loop
10:45:59
finish mi0 range(NT) loop
10:45:59
start mi0 range(n) loop
10:45:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:45:59
start mi0 range(n) 2loop
10:45:59
finish mi0 range(n) 2loop
10:45:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:45:59
start mi1 range(p) 1 loop
10:45:59
finish mi1 range(p) 1 loop
10:45:59
start mi1 range(p) 2 loop
10:45:59
finish mi1 range(p) 2 loop
10:45:59
start mi1 range(NT) loop
10:46:00
finish mi1 range(NT) loop
10:46:00
start mi1 range(n) loop
10:46:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:46:00
start mi1 range(n) 2loop
10:46:00
finish mi1 range(n) 2loop
10:46:00
start mi2
10:46:00
start mi2 range(p) 1 loop
10:46:00
finish mi2 range(p) 1 loop
10:46:00
start mi2 range(p) 2 loop
10:46:00
finish mi2 range(p) 2 loop
10:46:00
start mi2 range(NT) loop
10:46:00
finish mi2 range(NT) loop
10:46:00
start mi2 range(n) loop
10:46:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:46:00
start mi2 range(n) 2loop
10:46:00
finish mi2 range(n) 2loop
10:46:00
start mi3
10:46:00
start mi3 range(p) 1 loop
10:46:00
finish mi3 range(p) 1 loop
10:46:00
start mi3 range(p) 2 loop
10:46:00
finish mi3 range(p) 2 loop
10:46:00
start mi3 range(NT) loop
10:46:00
finish mi3 range(NT) loop
10:46:00
start mi3 range(n) loop
10:46:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:46:00
start mi3 range(n) 2loop
10:46:00
finish mi3 range(n) 2loop
10:46:00
[[-2.37308382]]
end mi3 loop
10:46:00
estep
10:46:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:46:16
start ppi1
10:46:16
start mi0
10:46:16
start mi0 range(p) 1 loop
10:46:16
finish mi0 range(p) 1 loop
10:46:16
start mi0 range(p) 2 loop
10:46:16
finish mi0 range(p) 2 loop
10:46:16
start mi0 range(NT) loop
10:46:16
finish mi0 range(NT) loop
10:46:16
start mi0 range(n) loop
10:46:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:46:16
start mi0 range(n) 2loop
10:46:16
finish mi0 range(n) 2loop
10:46:16
start mi1
10:46:16
start mi1 range(p) 1 loop
10:46:16
finish mi1 range(p) 1 loop
10:46:16
start mi1 range(p) 2 loop
10:46:16
finish mi1 range(p) 2 loop
10:46:16
start mi1 range(NT) loop
10:46:16
finish mi1 range(NT) loop
10:46:17
start mi1 range(n) loop
10:46:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:46:17
start mi1 range(n) 2loop
10:46:17
finish mi1 range(n) 2loop
10:46:17
start mi2
10:46:17
start mi2 range(p) 1 loop
10:46:17
finish mi2 range(p) 1 loop
10:46:17
start mi2 range(p) 2 loop
10:46:17
finish mi2 range(p) 2 loop
10:46:17
start mi2 range(NT) loop
10:46:17
finish mi2 range(NT) loop
10:46:17
start mi2 range(n) loop
10:46:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:46:17
start mi2 range(n) 2loop
10:46:17
finish mi2 range(n) 2loop
10:46:17
start mi3
10:46:17
start mi3 range(p) 1 loop
10:46:17
finish mi3 range(p) 1 loop
10:46:17
start mi3 range(p) 2 loop
10:46:17
finish mi3 range(p) 2 loop
10:46:17
start mi3 range(NT) loop
10:46:17
finish mi3 range(NT) loop
10:46:17
start mi3 range(n) loop
10:46:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:46:17
start mi3 range(n) 2loop
10:46:17
finish mi3 range(n) 2loop
10:46:17
[[-2.43557592]]
end mi3 loop
10:46:17
estep
10:46:17
end estep
10:46:33
end pa10:46:33
goodness of fit correlation [0.19377705]
start cluster 10:46:33
2
parallel submitted
10:46:50
parallel finished
10:50:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:50:57
start mi0
10:50:57
start mi0 range(p) 1 loop
10:50:57
finish mi0 range(p) 1 loop
10:50:57
start mi0 range(p) 2 loop
10:50:57
finish mi0 range(p) 2 loop
10:50:57
start mi0 range(NT) loop
10:50:57
finish mi0 range(NT) loop
10:50:57
start mi0 range(n) loop
10:50:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:50:57
start mi0 range(n) 2loop
10:50:57
finish mi0 range(n) 2loop
10:50:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:50:57
start mi1 range(p) 1 loop
10:50:57
finish mi1 range(p) 1 loop
10:50:57
start mi1 range(p) 2 loop
10:50:57
finish mi1 range(p) 2 loop
10:50:57
start mi1 range(NT) loop
10:50:57
finish mi1 range(NT) loop
10:50:57
start mi1 range(n) loop
10:50:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:50:58
start mi1 range(n) 2loop
10:50:58
finish mi1 range(n) 2loop
10:50:58
start mi2
10:50:58
start mi2 range(p) 1 loop
10:50:58
finish mi2 range(p) 1 loop
10:50:58
start mi2 range(p) 2 loop
10:50:58
finish mi2 range(p) 2 loop
10:50:58
start mi2 range(NT) loop
10:50:58
finish mi2 range(NT) loop
10:50:58
start mi2 range(n) loop
10:50:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:50:58
start mi2 range(n) 2loop
10:50:58
finish mi2 range(n) 2loop
10:50:58
start mi3
10:50:58
start mi3 range(p) 1 loop
10:50:58
finish mi3 range(p) 1 loop
10:50:58
start mi3 range(p) 2 loop
10:50:58
finish mi3 range(p) 2 loop
10:50:58
start mi3 range(NT) loop
10:50:58
finish mi3 range(NT) loop
10:50:58
start mi3 range(n) loop
10:50:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:50:58
start mi3 range(n) 2loop
10:50:58
finish mi3 range(n) 2loop
10:50:58
[[-2.43450443]]
end mi3 loop
10:50:58
estep
10:50:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:51:14
start ppi1
10:51:14
start mi0
10:51:14
start mi0 range(p) 1 loop
10:51:14
finish mi0 range(p) 1 loop
10:51:14
start mi0 range(p) 2 loop
10:51:14
finish mi0 range(p) 2 loop
10:51:14
start mi0 range(NT) loop
10:51:14
finish mi0 range(NT) loop
10:51:14
start mi0 range(n) loop
10:51:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:51:14
start mi0 range(n) 2loop
10:51:14
finish mi0 range(n) 2loop
10:51:14
start mi1
10:51:14
start mi1 range(p) 1 loop
10:51:14
finish mi1 range(p) 1 loop
10:51:14
start mi1 range(p) 2 loop
10:51:14
finish mi1 range(p) 2 loop
10:51:14
start mi1 range(NT) loop
10:51:15
finish mi1 range(NT) loop
10:51:15
start mi1 range(n) loop
10:51:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:51:15
start mi1 range(n) 2loop
10:51:15
finish mi1 range(n) 2loop
10:51:15
start mi2
10:51:15
start mi2 range(p) 1 loop
10:51:15
finish mi2 range(p) 1 loop
10:51:15
start mi2 range(p) 2 loop
10:51:15
finish mi2 range(p) 2 loop
10:51:15
start mi2 range(NT) loop
10:51:15
finish mi2 range(NT) loop
10:51:15
start mi2 range(n) loop
10:51:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:51:15
start mi2 range(n) 2loop
10:51:15
finish mi2 range(n) 2loop
10:51:15
start mi3
10:51:15
start mi3 range(p) 1 loop
10:51:15
finish mi3 range(p) 1 loop
10:51:15
start mi3 range(p) 2 loop
10:51:15
finish mi3 range(p) 2 loop
10:51:15
start mi3 range(NT) loop
10:51:15
finish mi3 range(NT) loop
10:51:15
start mi3 range(n) loop
10:51:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:51:15
start mi3 range(n) 2loop
10:51:15
finish mi3 range(n) 2loop
10:51:15
[[-2.49699647]]
end mi3 loop
10:51:15
estep
10:51:15
end estep
10:51:31
end pa10:51:31
goodness of fit correlation [0.27837161]
start cluster 10:51:31
3
parallel submitted
10:51:50
parallel finished
10:53:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:53:58
start mi0
10:53:58
start mi0 range(p) 1 loop
10:53:58
finish mi0 range(p) 1 loop
10:53:58
start mi0 range(p) 2 loop
10:53:58
finish mi0 range(p) 2 loop
10:53:58
start mi0 range(NT) loop
10:53:58
finish mi0 range(NT) loop
10:53:58
start mi0 range(n) loop
10:53:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:53:58
start mi0 range(n) 2loop
10:53:58
finish mi0 range(n) 2loop
10:53:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:53:58
start mi1 range(p) 1 loop
10:53:58
finish mi1 range(p) 1 loop
10:53:58
start mi1 range(p) 2 loop
10:53:58
finish mi1 range(p) 2 loop
10:53:58
start mi1 range(NT) loop
10:53:58
finish mi1 range(NT) loop
10:53:58
start mi1 range(n) loop
10:53:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:53:58
start mi1 range(n) 2loop
10:53:58
finish mi1 range(n) 2loop
10:53:58
start mi2
10:53:58
start mi2 range(p) 1 loop
10:53:58
finish mi2 range(p) 1 loop
10:53:58
start mi2 range(p) 2 loop
10:53:58
finish mi2 range(p) 2 loop
10:53:58
start mi2 range(NT) loop
10:53:58
finish mi2 range(NT) loop
10:53:58
start mi2 range(n) loop
10:53:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:53:58
start mi2 range(n) 2loop
10:53:58
finish mi2 range(n) 2loop
10:53:58
start mi3
10:53:58
start mi3 range(p) 1 loop
10:53:58
finish mi3 range(p) 1 loop
10:53:58
start mi3 range(p) 2 loop
10:53:58
finish mi3 range(p) 2 loop
10:53:58
start mi3 range(NT) loop
10:53:58
finish mi3 range(NT) loop
10:53:59
start mi3 range(n) loop
10:53:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:53:59
start mi3 range(n) 2loop
10:53:59
finish mi3 range(n) 2loop
10:53:59
[[-2.50144966]]
end mi3 loop
10:53:59
estep
10:53:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:54:14
start ppi1
10:54:14
start mi0
10:54:14
start mi0 range(p) 1 loop
10:54:14
finish mi0 range(p) 1 loop
10:54:14
start mi0 range(p) 2 loop
10:54:14
finish mi0 range(p) 2 loop
10:54:14
start mi0 range(NT) loop
10:54:14
finish mi0 range(NT) loop
10:54:14
start mi0 range(n) loop
10:54:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:54:14
start mi0 range(n) 2loop
10:54:14
finish mi0 range(n) 2loop
10:54:14
start mi1
10:54:14
start mi1 range(p) 1 loop
10:54:14
finish mi1 range(p) 1 loop
10:54:14
start mi1 range(p) 2 loop
10:54:14
finish mi1 range(p) 2 loop
10:54:14
start mi1 range(NT) loop
10:54:14
finish mi1 range(NT) loop
10:54:14
start mi1 range(n) loop
10:54:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:54:14
start mi1 range(n) 2loop
10:54:14
finish mi1 range(n) 2loop
10:54:14
start mi2
10:54:14
start mi2 range(p) 1 loop
10:54:14
finish mi2 range(p) 1 loop
10:54:14
start mi2 range(p) 2 loop
10:54:14
finish mi2 range(p) 2 loop
10:54:14
start mi2 range(NT) loop
10:54:14
finish mi2 range(NT) loop
10:54:14
start mi2 range(n) loop
10:54:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:54:14
start mi2 range(n) 2loop
10:54:14
finish mi2 range(n) 2loop
10:54:14
[[-2.56392438]]
end mi2 loop
10:54:14
estep
10:54:14
end estep
10:54:29
end pa10:54:29
goodness of fit correlation [0.29994096]
start cluster 10:54:29
4
parallel submitted
10:54:46
parallel finished
10:57:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:57:23
start mi0
10:57:23
start mi0 range(p) 1 loop
10:57:23
finish mi0 range(p) 1 loop
10:57:23
start mi0 range(p) 2 loop
10:57:23
finish mi0 range(p) 2 loop
10:57:23
start mi0 range(NT) loop
10:57:23
finish mi0 range(NT) loop
10:57:23
start mi0 range(n) loop
10:57:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:57:23
start mi0 range(n) 2loop
10:57:23
finish mi0 range(n) 2loop
10:57:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:57:23
start mi1 range(p) 1 loop
10:57:23
finish mi1 range(p) 1 loop
10:57:23
start mi1 range(p) 2 loop
10:57:23
finish mi1 range(p) 2 loop
10:57:23
start mi1 range(NT) loop
10:57:24
finish mi1 range(NT) loop
10:57:24
start mi1 range(n) loop
10:57:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:57:24
start mi1 range(n) 2loop
10:57:24
finish mi1 range(n) 2loop
10:57:24
start mi2
10:57:24
start mi2 range(p) 1 loop
10:57:24
finish mi2 range(p) 1 loop
10:57:24
start mi2 range(p) 2 loop
10:57:24
finish mi2 range(p) 2 loop
10:57:24
start mi2 range(NT) loop
10:57:24
finish mi2 range(NT) loop
10:57:24
start mi2 range(n) loop
10:57:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:57:24
start mi2 range(n) 2loop
10:57:24
finish mi2 range(n) 2loop
10:57:24
[[-2.5131402]]
end mi2 loop
10:57:24
estep
10:57:24
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:57:38
start ppi1
10:57:38
start mi0
10:57:38
start mi0 range(p) 1 loop
10:57:38
finish mi0 range(p) 1 loop
10:57:38
start mi0 range(p) 2 loop
10:57:38
finish mi0 range(p) 2 loop
10:57:38
start mi0 range(NT) loop
10:57:38
finish mi0 range(NT) loop
10:57:39
start mi0 range(n) loop
10:57:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:57:39
start mi0 range(n) 2loop
10:57:39
finish mi0 range(n) 2loop
10:57:39
start mi1
10:57:39
start mi1 range(p) 1 loop
10:57:39
finish mi1 range(p) 1 loop
10:57:39
start mi1 range(p) 2 loop
10:57:39
finish mi1 range(p) 2 loop
10:57:39
start mi1 range(NT) loop
10:57:39
finish mi1 range(NT) loop
10:57:39
start mi1 range(n) loop
10:57:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:57:39
start mi1 range(n) 2loop
10:57:39
finish mi1 range(n) 2loop
10:57:39
start mi2
10:57:39
start mi2 range(p) 1 loop
10:57:39
finish mi2 range(p) 1 loop
10:57:39
start mi2 range(p) 2 loop
10:57:39
finish mi2 range(p) 2 loop
10:57:39
start mi2 range(NT) loop
10:57:39
finish mi2 range(NT) loop
10:57:39
start mi2 range(n) loop
10:57:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:57:39
start mi2 range(n) 2loop
10:57:39
finish mi2 range(n) 2loop
10:57:39
[[-2.57566252]]
end mi2 loop
10:57:39
estep
10:57:39
end estep
10:57:53
end pa10:57:53
goodness of fit correlation [0.25937309]
start cluster 10:57:53
5
parallel submitted
10:58:11
parallel finished
11:00:10
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:00:18
start mi0
11:00:18
start mi0 range(p) 1 loop
11:00:18
finish mi0 range(p) 1 loop
11:00:18
start mi0 range(p) 2 loop
11:00:18
finish mi0 range(p) 2 loop
11:00:18
start mi0 range(NT) loop
11:00:18
finish mi0 range(NT) loop
11:00:18
start mi0 range(n) loop
11:00:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:00:18
start mi0 range(n) 2loop
11:00:18
finish mi0 range(n) 2loop
11:00:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:00:19
start mi1 range(p) 1 loop
11:00:19
finish mi1 range(p) 1 loop
11:00:19
start mi1 range(p) 2 loop
11:00:19
finish mi1 range(p) 2 loop
11:00:19
start mi1 range(NT) loop
11:00:19
finish mi1 range(NT) loop
11:00:19
start mi1 range(n) loop
11:00:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:00:19
start mi1 range(n) 2loop
11:00:19
finish mi1 range(n) 2loop
11:00:19
start mi2
11:00:19
start mi2 range(p) 1 loop
11:00:19
finish mi2 range(p) 1 loop
11:00:19
start mi2 range(p) 2 loop
11:00:19
finish mi2 range(p) 2 loop
11:00:19
start mi2 range(NT) loop
11:00:19
finish mi2 range(NT) loop
11:00:19
start mi2 range(n) loop
11:00:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:00:19
start mi2 range(n) 2loop
11:00:19
finish mi2 range(n) 2loop
11:00:19
[[-2.52272058]]
end mi2 loop
11:00:19
estep
11:00:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:00:33
start ppi1
11:00:33
start mi0
11:00:33
start mi0 range(p) 1 loop
11:00:33
finish mi0 range(p) 1 loop
11:00:33
start mi0 range(p) 2 loop
11:00:33
finish mi0 range(p) 2 loop
11:00:33
start mi0 range(NT) loop
11:00:34
finish mi0 range(NT) loop
11:00:34
start mi0 range(n) loop
11:00:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:00:34
start mi0 range(n) 2loop
11:00:34
finish mi0 range(n) 2loop
11:00:34
start mi1
11:00:34
start mi1 range(p) 1 loop
11:00:34
finish mi1 range(p) 1 loop
11:00:34
start mi1 range(p) 2 loop
11:00:34
finish mi1 range(p) 2 loop
11:00:34
start mi1 range(NT) loop
11:00:34
finish mi1 range(NT) loop
11:00:34
start mi1 range(n) loop
11:00:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:00:34
start mi1 range(n) 2loop
11:00:34
finish mi1 range(n) 2loop
11:00:34
start mi2
11:00:34
start mi2 range(p) 1 loop
11:00:34
finish mi2 range(p) 1 loop
11:00:34
start mi2 range(p) 2 loop
11:00:34
finish mi2 range(p) 2 loop
11:00:34
start mi2 range(NT) loop
11:00:34
finish mi2 range(NT) loop
11:00:34
start mi2 range(n) loop
11:00:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:00:34
start mi2 range(n) 2loop
11:00:34
finish mi2 range(n) 2loop
11:00:34
[[-2.58523848]]
end mi2 loop
11:00:34
estep
11:00:34
end estep
11:00:50
end pa11:00:50
goodness of fit correlation [0.28276944]
start cluster 11:00:50
6
parallel submitted
11:01:10
parallel finished
11:04:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:04:32
start mi0
11:04:32
start mi0 range(p) 1 loop
11:04:32
finish mi0 range(p) 1 loop
11:04:32
start mi0 range(p) 2 loop
11:04:32
finish mi0 range(p) 2 loop
11:04:32
start mi0 range(NT) loop
11:04:32
finish mi0 range(NT) loop
11:04:32
start mi0 range(n) loop
11:04:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:04:32
start mi0 range(n) 2loop
11:04:32
finish mi0 range(n) 2loop
11:04:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:04:32
start mi1 range(p) 1 loop
11:04:32
finish mi1 range(p) 1 loop
11:04:32
start mi1 range(p) 2 loop
11:04:32
finish mi1 range(p) 2 loop
11:04:32
start mi1 range(NT) loop
11:04:32
finish mi1 range(NT) loop
11:04:32
start mi1 range(n) loop
11:04:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:04:32
start mi1 range(n) 2loop
11:04:32
finish mi1 range(n) 2loop
11:04:32
start mi2
11:04:32
start mi2 range(p) 1 loop
11:04:32
finish mi2 range(p) 1 loop
11:04:32
start mi2 range(p) 2 loop
11:04:32
finish mi2 range(p) 2 loop
11:04:32
start mi2 range(NT) loop
11:04:32
finish mi2 range(NT) loop
11:04:32
start mi2 range(n) loop
11:04:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:04:32
start mi2 range(n) 2loop
11:04:32
finish mi2 range(n) 2loop
11:04:32
[[-2.54798883]]
end mi2 loop
11:04:32
estep
11:04:32
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:04:48
start ppi1
11:04:48
start mi0
11:04:48
start mi0 range(p) 1 loop
11:04:48
finish mi0 range(p) 1 loop
11:04:48
start mi0 range(p) 2 loop
11:04:48
finish mi0 range(p) 2 loop
11:04:48
start mi0 range(NT) loop
11:04:48
finish mi0 range(NT) loop
11:04:48
start mi0 range(n) loop
11:04:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:04:49
start mi0 range(n) 2loop
11:04:49
finish mi0 range(n) 2loop
11:04:49
start mi1
11:04:49
start mi1 range(p) 1 loop
11:04:49
finish mi1 range(p) 1 loop
11:04:49
start mi1 range(p) 2 loop
11:04:49
finish mi1 range(p) 2 loop
11:04:49
start mi1 range(NT) loop
11:04:49
finish mi1 range(NT) loop
11:04:49
start mi1 range(n) loop
11:04:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:04:49
start mi1 range(n) 2loop
11:04:49
finish mi1 range(n) 2loop
11:04:49
start mi2
11:04:49
start mi2 range(p) 1 loop
11:04:49
finish mi2 range(p) 1 loop
11:04:49
start mi2 range(p) 2 loop
11:04:49
finish mi2 range(p) 2 loop
11:04:49
start mi2 range(NT) loop
11:04:49
finish mi2 range(NT) loop
11:04:49
start mi2 range(n) loop
11:04:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:04:49
start mi2 range(n) 2loop
11:04:49
finish mi2 range(n) 2loop
11:04:49
[[-2.61049765]]
end mi2 loop
11:04:49
estep
11:04:49
end estep
11:05:05
end pa11:05:05
goodness of fit correlation [0.2423934]
start cluster 11:05:05
7
parallel submitted
11:05:28
parallel finished
11:08:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:08:15
start mi0
11:08:15
start mi0 range(p) 1 loop
11:08:15
finish mi0 range(p) 1 loop
11:08:15
start mi0 range(p) 2 loop
11:08:15
finish mi0 range(p) 2 loop
11:08:15
start mi0 range(NT) loop
11:08:15
finish mi0 range(NT) loop
11:08:15
start mi0 range(n) loop
11:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:08:15
start mi0 range(n) 2loop
11:08:15
finish mi0 range(n) 2loop
11:08:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:08:15
start mi1 range(p) 1 loop
11:08:15
finish mi1 range(p) 1 loop
11:08:15
start mi1 range(p) 2 loop
11:08:15
finish mi1 range(p) 2 loop
11:08:15
start mi1 range(NT) loop
11:08:15
finish mi1 range(NT) loop
11:08:15
start mi1 range(n) loop
11:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:08:15
start mi1 range(n) 2loop
11:08:15
finish mi1 range(n) 2loop
11:08:15
start mi2
11:08:15
start mi2 range(p) 1 loop
11:08:15
finish mi2 range(p) 1 loop
11:08:15
start mi2 range(p) 2 loop
11:08:15
finish mi2 range(p) 2 loop
11:08:15
start mi2 range(NT) loop
11:08:15
finish mi2 range(NT) loop
11:08:15
start mi2 range(n) loop
11:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:08:16
start mi2 range(n) 2loop
11:08:16
finish mi2 range(n) 2loop
11:08:16
start mi3
11:08:16
start mi3 range(p) 1 loop
11:08:16
finish mi3 range(p) 1 loop
11:08:16
start mi3 range(p) 2 loop
11:08:16
finish mi3 range(p) 2 loop
11:08:16
start mi3 range(NT) loop
11:08:16
finish mi3 range(NT) loop
11:08:16
start mi3 range(n) loop
11:08:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:08:16
start mi3 range(n) 2loop
11:08:16
finish mi3 range(n) 2loop
11:08:16
[[-2.50500255]]
end mi3 loop
11:08:16
estep
11:08:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:08:32
start ppi1
11:08:32
start mi0
11:08:32
start mi0 range(p) 1 loop
11:08:32
finish mi0 range(p) 1 loop
11:08:32
start mi0 range(p) 2 loop
11:08:32
finish mi0 range(p) 2 loop
11:08:32
start mi0 range(NT) loop
11:08:32
finish mi0 range(NT) loop
11:08:32
start mi0 range(n) loop
11:08:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:08:32
start mi0 range(n) 2loop
11:08:32
finish mi0 range(n) 2loop
11:08:32
start mi1
11:08:32
start mi1 range(p) 1 loop
11:08:32
finish mi1 range(p) 1 loop
11:08:32
start mi1 range(p) 2 loop
11:08:32
finish mi1 range(p) 2 loop
11:08:32
start mi1 range(NT) loop
11:08:32
finish mi1 range(NT) loop
11:08:32
start mi1 range(n) loop
11:08:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:08:33
start mi1 range(n) 2loop
11:08:33
finish mi1 range(n) 2loop
11:08:33
start mi2
11:08:33
start mi2 range(p) 1 loop
11:08:33
finish mi2 range(p) 1 loop
11:08:33
start mi2 range(p) 2 loop
11:08:33
finish mi2 range(p) 2 loop
11:08:33
start mi2 range(NT) loop
11:08:33
finish mi2 range(NT) loop
11:08:33
start mi2 range(n) loop
11:08:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:08:33
start mi2 range(n) 2loop
11:08:33
finish mi2 range(n) 2loop
11:08:33
[[-2.56747843]]
end mi2 loop
11:08:33
estep
11:08:33
end estep
11:08:49
end pa11:08:49
goodness of fit correlation [0.37631964]
start cluster 11:08:49
8
parallel submitted
11:09:10
parallel finished
11:12:34
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:12:44
start mi0
11:12:44
start mi0 range(p) 1 loop
11:12:44
finish mi0 range(p) 1 loop
11:12:44
start mi0 range(p) 2 loop
11:12:44
finish mi0 range(p) 2 loop
11:12:44
start mi0 range(NT) loop
11:12:44
finish mi0 range(NT) loop
11:12:44
start mi0 range(n) loop
11:12:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:12:44
start mi0 range(n) 2loop
11:12:44
finish mi0 range(n) 2loop
11:12:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:12:44
start mi1 range(p) 1 loop
11:12:44
finish mi1 range(p) 1 loop
11:12:44
start mi1 range(p) 2 loop
11:12:44
finish mi1 range(p) 2 loop
11:12:44
start mi1 range(NT) loop
11:12:44
finish mi1 range(NT) loop
11:12:44
start mi1 range(n) loop
11:12:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:12:45
start mi1 range(n) 2loop
11:12:45
finish mi1 range(n) 2loop
11:12:45
start mi2
11:12:45
start mi2 range(p) 1 loop
11:12:45
finish mi2 range(p) 1 loop
11:12:45
start mi2 range(p) 2 loop
11:12:45
finish mi2 range(p) 2 loop
11:12:45
start mi2 range(NT) loop
11:12:45
finish mi2 range(NT) loop
11:12:45
start mi2 range(n) loop
11:12:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:12:45
start mi2 range(n) 2loop
11:12:45
finish mi2 range(n) 2loop
11:12:45
[[-2.68808801]]
end mi2 loop
11:12:45
estep
11:12:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:13:01
start ppi1
11:13:01
start mi0
11:13:01
start mi0 range(p) 1 loop
11:13:01
finish mi0 range(p) 1 loop
11:13:01
start mi0 range(p) 2 loop
11:13:01
finish mi0 range(p) 2 loop
11:13:01
start mi0 range(NT) loop
11:13:01
finish mi0 range(NT) loop
11:13:01
start mi0 range(n) loop
11:13:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:13:01
start mi0 range(n) 2loop
11:13:01
finish mi0 range(n) 2loop
11:13:01
start mi1
11:13:01
start mi1 range(p) 1 loop
11:13:01
finish mi1 range(p) 1 loop
11:13:01
start mi1 range(p) 2 loop
11:13:01
finish mi1 range(p) 2 loop
11:13:01
start mi1 range(NT) loop
11:13:01
finish mi1 range(NT) loop
11:13:01
start mi1 range(n) loop
11:13:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:13:01
start mi1 range(n) 2loop
11:13:01
finish mi1 range(n) 2loop
11:13:02
start mi2
11:13:02
start mi2 range(p) 1 loop
11:13:02
finish mi2 range(p) 1 loop
11:13:02
start mi2 range(p) 2 loop
11:13:02
finish mi2 range(p) 2 loop
11:13:02
start mi2 range(NT) loop
11:13:02
finish mi2 range(NT) loop
11:13:02
start mi2 range(n) loop
11:13:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:13:02
start mi2 range(n) 2loop
11:13:02
finish mi2 range(n) 2loop
11:13:02
[[-2.75058092]]
end mi2 loop
11:13:02
estep
11:13:02
end estep
11:13:18
end pa11:13:18
goodness of fit correlation [0.23829754]
0.37631964178937144
[5.26686263e-01 5.73773700e-01 5.50018653e-01 5.76117556e-01
 5.05579810e-01 5.20307511e-01 5.70956620e-01 5.57429986e-01
 5.53538048e-01 5.54234714e-01 5.23992471e-01 5.37618167e-01
 5.80373387e-01 5.73641277e-01 5.07231378e-01 5.72597261e-01
 5.57195854e-01 5.19814333e-01 5.50339707e-01 5.12685334e-01
 6.50958607e-01 5.82956248e-01 4.94671313e-01 6.00461847e-01
 5.37323487e-01 6.30421816e-01 4.90860219e-01 5.83854235e-01
 5.38883105e-01 5.95500375e-01 5.10912876e-01 4.95850153e-01
 5.09737231e-01 5.82309268e-01 5.49660616e-01 5.37996297e-01
 5.59291686e-01 5.43694852e-01 5.06372489e-01 5.42059244e-01
 5.78380044e-01 5.70930450e-01 5.78072612e-01 6.08231926e-01
 5.47353141e-01 5.36343873e-01 5.73082200e-01 5.93780910e-01
 5.05707466e-01 5.82701085e-01 5.91666402e-01 5.06010955e-01
 5.81765558e-01 5.21045537e-01 6.38688534e-01 6.13552716e-01
 5.25210829e-01 5.55495708e-01 5.02656754e-01 5.62613103e-01
 4.87282095e-01 5.83537276e-01 5.90273898e-01 5.78447818e-01
 5.23623521e-01 5.03559632e-01 5.23838655e-01 6.18778548e-01
 3.47817019e-01 3.68453219e-01 3.32520273e-01 3.61146570e-01
 3.09910193e-01 3.41138489e-01 3.36848823e-01 3.34932906e-01
 3.62165585e-01 3.44688050e-01 3.53370103e-01 3.42001309e-01
 3.44707631e-01 3.48087782e-01 3.32008759e-01 3.43045326e-01
 3.42113259e-01 3.68326976e-01 3.56722119e-01 3.81498351e-01
 3.37321433e-01 3.64561284e-01 3.32747550e-01 3.40781328e-01
 3.60323052e-01 3.29159811e-01 3.18969472e-01 3.21652528e-01
 3.53125140e-01 3.53406219e-01 3.58509438e-01 3.35590338e-01
 3.73313784e-01 3.55395837e-01 3.79426235e-01 3.53661747e-01
 3.34795916e-01 3.49426154e-01 3.09874777e-01 3.44974186e-01
 3.31885662e-01 3.61112944e-01 3.63052009e-01 3.55814925e-01
 3.54369439e-01 3.78666090e-01 3.62350370e-01 3.37843736e-01
 3.24076394e-01 3.37964658e-01 3.55855491e-01 3.09710368e-01
 3.79045015e-01 3.71884657e-01 3.34106065e-01 3.62772234e-01
 3.30388946e-01 3.37682137e-01 3.62713811e-01 3.33203877e-01
 3.20372985e-01 3.21781560e-01 3.57122561e-01 3.44405652e-01
 3.52071156e-01 3.05966620e-01 3.55711463e-01 3.48754528e-01
 1.52507650e+00 9.80927356e-04]
start cluster 11:13:18
0
parallel submitted
11:13:39
parallel finished
11:17:27
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:17:36
start mi0
11:17:36
start mi0 range(p) 1 loop
11:17:36
finish mi0 range(p) 1 loop
11:17:36
start mi0 range(p) 2 loop
11:17:36
finish mi0 range(p) 2 loop
11:17:36
start mi0 range(NT) loop
11:17:36
finish mi0 range(NT) loop
11:17:36
start mi0 range(n) loop
11:17:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:17:36
start mi0 range(n) 2loop
11:17:36
finish mi0 range(n) 2loop
11:17:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:17:36
start mi1 range(p) 1 loop
11:17:36
finish mi1 range(p) 1 loop
11:17:36
start mi1 range(p) 2 loop
11:17:36
finish mi1 range(p) 2 loop
11:17:36
start mi1 range(NT) loop
11:17:36
finish mi1 range(NT) loop
11:17:36
start mi1 range(n) loop
11:17:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:17:36
start mi1 range(n) 2loop
11:17:36
finish mi1 range(n) 2loop
11:17:36
start mi2
11:17:36
start mi2 range(p) 1 loop
11:17:36
finish mi2 range(p) 1 loop
11:17:36
start mi2 range(p) 2 loop
11:17:36
finish mi2 range(p) 2 loop
11:17:36
start mi2 range(NT) loop
11:17:36
finish mi2 range(NT) loop
11:17:36
start mi2 range(n) loop
11:17:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:17:36
start mi2 range(n) 2loop
11:17:36
finish mi2 range(n) 2loop
11:17:37
start mi3
11:17:37
start mi3 range(p) 1 loop
11:17:37
finish mi3 range(p) 1 loop
11:17:37
start mi3 range(p) 2 loop
11:17:37
finish mi3 range(p) 2 loop
11:17:37
start mi3 range(NT) loop
11:17:37
finish mi3 range(NT) loop
11:17:37
start mi3 range(n) loop
11:17:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:17:37
start mi3 range(n) 2loop
11:17:37
finish mi3 range(n) 2loop
11:17:37
[[-2.36156888]]
end mi3 loop
11:17:37
estep
11:17:37
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:17:52
start ppi1
11:17:52
start mi0
11:17:52
start mi0 range(p) 1 loop
11:17:52
finish mi0 range(p) 1 loop
11:17:52
start mi0 range(p) 2 loop
11:17:52
finish mi0 range(p) 2 loop
11:17:52
start mi0 range(NT) loop
11:17:52
finish mi0 range(NT) loop
11:17:52
start mi0 range(n) loop
11:17:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:17:52
start mi0 range(n) 2loop
11:17:52
finish mi0 range(n) 2loop
11:17:52
start mi1
11:17:52
start mi1 range(p) 1 loop
11:17:52
finish mi1 range(p) 1 loop
11:17:52
start mi1 range(p) 2 loop
11:17:52
finish mi1 range(p) 2 loop
11:17:52
start mi1 range(NT) loop
11:17:52
finish mi1 range(NT) loop
11:17:52
start mi1 range(n) loop
11:17:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:17:52
start mi1 range(n) 2loop
11:17:52
finish mi1 range(n) 2loop
11:17:52
start mi2
11:17:52
start mi2 range(p) 1 loop
11:17:52
finish mi2 range(p) 1 loop
11:17:52
start mi2 range(p) 2 loop
11:17:52
finish mi2 range(p) 2 loop
11:17:52
start mi2 range(NT) loop
11:17:52
finish mi2 range(NT) loop
11:17:52
start mi2 range(n) loop
11:17:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:17:52
start mi2 range(n) 2loop
11:17:52
finish mi2 range(n) 2loop
11:17:52
start mi3
11:17:52
start mi3 range(p) 1 loop
11:17:52
finish mi3 range(p) 1 loop
11:17:52
start mi3 range(p) 2 loop
11:17:52
finish mi3 range(p) 2 loop
11:17:52
start mi3 range(NT) loop
11:17:52
finish mi3 range(NT) loop
11:17:52
start mi3 range(n) loop
11:17:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:17:52
start mi3 range(n) 2loop
11:17:52
finish mi3 range(n) 2loop
11:17:53
[[-2.36156888]]
end mi3 loop
11:17:53
estep
11:17:53
end estep
11:18:08
end pa11:18:08
goodness of fit correlation [0.06789015]
start cluster 11:18:08
1
parallel submitted
11:18:29
parallel finished
11:21:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:22:00
start mi0
11:22:00
start mi0 range(p) 1 loop
11:22:00
finish mi0 range(p) 1 loop
11:22:00
start mi0 range(p) 2 loop
11:22:00
finish mi0 range(p) 2 loop
11:22:00
start mi0 range(NT) loop
11:22:00
finish mi0 range(NT) loop
11:22:00
start mi0 range(n) loop
11:22:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:22:00
start mi0 range(n) 2loop
11:22:00
finish mi0 range(n) 2loop
11:22:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:22:00
start mi1 range(p) 1 loop
11:22:00
finish mi1 range(p) 1 loop
11:22:00
start mi1 range(p) 2 loop
11:22:00
finish mi1 range(p) 2 loop
11:22:00
start mi1 range(NT) loop
11:22:00
finish mi1 range(NT) loop
11:22:00
start mi1 range(n) loop
11:22:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:22:00
start mi1 range(n) 2loop
11:22:00
finish mi1 range(n) 2loop
11:22:00
start mi2
11:22:00
start mi2 range(p) 1 loop
11:22:00
finish mi2 range(p) 1 loop
11:22:00
start mi2 range(p) 2 loop
11:22:00
finish mi2 range(p) 2 loop
11:22:00
start mi2 range(NT) loop
11:22:00
finish mi2 range(NT) loop
11:22:00
start mi2 range(n) loop
11:22:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:22:01
start mi2 range(n) 2loop
11:22:01
finish mi2 range(n) 2loop
11:22:01
start mi3
11:22:01
start mi3 range(p) 1 loop
11:22:01
finish mi3 range(p) 1 loop
11:22:01
start mi3 range(p) 2 loop
11:22:01
finish mi3 range(p) 2 loop
11:22:01
start mi3 range(NT) loop
11:22:01
finish mi3 range(NT) loop
11:22:01
start mi3 range(n) loop
11:22:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:22:01
start mi3 range(n) 2loop
11:22:01
finish mi3 range(n) 2loop
11:22:01
[[-2.36864703]]
end mi3 loop
11:22:01
estep
11:22:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:22:16
start ppi1
11:22:16
start mi0
11:22:16
start mi0 range(p) 1 loop
11:22:16
finish mi0 range(p) 1 loop
11:22:16
start mi0 range(p) 2 loop
11:22:16
finish mi0 range(p) 2 loop
11:22:16
start mi0 range(NT) loop
11:22:16
finish mi0 range(NT) loop
11:22:16
start mi0 range(n) loop
11:22:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:22:16
start mi0 range(n) 2loop
11:22:16
finish mi0 range(n) 2loop
11:22:16
start mi1
11:22:16
start mi1 range(p) 1 loop
11:22:16
finish mi1 range(p) 1 loop
11:22:16
start mi1 range(p) 2 loop
11:22:16
finish mi1 range(p) 2 loop
11:22:16
start mi1 range(NT) loop
11:22:16
finish mi1 range(NT) loop
11:22:16
start mi1 range(n) loop
11:22:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:22:16
start mi1 range(n) 2loop
11:22:16
finish mi1 range(n) 2loop
11:22:16
start mi2
11:22:16
start mi2 range(p) 1 loop
11:22:16
finish mi2 range(p) 1 loop
11:22:16
start mi2 range(p) 2 loop
11:22:16
finish mi2 range(p) 2 loop
11:22:16
start mi2 range(NT) loop
11:22:16
finish mi2 range(NT) loop
11:22:16
start mi2 range(n) loop
11:22:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:22:16
start mi2 range(n) 2loop
11:22:16
finish mi2 range(n) 2loop
11:22:17
start mi3
11:22:17
start mi3 range(p) 1 loop
11:22:17
finish mi3 range(p) 1 loop
11:22:17
start mi3 range(p) 2 loop
11:22:17
finish mi3 range(p) 2 loop
11:22:17
start mi3 range(NT) loop
11:22:17
finish mi3 range(NT) loop
11:22:17
start mi3 range(n) loop
11:22:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:22:17
start mi3 range(n) 2loop
11:22:17
finish mi3 range(n) 2loop
11:22:17
[[-2.43113914]]
end mi3 loop
11:22:17
estep
11:22:17
end estep
11:22:32
end pa11:22:32
goodness of fit correlation [0.18197374]
start cluster 11:22:32
2
parallel submitted
11:22:53
parallel finished
11:26:22
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:26:32
start mi0
11:26:32
start mi0 range(p) 1 loop
11:26:32
finish mi0 range(p) 1 loop
11:26:32
start mi0 range(p) 2 loop
11:26:32
finish mi0 range(p) 2 loop
11:26:32
start mi0 range(NT) loop
11:26:32
finish mi0 range(NT) loop
11:26:32
start mi0 range(n) loop
11:26:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:26:32
start mi0 range(n) 2loop
11:26:32
finish mi0 range(n) 2loop
11:26:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:26:32
start mi1 range(p) 1 loop
11:26:32
finish mi1 range(p) 1 loop
11:26:32
start mi1 range(p) 2 loop
11:26:32
finish mi1 range(p) 2 loop
11:26:32
start mi1 range(NT) loop
11:26:32
finish mi1 range(NT) loop
11:26:33
start mi1 range(n) loop
11:26:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:26:33
start mi1 range(n) 2loop
11:26:33
finish mi1 range(n) 2loop
11:26:33
start mi2
11:26:33
start mi2 range(p) 1 loop
11:26:33
finish mi2 range(p) 1 loop
11:26:33
start mi2 range(p) 2 loop
11:26:33
finish mi2 range(p) 2 loop
11:26:33
start mi2 range(NT) loop
11:26:33
finish mi2 range(NT) loop
11:26:33
start mi2 range(n) loop
11:26:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:26:33
start mi2 range(n) 2loop
11:26:33
finish mi2 range(n) 2loop
11:26:33
start mi3
11:26:33
start mi3 range(p) 1 loop
11:26:33
finish mi3 range(p) 1 loop
11:26:33
start mi3 range(p) 2 loop
11:26:33
finish mi3 range(p) 2 loop
11:26:33
start mi3 range(NT) loop
11:26:33
finish mi3 range(NT) loop
11:26:33
start mi3 range(n) loop
11:26:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:26:33
start mi3 range(n) 2loop
11:26:33
finish mi3 range(n) 2loop
11:26:33
[[-2.41973467]]
end mi3 loop
11:26:33
estep
11:26:33
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:26:48
start ppi1
11:26:48
start mi0
11:26:48
start mi0 range(p) 1 loop
11:26:48
finish mi0 range(p) 1 loop
11:26:48
start mi0 range(p) 2 loop
11:26:48
finish mi0 range(p) 2 loop
11:26:48
start mi0 range(NT) loop
11:26:48
finish mi0 range(NT) loop
11:26:48
start mi0 range(n) loop
11:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:26:48
start mi0 range(n) 2loop
11:26:48
finish mi0 range(n) 2loop
11:26:48
start mi1
11:26:48
start mi1 range(p) 1 loop
11:26:48
finish mi1 range(p) 1 loop
11:26:48
start mi1 range(p) 2 loop
11:26:48
finish mi1 range(p) 2 loop
11:26:48
start mi1 range(NT) loop
11:26:48
finish mi1 range(NT) loop
11:26:48
start mi1 range(n) loop
11:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:26:48
start mi1 range(n) 2loop
11:26:48
finish mi1 range(n) 2loop
11:26:48
start mi2
11:26:48
start mi2 range(p) 1 loop
11:26:48
finish mi2 range(p) 1 loop
11:26:48
start mi2 range(p) 2 loop
11:26:48
finish mi2 range(p) 2 loop
11:26:48
start mi2 range(NT) loop
11:26:48
finish mi2 range(NT) loop
11:26:49
start mi2 range(n) loop
11:26:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:26:49
start mi2 range(n) 2loop
11:26:49
finish mi2 range(n) 2loop
11:26:49
start mi3
11:26:49
start mi3 range(p) 1 loop
11:26:49
finish mi3 range(p) 1 loop
11:26:49
start mi3 range(p) 2 loop
11:26:49
finish mi3 range(p) 2 loop
11:26:49
start mi3 range(NT) loop
11:26:49
finish mi3 range(NT) loop
11:26:49
start mi3 range(n) loop
11:26:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:26:49
start mi3 range(n) 2loop
11:26:49
finish mi3 range(n) 2loop
11:26:49
[[-2.48222672]]
end mi3 loop
11:26:49
estep
11:26:49
end estep
11:27:04
end pa11:27:04
goodness of fit correlation [0.25085524]
start cluster 11:27:04
3
parallel submitted
11:27:25
parallel finished
11:30:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:30:53
start mi0
11:30:53
start mi0 range(p) 1 loop
11:30:53
finish mi0 range(p) 1 loop
11:30:53
start mi0 range(p) 2 loop
11:30:53
finish mi0 range(p) 2 loop
11:30:53
start mi0 range(NT) loop
11:30:53
finish mi0 range(NT) loop
11:30:53
start mi0 range(n) loop
11:30:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:30:53
start mi0 range(n) 2loop
11:30:53
finish mi0 range(n) 2loop
11:30:53
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:30:53
start mi1 range(p) 1 loop
11:30:53
finish mi1 range(p) 1 loop
11:30:53
start mi1 range(p) 2 loop
11:30:53
finish mi1 range(p) 2 loop
11:30:53
start mi1 range(NT) loop
11:30:53
finish mi1 range(NT) loop
11:30:53
start mi1 range(n) loop
11:30:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:30:54
start mi1 range(n) 2loop
11:30:54
finish mi1 range(n) 2loop
11:30:54
start mi2
11:30:54
start mi2 range(p) 1 loop
11:30:54
finish mi2 range(p) 1 loop
11:30:54
start mi2 range(p) 2 loop
11:30:54
finish mi2 range(p) 2 loop
11:30:54
start mi2 range(NT) loop
11:30:54
finish mi2 range(NT) loop
11:30:54
start mi2 range(n) loop
11:30:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:30:54
start mi2 range(n) 2loop
11:30:54
finish mi2 range(n) 2loop
11:30:54
start mi3
11:30:54
start mi3 range(p) 1 loop
11:30:54
finish mi3 range(p) 1 loop
11:30:54
start mi3 range(p) 2 loop
11:30:54
finish mi3 range(p) 2 loop
11:30:54
start mi3 range(NT) loop
11:30:54
finish mi3 range(NT) loop
11:30:54
start mi3 range(n) loop
11:30:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:30:54
start mi3 range(n) 2loop
11:30:54
finish mi3 range(n) 2loop
11:30:54
[[-2.45027525]]
end mi3 loop
11:30:54
estep
11:30:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:31:09
start ppi1
11:31:09
start mi0
11:31:09
start mi0 range(p) 1 loop
11:31:09
finish mi0 range(p) 1 loop
11:31:09
start mi0 range(p) 2 loop
11:31:09
finish mi0 range(p) 2 loop
11:31:09
start mi0 range(NT) loop
11:31:09
finish mi0 range(NT) loop
11:31:09
start mi0 range(n) loop
11:31:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:31:09
start mi0 range(n) 2loop
11:31:09
finish mi0 range(n) 2loop
11:31:09
start mi1
11:31:09
start mi1 range(p) 1 loop
11:31:09
finish mi1 range(p) 1 loop
11:31:09
start mi1 range(p) 2 loop
11:31:09
finish mi1 range(p) 2 loop
11:31:09
start mi1 range(NT) loop
11:31:09
finish mi1 range(NT) loop
11:31:09
start mi1 range(n) loop
11:31:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:31:09
start mi1 range(n) 2loop
11:31:09
finish mi1 range(n) 2loop
11:31:09
start mi2
11:31:09
start mi2 range(p) 1 loop
11:31:09
finish mi2 range(p) 1 loop
11:31:09
start mi2 range(p) 2 loop
11:31:09
finish mi2 range(p) 2 loop
11:31:09
start mi2 range(NT) loop
11:31:10
finish mi2 range(NT) loop
11:31:10
start mi2 range(n) loop
11:31:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:31:10
start mi2 range(n) 2loop
11:31:10
finish mi2 range(n) 2loop
11:31:10
[[-2.51272294]]
end mi2 loop
11:31:10
estep
11:31:10
end estep
11:31:25
end pa11:31:25
goodness of fit correlation [0.18575572]
start cluster 11:31:25
4
parallel submitted
11:31:46
parallel finished
11:35:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:35:26
start mi0
11:35:26
start mi0 range(p) 1 loop
11:35:26
finish mi0 range(p) 1 loop
11:35:26
start mi0 range(p) 2 loop
11:35:26
finish mi0 range(p) 2 loop
11:35:26
start mi0 range(NT) loop
11:35:26
finish mi0 range(NT) loop
11:35:26
start mi0 range(n) loop
11:35:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:35:26
start mi0 range(n) 2loop
11:35:26
finish mi0 range(n) 2loop
11:35:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:35:26
start mi1 range(p) 1 loop
11:35:26
finish mi1 range(p) 1 loop
11:35:26
start mi1 range(p) 2 loop
11:35:26
finish mi1 range(p) 2 loop
11:35:26
start mi1 range(NT) loop
11:35:26
finish mi1 range(NT) loop
11:35:26
start mi1 range(n) loop
11:35:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:35:26
start mi1 range(n) 2loop
11:35:26
finish mi1 range(n) 2loop
11:35:26
start mi2
11:35:26
start mi2 range(p) 1 loop
11:35:26
finish mi2 range(p) 1 loop
11:35:26
start mi2 range(p) 2 loop
11:35:26
finish mi2 range(p) 2 loop
11:35:26
start mi2 range(NT) loop
11:35:27
finish mi2 range(NT) loop
11:35:27
start mi2 range(n) loop
11:35:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:35:27
start mi2 range(n) 2loop
11:35:27
finish mi2 range(n) 2loop
11:35:27
start mi3
11:35:27
start mi3 range(p) 1 loop
11:35:27
finish mi3 range(p) 1 loop
11:35:27
start mi3 range(p) 2 loop
11:35:27
finish mi3 range(p) 2 loop
11:35:27
start mi3 range(NT) loop
11:35:27
finish mi3 range(NT) loop
11:35:27
start mi3 range(n) loop
11:35:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:35:27
start mi3 range(n) 2loop
11:35:27
finish mi3 range(n) 2loop
11:35:27
[[-2.4499474]]
end mi3 loop
11:35:27
estep
11:35:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:35:42
start ppi1
11:35:42
start mi0
11:35:42
start mi0 range(p) 1 loop
11:35:42
finish mi0 range(p) 1 loop
11:35:42
start mi0 range(p) 2 loop
11:35:42
finish mi0 range(p) 2 loop
11:35:42
start mi0 range(NT) loop
11:35:42
finish mi0 range(NT) loop
11:35:42
start mi0 range(n) loop
11:35:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:35:42
start mi0 range(n) 2loop
11:35:42
finish mi0 range(n) 2loop
11:35:42
start mi1
11:35:42
start mi1 range(p) 1 loop
11:35:42
finish mi1 range(p) 1 loop
11:35:42
start mi1 range(p) 2 loop
11:35:42
finish mi1 range(p) 2 loop
11:35:42
start mi1 range(NT) loop
11:35:42
finish mi1 range(NT) loop
11:35:42
start mi1 range(n) loop
11:35:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:35:42
start mi1 range(n) 2loop
11:35:42
finish mi1 range(n) 2loop
11:35:42
start mi2
11:35:42
start mi2 range(p) 1 loop
11:35:42
finish mi2 range(p) 1 loop
11:35:42
start mi2 range(p) 2 loop
11:35:42
finish mi2 range(p) 2 loop
11:35:42
start mi2 range(NT) loop
11:35:42
finish mi2 range(NT) loop
11:35:42
start mi2 range(n) loop
11:35:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:35:42
start mi2 range(n) 2loop
11:35:42
finish mi2 range(n) 2loop
11:35:43
[[-2.51239484]]
end mi2 loop
11:35:43
estep
11:35:43
end estep
11:35:58
end pa11:35:58
goodness of fit correlation [0.12550074]
start cluster 11:35:58
5
parallel submitted
11:36:20
parallel finished
11:39:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:39:56
start mi0
11:39:56
start mi0 range(p) 1 loop
11:39:56
finish mi0 range(p) 1 loop
11:39:56
start mi0 range(p) 2 loop
11:39:56
finish mi0 range(p) 2 loop
11:39:56
start mi0 range(NT) loop
11:39:56
finish mi0 range(NT) loop
11:39:56
start mi0 range(n) loop
11:39:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:39:56
start mi0 range(n) 2loop
11:39:56
finish mi0 range(n) 2loop
11:39:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:39:56
start mi1 range(p) 1 loop
11:39:56
finish mi1 range(p) 1 loop
11:39:56
start mi1 range(p) 2 loop
11:39:56
finish mi1 range(p) 2 loop
11:39:56
start mi1 range(NT) loop
11:39:56
finish mi1 range(NT) loop
11:39:56
start mi1 range(n) loop
11:39:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:39:56
start mi1 range(n) 2loop
11:39:56
finish mi1 range(n) 2loop
11:39:56
start mi2
11:39:56
start mi2 range(p) 1 loop
11:39:56
finish mi2 range(p) 1 loop
11:39:56
start mi2 range(p) 2 loop
11:39:57
finish mi2 range(p) 2 loop
11:39:57
start mi2 range(NT) loop
11:39:57
finish mi2 range(NT) loop
11:39:57
start mi2 range(n) loop
11:39:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:39:57
start mi2 range(n) 2loop
11:39:57
finish mi2 range(n) 2loop
11:39:57
start mi3
11:39:57
start mi3 range(p) 1 loop
11:39:57
finish mi3 range(p) 1 loop
11:39:57
start mi3 range(p) 2 loop
11:39:57
finish mi3 range(p) 2 loop
11:39:57
start mi3 range(NT) loop
11:39:57
finish mi3 range(NT) loop
11:39:57
start mi3 range(n) loop
11:39:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:39:57
start mi3 range(n) 2loop
11:39:57
finish mi3 range(n) 2loop
11:39:57
[[-2.40528972]]
end mi3 loop
11:39:57
estep
11:39:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:40:12
start ppi1
11:40:12
start mi0
11:40:12
start mi0 range(p) 1 loop
11:40:12
finish mi0 range(p) 1 loop
11:40:12
start mi0 range(p) 2 loop
11:40:12
finish mi0 range(p) 2 loop
11:40:12
start mi0 range(NT) loop
11:40:12
finish mi0 range(NT) loop
11:40:12
start mi0 range(n) loop
11:40:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:40:12
start mi0 range(n) 2loop
11:40:12
finish mi0 range(n) 2loop
11:40:12
start mi1
11:40:12
start mi1 range(p) 1 loop
11:40:12
finish mi1 range(p) 1 loop
11:40:12
start mi1 range(p) 2 loop
11:40:12
finish mi1 range(p) 2 loop
11:40:12
start mi1 range(NT) loop
11:40:12
finish mi1 range(NT) loop
11:40:12
start mi1 range(n) loop
11:40:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:40:12
start mi1 range(n) 2loop
11:40:12
finish mi1 range(n) 2loop
11:40:12
start mi2
11:40:12
start mi2 range(p) 1 loop
11:40:12
finish mi2 range(p) 1 loop
11:40:12
start mi2 range(p) 2 loop
11:40:12
finish mi2 range(p) 2 loop
11:40:12
start mi2 range(NT) loop
11:40:12
finish mi2 range(NT) loop
11:40:12
start mi2 range(n) loop
11:40:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:40:12
start mi2 range(n) 2loop
11:40:12
finish mi2 range(n) 2loop
11:40:12
start mi3
11:40:12
start mi3 range(p) 1 loop
11:40:12
finish mi3 range(p) 1 loop
11:40:12
start mi3 range(p) 2 loop
11:40:12
finish mi3 range(p) 2 loop
11:40:12
start mi3 range(NT) loop
11:40:13
finish mi3 range(NT) loop
11:40:13
start mi3 range(n) loop
11:40:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:40:13
start mi3 range(n) 2loop
11:40:13
finish mi3 range(n) 2loop
11:40:13
[[-2.46778178]]
end mi3 loop
11:40:13
estep
11:40:13
end estep
11:40:28
end pa11:40:28
goodness of fit correlation [0.15939342]
start cluster 11:40:28
6
parallel submitted
11:40:51
parallel finished
11:44:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:44:26
start mi0
11:44:26
start mi0 range(p) 1 loop
11:44:26
finish mi0 range(p) 1 loop
11:44:26
start mi0 range(p) 2 loop
11:44:26
finish mi0 range(p) 2 loop
11:44:26
start mi0 range(NT) loop
11:44:26
finish mi0 range(NT) loop
11:44:26
start mi0 range(n) loop
11:44:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:44:26
start mi0 range(n) 2loop
11:44:26
finish mi0 range(n) 2loop
11:44:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:44:26
start mi1 range(p) 1 loop
11:44:26
finish mi1 range(p) 1 loop
11:44:26
start mi1 range(p) 2 loop
11:44:26
finish mi1 range(p) 2 loop
11:44:26
start mi1 range(NT) loop
11:44:26
finish mi1 range(NT) loop
11:44:26
start mi1 range(n) loop
11:44:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:44:27
start mi1 range(n) 2loop
11:44:27
finish mi1 range(n) 2loop
11:44:27
start mi2
11:44:27
start mi2 range(p) 1 loop
11:44:27
finish mi2 range(p) 1 loop
11:44:27
start mi2 range(p) 2 loop
11:44:27
finish mi2 range(p) 2 loop
11:44:27
start mi2 range(NT) loop
11:44:27
finish mi2 range(NT) loop
11:44:27
start mi2 range(n) loop
11:44:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:44:27
start mi2 range(n) 2loop
11:44:27
finish mi2 range(n) 2loop
11:44:27
start mi3
11:44:27
start mi3 range(p) 1 loop
11:44:27
finish mi3 range(p) 1 loop
11:44:27
start mi3 range(p) 2 loop
11:44:27
finish mi3 range(p) 2 loop
11:44:27
start mi3 range(NT) loop
11:44:27
finish mi3 range(NT) loop
11:44:27
start mi3 range(n) loop
11:44:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:44:27
start mi3 range(n) 2loop
11:44:27
finish mi3 range(n) 2loop
11:44:27
[[-2.44672678]]
end mi3 loop
11:44:27
estep
11:44:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:44:44
start ppi1
11:44:44
start mi0
11:44:44
start mi0 range(p) 1 loop
11:44:44
finish mi0 range(p) 1 loop
11:44:44
start mi0 range(p) 2 loop
11:44:44
finish mi0 range(p) 2 loop
11:44:44
start mi0 range(NT) loop
11:44:44
finish mi0 range(NT) loop
11:44:44
start mi0 range(n) loop
11:44:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:44:44
start mi0 range(n) 2loop
11:44:44
finish mi0 range(n) 2loop
11:44:44
start mi1
11:44:44
start mi1 range(p) 1 loop
11:44:44
finish mi1 range(p) 1 loop
11:44:44
start mi1 range(p) 2 loop
11:44:44
finish mi1 range(p) 2 loop
11:44:44
start mi1 range(NT) loop
11:44:44
finish mi1 range(NT) loop
11:44:44
start mi1 range(n) loop
11:44:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:44:44
start mi1 range(n) 2loop
11:44:44
finish mi1 range(n) 2loop
11:44:44
start mi2
11:44:44
start mi2 range(p) 1 loop
11:44:44
finish mi2 range(p) 1 loop
11:44:44
start mi2 range(p) 2 loop
11:44:44
finish mi2 range(p) 2 loop
11:44:44
start mi2 range(NT) loop
11:44:44
finish mi2 range(NT) loop
11:44:44
start mi2 range(n) loop
11:44:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:44:44
start mi2 range(n) 2loop
11:44:44
finish mi2 range(n) 2loop
11:44:44
[[-2.50917166]]
end mi2 loop
11:44:45
estep
11:44:45
end estep
11:45:01
end pa11:45:01
goodness of fit correlation [0.27691819]
start cluster 11:45:01
7
parallel submitted
11:45:22
parallel finished
11:49:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:49:56
start mi0
11:49:56
start mi0 range(p) 1 loop
11:49:56
finish mi0 range(p) 1 loop
11:49:56
start mi0 range(p) 2 loop
11:49:56
finish mi0 range(p) 2 loop
11:49:56
start mi0 range(NT) loop
11:49:56
finish mi0 range(NT) loop
11:49:56
start mi0 range(n) loop
11:49:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:49:56
start mi0 range(n) 2loop
11:49:56
finish mi0 range(n) 2loop
11:49:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:49:56
start mi1 range(p) 1 loop
11:49:56
finish mi1 range(p) 1 loop
11:49:56
start mi1 range(p) 2 loop
11:49:56
finish mi1 range(p) 2 loop
11:49:56
start mi1 range(NT) loop
11:49:56
finish mi1 range(NT) loop
11:49:56
start mi1 range(n) loop
11:49:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:49:56
start mi1 range(n) 2loop
11:49:56
finish mi1 range(n) 2loop
11:49:56
start mi2
11:49:56
start mi2 range(p) 1 loop
11:49:56
finish mi2 range(p) 1 loop
11:49:56
start mi2 range(p) 2 loop
11:49:56
finish mi2 range(p) 2 loop
11:49:56
start mi2 range(NT) loop
11:49:57
finish mi2 range(NT) loop
11:49:57
start mi2 range(n) loop
11:49:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:49:57
start mi2 range(n) 2loop
11:49:57
finish mi2 range(n) 2loop
11:49:57
start mi3
11:49:57
start mi3 range(p) 1 loop
11:49:57
finish mi3 range(p) 1 loop
11:49:57
start mi3 range(p) 2 loop
11:49:57
finish mi3 range(p) 2 loop
11:49:57
start mi3 range(NT) loop
11:49:57
finish mi3 range(NT) loop
11:49:57
start mi3 range(n) loop
11:49:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:49:57
start mi3 range(n) 2loop
11:49:57
finish mi3 range(n) 2loop
11:49:57
[[-2.46493848]]
end mi3 loop
11:49:57
estep
11:49:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:50:13
start ppi1
11:50:13
start mi0
11:50:13
start mi0 range(p) 1 loop
11:50:13
finish mi0 range(p) 1 loop
11:50:13
start mi0 range(p) 2 loop
11:50:13
finish mi0 range(p) 2 loop
11:50:13
start mi0 range(NT) loop
11:50:13
finish mi0 range(NT) loop
11:50:13
start mi0 range(n) loop
11:50:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:50:13
start mi0 range(n) 2loop
11:50:13
finish mi0 range(n) 2loop
11:50:14
start mi1
11:50:14
start mi1 range(p) 1 loop
11:50:14
finish mi1 range(p) 1 loop
11:50:14
start mi1 range(p) 2 loop
11:50:14
finish mi1 range(p) 2 loop
11:50:14
start mi1 range(NT) loop
11:50:14
finish mi1 range(NT) loop
11:50:14
start mi1 range(n) loop
11:50:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:50:14
start mi1 range(n) 2loop
11:50:14
finish mi1 range(n) 2loop
11:50:14
start mi2
11:50:14
start mi2 range(p) 1 loop
11:50:14
finish mi2 range(p) 1 loop
11:50:14
start mi2 range(p) 2 loop
11:50:14
finish mi2 range(p) 2 loop
11:50:14
start mi2 range(NT) loop
11:50:14
finish mi2 range(NT) loop
11:50:14
start mi2 range(n) loop
11:50:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:50:14
start mi2 range(n) 2loop
11:50:14
finish mi2 range(n) 2loop
11:50:14
[[-2.5273963]]
end mi2 loop
11:50:14
estep
11:50:14
end estep
11:50:31
end pa11:50:31
goodness of fit correlation [0.27681756]
start cluster 11:50:31
8
parallel submitted
11:50:53
parallel finished
11:53:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:53:27
start mi0
11:53:27
start mi0 range(p) 1 loop
11:53:27
finish mi0 range(p) 1 loop
11:53:27
start mi0 range(p) 2 loop
11:53:27
finish mi0 range(p) 2 loop
11:53:27
start mi0 range(NT) loop
11:53:28
finish mi0 range(NT) loop
11:53:28
start mi0 range(n) loop
11:53:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:53:28
start mi0 range(n) 2loop
11:53:28
finish mi0 range(n) 2loop
11:53:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:53:28
start mi1 range(p) 1 loop
11:53:28
finish mi1 range(p) 1 loop
11:53:28
start mi1 range(p) 2 loop
11:53:28
finish mi1 range(p) 2 loop
11:53:28
start mi1 range(NT) loop
11:53:28
finish mi1 range(NT) loop
11:53:28
start mi1 range(n) loop
11:53:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:53:28
start mi1 range(n) 2loop
11:53:28
finish mi1 range(n) 2loop
11:53:28
start mi2
11:53:28
start mi2 range(p) 1 loop
11:53:28
finish mi2 range(p) 1 loop
11:53:28
start mi2 range(p) 2 loop
11:53:28
finish mi2 range(p) 2 loop
11:53:28
start mi2 range(NT) loop
11:53:28
finish mi2 range(NT) loop
11:53:28
start mi2 range(n) loop
11:53:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:53:28
start mi2 range(n) 2loop
11:53:28
finish mi2 range(n) 2loop
11:53:28
[[-2.54001548]]
end mi2 loop
11:53:28
estep
11:53:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:53:43
start ppi1
11:53:43
start mi0
11:53:43
start mi0 range(p) 1 loop
11:53:43
finish mi0 range(p) 1 loop
11:53:43
start mi0 range(p) 2 loop
11:53:43
finish mi0 range(p) 2 loop
11:53:43
start mi0 range(NT) loop
11:53:43
finish mi0 range(NT) loop
11:53:43
start mi0 range(n) loop
11:53:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:53:43
start mi0 range(n) 2loop
11:53:43
finish mi0 range(n) 2loop
11:53:43
start mi1
11:53:43
start mi1 range(p) 1 loop
11:53:43
finish mi1 range(p) 1 loop
11:53:43
start mi1 range(p) 2 loop
11:53:43
finish mi1 range(p) 2 loop
11:53:43
start mi1 range(NT) loop
11:53:43
finish mi1 range(NT) loop
11:53:44
start mi1 range(n) loop
11:53:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:53:44
start mi1 range(n) 2loop
11:53:44
finish mi1 range(n) 2loop
11:53:44
start mi2
11:53:44
start mi2 range(p) 1 loop
11:53:44
finish mi2 range(p) 1 loop
11:53:44
start mi2 range(p) 2 loop
11:53:44
finish mi2 range(p) 2 loop
11:53:44
start mi2 range(NT) loop
11:53:44
finish mi2 range(NT) loop
11:53:44
start mi2 range(n) loop
11:53:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:53:44
start mi2 range(n) 2loop
11:53:44
finish mi2 range(n) 2loop
11:53:44
[[-2.6025268]]
end mi2 loop
11:53:44
estep
11:53:44
end estep
11:54:00
end pa11:54:00
goodness of fit correlation [0.26943748]
start cluster 11:54:00
9
parallel submitted
11:54:22
parallel finished
11:57:26
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:57:37
start mi0
11:57:37
start mi0 range(p) 1 loop
11:57:37
finish mi0 range(p) 1 loop
11:57:37
start mi0 range(p) 2 loop
11:57:37
finish mi0 range(p) 2 loop
11:57:37
start mi0 range(NT) loop
11:57:37
finish mi0 range(NT) loop
11:57:37
start mi0 range(n) loop
11:57:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:57:37
start mi0 range(n) 2loop
11:57:37
finish mi0 range(n) 2loop
11:57:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:57:37
start mi1 range(p) 1 loop
11:57:37
finish mi1 range(p) 1 loop
11:57:37
start mi1 range(p) 2 loop
11:57:37
finish mi1 range(p) 2 loop
11:57:37
start mi1 range(NT) loop
11:57:37
finish mi1 range(NT) loop
11:57:37
start mi1 range(n) loop
11:57:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:57:37
start mi1 range(n) 2loop
11:57:37
finish mi1 range(n) 2loop
11:57:37
start mi2
11:57:37
start mi2 range(p) 1 loop
11:57:37
finish mi2 range(p) 1 loop
11:57:37
start mi2 range(p) 2 loop
11:57:37
finish mi2 range(p) 2 loop
11:57:37
start mi2 range(NT) loop
11:57:37
finish mi2 range(NT) loop
11:57:37
start mi2 range(n) loop
11:57:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:57:37
start mi2 range(n) 2loop
11:57:37
finish mi2 range(n) 2loop
11:57:38
[[-2.50693155]]
end mi2 loop
11:57:38
estep
11:57:38
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:57:52
start ppi1
11:57:52
start mi0
11:57:52
start mi0 range(p) 1 loop
11:57:52
finish mi0 range(p) 1 loop
11:57:52
start mi0 range(p) 2 loop
11:57:52
finish mi0 range(p) 2 loop
11:57:52
start mi0 range(NT) loop
11:57:52
finish mi0 range(NT) loop
11:57:52
start mi0 range(n) loop
11:57:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:57:52
start mi0 range(n) 2loop
11:57:52
finish mi0 range(n) 2loop
11:57:53
start mi1
11:57:53
start mi1 range(p) 1 loop
11:57:53
finish mi1 range(p) 1 loop
11:57:53
start mi1 range(p) 2 loop
11:57:53
finish mi1 range(p) 2 loop
11:57:53
start mi1 range(NT) loop
11:57:53
finish mi1 range(NT) loop
11:57:53
start mi1 range(n) loop
11:57:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:57:53
start mi1 range(n) 2loop
11:57:53
finish mi1 range(n) 2loop
11:57:53
start mi2
11:57:53
start mi2 range(p) 1 loop
11:57:53
finish mi2 range(p) 1 loop
11:57:53
start mi2 range(p) 2 loop
11:57:53
finish mi2 range(p) 2 loop
11:57:53
start mi2 range(NT) loop
11:57:53
finish mi2 range(NT) loop
11:57:53
start mi2 range(n) loop
11:57:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:57:53
start mi2 range(n) 2loop
11:57:53
finish mi2 range(n) 2loop
11:57:53
[[-2.56945707]]
end mi2 loop
11:57:53
estep
11:57:53
end estep
11:58:09
end pa11:58:09
goodness of fit correlation [0.20610671]
start cluster 11:58:09
10
parallel submitted
11:58:31
parallel finished
12:01:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:02:09
start mi0
12:02:09
start mi0 range(p) 1 loop
12:02:09
finish mi0 range(p) 1 loop
12:02:09
start mi0 range(p) 2 loop
12:02:09
finish mi0 range(p) 2 loop
12:02:09
start mi0 range(NT) loop
12:02:09
finish mi0 range(NT) loop
12:02:09
start mi0 range(n) loop
12:02:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:02:09
start mi0 range(n) 2loop
12:02:09
finish mi0 range(n) 2loop
12:02:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:02:10
start mi1 range(p) 1 loop
12:02:10
finish mi1 range(p) 1 loop
12:02:10
start mi1 range(p) 2 loop
12:02:10
finish mi1 range(p) 2 loop
12:02:10
start mi1 range(NT) loop
12:02:10
finish mi1 range(NT) loop
12:02:10
start mi1 range(n) loop
12:02:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:02:10
start mi1 range(n) 2loop
12:02:10
finish mi1 range(n) 2loop
12:02:10
start mi2
12:02:10
start mi2 range(p) 1 loop
12:02:10
finish mi2 range(p) 1 loop
12:02:10
start mi2 range(p) 2 loop
12:02:10
finish mi2 range(p) 2 loop
12:02:10
start mi2 range(NT) loop
12:02:10
finish mi2 range(NT) loop
12:02:10
start mi2 range(n) loop
12:02:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:02:10
start mi2 range(n) 2loop
12:02:10
finish mi2 range(n) 2loop
12:02:10
start mi3
12:02:10
start mi3 range(p) 1 loop
12:02:10
finish mi3 range(p) 1 loop
12:02:10
start mi3 range(p) 2 loop
12:02:10
finish mi3 range(p) 2 loop
12:02:10
start mi3 range(NT) loop
12:02:10
finish mi3 range(NT) loop
12:02:10
start mi3 range(n) loop
12:02:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:02:10
start mi3 range(n) 2loop
12:02:10
finish mi3 range(n) 2loop
12:02:10
[[-2.44027043]]
end mi3 loop
12:02:10
estep
12:02:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:02:25
start ppi1
12:02:25
start mi0
12:02:25
start mi0 range(p) 1 loop
12:02:25
finish mi0 range(p) 1 loop
12:02:25
start mi0 range(p) 2 loop
12:02:25
finish mi0 range(p) 2 loop
12:02:25
start mi0 range(NT) loop
12:02:25
finish mi0 range(NT) loop
12:02:25
start mi0 range(n) loop
12:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:02:25
start mi0 range(n) 2loop
12:02:25
finish mi0 range(n) 2loop
12:02:25
start mi1
12:02:25
start mi1 range(p) 1 loop
12:02:25
finish mi1 range(p) 1 loop
12:02:25
start mi1 range(p) 2 loop
12:02:25
finish mi1 range(p) 2 loop
12:02:25
start mi1 range(NT) loop
12:02:25
finish mi1 range(NT) loop
12:02:25
start mi1 range(n) loop
12:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:02:26
start mi1 range(n) 2loop
12:02:26
finish mi1 range(n) 2loop
12:02:26
start mi2
12:02:26
start mi2 range(p) 1 loop
12:02:26
finish mi2 range(p) 1 loop
12:02:26
start mi2 range(p) 2 loop
12:02:26
finish mi2 range(p) 2 loop
12:02:26
start mi2 range(NT) loop
12:02:26
finish mi2 range(NT) loop
12:02:26
start mi2 range(n) loop
12:02:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:02:26
start mi2 range(n) 2loop
12:02:26
finish mi2 range(n) 2loop
12:02:26
start mi3
12:02:26
start mi3 range(p) 1 loop
12:02:26
finish mi3 range(p) 1 loop
12:02:26
start mi3 range(p) 2 loop
12:02:26
finish mi3 range(p) 2 loop
12:02:26
start mi3 range(NT) loop
12:02:26
finish mi3 range(NT) loop
12:02:26
start mi3 range(n) loop
12:02:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:02:26
start mi3 range(n) 2loop
12:02:26
finish mi3 range(n) 2loop
12:02:26
[[-2.50276247]]
end mi3 loop
12:02:26
estep
12:02:26
end estep
12:02:42
end pa12:02:42
goodness of fit correlation [0.24531918]
start cluster 12:02:42
11
parallel submitted
12:03:04
parallel finished
12:06:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:06:13
start mi0
12:06:13
start mi0 range(p) 1 loop
12:06:13
finish mi0 range(p) 1 loop
12:06:13
start mi0 range(p) 2 loop
12:06:13
finish mi0 range(p) 2 loop
12:06:13
start mi0 range(NT) loop
12:06:13
finish mi0 range(NT) loop
12:06:13
start mi0 range(n) loop
12:06:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:06:13
start mi0 range(n) 2loop
12:06:13
finish mi0 range(n) 2loop
12:06:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:06:13
start mi1 range(p) 1 loop
12:06:13
finish mi1 range(p) 1 loop
12:06:13
start mi1 range(p) 2 loop
12:06:13
finish mi1 range(p) 2 loop
12:06:13
start mi1 range(NT) loop
12:06:14
finish mi1 range(NT) loop
12:06:14
start mi1 range(n) loop
12:06:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:06:14
start mi1 range(n) 2loop
12:06:14
finish mi1 range(n) 2loop
12:06:14
start mi2
12:06:14
start mi2 range(p) 1 loop
12:06:14
finish mi2 range(p) 1 loop
12:06:14
start mi2 range(p) 2 loop
12:06:14
finish mi2 range(p) 2 loop
12:06:14
start mi2 range(NT) loop
12:06:14
finish mi2 range(NT) loop
12:06:14
start mi2 range(n) loop
12:06:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:06:14
start mi2 range(n) 2loop
12:06:14
finish mi2 range(n) 2loop
12:06:14
[[-2.5400681]]
end mi2 loop
12:06:14
estep
12:06:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:06:31
start ppi1
12:06:31
start mi0
12:06:31
start mi0 range(p) 1 loop
12:06:31
finish mi0 range(p) 1 loop
12:06:31
start mi0 range(p) 2 loop
12:06:31
finish mi0 range(p) 2 loop
12:06:31
start mi0 range(NT) loop
12:06:31
finish mi0 range(NT) loop
12:06:31
start mi0 range(n) loop
12:06:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:06:31
start mi0 range(n) 2loop
12:06:31
finish mi0 range(n) 2loop
12:06:31
start mi1
12:06:31
start mi1 range(p) 1 loop
12:06:31
finish mi1 range(p) 1 loop
12:06:31
start mi1 range(p) 2 loop
12:06:31
finish mi1 range(p) 2 loop
12:06:31
start mi1 range(NT) loop
12:06:31
finish mi1 range(NT) loop
12:06:31
start mi1 range(n) loop
12:06:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:06:31
start mi1 range(n) 2loop
12:06:31
finish mi1 range(n) 2loop
12:06:31
start mi2
12:06:31
start mi2 range(p) 1 loop
12:06:31
finish mi2 range(p) 1 loop
12:06:31
start mi2 range(p) 2 loop
12:06:31
finish mi2 range(p) 2 loop
12:06:31
start mi2 range(NT) loop
12:06:31
finish mi2 range(NT) loop
12:06:31
start mi2 range(n) loop
12:06:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:06:32
start mi2 range(n) 2loop
12:06:32
finish mi2 range(n) 2loop
12:06:32
[[-2.60257941]]
end mi2 loop
12:06:32
estep
12:06:32
end estep
12:06:47
end pa12:06:47
goodness of fit correlation [0.25730638]
start cluster 12:06:47
12
parallel submitted
12:07:08
parallel finished
12:09:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:09:30
start mi0
12:09:30
start mi0 range(p) 1 loop
12:09:30
finish mi0 range(p) 1 loop
12:09:30
start mi0 range(p) 2 loop
12:09:30
finish mi0 range(p) 2 loop
12:09:30
start mi0 range(NT) loop
12:09:30
finish mi0 range(NT) loop
12:09:30
start mi0 range(n) loop
12:09:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:09:30
start mi0 range(n) 2loop
12:09:30
finish mi0 range(n) 2loop
12:09:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:09:30
start mi1 range(p) 1 loop
12:09:30
finish mi1 range(p) 1 loop
12:09:30
start mi1 range(p) 2 loop
12:09:30
finish mi1 range(p) 2 loop
12:09:30
start mi1 range(NT) loop
12:09:30
finish mi1 range(NT) loop
12:09:30
start mi1 range(n) loop
12:09:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:09:30
start mi1 range(n) 2loop
12:09:30
finish mi1 range(n) 2loop
12:09:30
start mi2
12:09:30
start mi2 range(p) 1 loop
12:09:30
finish mi2 range(p) 1 loop
12:09:30
start mi2 range(p) 2 loop
12:09:30
finish mi2 range(p) 2 loop
12:09:30
start mi2 range(NT) loop
12:09:30
finish mi2 range(NT) loop
12:09:30
start mi2 range(n) loop
12:09:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:09:30
start mi2 range(n) 2loop
12:09:30
finish mi2 range(n) 2loop
12:09:31
start mi3
12:09:31
start mi3 range(p) 1 loop
12:09:31
finish mi3 range(p) 1 loop
12:09:31
start mi3 range(p) 2 loop
12:09:31
finish mi3 range(p) 2 loop
12:09:31
start mi3 range(NT) loop
12:09:31
finish mi3 range(NT) loop
12:09:31
start mi3 range(n) loop
12:09:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:09:31
start mi3 range(n) 2loop
12:09:31
finish mi3 range(n) 2loop
12:09:31
[[-2.47062495]]
end mi3 loop
12:09:31
estep
12:09:31
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:09:48
start ppi1
12:09:48
start mi0
12:09:48
start mi0 range(p) 1 loop
12:09:48
finish mi0 range(p) 1 loop
12:09:48
start mi0 range(p) 2 loop
12:09:48
finish mi0 range(p) 2 loop
12:09:48
start mi0 range(NT) loop
12:09:48
finish mi0 range(NT) loop
12:09:48
start mi0 range(n) loop
12:09:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:09:48
start mi0 range(n) 2loop
12:09:48
finish mi0 range(n) 2loop
12:09:48
start mi1
12:09:48
start mi1 range(p) 1 loop
12:09:48
finish mi1 range(p) 1 loop
12:09:48
start mi1 range(p) 2 loop
12:09:48
finish mi1 range(p) 2 loop
12:09:48
start mi1 range(NT) loop
12:09:48
finish mi1 range(NT) loop
12:09:48
start mi1 range(n) loop
12:09:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:09:48
start mi1 range(n) 2loop
12:09:48
finish mi1 range(n) 2loop
12:09:48
start mi2
12:09:48
start mi2 range(p) 1 loop
12:09:48
finish mi2 range(p) 1 loop
12:09:48
start mi2 range(p) 2 loop
12:09:48
finish mi2 range(p) 2 loop
12:09:48
start mi2 range(NT) loop
12:09:48
finish mi2 range(NT) loop
12:09:48
start mi2 range(n) loop
12:09:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:09:48
start mi2 range(n) 2loop
12:09:48
finish mi2 range(n) 2loop
12:09:48
[[-2.53308611]]
end mi2 loop
12:09:48
estep
12:09:48
end estep
12:10:05
end pa12:10:05
goodness of fit correlation [0.18614381]
start cluster 12:10:05
13
parallel submitted
12:10:28
parallel finished
12:14:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:14:33
start mi0
12:14:33
start mi0 range(p) 1 loop
12:14:33
finish mi0 range(p) 1 loop
12:14:33
start mi0 range(p) 2 loop
12:14:33
finish mi0 range(p) 2 loop
12:14:33
start mi0 range(NT) loop
12:14:33
finish mi0 range(NT) loop
12:14:33
start mi0 range(n) loop
12:14:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:14:33
start mi0 range(n) 2loop
12:14:33
finish mi0 range(n) 2loop
12:14:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:14:33
start mi1 range(p) 1 loop
12:14:33
finish mi1 range(p) 1 loop
12:14:33
start mi1 range(p) 2 loop
12:14:33
finish mi1 range(p) 2 loop
12:14:33
start mi1 range(NT) loop
12:14:33
finish mi1 range(NT) loop
12:14:33
start mi1 range(n) loop
12:14:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:14:33
start mi1 range(n) 2loop
12:14:33
finish mi1 range(n) 2loop
12:14:33
start mi2
12:14:33
start mi2 range(p) 1 loop
12:14:33
finish mi2 range(p) 1 loop
12:14:33
start mi2 range(p) 2 loop
12:14:33
finish mi2 range(p) 2 loop
12:14:33
start mi2 range(NT) loop
12:14:33
finish mi2 range(NT) loop
12:14:33
start mi2 range(n) loop
12:14:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:14:34
start mi2 range(n) 2loop
12:14:34
finish mi2 range(n) 2loop
12:14:34
start mi3
12:14:34
start mi3 range(p) 1 loop
12:14:34
finish mi3 range(p) 1 loop
12:14:34
start mi3 range(p) 2 loop
12:14:34
finish mi3 range(p) 2 loop
12:14:34
start mi3 range(NT) loop
12:14:34
finish mi3 range(NT) loop
12:14:34
start mi3 range(n) loop
12:14:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:14:34
start mi3 range(n) 2loop
12:14:34
finish mi3 range(n) 2loop
12:14:34
[[-2.42819756]]
end mi3 loop
12:14:34
estep
12:14:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:14:49
start ppi1
12:14:49
start mi0
12:14:49
start mi0 range(p) 1 loop
12:14:49
finish mi0 range(p) 1 loop
12:14:49
start mi0 range(p) 2 loop
12:14:49
finish mi0 range(p) 2 loop
12:14:49
start mi0 range(NT) loop
12:14:49
finish mi0 range(NT) loop
12:14:49
start mi0 range(n) loop
12:14:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:14:49
start mi0 range(n) 2loop
12:14:49
finish mi0 range(n) 2loop
12:14:49
start mi1
12:14:49
start mi1 range(p) 1 loop
12:14:49
finish mi1 range(p) 1 loop
12:14:49
start mi1 range(p) 2 loop
12:14:49
finish mi1 range(p) 2 loop
12:14:49
start mi1 range(NT) loop
12:14:49
finish mi1 range(NT) loop
12:14:49
start mi1 range(n) loop
12:14:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:14:49
start mi1 range(n) 2loop
12:14:49
finish mi1 range(n) 2loop
12:14:50
start mi2
12:14:50
start mi2 range(p) 1 loop
12:14:50
finish mi2 range(p) 1 loop
12:14:50
start mi2 range(p) 2 loop
12:14:50
finish mi2 range(p) 2 loop
12:14:50
start mi2 range(NT) loop
12:14:50
finish mi2 range(NT) loop
12:14:50
start mi2 range(n) loop
12:14:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:14:50
start mi2 range(n) 2loop
12:14:50
finish mi2 range(n) 2loop
12:14:50
start mi3
12:14:50
start mi3 range(p) 1 loop
12:14:50
finish mi3 range(p) 1 loop
12:14:50
start mi3 range(p) 2 loop
12:14:50
finish mi3 range(p) 2 loop
12:14:50
start mi3 range(NT) loop
12:14:50
finish mi3 range(NT) loop
12:14:50
start mi3 range(n) loop
12:14:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:14:50
start mi3 range(n) 2loop
12:14:50
finish mi3 range(n) 2loop
12:14:50
[[-2.49068961]]
end mi3 loop
12:14:50
estep
12:14:50
end estep
12:15:05
end pa12:15:05
goodness of fit correlation [0.23400543]
start cluster 12:15:05
14
parallel submitted
12:15:30
parallel finished
12:20:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:20:21
start mi0
12:20:21
start mi0 range(p) 1 loop
12:20:21
finish mi0 range(p) 1 loop
12:20:21
start mi0 range(p) 2 loop
12:20:21
finish mi0 range(p) 2 loop
12:20:21
start mi0 range(NT) loop
12:20:21
finish mi0 range(NT) loop
12:20:21
start mi0 range(n) loop
12:20:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:20:21
start mi0 range(n) 2loop
12:20:21
finish mi0 range(n) 2loop
12:20:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:20:21
start mi1 range(p) 1 loop
12:20:21
finish mi1 range(p) 1 loop
12:20:21
start mi1 range(p) 2 loop
12:20:21
finish mi1 range(p) 2 loop
12:20:21
start mi1 range(NT) loop
12:20:21
finish mi1 range(NT) loop
12:20:21
start mi1 range(n) loop
12:20:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:20:21
start mi1 range(n) 2loop
12:20:21
finish mi1 range(n) 2loop
12:20:22
start mi2
12:20:22
start mi2 range(p) 1 loop
12:20:22
finish mi2 range(p) 1 loop
12:20:22
start mi2 range(p) 2 loop
12:20:22
finish mi2 range(p) 2 loop
12:20:22
start mi2 range(NT) loop
12:20:22
finish mi2 range(NT) loop
12:20:22
start mi2 range(n) loop
12:20:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:20:22
start mi2 range(n) 2loop
12:20:22
finish mi2 range(n) 2loop
12:20:22
start mi3
12:20:22
start mi3 range(p) 1 loop
12:20:22
finish mi3 range(p) 1 loop
12:20:22
start mi3 range(p) 2 loop
12:20:22
finish mi3 range(p) 2 loop
12:20:22
start mi3 range(NT) loop
12:20:22
finish mi3 range(NT) loop
12:20:22
start mi3 range(n) loop
12:20:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:20:22
start mi3 range(n) 2loop
12:20:22
finish mi3 range(n) 2loop
12:20:22
[[-2.49415642]]
end mi3 loop
12:20:22
estep
12:20:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:20:37
start ppi1
12:20:37
start mi0
12:20:37
start mi0 range(p) 1 loop
12:20:37
finish mi0 range(p) 1 loop
12:20:37
start mi0 range(p) 2 loop
12:20:37
finish mi0 range(p) 2 loop
12:20:37
start mi0 range(NT) loop
12:20:37
finish mi0 range(NT) loop
12:20:37
start mi0 range(n) loop
12:20:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:20:37
start mi0 range(n) 2loop
12:20:37
finish mi0 range(n) 2loop
12:20:37
start mi1
12:20:37
start mi1 range(p) 1 loop
12:20:37
finish mi1 range(p) 1 loop
12:20:37
start mi1 range(p) 2 loop
12:20:37
finish mi1 range(p) 2 loop
12:20:37
start mi1 range(NT) loop
12:20:37
finish mi1 range(NT) loop
12:20:37
start mi1 range(n) loop
12:20:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:20:38
start mi1 range(n) 2loop
12:20:38
finish mi1 range(n) 2loop
12:20:38
start mi2
12:20:38
start mi2 range(p) 1 loop
12:20:38
finish mi2 range(p) 1 loop
12:20:38
start mi2 range(p) 2 loop
12:20:38
finish mi2 range(p) 2 loop
12:20:38
start mi2 range(NT) loop
12:20:38
finish mi2 range(NT) loop
12:20:38
start mi2 range(n) loop
12:20:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:20:38
start mi2 range(n) 2loop
12:20:38
finish mi2 range(n) 2loop
12:20:38
[[-2.55662853]]
end mi2 loop
12:20:38
estep
12:20:38
end estep
12:20:54
end pa12:20:54
goodness of fit correlation [0.18503411]
start cluster 12:20:54
15
parallel submitted
12:21:17
parallel finished
12:24:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:24:57
start mi0
12:24:57
start mi0 range(p) 1 loop
12:24:57
finish mi0 range(p) 1 loop
12:24:57
start mi0 range(p) 2 loop
12:24:57
finish mi0 range(p) 2 loop
12:24:57
start mi0 range(NT) loop
12:24:57
finish mi0 range(NT) loop
12:24:57
start mi0 range(n) loop
12:24:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:24:57
start mi0 range(n) 2loop
12:24:57
finish mi0 range(n) 2loop
12:24:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:24:57
start mi1 range(p) 1 loop
12:24:57
finish mi1 range(p) 1 loop
12:24:57
start mi1 range(p) 2 loop
12:24:57
finish mi1 range(p) 2 loop
12:24:57
start mi1 range(NT) loop
12:24:57
finish mi1 range(NT) loop
12:24:57
start mi1 range(n) loop
12:24:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:24:57
start mi1 range(n) 2loop
12:24:57
finish mi1 range(n) 2loop
12:24:57
start mi2
12:24:58
start mi2 range(p) 1 loop
12:24:58
finish mi2 range(p) 1 loop
12:24:58
start mi2 range(p) 2 loop
12:24:58
finish mi2 range(p) 2 loop
12:24:58
start mi2 range(NT) loop
12:24:58
finish mi2 range(NT) loop
12:24:58
start mi2 range(n) loop
12:24:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:24:58
start mi2 range(n) 2loop
12:24:58
finish mi2 range(n) 2loop
12:24:58
start mi3
12:24:58
start mi3 range(p) 1 loop
12:24:58
finish mi3 range(p) 1 loop
12:24:58
start mi3 range(p) 2 loop
12:24:58
finish mi3 range(p) 2 loop
12:24:58
start mi3 range(NT) loop
12:24:58
finish mi3 range(NT) loop
12:24:58
start mi3 range(n) loop
12:24:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:24:58
start mi3 range(n) 2loop
12:24:58
finish mi3 range(n) 2loop
12:24:58
[[-2.41528119]]
end mi3 loop
12:24:58
estep
12:24:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:25:13
start ppi1
12:25:13
start mi0
12:25:13
start mi0 range(p) 1 loop
12:25:13
finish mi0 range(p) 1 loop
12:25:13
start mi0 range(p) 2 loop
12:25:13
finish mi0 range(p) 2 loop
12:25:13
start mi0 range(NT) loop
12:25:13
finish mi0 range(NT) loop
12:25:13
start mi0 range(n) loop
12:25:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:25:13
start mi0 range(n) 2loop
12:25:13
finish mi0 range(n) 2loop
12:25:13
start mi1
12:25:13
start mi1 range(p) 1 loop
12:25:13
finish mi1 range(p) 1 loop
12:25:13
start mi1 range(p) 2 loop
12:25:13
finish mi1 range(p) 2 loop
12:25:13
start mi1 range(NT) loop
12:25:13
finish mi1 range(NT) loop
12:25:13
start mi1 range(n) loop
12:25:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:25:13
start mi1 range(n) 2loop
12:25:13
finish mi1 range(n) 2loop
12:25:14
start mi2
12:25:14
start mi2 range(p) 1 loop
12:25:14
finish mi2 range(p) 1 loop
12:25:14
start mi2 range(p) 2 loop
12:25:14
finish mi2 range(p) 2 loop
12:25:14
start mi2 range(NT) loop
12:25:14
finish mi2 range(NT) loop
12:25:14
start mi2 range(n) loop
12:25:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:25:14
start mi2 range(n) 2loop
12:25:14
finish mi2 range(n) 2loop
12:25:14
start mi3
12:25:14
start mi3 range(p) 1 loop
12:25:14
finish mi3 range(p) 1 loop
12:25:14
start mi3 range(p) 2 loop
12:25:14
finish mi3 range(p) 2 loop
12:25:14
start mi3 range(NT) loop
12:25:14
finish mi3 range(NT) loop
12:25:14
start mi3 range(n) loop
12:25:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:25:14
start mi3 range(n) 2loop
12:25:14
finish mi3 range(n) 2loop
12:25:14
[[-2.47777325]]
end mi3 loop
12:25:14
estep
12:25:14
end estep
12:25:31
end pa12:25:31
goodness of fit correlation [0.14717282]
start cluster 12:25:31
16
parallel submitted
12:25:55
parallel finished
12:29:25
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:29:38
start mi0
12:29:38
start mi0 range(p) 1 loop
12:29:38
finish mi0 range(p) 1 loop
12:29:38
start mi0 range(p) 2 loop
12:29:38
finish mi0 range(p) 2 loop
12:29:38
start mi0 range(NT) loop
12:29:38
finish mi0 range(NT) loop
12:29:38
start mi0 range(n) loop
12:29:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:29:38
start mi0 range(n) 2loop
12:29:38
finish mi0 range(n) 2loop
12:29:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:29:39
start mi1 range(p) 1 loop
12:29:39
finish mi1 range(p) 1 loop
12:29:39
start mi1 range(p) 2 loop
12:29:39
finish mi1 range(p) 2 loop
12:29:39
start mi1 range(NT) loop
12:29:39
finish mi1 range(NT) loop
12:29:39
start mi1 range(n) loop
12:29:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:29:39
start mi1 range(n) 2loop
12:29:39
finish mi1 range(n) 2loop
12:29:39
start mi2
12:29:39
start mi2 range(p) 1 loop
12:29:39
finish mi2 range(p) 1 loop
12:29:39
start mi2 range(p) 2 loop
12:29:39
finish mi2 range(p) 2 loop
12:29:39
start mi2 range(NT) loop
12:29:39
finish mi2 range(NT) loop
12:29:39
start mi2 range(n) loop
12:29:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:29:39
start mi2 range(n) 2loop
12:29:39
finish mi2 range(n) 2loop
12:29:39
start mi3
12:29:39
start mi3 range(p) 1 loop
12:29:39
finish mi3 range(p) 1 loop
12:29:39
start mi3 range(p) 2 loop
12:29:39
finish mi3 range(p) 2 loop
12:29:39
start mi3 range(NT) loop
12:29:39
finish mi3 range(NT) loop
12:29:39
start mi3 range(n) loop
12:29:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:29:39
start mi3 range(n) 2loop
12:29:39
finish mi3 range(n) 2loop
12:29:39
[[-2.42625812]]
end mi3 loop
12:29:39
estep
12:29:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:29:55
start ppi1
12:29:55
start mi0
12:29:55
start mi0 range(p) 1 loop
12:29:55
finish mi0 range(p) 1 loop
12:29:55
start mi0 range(p) 2 loop
12:29:55
finish mi0 range(p) 2 loop
12:29:55
start mi0 range(NT) loop
12:29:55
finish mi0 range(NT) loop
12:29:55
start mi0 range(n) loop
12:29:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:29:55
start mi0 range(n) 2loop
12:29:55
finish mi0 range(n) 2loop
12:29:55
start mi1
12:29:55
start mi1 range(p) 1 loop
12:29:55
finish mi1 range(p) 1 loop
12:29:55
start mi1 range(p) 2 loop
12:29:55
finish mi1 range(p) 2 loop
12:29:55
start mi1 range(NT) loop
12:29:55
finish mi1 range(NT) loop
12:29:55
start mi1 range(n) loop
12:29:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:29:55
start mi1 range(n) 2loop
12:29:55
finish mi1 range(n) 2loop
12:29:56
start mi2
12:29:56
start mi2 range(p) 1 loop
12:29:56
finish mi2 range(p) 1 loop
12:29:56
start mi2 range(p) 2 loop
12:29:56
finish mi2 range(p) 2 loop
12:29:56
start mi2 range(NT) loop
12:29:56
finish mi2 range(NT) loop
12:29:56
start mi2 range(n) loop
12:29:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:29:56
start mi2 range(n) 2loop
12:29:56
finish mi2 range(n) 2loop
12:29:56
start mi3
12:29:56
start mi3 range(p) 1 loop
12:29:56
finish mi3 range(p) 1 loop
12:29:56
start mi3 range(p) 2 loop
12:29:56
finish mi3 range(p) 2 loop
12:29:56
start mi3 range(NT) loop
12:29:56
finish mi3 range(NT) loop
12:29:56
start mi3 range(n) loop
12:29:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:29:56
start mi3 range(n) 2loop
12:29:56
finish mi3 range(n) 2loop
12:29:56
[[-2.48875016]]
end mi3 loop
12:29:56
estep
12:29:56
end estep
12:30:13
end pa12:30:13
goodness of fit correlation [0.22932511]
start cluster 12:30:13
17
parallel submitted
12:30:37
parallel finished
12:33:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:33:58
start mi0
12:33:58
start mi0 range(p) 1 loop
12:33:58
finish mi0 range(p) 1 loop
12:33:58
start mi0 range(p) 2 loop
12:33:58
finish mi0 range(p) 2 loop
12:33:58
start mi0 range(NT) loop
12:33:59
finish mi0 range(NT) loop
12:33:59
start mi0 range(n) loop
12:33:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:33:59
start mi0 range(n) 2loop
12:33:59
finish mi0 range(n) 2loop
12:33:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:33:59
start mi1 range(p) 1 loop
12:33:59
finish mi1 range(p) 1 loop
12:33:59
start mi1 range(p) 2 loop
12:33:59
finish mi1 range(p) 2 loop
12:33:59
start mi1 range(NT) loop
12:33:59
finish mi1 range(NT) loop
12:33:59
start mi1 range(n) loop
12:33:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:33:59
start mi1 range(n) 2loop
12:33:59
finish mi1 range(n) 2loop
12:33:59
start mi2
12:33:59
start mi2 range(p) 1 loop
12:33:59
finish mi2 range(p) 1 loop
12:33:59
start mi2 range(p) 2 loop
12:33:59
finish mi2 range(p) 2 loop
12:33:59
start mi2 range(NT) loop
12:33:59
finish mi2 range(NT) loop
12:33:59
start mi2 range(n) loop
12:33:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:33:59
start mi2 range(n) 2loop
12:33:59
finish mi2 range(n) 2loop
12:33:59
start mi3
12:33:59
start mi3 range(p) 1 loop
12:33:59
finish mi3 range(p) 1 loop
12:33:59
start mi3 range(p) 2 loop
12:33:59
finish mi3 range(p) 2 loop
12:33:59
start mi3 range(NT) loop
12:33:59
finish mi3 range(NT) loop
12:33:59
start mi3 range(n) loop
12:33:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:33:59
start mi3 range(n) 2loop
12:33:59
finish mi3 range(n) 2loop
12:34:00
[[-2.47322798]]
end mi3 loop
12:34:00
estep
12:34:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:34:15
start ppi1
12:34:15
start mi0
12:34:15
start mi0 range(p) 1 loop
12:34:15
finish mi0 range(p) 1 loop
12:34:15
start mi0 range(p) 2 loop
12:34:15
finish mi0 range(p) 2 loop
12:34:15
start mi0 range(NT) loop
12:34:15
finish mi0 range(NT) loop
12:34:15
start mi0 range(n) loop
12:34:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:34:15
start mi0 range(n) 2loop
12:34:15
finish mi0 range(n) 2loop
12:34:15
start mi1
12:34:15
start mi1 range(p) 1 loop
12:34:15
finish mi1 range(p) 1 loop
12:34:15
start mi1 range(p) 2 loop
12:34:15
finish mi1 range(p) 2 loop
12:34:15
start mi1 range(NT) loop
12:34:15
finish mi1 range(NT) loop
12:34:15
start mi1 range(n) loop
12:34:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:34:15
start mi1 range(n) 2loop
12:34:15
finish mi1 range(n) 2loop
12:34:15
start mi2
12:34:15
start mi2 range(p) 1 loop
12:34:15
finish mi2 range(p) 1 loop
12:34:15
start mi2 range(p) 2 loop
12:34:15
finish mi2 range(p) 2 loop
12:34:15
start mi2 range(NT) loop
12:34:15
finish mi2 range(NT) loop
12:34:15
start mi2 range(n) loop
12:34:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:34:16
start mi2 range(n) 2loop
12:34:16
finish mi2 range(n) 2loop
12:34:16
[[-2.53569056]]
end mi2 loop
12:34:16
estep
12:34:16
end estep
12:34:32
end pa12:34:32
goodness of fit correlation [0.30001974]
start cluster 12:34:32
18
parallel submitted
12:34:56
parallel finished
12:38:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:38:27
start mi0
12:38:27
start mi0 range(p) 1 loop
12:38:27
finish mi0 range(p) 1 loop
12:38:27
start mi0 range(p) 2 loop
12:38:27
finish mi0 range(p) 2 loop
12:38:27
start mi0 range(NT) loop
12:38:27
finish mi0 range(NT) loop
12:38:27
start mi0 range(n) loop
12:38:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:38:27
start mi0 range(n) 2loop
12:38:27
finish mi0 range(n) 2loop
12:38:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:38:27
start mi1 range(p) 1 loop
12:38:27
finish mi1 range(p) 1 loop
12:38:27
start mi1 range(p) 2 loop
12:38:27
finish mi1 range(p) 2 loop
12:38:27
start mi1 range(NT) loop
12:38:27
finish mi1 range(NT) loop
12:38:27
start mi1 range(n) loop
12:38:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:38:27
start mi1 range(n) 2loop
12:38:27
finish mi1 range(n) 2loop
12:38:27
start mi2
12:38:27
start mi2 range(p) 1 loop
12:38:27
finish mi2 range(p) 1 loop
12:38:27
start mi2 range(p) 2 loop
12:38:27
finish mi2 range(p) 2 loop
12:38:27
start mi2 range(NT) loop
12:38:28
finish mi2 range(NT) loop
12:38:28
start mi2 range(n) loop
12:38:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:38:28
start mi2 range(n) 2loop
12:38:28
finish mi2 range(n) 2loop
12:38:28
[[-2.51232706]]
end mi2 loop
12:38:28
estep
12:38:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:38:43
start ppi1
12:38:43
start mi0
12:38:43
start mi0 range(p) 1 loop
12:38:43
finish mi0 range(p) 1 loop
12:38:43
start mi0 range(p) 2 loop
12:38:43
finish mi0 range(p) 2 loop
12:38:43
start mi0 range(NT) loop
12:38:43
finish mi0 range(NT) loop
12:38:43
start mi0 range(n) loop
12:38:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:38:43
start mi0 range(n) 2loop
12:38:43
finish mi0 range(n) 2loop
12:38:43
start mi1
12:38:43
start mi1 range(p) 1 loop
12:38:43
finish mi1 range(p) 1 loop
12:38:43
start mi1 range(p) 2 loop
12:38:43
finish mi1 range(p) 2 loop
12:38:43
start mi1 range(NT) loop
12:38:44
finish mi1 range(NT) loop
12:38:44
start mi1 range(n) loop
12:38:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:38:44
start mi1 range(n) 2loop
12:38:44
finish mi1 range(n) 2loop
12:38:44
start mi2
12:38:44
start mi2 range(p) 1 loop
12:38:44
finish mi2 range(p) 1 loop
12:38:44
start mi2 range(p) 2 loop
12:38:44
finish mi2 range(p) 2 loop
12:38:44
start mi2 range(NT) loop
12:38:44
finish mi2 range(NT) loop
12:38:44
start mi2 range(n) loop
12:38:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:38:44
start mi2 range(n) 2loop
12:38:44
finish mi2 range(n) 2loop
12:38:44
[[-2.57484979]]
end mi2 loop
12:38:44
estep
12:38:44
end estep
12:39:01
end pa12:39:01
goodness of fit correlation [0.24592077]
start cluster 12:39:01
19
parallel submitted
12:39:25
parallel finished
12:42:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:43:07
start mi0
12:43:07
start mi0 range(p) 1 loop
12:43:07
finish mi0 range(p) 1 loop
12:43:07
start mi0 range(p) 2 loop
12:43:07
finish mi0 range(p) 2 loop
12:43:07
start mi0 range(NT) loop
12:43:07
finish mi0 range(NT) loop
12:43:07
start mi0 range(n) loop
12:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:43:07
start mi0 range(n) 2loop
12:43:07
finish mi0 range(n) 2loop
12:43:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:43:07
start mi1 range(p) 1 loop
12:43:07
finish mi1 range(p) 1 loop
12:43:07
start mi1 range(p) 2 loop
12:43:07
finish mi1 range(p) 2 loop
12:43:07
start mi1 range(NT) loop
12:43:07
finish mi1 range(NT) loop
12:43:07
start mi1 range(n) loop
12:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:43:07
start mi1 range(n) 2loop
12:43:07
finish mi1 range(n) 2loop
12:43:07
start mi2
12:43:07
start mi2 range(p) 1 loop
12:43:07
finish mi2 range(p) 1 loop
12:43:07
start mi2 range(p) 2 loop
12:43:07
finish mi2 range(p) 2 loop
12:43:07
start mi2 range(NT) loop
12:43:07
finish mi2 range(NT) loop
12:43:07
start mi2 range(n) loop
12:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:43:07
start mi2 range(n) 2loop
12:43:07
finish mi2 range(n) 2loop
12:43:07
[[-2.53900914]]
end mi2 loop
12:43:07
estep
12:43:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:43:24
start ppi1
12:43:24
start mi0
12:43:24
start mi0 range(p) 1 loop
12:43:24
finish mi0 range(p) 1 loop
12:43:24
start mi0 range(p) 2 loop
12:43:24
finish mi0 range(p) 2 loop
12:43:24
start mi0 range(NT) loop
12:43:24
finish mi0 range(NT) loop
12:43:24
start mi0 range(n) loop
12:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:43:24
start mi0 range(n) 2loop
12:43:24
finish mi0 range(n) 2loop
12:43:24
start mi1
12:43:24
start mi1 range(p) 1 loop
12:43:24
finish mi1 range(p) 1 loop
12:43:24
start mi1 range(p) 2 loop
12:43:24
finish mi1 range(p) 2 loop
12:43:24
start mi1 range(NT) loop
12:43:24
finish mi1 range(NT) loop
12:43:24
start mi1 range(n) loop
12:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:43:25
start mi1 range(n) 2loop
12:43:25
finish mi1 range(n) 2loop
12:43:25
start mi2
12:43:25
start mi2 range(p) 1 loop
12:43:25
finish mi2 range(p) 1 loop
12:43:25
start mi2 range(p) 2 loop
12:43:25
finish mi2 range(p) 2 loop
12:43:25
start mi2 range(NT) loop
12:43:25
finish mi2 range(NT) loop
12:43:25
start mi2 range(n) loop
12:43:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:43:25
start mi2 range(n) 2loop
12:43:25
finish mi2 range(n) 2loop
12:43:25
[[-2.60152081]]
end mi2 loop
12:43:25
estep
12:43:25
end estep
12:43:42
end pa12:43:42
goodness of fit correlation [0.22273545]
start cluster 12:43:42
20
parallel submitted
12:44:06
parallel finished
12:47:55
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:48:13
start mi0
12:48:13
start mi0 range(p) 1 loop
12:48:13
finish mi0 range(p) 1 loop
12:48:13
start mi0 range(p) 2 loop
12:48:13
finish mi0 range(p) 2 loop
12:48:13
start mi0 range(NT) loop
12:48:13
finish mi0 range(NT) loop
12:48:13
start mi0 range(n) loop
12:48:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:48:13
start mi0 range(n) 2loop
12:48:13
finish mi0 range(n) 2loop
12:48:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:48:13
start mi1 range(p) 1 loop
12:48:13
finish mi1 range(p) 1 loop
12:48:13
start mi1 range(p) 2 loop
12:48:13
finish mi1 range(p) 2 loop
12:48:13
start mi1 range(NT) loop
12:48:13
finish mi1 range(NT) loop
12:48:13
start mi1 range(n) loop
12:48:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:48:13
start mi1 range(n) 2loop
12:48:13
finish mi1 range(n) 2loop
12:48:13
start mi2
12:48:13
start mi2 range(p) 1 loop
12:48:13
finish mi2 range(p) 1 loop
12:48:13
start mi2 range(p) 2 loop
12:48:13
finish mi2 range(p) 2 loop
12:48:13
start mi2 range(NT) loop
12:48:13
finish mi2 range(NT) loop
12:48:13
start mi2 range(n) loop
12:48:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:48:13
start mi2 range(n) 2loop
12:48:13
finish mi2 range(n) 2loop
12:48:14
start mi3
12:48:14
start mi3 range(p) 1 loop
12:48:14
finish mi3 range(p) 1 loop
12:48:14
start mi3 range(p) 2 loop
12:48:14
finish mi3 range(p) 2 loop
12:48:14
start mi3 range(NT) loop
12:48:14
finish mi3 range(NT) loop
12:48:14
start mi3 range(n) loop
12:48:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:48:14
start mi3 range(n) 2loop
12:48:14
finish mi3 range(n) 2loop
12:48:14
[[-2.41913959]]
end mi3 loop
12:48:14
estep
12:48:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:48:31
start ppi1
12:48:31
start mi0
12:48:31
start mi0 range(p) 1 loop
12:48:31
finish mi0 range(p) 1 loop
12:48:31
start mi0 range(p) 2 loop
12:48:31
finish mi0 range(p) 2 loop
12:48:31
start mi0 range(NT) loop
12:48:31
finish mi0 range(NT) loop
12:48:31
start mi0 range(n) loop
12:48:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:48:31
start mi0 range(n) 2loop
12:48:31
finish mi0 range(n) 2loop
12:48:31
start mi1
12:48:31
start mi1 range(p) 1 loop
12:48:31
finish mi1 range(p) 1 loop
12:48:31
start mi1 range(p) 2 loop
12:48:31
finish mi1 range(p) 2 loop
12:48:31
start mi1 range(NT) loop
12:48:32
finish mi1 range(NT) loop
12:48:32
start mi1 range(n) loop
12:48:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:48:32
start mi1 range(n) 2loop
12:48:32
finish mi1 range(n) 2loop
12:48:32
start mi2
12:48:32
start mi2 range(p) 1 loop
12:48:32
finish mi2 range(p) 1 loop
12:48:32
start mi2 range(p) 2 loop
12:48:32
finish mi2 range(p) 2 loop
12:48:32
start mi2 range(NT) loop
12:48:32
finish mi2 range(NT) loop
12:48:32
start mi2 range(n) loop
12:48:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:48:32
start mi2 range(n) 2loop
12:48:32
finish mi2 range(n) 2loop
12:48:32
start mi3
12:48:32
start mi3 range(p) 1 loop
12:48:32
finish mi3 range(p) 1 loop
12:48:32
start mi3 range(p) 2 loop
12:48:32
finish mi3 range(p) 2 loop
12:48:32
start mi3 range(NT) loop
12:48:32
finish mi3 range(NT) loop
12:48:32
start mi3 range(n) loop
12:48:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:48:32
start mi3 range(n) 2loop
12:48:32
finish mi3 range(n) 2loop
12:48:32
[[-2.48163165]]
end mi3 loop
12:48:32
estep
12:48:32
end estep
12:48:49
end pa12:48:49
goodness of fit correlation [0.09997832]
0.30001973701846535
[5.31082883e-01 5.22970856e-01 5.50470832e-01 5.09157054e-01
 5.06855954e-01 5.10826768e-01 5.04452771e-01 5.01148396e-01
 5.06925556e-01 5.23704638e-01 5.03326939e-01 5.39449093e-01
 5.21868277e-01 5.15991469e-01 5.09875189e-01 5.47375927e-01
 5.32005915e-01 5.05112466e-01 5.08876715e-01 5.28062160e-01
 5.11825376e-01 5.18989607e-01 5.32700026e-01 4.89823340e-01
 5.09873056e-01 5.78112113e-01 5.22859191e-01 5.11394539e-01
 5.12202765e-01 5.37242445e-01 5.03537154e-01 5.07604919e-01
 5.15436940e-01 5.20059962e-01 5.20721369e-01 5.19727311e-01
 5.49678109e-01 5.10461207e-01 4.98620597e-01 5.38436860e-01
 5.68136844e-01 5.54020747e-01 5.16817274e-01 5.40524069e-01
 5.47420907e-01 5.47980743e-01 5.19546602e-01 5.67600788e-01
 5.12555082e-01 5.30746807e-01 5.31847656e-01 5.04658844e-01
 5.15457344e-01 5.36439983e-01 5.21127770e-01 5.23294748e-01
 5.50532659e-01 4.81119012e-01 5.07723035e-01 5.79282970e-01
 5.15235295e-01 5.38786600e-01 5.26640881e-01 5.37199564e-01
 5.18636264e-01 4.99706319e-01 5.19564182e-01 5.45722873e-01
 3.65587180e-01 3.61779502e-01 3.34580645e-01 3.61338635e-01
 3.11338510e-01 3.48088313e-01 3.34812208e-01 3.51843057e-01
 3.51363611e-01 3.61174042e-01 3.43594515e-01 3.71453131e-01
 3.66898167e-01 3.48443335e-01 3.44759919e-01 3.58761813e-01
 3.49335496e-01 3.44807026e-01 3.54351029e-01 3.63156217e-01
 3.43084478e-01 3.57019184e-01 3.38360491e-01 3.46992489e-01
 3.56375263e-01 3.45694963e-01 3.16812209e-01 3.41205926e-01
 3.61743643e-01 3.58137126e-01 3.49455361e-01 3.36990901e-01
 3.57453670e-01 3.62641433e-01 3.55854333e-01 3.61483914e-01
 3.38232727e-01 3.58562243e-01 3.07528646e-01 3.52384101e-01
 3.28473374e-01 3.40094128e-01 3.47031831e-01 3.54359004e-01
 3.61440175e-01 3.46731521e-01 3.54702969e-01 3.42598107e-01
 3.22676391e-01 3.53254148e-01 3.61580782e-01 3.10061405e-01
 3.62479347e-01 3.59251098e-01 3.44590330e-01 3.56503262e-01
 3.45320483e-01 3.40761972e-01 3.62755629e-01 3.39801564e-01
 3.16828939e-01 3.33241807e-01 3.53048559e-01 3.53763621e-01
 3.59335689e-01 3.01569277e-01 3.51939501e-01 3.46756466e-01
 1.50372914e+00 1.03284665e-03]
start cluster 12:48:49
0
parallel submitted
12:49:14
parallel finished
12:52:33
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:52:51
start mi0
12:52:51
start mi0 range(p) 1 loop
12:52:51
finish mi0 range(p) 1 loop
12:52:51
start mi0 range(p) 2 loop
12:52:51
finish mi0 range(p) 2 loop
12:52:51
start mi0 range(NT) loop
12:52:51
finish mi0 range(NT) loop
12:52:51
start mi0 range(n) loop
12:52:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:52:51
start mi0 range(n) 2loop
12:52:51
finish mi0 range(n) 2loop
12:52:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:52:51
start mi1 range(p) 1 loop
12:52:51
finish mi1 range(p) 1 loop
12:52:51
start mi1 range(p) 2 loop
12:52:51
finish mi1 range(p) 2 loop
12:52:51
start mi1 range(NT) loop
12:52:51
finish mi1 range(NT) loop
12:52:51
start mi1 range(n) loop
12:52:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:52:51
start mi1 range(n) 2loop
12:52:51
finish mi1 range(n) 2loop
12:52:51
start mi2
12:52:51
start mi2 range(p) 1 loop
12:52:51
finish mi2 range(p) 1 loop
12:52:51
start mi2 range(p) 2 loop
12:52:51
finish mi2 range(p) 2 loop
12:52:51
start mi2 range(NT) loop
12:52:52
finish mi2 range(NT) loop
12:52:52
start mi2 range(n) loop
12:52:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:52:52
start mi2 range(n) 2loop
12:52:52
finish mi2 range(n) 2loop
12:52:52
start mi3
12:52:52
start mi3 range(p) 1 loop
12:52:52
finish mi3 range(p) 1 loop
12:52:52
start mi3 range(p) 2 loop
12:52:52
finish mi3 range(p) 2 loop
12:52:52
start mi3 range(NT) loop
12:52:52
finish mi3 range(NT) loop
12:52:52
start mi3 range(n) loop
12:52:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:52:52
start mi3 range(n) 2loop
12:52:52
finish mi3 range(n) 2loop
12:52:52
[[-2.35469968]]
end mi3 loop
12:52:52
estep
12:52:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:53:07
start ppi1
12:53:07
start mi0
12:53:07
start mi0 range(p) 1 loop
12:53:07
finish mi0 range(p) 1 loop
12:53:07
start mi0 range(p) 2 loop
12:53:07
finish mi0 range(p) 2 loop
12:53:07
start mi0 range(NT) loop
12:53:07
finish mi0 range(NT) loop
12:53:07
start mi0 range(n) loop
12:53:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:53:07
start mi0 range(n) 2loop
12:53:07
finish mi0 range(n) 2loop
12:53:08
start mi1
12:53:08
start mi1 range(p) 1 loop
12:53:08
finish mi1 range(p) 1 loop
12:53:08
start mi1 range(p) 2 loop
12:53:08
finish mi1 range(p) 2 loop
12:53:08
start mi1 range(NT) loop
12:53:08
finish mi1 range(NT) loop
12:53:08
start mi1 range(n) loop
12:53:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:53:08
start mi1 range(n) 2loop
12:53:08
finish mi1 range(n) 2loop
12:53:08
start mi2
12:53:08
start mi2 range(p) 1 loop
12:53:08
finish mi2 range(p) 1 loop
12:53:08
start mi2 range(p) 2 loop
12:53:08
finish mi2 range(p) 2 loop
12:53:08
start mi2 range(NT) loop
12:53:08
finish mi2 range(NT) loop
12:53:08
start mi2 range(n) loop
12:53:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:53:08
start mi2 range(n) 2loop
12:53:08
finish mi2 range(n) 2loop
12:53:08
start mi3
12:53:08
start mi3 range(p) 1 loop
12:53:08
finish mi3 range(p) 1 loop
12:53:08
start mi3 range(p) 2 loop
12:53:08
finish mi3 range(p) 2 loop
12:53:08
start mi3 range(NT) loop
12:53:08
finish mi3 range(NT) loop
12:53:08
start mi3 range(n) loop
12:53:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:53:08
start mi3 range(n) 2loop
12:53:08
finish mi3 range(n) 2loop
12:53:08
[[-2.35469968]]
end mi3 loop
12:53:08
estep
12:53:08
end estep
12:53:24
end pa12:53:24
goodness of fit correlation [0.04637637]
start cluster 12:53:24
1
parallel submitted
12:53:47
parallel finished
12:58:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:59:01
start mi0
12:59:01
start mi0 range(p) 1 loop
12:59:01
finish mi0 range(p) 1 loop
12:59:01
start mi0 range(p) 2 loop
12:59:01
finish mi0 range(p) 2 loop
12:59:01
start mi0 range(NT) loop
12:59:01
finish mi0 range(NT) loop
12:59:01
start mi0 range(n) loop
12:59:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:59:01
start mi0 range(n) 2loop
12:59:01
finish mi0 range(n) 2loop
12:59:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:59:01
start mi1 range(p) 1 loop
12:59:01
finish mi1 range(p) 1 loop
12:59:01
start mi1 range(p) 2 loop
12:59:01
finish mi1 range(p) 2 loop
12:59:01
start mi1 range(NT) loop
12:59:01
finish mi1 range(NT) loop
12:59:01
start mi1 range(n) loop
12:59:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:59:01
start mi1 range(n) 2loop
12:59:01
finish mi1 range(n) 2loop
12:59:01
start mi2
12:59:01
start mi2 range(p) 1 loop
12:59:01
finish mi2 range(p) 1 loop
12:59:01
start mi2 range(p) 2 loop
12:59:01
finish mi2 range(p) 2 loop
12:59:01
start mi2 range(NT) loop
12:59:02
finish mi2 range(NT) loop
12:59:02
start mi2 range(n) loop
12:59:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:59:02
start mi2 range(n) 2loop
12:59:02
finish mi2 range(n) 2loop
12:59:02
start mi3
12:59:02
start mi3 range(p) 1 loop
12:59:02
finish mi3 range(p) 1 loop
12:59:02
start mi3 range(p) 2 loop
12:59:02
finish mi3 range(p) 2 loop
12:59:02
start mi3 range(NT) loop
12:59:02
finish mi3 range(NT) loop
12:59:02
start mi3 range(n) loop
12:59:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:59:02
start mi3 range(n) 2loop
12:59:02
finish mi3 range(n) 2loop
12:59:02
[[-2.36098524]]
end mi3 loop
12:59:02
estep
12:59:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:59:19
start ppi1
12:59:19
start mi0
12:59:19
start mi0 range(p) 1 loop
12:59:19
finish mi0 range(p) 1 loop
12:59:19
start mi0 range(p) 2 loop
12:59:19
finish mi0 range(p) 2 loop
12:59:19
start mi0 range(NT) loop
12:59:19
finish mi0 range(NT) loop
12:59:19
start mi0 range(n) loop
12:59:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:59:19
start mi0 range(n) 2loop
12:59:19
finish mi0 range(n) 2loop
12:59:19
start mi1
12:59:19
start mi1 range(p) 1 loop
12:59:19
finish mi1 range(p) 1 loop
12:59:19
start mi1 range(p) 2 loop
12:59:19
finish mi1 range(p) 2 loop
12:59:19
start mi1 range(NT) loop
12:59:19
finish mi1 range(NT) loop
12:59:19
start mi1 range(n) loop
12:59:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:59:19
start mi1 range(n) 2loop
12:59:19
finish mi1 range(n) 2loop
12:59:19
start mi2
12:59:19
start mi2 range(p) 1 loop
12:59:19
finish mi2 range(p) 1 loop
12:59:19
start mi2 range(p) 2 loop
12:59:19
finish mi2 range(p) 2 loop
12:59:19
start mi2 range(NT) loop
12:59:19
finish mi2 range(NT) loop
12:59:19
start mi2 range(n) loop
12:59:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:59:20
start mi2 range(n) 2loop
12:59:20
finish mi2 range(n) 2loop
12:59:20
start mi3
12:59:20
start mi3 range(p) 1 loop
12:59:20
finish mi3 range(p) 1 loop
12:59:20
start mi3 range(p) 2 loop
12:59:20
finish mi3 range(p) 2 loop
12:59:20
start mi3 range(NT) loop
12:59:20
finish mi3 range(NT) loop
12:59:20
start mi3 range(n) loop
12:59:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:59:20
start mi3 range(n) 2loop
12:59:20
finish mi3 range(n) 2loop
12:59:20
[[-2.42347736]]
end mi3 loop
12:59:20
estep
12:59:20
end estep
12:59:37
end pa12:59:37
goodness of fit correlation [0.2125014]
start cluster 12:59:37
2
parallel submitted
13:00:04
parallel finished
13:03:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:03:20
start mi0
13:03:20
start mi0 range(p) 1 loop
13:03:20
finish mi0 range(p) 1 loop
13:03:20
start mi0 range(p) 2 loop
13:03:20
finish mi0 range(p) 2 loop
13:03:20
start mi0 range(NT) loop
13:03:20
finish mi0 range(NT) loop
13:03:20
start mi0 range(n) loop
13:03:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:03:20
start mi0 range(n) 2loop
13:03:20
finish mi0 range(n) 2loop
13:03:20
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:03:20
start mi1 range(p) 1 loop
13:03:20
finish mi1 range(p) 1 loop
13:03:20
start mi1 range(p) 2 loop
13:03:20
finish mi1 range(p) 2 loop
13:03:20
start mi1 range(NT) loop
13:03:20
finish mi1 range(NT) loop
13:03:20
start mi1 range(n) loop
13:03:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:03:21
start mi1 range(n) 2loop
13:03:21
finish mi1 range(n) 2loop
13:03:21
start mi2
13:03:21
start mi2 range(p) 1 loop
13:03:21
finish mi2 range(p) 1 loop
13:03:21
start mi2 range(p) 2 loop
13:03:21
finish mi2 range(p) 2 loop
13:03:21
start mi2 range(NT) loop
13:03:21
finish mi2 range(NT) loop
13:03:21
start mi2 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:03:21
start mi2 range(n) 2loop
13:03:21
finish mi2 range(n) 2loop
13:03:21
start mi3
13:03:21
start mi3 range(p) 1 loop
13:03:21
finish mi3 range(p) 1 loop
13:03:21
start mi3 range(p) 2 loop
13:03:21
finish mi3 range(p) 2 loop
13:03:21
start mi3 range(NT) loop
13:03:21
finish mi3 range(NT) loop
13:03:21
start mi3 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:03:21
start mi3 range(n) 2loop
13:03:21
finish mi3 range(n) 2loop
13:03:21
[[-2.42322588]]
end mi3 loop
13:03:21
estep
13:03:21
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:03:37
start ppi1
13:03:37
start mi0
13:03:37
start mi0 range(p) 1 loop
13:03:37
finish mi0 range(p) 1 loop
13:03:37
start mi0 range(p) 2 loop
13:03:37
finish mi0 range(p) 2 loop
13:03:37
start mi0 range(NT) loop
13:03:37
finish mi0 range(NT) loop
13:03:37
start mi0 range(n) loop
13:03:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:03:37
start mi0 range(n) 2loop
13:03:37
finish mi0 range(n) 2loop
13:03:37
start mi1
13:03:37
start mi1 range(p) 1 loop
13:03:37
finish mi1 range(p) 1 loop
13:03:37
start mi1 range(p) 2 loop
13:03:37
finish mi1 range(p) 2 loop
13:03:37
start mi1 range(NT) loop
13:03:37
finish mi1 range(NT) loop
13:03:37
start mi1 range(n) loop
13:03:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:03:37
start mi1 range(n) 2loop
13:03:37
finish mi1 range(n) 2loop
13:03:37
start mi2
13:03:37
start mi2 range(p) 1 loop
13:03:37
finish mi2 range(p) 1 loop
13:03:37
start mi2 range(p) 2 loop
13:03:37
finish mi2 range(p) 2 loop
13:03:37
start mi2 range(NT) loop
13:03:38
finish mi2 range(NT) loop
13:03:38
start mi2 range(n) loop
13:03:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:03:38
start mi2 range(n) 2loop
13:03:38
finish mi2 range(n) 2loop
13:03:38
start mi3
13:03:38
start mi3 range(p) 1 loop
13:03:38
finish mi3 range(p) 1 loop
13:03:38
start mi3 range(p) 2 loop
13:03:38
finish mi3 range(p) 2 loop
13:03:38
start mi3 range(NT) loop
13:03:38
finish mi3 range(NT) loop
13:03:38
start mi3 range(n) loop
13:03:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:03:38
start mi3 range(n) 2loop
13:03:38
finish mi3 range(n) 2loop
13:03:38
[[-2.48571793]]
end mi3 loop
13:03:38
estep
13:03:38
end estep
13:03:54
end pa13:03:54
goodness of fit correlation [0.24613449]
start cluster 13:03:54
3
parallel submitted
13:04:20
parallel finished
13:07:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:07:30
start mi0
13:07:30
start mi0 range(p) 1 loop
13:07:30
finish mi0 range(p) 1 loop
13:07:30
start mi0 range(p) 2 loop
13:07:30
finish mi0 range(p) 2 loop
13:07:30
start mi0 range(NT) loop
13:07:30
finish mi0 range(NT) loop
13:07:30
start mi0 range(n) loop
13:07:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:07:30
start mi0 range(n) 2loop
13:07:30
finish mi0 range(n) 2loop
13:07:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:07:30
start mi1 range(p) 1 loop
13:07:30
finish mi1 range(p) 1 loop
13:07:30
start mi1 range(p) 2 loop
13:07:30
finish mi1 range(p) 2 loop
13:07:30
start mi1 range(NT) loop
13:07:30
finish mi1 range(NT) loop
13:07:30
start mi1 range(n) loop
13:07:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:07:31
start mi1 range(n) 2loop
13:07:31
finish mi1 range(n) 2loop
13:07:31
start mi2
13:07:31
start mi2 range(p) 1 loop
13:07:31
finish mi2 range(p) 1 loop
13:07:31
start mi2 range(p) 2 loop
13:07:31
finish mi2 range(p) 2 loop
13:07:31
start mi2 range(NT) loop
13:07:31
finish mi2 range(NT) loop
13:07:31
start mi2 range(n) loop
13:07:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:07:31
start mi2 range(n) 2loop
13:07:31
finish mi2 range(n) 2loop
13:07:31
start mi3
13:07:31
start mi3 range(p) 1 loop
13:07:31
finish mi3 range(p) 1 loop
13:07:31
start mi3 range(p) 2 loop
13:07:31
finish mi3 range(p) 2 loop
13:07:31
start mi3 range(NT) loop
13:07:31
finish mi3 range(NT) loop
13:07:31
start mi3 range(n) loop
13:07:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:07:31
start mi3 range(n) 2loop
13:07:31
finish mi3 range(n) 2loop
13:07:31
[[-2.50493966]]
end mi3 loop
13:07:31
estep
13:07:31
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:07:48
start ppi1
13:07:48
start mi0
13:07:48
start mi0 range(p) 1 loop
13:07:48
finish mi0 range(p) 1 loop
13:07:48
start mi0 range(p) 2 loop
13:07:48
finish mi0 range(p) 2 loop
13:07:48
start mi0 range(NT) loop
13:07:48
finish mi0 range(NT) loop
13:07:48
start mi0 range(n) loop
13:07:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:07:48
start mi0 range(n) 2loop
13:07:48
finish mi0 range(n) 2loop
13:07:48
start mi1
13:07:48
start mi1 range(p) 1 loop
13:07:48
finish mi1 range(p) 1 loop
13:07:48
start mi1 range(p) 2 loop
13:07:48
finish mi1 range(p) 2 loop
13:07:48
start mi1 range(NT) loop
13:07:48
finish mi1 range(NT) loop
13:07:48
start mi1 range(n) loop
13:07:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:07:48
start mi1 range(n) 2loop
13:07:48
finish mi1 range(n) 2loop
13:07:48
start mi2
13:07:48
start mi2 range(p) 1 loop
13:07:48
finish mi2 range(p) 1 loop
13:07:48
start mi2 range(p) 2 loop
13:07:48
finish mi2 range(p) 2 loop
13:07:48
start mi2 range(NT) loop
13:07:48
finish mi2 range(NT) loop
13:07:48
start mi2 range(n) loop
13:07:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:07:48
start mi2 range(n) 2loop
13:07:48
finish mi2 range(n) 2loop
13:07:49
[[-2.56741552]]
end mi2 loop
13:07:49
estep
13:07:49
end estep
13:08:06
end pa13:08:06
goodness of fit correlation [0.2226264]
start cluster 13:08:06
4
parallel submitted
13:08:31
parallel finished
13:11:05
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:11:23
start mi0
13:11:23
start mi0 range(p) 1 loop
13:11:23
finish mi0 range(p) 1 loop
13:11:23
start mi0 range(p) 2 loop
13:11:23
finish mi0 range(p) 2 loop
13:11:23
start mi0 range(NT) loop
13:11:23
finish mi0 range(NT) loop
13:11:23
start mi0 range(n) loop
13:11:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:11:23
start mi0 range(n) 2loop
13:11:23
finish mi0 range(n) 2loop
13:11:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:11:23
start mi1 range(p) 1 loop
13:11:23
finish mi1 range(p) 1 loop
13:11:23
start mi1 range(p) 2 loop
13:11:23
finish mi1 range(p) 2 loop
13:11:23
start mi1 range(NT) loop
13:11:23
finish mi1 range(NT) loop
13:11:23
start mi1 range(n) loop
13:11:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:11:23
start mi1 range(n) 2loop
13:11:23
finish mi1 range(n) 2loop
13:11:23
start mi2
13:11:23
start mi2 range(p) 1 loop
13:11:23
finish mi2 range(p) 1 loop
13:11:23
start mi2 range(p) 2 loop
13:11:23
finish mi2 range(p) 2 loop
13:11:23
start mi2 range(NT) loop
13:11:23
finish mi2 range(NT) loop
13:11:24
start mi2 range(n) loop
13:11:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:11:24
start mi2 range(n) 2loop
13:11:24
finish mi2 range(n) 2loop
13:11:24
start mi3
13:11:24
start mi3 range(p) 1 loop
13:11:24
finish mi3 range(p) 1 loop
13:11:24
start mi3 range(p) 2 loop
13:11:24
finish mi3 range(p) 2 loop
13:11:24
start mi3 range(NT) loop
13:11:24
finish mi3 range(NT) loop
13:11:24
start mi3 range(n) loop
13:11:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:11:24
start mi3 range(n) 2loop
13:11:24
finish mi3 range(n) 2loop
13:11:24
[[-2.46632562]]
end mi3 loop
13:11:24
estep
13:11:24
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:11:42
start ppi1
13:11:42
start mi0
13:11:42
start mi0 range(p) 1 loop
13:11:42
finish mi0 range(p) 1 loop
13:11:42
start mi0 range(p) 2 loop
13:11:42
finish mi0 range(p) 2 loop
13:11:42
start mi0 range(NT) loop
13:11:42
finish mi0 range(NT) loop
13:11:42
start mi0 range(n) loop
13:11:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:11:42
start mi0 range(n) 2loop
13:11:42
finish mi0 range(n) 2loop
13:11:42
start mi1
13:11:42
start mi1 range(p) 1 loop
13:11:42
finish mi1 range(p) 1 loop
13:11:42
start mi1 range(p) 2 loop
13:11:42
finish mi1 range(p) 2 loop
13:11:42
start mi1 range(NT) loop
13:11:42
finish mi1 range(NT) loop
13:11:42
start mi1 range(n) loop
13:11:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:11:42
start mi1 range(n) 2loop
13:11:42
finish mi1 range(n) 2loop
13:11:42
start mi2
13:11:42
start mi2 range(p) 1 loop
13:11:42
finish mi2 range(p) 1 loop
13:11:42
start mi2 range(p) 2 loop
13:11:42
finish mi2 range(p) 2 loop
13:11:42
start mi2 range(NT) loop
13:11:42
finish mi2 range(NT) loop
13:11:42
start mi2 range(n) loop
13:11:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:11:42
start mi2 range(n) 2loop
13:11:42
finish mi2 range(n) 2loop
13:11:43
[[-2.52878429]]
end mi2 loop
13:11:43
estep
13:11:43
end estep
13:12:00
end pa13:12:00
goodness of fit correlation [0.26100602]
start cluster 13:12:00
5
parallel submitted
13:12:26
parallel finished
13:16:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:17:00
start mi0
13:17:00
start mi0 range(p) 1 loop
13:17:00
finish mi0 range(p) 1 loop
13:17:00
start mi0 range(p) 2 loop
13:17:00
finish mi0 range(p) 2 loop
13:17:00
start mi0 range(NT) loop
13:17:00
finish mi0 range(NT) loop
13:17:00
start mi0 range(n) loop
13:17:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:17:00
start mi0 range(n) 2loop
13:17:00
finish mi0 range(n) 2loop
13:17:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:17:00
start mi1 range(p) 1 loop
13:17:00
finish mi1 range(p) 1 loop
13:17:00
start mi1 range(p) 2 loop
13:17:00
finish mi1 range(p) 2 loop
13:17:00
start mi1 range(NT) loop
13:17:00
finish mi1 range(NT) loop
13:17:00
start mi1 range(n) loop
13:17:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:17:00
start mi1 range(n) 2loop
13:17:00
finish mi1 range(n) 2loop
13:17:00
start mi2
13:17:00
start mi2 range(p) 1 loop
13:17:00
finish mi2 range(p) 1 loop
13:17:00
start mi2 range(p) 2 loop
13:17:00
finish mi2 range(p) 2 loop
13:17:00
start mi2 range(NT) loop
13:17:00
finish mi2 range(NT) loop
13:17:00
start mi2 range(n) loop
13:17:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:17:01
start mi2 range(n) 2loop
13:17:01
finish mi2 range(n) 2loop
13:17:01
[[-2.55942999]]
end mi2 loop
13:17:01
estep
13:17:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:17:17
start ppi1
13:17:17
start mi0
13:17:17
start mi0 range(p) 1 loop
13:17:17
finish mi0 range(p) 1 loop
13:17:17
start mi0 range(p) 2 loop
13:17:17
finish mi0 range(p) 2 loop
13:17:17
start mi0 range(NT) loop
13:17:17
finish mi0 range(NT) loop
13:17:17
start mi0 range(n) loop
13:17:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:17:17
start mi0 range(n) 2loop
13:17:17
finish mi0 range(n) 2loop
13:17:17
start mi1
13:17:17
start mi1 range(p) 1 loop
13:17:17
finish mi1 range(p) 1 loop
13:17:17
start mi1 range(p) 2 loop
13:17:17
finish mi1 range(p) 2 loop
13:17:17
start mi1 range(NT) loop
13:17:17
finish mi1 range(NT) loop
13:17:17
start mi1 range(n) loop
13:17:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:17:17
start mi1 range(n) 2loop
13:17:17
finish mi1 range(n) 2loop
13:17:17
start mi2
13:17:17
start mi2 range(p) 1 loop
13:17:17
finish mi2 range(p) 1 loop
13:17:17
start mi2 range(p) 2 loop
13:17:17
finish mi2 range(p) 2 loop
13:17:17
start mi2 range(NT) loop
13:17:17
finish mi2 range(NT) loop
13:17:17
start mi2 range(n) loop
13:17:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:17:17
start mi2 range(n) 2loop
13:17:17
finish mi2 range(n) 2loop
13:17:17
[[-2.62193572]]
end mi2 loop
13:17:17
estep
13:17:17
end estep
13:17:33
end pa13:17:33
goodness of fit correlation [0.31656893]
start cluster 13:17:33
6
parallel submitted
13:17:57
parallel finished
13:24:06
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:24:24
start mi0
13:24:24
start mi0 range(p) 1 loop
13:24:24
finish mi0 range(p) 1 loop
13:24:24
start mi0 range(p) 2 loop
13:24:24
finish mi0 range(p) 2 loop
13:24:24
start mi0 range(NT) loop
13:24:24
finish mi0 range(NT) loop
13:24:24
start mi0 range(n) loop
13:24:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:24:24
start mi0 range(n) 2loop
13:24:24
finish mi0 range(n) 2loop
13:24:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:24:24
start mi1 range(p) 1 loop
13:24:24
finish mi1 range(p) 1 loop
13:24:24
start mi1 range(p) 2 loop
13:24:24
finish mi1 range(p) 2 loop
13:24:24
start mi1 range(NT) loop
13:24:24
finish mi1 range(NT) loop
13:24:24
start mi1 range(n) loop
13:24:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:24:24
start mi1 range(n) 2loop
13:24:24
finish mi1 range(n) 2loop
13:24:25
start mi2
13:24:25
start mi2 range(p) 1 loop
13:24:25
finish mi2 range(p) 1 loop
13:24:25
start mi2 range(p) 2 loop
13:24:25
finish mi2 range(p) 2 loop
13:24:25
start mi2 range(NT) loop
13:24:25
finish mi2 range(NT) loop
13:24:25
start mi2 range(n) loop
13:24:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:24:25
start mi2 range(n) 2loop
13:24:25
finish mi2 range(n) 2loop
13:24:25
start mi3
13:24:25
start mi3 range(p) 1 loop
13:24:25
finish mi3 range(p) 1 loop
13:24:25
start mi3 range(p) 2 loop
13:24:25
finish mi3 range(p) 2 loop
13:24:25
start mi3 range(NT) loop
13:24:25
finish mi3 range(NT) loop
13:24:25
start mi3 range(n) loop
13:24:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:24:25
start mi3 range(n) 2loop
13:24:25
finish mi3 range(n) 2loop
13:24:25
[[-2.50338847]]
end mi3 loop
13:24:25
estep
13:24:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:24:42
start ppi1
13:24:42
start mi0
13:24:42
start mi0 range(p) 1 loop
13:24:42
finish mi0 range(p) 1 loop
13:24:42
start mi0 range(p) 2 loop
13:24:42
finish mi0 range(p) 2 loop
13:24:42
start mi0 range(NT) loop
13:24:42
finish mi0 range(NT) loop
13:24:42
start mi0 range(n) loop
13:24:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:24:42
start mi0 range(n) 2loop
13:24:42
finish mi0 range(n) 2loop
13:24:43
start mi1
13:24:43
start mi1 range(p) 1 loop
13:24:43
finish mi1 range(p) 1 loop
13:24:43
start mi1 range(p) 2 loop
13:24:43
finish mi1 range(p) 2 loop
13:24:43
start mi1 range(NT) loop
13:24:43
finish mi1 range(NT) loop
13:24:43
start mi1 range(n) loop
13:24:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:24:43
start mi1 range(n) 2loop
13:24:43
finish mi1 range(n) 2loop
13:24:43
start mi2
13:24:43
start mi2 range(p) 1 loop
13:24:43
finish mi2 range(p) 1 loop
13:24:43
start mi2 range(p) 2 loop
13:24:43
finish mi2 range(p) 2 loop
13:24:43
start mi2 range(NT) loop
13:24:43
finish mi2 range(NT) loop
13:24:43
start mi2 range(n) loop
13:24:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:24:43
start mi2 range(n) 2loop
13:24:43
finish mi2 range(n) 2loop
13:24:43
[[-2.56586384]]
end mi2 loop
13:24:43
estep
13:24:43
end estep
13:24:59
end pa13:24:59
goodness of fit correlation [0.20297888]
0.3165689313628551
[5.26564872e-01 5.61328088e-01 5.51764350e-01 5.10235526e-01
 4.93775042e-01 5.65595814e-01 6.03541916e-01 6.14880595e-01
 5.36431646e-01 6.31428066e-01 5.39341561e-01 5.07687617e-01
 5.79710123e-01 5.69905095e-01 4.96780303e-01 5.97691061e-01
 5.68226685e-01 5.12033395e-01 5.48525252e-01 4.97955383e-01
 6.26351918e-01 6.08978695e-01 4.99875054e-01 5.73715381e-01
 5.31451809e-01 5.72370587e-01 5.01671437e-01 4.85064153e-01
 5.13309787e-01 6.29892479e-01 5.11489526e-01 4.62037467e-01
 5.11262534e-01 6.09923396e-01 5.29703488e-01 5.44032325e-01
 5.40162714e-01 5.04414107e-01 4.96530959e-01 5.37664346e-01
 5.28654526e-01 5.60659905e-01 5.42127395e-01 5.06411963e-01
 5.36530489e-01 5.20078155e-01 5.70056483e-01 5.68696349e-01
 5.05581375e-01 6.10828422e-01 5.80402891e-01 4.91393895e-01
 5.44322303e-01 5.22838304e-01 6.48076488e-01 6.11122227e-01
 4.99815239e-01 5.26541432e-01 5.16825054e-01 5.58037778e-01
 5.00454306e-01 4.72606493e-01 5.39224824e-01 5.25187647e-01
 5.45421284e-01 4.94868242e-01 5.05715546e-01 5.87211899e-01
 3.68746263e-01 3.68629017e-01 3.33017539e-01 3.29413385e-01
 3.06312685e-01 3.54611376e-01 3.38953179e-01 3.66507173e-01
 3.68335922e-01 3.53977415e-01 3.90018992e-01 3.56649363e-01
 3.71529629e-01 3.40721415e-01 3.20090310e-01 3.43403863e-01
 3.40292169e-01 3.48234566e-01 3.69287214e-01 3.33887898e-01
 3.37548603e-01 3.64319480e-01 3.46040478e-01 3.35995721e-01
 3.78413512e-01 3.40352675e-01 3.22984981e-01 3.30679238e-01
 3.42223646e-01 3.57765300e-01 3.52392664e-01 3.25826157e-01
 3.46942591e-01 3.57956764e-01 3.72746843e-01 3.53997893e-01
 3.33712480e-01 3.29506132e-01 3.05825754e-01 3.30139136e-01
 3.36562383e-01 3.49772945e-01 3.64081208e-01 3.22860541e-01
 3.66715180e-01 3.45944751e-01 3.65362969e-01 3.31085980e-01
 3.14435316e-01 3.38093025e-01 3.49318979e-01 3.06088532e-01
 3.78419483e-01 3.30859732e-01 3.41720806e-01 3.61735851e-01
 3.49234286e-01 3.37872750e-01 3.70133931e-01 3.35879549e-01
 3.21464182e-01 3.33682770e-01 3.24491938e-01 3.40145038e-01
 3.50947617e-01 3.02612643e-01 3.29965921e-01 3.40968443e-01
 1.47762212e+00 1.00807259e-03]
start cluster 13:24:59
0
parallel submitted
13:25:23
parallel finished
13:31:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:31:25
start mi0
13:31:25
start mi0 range(p) 1 loop
13:31:25
finish mi0 range(p) 1 loop
13:31:25
start mi0 range(p) 2 loop
13:31:25
finish mi0 range(p) 2 loop
13:31:25
start mi0 range(NT) loop
13:31:25
finish mi0 range(NT) loop
13:31:25
start mi0 range(n) loop
13:31:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:31:25
start mi0 range(n) 2loop
13:31:25
finish mi0 range(n) 2loop
13:31:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:31:25
start mi1 range(p) 1 loop
13:31:25
finish mi1 range(p) 1 loop
13:31:25
start mi1 range(p) 2 loop
13:31:25
finish mi1 range(p) 2 loop
13:31:25
start mi1 range(NT) loop
13:31:25
finish mi1 range(NT) loop
13:31:25
start mi1 range(n) loop
13:31:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:31:25
start mi1 range(n) 2loop
13:31:25
finish mi1 range(n) 2loop
13:31:25
start mi2
13:31:25
start mi2 range(p) 1 loop
13:31:25
finish mi2 range(p) 1 loop
13:31:25
start mi2 range(p) 2 loop
13:31:25
finish mi2 range(p) 2 loop
13:31:25
start mi2 range(NT) loop
13:31:25
finish mi2 range(NT) loop
13:31:26
start mi2 range(n) loop
13:31:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:31:26
start mi2 range(n) 2loop
13:31:26
finish mi2 range(n) 2loop
13:31:26
start mi3
13:31:26
start mi3 range(p) 1 loop
13:31:26
finish mi3 range(p) 1 loop
13:31:26
start mi3 range(p) 2 loop
13:31:26
finish mi3 range(p) 2 loop
13:31:26
start mi3 range(NT) loop
13:31:26
finish mi3 range(NT) loop
13:31:26
start mi3 range(n) loop
13:31:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:31:26
start mi3 range(n) 2loop
13:31:26
finish mi3 range(n) 2loop
13:31:26
[[-2.34963911]]
end mi3 loop
13:31:26
estep
13:31:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:31:42
start ppi1
13:31:42
start mi0
13:31:42
start mi0 range(p) 1 loop
13:31:42
finish mi0 range(p) 1 loop
13:31:42
start mi0 range(p) 2 loop
13:31:42
finish mi0 range(p) 2 loop
13:31:42
start mi0 range(NT) loop
13:31:42
finish mi0 range(NT) loop
13:31:42
start mi0 range(n) loop
13:31:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:31:42
start mi0 range(n) 2loop
13:31:42
finish mi0 range(n) 2loop
13:31:42
start mi1
13:31:42
start mi1 range(p) 1 loop
13:31:42
finish mi1 range(p) 1 loop
13:31:42
start mi1 range(p) 2 loop
13:31:42
finish mi1 range(p) 2 loop
13:31:42
start mi1 range(NT) loop
13:31:42
finish mi1 range(NT) loop
13:31:42
start mi1 range(n) loop
13:31:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:31:43
start mi1 range(n) 2loop
13:31:43
finish mi1 range(n) 2loop
13:31:43
start mi2
13:31:43
start mi2 range(p) 1 loop
13:31:43
finish mi2 range(p) 1 loop
13:31:43
start mi2 range(p) 2 loop
13:31:43
finish mi2 range(p) 2 loop
13:31:43
start mi2 range(NT) loop
13:31:43
finish mi2 range(NT) loop
13:31:43
start mi2 range(n) loop
13:31:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:31:43
start mi2 range(n) 2loop
13:31:43
finish mi2 range(n) 2loop
13:31:43
start mi3
13:31:43
start mi3 range(p) 1 loop
13:31:43
finish mi3 range(p) 1 loop
13:31:43
start mi3 range(p) 2 loop
13:31:43
finish mi3 range(p) 2 loop
13:31:43
start mi3 range(NT) loop
13:31:43
finish mi3 range(NT) loop
13:31:43
start mi3 range(n) loop
13:31:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:31:43
start mi3 range(n) 2loop
13:31:43
finish mi3 range(n) 2loop
13:31:43
[[-2.34963911]]
end mi3 loop
13:31:43
estep
13:31:43
end estep
13:31:59
end pa13:31:59
goodness of fit correlation [0.07311538]
start cluster 13:31:59
1
parallel submitted
13:32:23
parallel finished
13:38:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:38:58
start mi0
13:38:58
start mi0 range(p) 1 loop
13:38:58
finish mi0 range(p) 1 loop
13:38:58
start mi0 range(p) 2 loop
13:38:58
finish mi0 range(p) 2 loop
13:38:58
start mi0 range(NT) loop
13:38:58
finish mi0 range(NT) loop
13:38:58
start mi0 range(n) loop
13:38:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:38:58
start mi0 range(n) 2loop
13:38:58
finish mi0 range(n) 2loop
13:38:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:38:59
start mi1 range(p) 1 loop
13:38:59
finish mi1 range(p) 1 loop
13:38:59
start mi1 range(p) 2 loop
13:38:59
finish mi1 range(p) 2 loop
13:38:59
start mi1 range(NT) loop
13:38:59
finish mi1 range(NT) loop
13:38:59
start mi1 range(n) loop
13:38:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:38:59
start mi1 range(n) 2loop
13:38:59
finish mi1 range(n) 2loop
13:38:59
start mi2
13:38:59
start mi2 range(p) 1 loop
13:38:59
finish mi2 range(p) 1 loop
13:38:59
start mi2 range(p) 2 loop
13:38:59
finish mi2 range(p) 2 loop
13:38:59
start mi2 range(NT) loop
13:38:59
finish mi2 range(NT) loop
13:38:59
start mi2 range(n) loop
13:38:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:38:59
start mi2 range(n) 2loop
13:38:59
finish mi2 range(n) 2loop
13:38:59
start mi3
13:38:59
start mi3 range(p) 1 loop
13:38:59
finish mi3 range(p) 1 loop
13:38:59
start mi3 range(p) 2 loop
13:38:59
finish mi3 range(p) 2 loop
13:38:59
start mi3 range(NT) loop
13:38:59
finish mi3 range(NT) loop
13:38:59
start mi3 range(n) loop
13:38:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:38:59
start mi3 range(n) 2loop
13:38:59
finish mi3 range(n) 2loop
13:38:59
[[-2.35092347]]
end mi3 loop
13:38:59
estep
13:38:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:39:15
start ppi1
13:39:15
start mi0
13:39:15
start mi0 range(p) 1 loop
13:39:15
finish mi0 range(p) 1 loop
13:39:15
start mi0 range(p) 2 loop
13:39:15
finish mi0 range(p) 2 loop
13:39:15
start mi0 range(NT) loop
13:39:16
finish mi0 range(NT) loop
13:39:16
start mi0 range(n) loop
13:39:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:39:16
start mi0 range(n) 2loop
13:39:16
finish mi0 range(n) 2loop
13:39:16
start mi1
13:39:16
start mi1 range(p) 1 loop
13:39:16
finish mi1 range(p) 1 loop
13:39:16
start mi1 range(p) 2 loop
13:39:16
finish mi1 range(p) 2 loop
13:39:16
start mi1 range(NT) loop
13:39:16
finish mi1 range(NT) loop
13:39:16
start mi1 range(n) loop
13:39:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:39:16
start mi1 range(n) 2loop
13:39:16
finish mi1 range(n) 2loop
13:39:16
start mi2
13:39:16
start mi2 range(p) 1 loop
13:39:16
finish mi2 range(p) 1 loop
13:39:16
start mi2 range(p) 2 loop
13:39:16
finish mi2 range(p) 2 loop
13:39:16
start mi2 range(NT) loop
13:39:16
finish mi2 range(NT) loop
13:39:16
start mi2 range(n) loop
13:39:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:39:16
start mi2 range(n) 2loop
13:39:16
finish mi2 range(n) 2loop
13:39:16
start mi3
13:39:16
start mi3 range(p) 1 loop
13:39:16
finish mi3 range(p) 1 loop
13:39:16
start mi3 range(p) 2 loop
13:39:16
finish mi3 range(p) 2 loop
13:39:16
start mi3 range(NT) loop
13:39:16
finish mi3 range(NT) loop
13:39:16
start mi3 range(n) loop
13:39:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:39:16
start mi3 range(n) 2loop
13:39:16
finish mi3 range(n) 2loop
13:39:17
[[-2.41341561]]
end mi3 loop
13:39:17
estep
13:39:17
end estep
13:39:34
end pa13:39:34
goodness of fit correlation [0.19080002]
start cluster 13:39:34
2
parallel submitted
13:40:01
parallel finished
13:45:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:45:19
start mi0
13:45:19
start mi0 range(p) 1 loop
13:45:19
finish mi0 range(p) 1 loop
13:45:19
start mi0 range(p) 2 loop
13:45:19
finish mi0 range(p) 2 loop
13:45:19
start mi0 range(NT) loop
13:45:19
finish mi0 range(NT) loop
13:45:19
start mi0 range(n) loop
13:45:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:45:19
start mi0 range(n) 2loop
13:45:19
finish mi0 range(n) 2loop
13:45:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:45:19
start mi1 range(p) 1 loop
13:45:19
finish mi1 range(p) 1 loop
13:45:19
start mi1 range(p) 2 loop
13:45:19
finish mi1 range(p) 2 loop
13:45:19
start mi1 range(NT) loop
13:45:19
finish mi1 range(NT) loop
13:45:19
start mi1 range(n) loop
13:45:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:45:19
start mi1 range(n) 2loop
13:45:19
finish mi1 range(n) 2loop
13:45:20
start mi2
13:45:20
start mi2 range(p) 1 loop
13:45:20
finish mi2 range(p) 1 loop
13:45:20
start mi2 range(p) 2 loop
13:45:20
finish mi2 range(p) 2 loop
13:45:20
start mi2 range(NT) loop
13:45:20
finish mi2 range(NT) loop
13:45:20
start mi2 range(n) loop
13:45:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:45:20
start mi2 range(n) 2loop
13:45:20
finish mi2 range(n) 2loop
13:45:20
start mi3
13:45:20
start mi3 range(p) 1 loop
13:45:20
finish mi3 range(p) 1 loop
13:45:20
start mi3 range(p) 2 loop
13:45:20
finish mi3 range(p) 2 loop
13:45:20
start mi3 range(NT) loop
13:45:20
finish mi3 range(NT) loop
13:45:20
start mi3 range(n) loop
13:45:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:45:20
start mi3 range(n) 2loop
13:45:20
finish mi3 range(n) 2loop
13:45:20
[[-2.45108311]]
end mi3 loop
13:45:20
estep
13:45:20
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:45:36
start ppi1
13:45:36
start mi0
13:45:36
start mi0 range(p) 1 loop
13:45:36
finish mi0 range(p) 1 loop
13:45:36
start mi0 range(p) 2 loop
13:45:36
finish mi0 range(p) 2 loop
13:45:36
start mi0 range(NT) loop
13:45:36
finish mi0 range(NT) loop
13:45:36
start mi0 range(n) loop
13:45:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:45:36
start mi0 range(n) 2loop
13:45:36
finish mi0 range(n) 2loop
13:45:36
start mi1
13:45:36
start mi1 range(p) 1 loop
13:45:36
finish mi1 range(p) 1 loop
13:45:36
start mi1 range(p) 2 loop
13:45:36
finish mi1 range(p) 2 loop
13:45:36
start mi1 range(NT) loop
13:45:37
finish mi1 range(NT) loop
13:45:37
start mi1 range(n) loop
13:45:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:45:37
start mi1 range(n) 2loop
13:45:37
finish mi1 range(n) 2loop
13:45:37
start mi2
13:45:37
start mi2 range(p) 1 loop
13:45:37
finish mi2 range(p) 1 loop
13:45:37
start mi2 range(p) 2 loop
13:45:37
finish mi2 range(p) 2 loop
13:45:37
start mi2 range(NT) loop
13:45:37
finish mi2 range(NT) loop
13:45:37
start mi2 range(n) loop
13:45:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:45:37
start mi2 range(n) 2loop
13:45:37
finish mi2 range(n) 2loop
13:45:37
[[-2.51353143]]
end mi2 loop
13:45:37
estep
13:45:37
end estep
13:45:55
end pa13:45:55
goodness of fit correlation [0.22174544]
start cluster 13:45:55
3
parallel submitted
13:46:22
parallel finished
13:51:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:51:37
start mi0
13:51:37
start mi0 range(p) 1 loop
13:51:37
finish mi0 range(p) 1 loop
13:51:37
start mi0 range(p) 2 loop
13:51:37
finish mi0 range(p) 2 loop
13:51:37
start mi0 range(NT) loop
13:51:37
finish mi0 range(NT) loop
13:51:37
start mi0 range(n) loop
13:51:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:51:37
start mi0 range(n) 2loop
13:51:37
finish mi0 range(n) 2loop
13:51:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:51:37
start mi1 range(p) 1 loop
13:51:37
finish mi1 range(p) 1 loop
13:51:37
start mi1 range(p) 2 loop
13:51:37
finish mi1 range(p) 2 loop
13:51:37
start mi1 range(NT) loop
13:51:37
finish mi1 range(NT) loop
13:51:37
start mi1 range(n) loop
13:51:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:51:38
start mi1 range(n) 2loop
13:51:38
finish mi1 range(n) 2loop
13:51:38
start mi2
13:51:38
start mi2 range(p) 1 loop
13:51:38
finish mi2 range(p) 1 loop
13:51:38
start mi2 range(p) 2 loop
13:51:38
finish mi2 range(p) 2 loop
13:51:38
start mi2 range(NT) loop
13:51:38
finish mi2 range(NT) loop
13:51:38
start mi2 range(n) loop
13:51:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:51:38
start mi2 range(n) 2loop
13:51:38
finish mi2 range(n) 2loop
13:51:38
start mi3
13:51:38
start mi3 range(p) 1 loop
13:51:38
finish mi3 range(p) 1 loop
13:51:38
start mi3 range(p) 2 loop
13:51:38
finish mi3 range(p) 2 loop
13:51:38
start mi3 range(NT) loop
13:51:38
finish mi3 range(NT) loop
13:51:38
start mi3 range(n) loop
13:51:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:51:38
start mi3 range(n) 2loop
13:51:38
finish mi3 range(n) 2loop
13:51:38
[[-2.46934388]]
end mi3 loop
13:51:38
estep
13:51:38
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:51:54
start ppi1
13:51:54
start mi0
13:51:54
start mi0 range(p) 1 loop
13:51:54
finish mi0 range(p) 1 loop
13:51:54
start mi0 range(p) 2 loop
13:51:54
finish mi0 range(p) 2 loop
13:51:54
start mi0 range(NT) loop
13:51:54
finish mi0 range(NT) loop
13:51:54
start mi0 range(n) loop
13:51:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:51:54
start mi0 range(n) 2loop
13:51:54
finish mi0 range(n) 2loop
13:51:55
start mi1
13:51:55
start mi1 range(p) 1 loop
13:51:55
finish mi1 range(p) 1 loop
13:51:55
start mi1 range(p) 2 loop
13:51:55
finish mi1 range(p) 2 loop
13:51:55
start mi1 range(NT) loop
13:51:55
finish mi1 range(NT) loop
13:51:55
start mi1 range(n) loop
13:51:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:51:55
start mi1 range(n) 2loop
13:51:55
finish mi1 range(n) 2loop
13:51:55
start mi2
13:51:55
start mi2 range(p) 1 loop
13:51:55
finish mi2 range(p) 1 loop
13:51:55
start mi2 range(p) 2 loop
13:51:55
finish mi2 range(p) 2 loop
13:51:55
start mi2 range(NT) loop
13:51:55
finish mi2 range(NT) loop
13:51:55
start mi2 range(n) loop
13:51:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:51:55
start mi2 range(n) 2loop
13:51:55
finish mi2 range(n) 2loop
13:51:55
[[-2.53180431]]
end mi2 loop
13:51:55
estep
13:51:55
end estep
13:52:11
end pa13:52:11
goodness of fit correlation [0.2470009]
start cluster 13:52:11
4
parallel submitted
13:52:37
slurmstepd: error: *** JOB 1823823 ON nodeb19 CANCELLED AT 2020-11-06T13:53:19 ***
