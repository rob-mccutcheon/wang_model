19
subject 1025_01_MR
start cluster 09:36:17
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45993 instead
  warnings.warn(
0
parallel submitted
09:36:33
parallel finished
09:43:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:43:04
start mi0
09:43:04
start mi0 range(p) 1 loop
09:43:04
finish mi0 range(p) 1 loop
09:43:04
start mi0 range(p) 2 loop
09:43:04
finish mi0 range(p) 2 loop
09:43:04
start mi0 range(NT) loop
09:43:05
finish mi0 range(NT) loop
09:43:05
start mi0 range(n) loop
09:43:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:43:05
start mi0 range(n) 2loop
09:43:05
finish mi0 range(n) 2loop
09:43:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:43:05
start mi1 range(p) 1 loop
09:43:05
finish mi1 range(p) 1 loop
09:43:05
start mi1 range(p) 2 loop
09:43:05
finish mi1 range(p) 2 loop
09:43:05
start mi1 range(NT) loop
09:43:05
finish mi1 range(NT) loop
09:43:05
start mi1 range(n) loop
09:43:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:43:05
start mi1 range(n) 2loop
09:43:05
finish mi1 range(n) 2loop
09:43:05
start mi2
09:43:05
start mi2 range(p) 1 loop
09:43:05
finish mi2 range(p) 1 loop
09:43:05
start mi2 range(p) 2 loop
09:43:05
finish mi2 range(p) 2 loop
09:43:05
start mi2 range(NT) loop
09:43:05
finish mi2 range(NT) loop
09:43:05
start mi2 range(n) loop
09:43:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:43:05
start mi2 range(n) 2loop
09:43:05
finish mi2 range(n) 2loop
09:43:05
[[-2.84834401]]
end mi2 loop
09:43:05
estep
09:43:05
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:43:20
start ppi1
09:43:20
start mi0
09:43:20
start mi0 range(p) 1 loop
09:43:20
finish mi0 range(p) 1 loop
09:43:20
start mi0 range(p) 2 loop
09:43:20
finish mi0 range(p) 2 loop
09:43:20
start mi0 range(NT) loop
09:43:20
finish mi0 range(NT) loop
09:43:20
start mi0 range(n) loop
09:43:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:43:20
start mi0 range(n) 2loop
09:43:20
finish mi0 range(n) 2loop
09:43:21
start mi1
09:43:21
start mi1 range(p) 1 loop
09:43:21
finish mi1 range(p) 1 loop
09:43:21
start mi1 range(p) 2 loop
09:43:21
finish mi1 range(p) 2 loop
09:43:21
start mi1 range(NT) loop
09:43:21
finish mi1 range(NT) loop
09:43:21
start mi1 range(n) loop
09:43:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:43:21
start mi1 range(n) 2loop
09:43:21
finish mi1 range(n) 2loop
09:43:21
start mi2
09:43:21
start mi2 range(p) 1 loop
09:43:21
finish mi2 range(p) 1 loop
09:43:21
start mi2 range(p) 2 loop
09:43:21
finish mi2 range(p) 2 loop
09:43:21
start mi2 range(NT) loop
09:43:21
finish mi2 range(NT) loop
09:43:21
start mi2 range(n) loop
09:43:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:43:21
start mi2 range(n) 2loop
09:43:21
finish mi2 range(n) 2loop
09:43:21
[[-2.84834401]]
end mi2 loop
09:43:21
estep
09:43:21
end estep
09:43:36
end pa09:43:36
goodness of fit correlation [0.04620578]
start cluster 09:43:36
1
parallel submitted
09:43:54
parallel finished
09:49:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:49:45
start mi0
09:49:45
start mi0 range(p) 1 loop
09:49:45
finish mi0 range(p) 1 loop
09:49:45
start mi0 range(p) 2 loop
09:49:45
finish mi0 range(p) 2 loop
09:49:45
start mi0 range(NT) loop
09:49:45
finish mi0 range(NT) loop
09:49:45
start mi0 range(n) loop
09:49:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:49:45
start mi0 range(n) 2loop
09:49:45
finish mi0 range(n) 2loop
09:49:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:49:45
start mi1 range(p) 1 loop
09:49:45
finish mi1 range(p) 1 loop
09:49:45
start mi1 range(p) 2 loop
09:49:45
finish mi1 range(p) 2 loop
09:49:45
start mi1 range(NT) loop
09:49:45
finish mi1 range(NT) loop
09:49:45
start mi1 range(n) loop
09:49:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:49:45
start mi1 range(n) 2loop
09:49:45
finish mi1 range(n) 2loop
09:49:45
[[-2.86451334]]
end mi1 loop
09:49:45
estep
09:49:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:50:01
start ppi1
09:50:01
start mi0
09:50:01
start mi0 range(p) 1 loop
09:50:01
finish mi0 range(p) 1 loop
09:50:01
start mi0 range(p) 2 loop
09:50:01
finish mi0 range(p) 2 loop
09:50:01
start mi0 range(NT) loop
09:50:01
finish mi0 range(NT) loop
09:50:01
start mi0 range(n) loop
09:50:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:50:01
start mi0 range(n) 2loop
09:50:01
finish mi0 range(n) 2loop
09:50:01
start mi1
09:50:01
start mi1 range(p) 1 loop
09:50:01
finish mi1 range(p) 1 loop
09:50:01
start mi1 range(p) 2 loop
09:50:01
finish mi1 range(p) 2 loop
09:50:01
start mi1 range(NT) loop
09:50:01
finish mi1 range(NT) loop
09:50:01
start mi1 range(n) loop
09:50:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:50:01
start mi1 range(n) 2loop
09:50:01
finish mi1 range(n) 2loop
09:50:01
[[-2.9270476]]
end mi1 loop
09:50:01
estep
09:50:01
end estep
09:50:16
end pa09:50:16
goodness of fit correlation [0.08359304]
start cluster 09:50:16
2
parallel submitted
09:50:33
parallel finished
09:56:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:56:56
start mi0
09:56:56
start mi0 range(p) 1 loop
09:56:56
finish mi0 range(p) 1 loop
09:56:56
start mi0 range(p) 2 loop
09:56:56
finish mi0 range(p) 2 loop
09:56:56
start mi0 range(NT) loop
09:56:56
finish mi0 range(NT) loop
09:56:56
start mi0 range(n) loop
09:56:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:56:56
start mi0 range(n) 2loop
09:56:56
finish mi0 range(n) 2loop
09:56:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:56:56
start mi1 range(p) 1 loop
09:56:56
finish mi1 range(p) 1 loop
09:56:56
start mi1 range(p) 2 loop
09:56:56
finish mi1 range(p) 2 loop
09:56:56
start mi1 range(NT) loop
09:56:56
finish mi1 range(NT) loop
09:56:56
start mi1 range(n) loop
09:56:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:56:56
start mi1 range(n) 2loop
09:56:56
finish mi1 range(n) 2loop
09:56:57
[[-2.90220026]]
end mi1 loop
09:56:57
estep
09:56:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:57:11
start ppi1
09:57:11
start mi0
09:57:11
start mi0 range(p) 1 loop
09:57:11
finish mi0 range(p) 1 loop
09:57:11
start mi0 range(p) 2 loop
09:57:11
finish mi0 range(p) 2 loop
09:57:11
start mi0 range(NT) loop
09:57:11
finish mi0 range(NT) loop
09:57:11
start mi0 range(n) loop
09:57:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:57:11
start mi0 range(n) 2loop
09:57:11
finish mi0 range(n) 2loop
09:57:11
start mi1
09:57:11
start mi1 range(p) 1 loop
09:57:11
finish mi1 range(p) 1 loop
09:57:11
start mi1 range(p) 2 loop
09:57:11
finish mi1 range(p) 2 loop
09:57:11
start mi1 range(NT) loop
09:57:11
finish mi1 range(NT) loop
09:57:11
start mi1 range(n) loop
09:57:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:57:11
start mi1 range(n) 2loop
09:57:11
finish mi1 range(n) 2loop
09:57:11
[[-2.96470429]]
end mi1 loop
09:57:11
estep
09:57:11
end estep
09:57:26
end pa09:57:26
goodness of fit correlation [0.12687691]
start cluster 09:57:26
3
parallel submitted
09:57:43
parallel finished
10:01:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:01:07
start mi0
10:01:07
start mi0 range(p) 1 loop
10:01:07
finish mi0 range(p) 1 loop
10:01:07
start mi0 range(p) 2 loop
10:01:07
finish mi0 range(p) 2 loop
10:01:07
start mi0 range(NT) loop
10:01:07
finish mi0 range(NT) loop
10:01:07
start mi0 range(n) loop
10:01:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:01:07
start mi0 range(n) 2loop
10:01:07
finish mi0 range(n) 2loop
10:01:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:01:07
start mi1 range(p) 1 loop
10:01:07
finish mi1 range(p) 1 loop
10:01:07
start mi1 range(p) 2 loop
10:01:07
finish mi1 range(p) 2 loop
10:01:07
start mi1 range(NT) loop
10:01:07
finish mi1 range(NT) loop
10:01:07
start mi1 range(n) loop
10:01:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:01:07
start mi1 range(n) 2loop
10:01:07
finish mi1 range(n) 2loop
10:01:07
[[-2.92736912]]
end mi1 loop
10:01:07
estep
10:01:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:01:22
start ppi1
10:01:22
start mi0
10:01:22
start mi0 range(p) 1 loop
10:01:22
finish mi0 range(p) 1 loop
10:01:22
start mi0 range(p) 2 loop
10:01:22
finish mi0 range(p) 2 loop
10:01:22
start mi0 range(NT) loop
10:01:22
finish mi0 range(NT) loop
10:01:22
start mi0 range(n) loop
10:01:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:01:22
start mi0 range(n) 2loop
10:01:22
finish mi0 range(n) 2loop
10:01:22
start mi1
10:01:22
start mi1 range(p) 1 loop
10:01:22
finish mi1 range(p) 1 loop
10:01:22
start mi1 range(p) 2 loop
10:01:22
finish mi1 range(p) 2 loop
10:01:22
start mi1 range(NT) loop
10:01:22
finish mi1 range(NT) loop
10:01:22
start mi1 range(n) loop
10:01:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:01:22
start mi1 range(n) 2loop
10:01:22
finish mi1 range(n) 2loop
10:01:22
[[-2.9898648]]
end mi1 loop
10:01:22
estep
10:01:22
end estep
10:01:36
end pa10:01:36
goodness of fit correlation [0.17024236]
start cluster 10:01:36
4
parallel submitted
10:01:51
parallel finished
10:08:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:08:43
start mi0
10:08:43
start mi0 range(p) 1 loop
10:08:43
finish mi0 range(p) 1 loop
10:08:43
start mi0 range(p) 2 loop
10:08:43
finish mi0 range(p) 2 loop
10:08:43
start mi0 range(NT) loop
10:08:44
finish mi0 range(NT) loop
10:08:44
start mi0 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:08:44
start mi0 range(n) 2loop
10:08:44
finish mi0 range(n) 2loop
10:08:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:08:44
start mi1 range(p) 1 loop
10:08:44
finish mi1 range(p) 1 loop
10:08:44
start mi1 range(p) 2 loop
10:08:44
finish mi1 range(p) 2 loop
10:08:44
start mi1 range(NT) loop
10:08:44
finish mi1 range(NT) loop
10:08:44
start mi1 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:08:44
start mi1 range(n) 2loop
10:08:44
finish mi1 range(n) 2loop
10:08:44
[[-2.9383146]]
end mi1 loop
10:08:44
estep
10:08:44
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:08:58
start ppi1
10:08:58
start mi0
10:08:58
start mi0 range(p) 1 loop
10:08:58
finish mi0 range(p) 1 loop
10:08:58
start mi0 range(p) 2 loop
10:08:58
finish mi0 range(p) 2 loop
10:08:58
start mi0 range(NT) loop
10:08:58
finish mi0 range(NT) loop
10:08:58
start mi0 range(n) loop
10:08:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:08:58
start mi0 range(n) 2loop
10:08:58
finish mi0 range(n) 2loop
10:08:59
[[-3.0008082]]
end mi0 loop
10:08:59
estep
10:08:59
end estep
10:09:13
end pa10:09:13
goodness of fit correlation [0.18558111]
start cluster 10:09:13
5
parallel submitted
10:09:28
parallel finished
10:14:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:14:07
start mi0
10:14:07
start mi0 range(p) 1 loop
10:14:07
finish mi0 range(p) 1 loop
10:14:07
start mi0 range(p) 2 loop
10:14:07
finish mi0 range(p) 2 loop
10:14:07
start mi0 range(NT) loop
10:14:07
finish mi0 range(NT) loop
10:14:07
start mi0 range(n) loop
10:14:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:14:07
start mi0 range(n) 2loop
10:14:07
finish mi0 range(n) 2loop
10:14:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:14:07
start mi1 range(p) 1 loop
10:14:07
finish mi1 range(p) 1 loop
10:14:07
start mi1 range(p) 2 loop
10:14:07
finish mi1 range(p) 2 loop
10:14:07
start mi1 range(NT) loop
10:14:07
finish mi1 range(NT) loop
10:14:07
start mi1 range(n) loop
10:14:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:14:07
start mi1 range(n) 2loop
10:14:07
finish mi1 range(n) 2loop
10:14:07
[[-2.94335373]]
end mi1 loop
10:14:07
estep
10:14:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:14:22
start ppi1
10:14:22
start mi0
10:14:22
start mi0 range(p) 1 loop
10:14:22
finish mi0 range(p) 1 loop
10:14:22
start mi0 range(p) 2 loop
10:14:22
finish mi0 range(p) 2 loop
10:14:22
start mi0 range(NT) loop
10:14:22
finish mi0 range(NT) loop
10:14:22
start mi0 range(n) loop
10:14:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:14:22
start mi0 range(n) 2loop
10:14:22
finish mi0 range(n) 2loop
10:14:22
[[-3.00583004]]
end mi0 loop
10:14:22
estep
10:14:22
end estep
10:14:37
end pa10:14:37
goodness of fit correlation [0.18178685]
start cluster 10:14:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37605 instead
  warnings.warn(
6
parallel submitted
10:14:53
parallel finished
10:22:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:22:10
start mi0
10:22:10
start mi0 range(p) 1 loop
10:22:10
finish mi0 range(p) 1 loop
10:22:10
start mi0 range(p) 2 loop
10:22:10
finish mi0 range(p) 2 loop
10:22:10
start mi0 range(NT) loop
10:22:10
finish mi0 range(NT) loop
10:22:10
start mi0 range(n) loop
10:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:22:10
start mi0 range(n) 2loop
10:22:10
finish mi0 range(n) 2loop
10:22:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
[[-2.9968748]]
end mi0 loop
10:22:10
estep
10:22:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:22:24
start ppi1
10:22:24
start mi0
10:22:24
start mi0 range(p) 1 loop
10:22:24
finish mi0 range(p) 1 loop
10:22:24
start mi0 range(p) 2 loop
10:22:24
finish mi0 range(p) 2 loop
10:22:24
start mi0 range(NT) loop
10:22:24
finish mi0 range(NT) loop
10:22:24
start mi0 range(n) loop
10:22:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:22:24
start mi0 range(n) 2loop
10:22:24
finish mi0 range(n) 2loop
10:22:24
start mi1
10:22:24
start mi1 range(p) 1 loop
10:22:24
finish mi1 range(p) 1 loop
10:22:24
start mi1 range(p) 2 loop
10:22:24
finish mi1 range(p) 2 loop
10:22:24
start mi1 range(NT) loop
10:22:24
finish mi1 range(NT) loop
10:22:25
start mi1 range(n) loop
10:22:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:22:25
start mi1 range(n) 2loop
10:22:25
finish mi1 range(n) 2loop
10:22:25
[[-3.05937022]]
end mi1 loop
10:22:25
estep
10:22:25
end estep
10:22:39
end pa10:22:39
goodness of fit correlation [0.18727385]
start cluster 10:22:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40685 instead
  warnings.warn(
7
parallel submitted
10:22:54
parallel finished
10:28:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:28:51
start mi0
10:28:51
start mi0 range(p) 1 loop
10:28:51
finish mi0 range(p) 1 loop
10:28:51
start mi0 range(p) 2 loop
10:28:51
finish mi0 range(p) 2 loop
10:28:51
start mi0 range(NT) loop
10:28:51
finish mi0 range(NT) loop
10:28:51
start mi0 range(n) loop
10:28:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:28:51
start mi0 range(n) 2loop
10:28:51
finish mi0 range(n) 2loop
10:28:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
[[-2.99262767]]
end mi0 loop
10:28:51
estep
10:28:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:29:06
start ppi1
10:29:06
start mi0
10:29:06
start mi0 range(p) 1 loop
10:29:06
finish mi0 range(p) 1 loop
10:29:06
start mi0 range(p) 2 loop
10:29:06
finish mi0 range(p) 2 loop
10:29:06
start mi0 range(NT) loop
10:29:06
finish mi0 range(NT) loop
10:29:06
start mi0 range(n) loop
10:29:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:29:06
start mi0 range(n) 2loop
10:29:06
finish mi0 range(n) 2loop
10:29:06
start mi1
10:29:06
start mi1 range(p) 1 loop
10:29:06
finish mi1 range(p) 1 loop
10:29:06
start mi1 range(p) 2 loop
10:29:06
finish mi1 range(p) 2 loop
10:29:06
start mi1 range(NT) loop
10:29:06
finish mi1 range(NT) loop
10:29:06
start mi1 range(n) loop
10:29:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:29:06
start mi1 range(n) 2loop
10:29:06
finish mi1 range(n) 2loop
10:29:07
[[-3.05514563]]
end mi1 loop
10:29:07
estep
10:29:07
end estep
10:29:21
end pa10:29:21
goodness of fit correlation [0.21773286]
start cluster 10:29:21
8
parallel submitted
10:29:38
parallel finished
10:31:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:32:02
start mi0
10:32:02
start mi0 range(p) 1 loop
10:32:02
finish mi0 range(p) 1 loop
10:32:02
start mi0 range(p) 2 loop
10:32:02
finish mi0 range(p) 2 loop
10:32:02
start mi0 range(NT) loop
10:32:02
finish mi0 range(NT) loop
10:32:02
start mi0 range(n) loop
10:32:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:32:02
start mi0 range(n) 2loop
10:32:02
finish mi0 range(n) 2loop
10:32:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:32:02
start mi1 range(p) 1 loop
10:32:02
finish mi1 range(p) 1 loop
10:32:02
start mi1 range(p) 2 loop
10:32:02
finish mi1 range(p) 2 loop
10:32:02
start mi1 range(NT) loop
10:32:02
finish mi1 range(NT) loop
10:32:02
start mi1 range(n) loop
10:32:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:32:02
start mi1 range(n) 2loop
10:32:02
finish mi1 range(n) 2loop
10:32:02
[[-3.02169331]]
end mi1 loop
10:32:02
estep
10:32:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:32:17
start ppi1
10:32:17
start mi0
10:32:17
start mi0 range(p) 1 loop
10:32:17
finish mi0 range(p) 1 loop
10:32:17
start mi0 range(p) 2 loop
10:32:17
finish mi0 range(p) 2 loop
10:32:17
start mi0 range(NT) loop
10:32:17
finish mi0 range(NT) loop
10:32:17
start mi0 range(n) loop
10:32:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:32:17
start mi0 range(n) 2loop
10:32:17
finish mi0 range(n) 2loop
10:32:17
start mi1
10:32:17
start mi1 range(p) 1 loop
10:32:17
finish mi1 range(p) 1 loop
10:32:17
start mi1 range(p) 2 loop
10:32:17
finish mi1 range(p) 2 loop
10:32:17
start mi1 range(NT) loop
10:32:17
finish mi1 range(NT) loop
10:32:17
start mi1 range(n) loop
10:32:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:32:17
start mi1 range(n) 2loop
10:32:17
finish mi1 range(n) 2loop
10:32:17
[[-3.08417944]]
end mi1 loop
10:32:17
estep
10:32:17
end estep
10:32:32
end pa10:32:32
goodness of fit correlation [0.22952883]
start cluster 10:32:32
9
parallel submitted
10:32:48
parallel finished
10:35:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:35:50
start mi0
10:35:50
start mi0 range(p) 1 loop
10:35:50
finish mi0 range(p) 1 loop
10:35:50
start mi0 range(p) 2 loop
10:35:50
finish mi0 range(p) 2 loop
10:35:50
start mi0 range(NT) loop
10:35:50
finish mi0 range(NT) loop
10:35:50
start mi0 range(n) loop
10:35:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:35:50
start mi0 range(n) 2loop
10:35:50
finish mi0 range(n) 2loop
10:35:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:35:51
start mi1 range(p) 1 loop
10:35:51
finish mi1 range(p) 1 loop
10:35:51
start mi1 range(p) 2 loop
10:35:51
finish mi1 range(p) 2 loop
10:35:51
start mi1 range(NT) loop
10:35:51
finish mi1 range(NT) loop
10:35:51
start mi1 range(n) loop
10:35:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:35:51
start mi1 range(n) 2loop
10:35:51
finish mi1 range(n) 2loop
10:35:51
[[-3.02556906]]
end mi1 loop
10:35:51
estep
10:35:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:36:05
start ppi1
10:36:05
start mi0
10:36:05
start mi0 range(p) 1 loop
10:36:05
finish mi0 range(p) 1 loop
10:36:05
start mi0 range(p) 2 loop
10:36:05
finish mi0 range(p) 2 loop
10:36:05
start mi0 range(NT) loop
10:36:06
finish mi0 range(NT) loop
10:36:06
start mi0 range(n) loop
10:36:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:36:06
start mi0 range(n) 2loop
10:36:06
finish mi0 range(n) 2loop
10:36:06
start mi1
10:36:06
start mi1 range(p) 1 loop
10:36:06
finish mi1 range(p) 1 loop
10:36:06
start mi1 range(p) 2 loop
10:36:06
finish mi1 range(p) 2 loop
10:36:06
start mi1 range(NT) loop
10:36:06
finish mi1 range(NT) loop
10:36:06
start mi1 range(n) loop
10:36:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:36:06
start mi1 range(n) 2loop
10:36:06
finish mi1 range(n) 2loop
10:36:06
[[-3.08805407]]
end mi1 loop
10:36:06
estep
10:36:06
end estep
10:36:21
end pa10:36:21
goodness of fit correlation [0.21948301]
start cluster 10:36:21
10
parallel submitted
10:36:39
parallel finished
10:40:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:40:46
start mi0
10:40:46
start mi0 range(p) 1 loop
10:40:46
finish mi0 range(p) 1 loop
10:40:46
start mi0 range(p) 2 loop
10:40:46
finish mi0 range(p) 2 loop
10:40:46
start mi0 range(NT) loop
10:40:46
finish mi0 range(NT) loop
10:40:46
start mi0 range(n) loop
10:40:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:40:46
start mi0 range(n) 2loop
10:40:46
finish mi0 range(n) 2loop
10:40:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:40:46
start mi1 range(p) 1 loop
10:40:46
finish mi1 range(p) 1 loop
10:40:46
start mi1 range(p) 2 loop
10:40:46
finish mi1 range(p) 2 loop
10:40:46
start mi1 range(NT) loop
10:40:46
finish mi1 range(NT) loop
10:40:46
start mi1 range(n) loop
10:40:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:40:47
start mi1 range(n) 2loop
10:40:47
finish mi1 range(n) 2loop
10:40:47
[[-3.039487]]
end mi1 loop
10:40:47
estep
10:40:47
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:41:02
start ppi1
10:41:02
start mi0
10:41:02
start mi0 range(p) 1 loop
10:41:02
finish mi0 range(p) 1 loop
10:41:02
start mi0 range(p) 2 loop
10:41:02
finish mi0 range(p) 2 loop
10:41:02
start mi0 range(NT) loop
10:41:02
finish mi0 range(NT) loop
10:41:02
start mi0 range(n) loop
10:41:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:41:02
start mi0 range(n) 2loop
10:41:02
finish mi0 range(n) 2loop
10:41:02
start mi1
10:41:02
start mi1 range(p) 1 loop
10:41:02
finish mi1 range(p) 1 loop
10:41:02
start mi1 range(p) 2 loop
10:41:02
finish mi1 range(p) 2 loop
10:41:02
start mi1 range(NT) loop
10:41:02
finish mi1 range(NT) loop
10:41:02
start mi1 range(n) loop
10:41:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:41:02
start mi1 range(n) 2loop
10:41:02
finish mi1 range(n) 2loop
10:41:02
[[-3.10196671]]
end mi1 loop
10:41:02
estep
10:41:02
end estep
10:41:18
end pa10:41:18
goodness of fit correlation [0.24647153]
start cluster 10:41:18
11
parallel submitted
10:41:35
parallel finished
10:44:07
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:44:13
start mi0
10:44:13
start mi0 range(p) 1 loop
10:44:13
finish mi0 range(p) 1 loop
10:44:13
start mi0 range(p) 2 loop
10:44:13
finish mi0 range(p) 2 loop
10:44:13
start mi0 range(NT) loop
10:44:14
finish mi0 range(NT) loop
10:44:14
start mi0 range(n) loop
10:44:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:44:14
start mi0 range(n) 2loop
10:44:14
finish mi0 range(n) 2loop
10:44:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:44:14
start mi1 range(p) 1 loop
10:44:14
finish mi1 range(p) 1 loop
10:44:14
start mi1 range(p) 2 loop
10:44:14
finish mi1 range(p) 2 loop
10:44:14
start mi1 range(NT) loop
10:44:14
finish mi1 range(NT) loop
10:44:14
start mi1 range(n) loop
10:44:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:44:14
start mi1 range(n) 2loop
10:44:14
finish mi1 range(n) 2loop
10:44:14
[[-3.0817871]]
end mi1 loop
10:44:14
estep
10:44:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:44:28
start ppi1
10:44:28
start mi0
10:44:28
start mi0 range(p) 1 loop
10:44:28
finish mi0 range(p) 1 loop
10:44:28
start mi0 range(p) 2 loop
10:44:28
finish mi0 range(p) 2 loop
10:44:28
start mi0 range(NT) loop
10:44:29
finish mi0 range(NT) loop
10:44:29
start mi0 range(n) loop
10:44:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:44:29
start mi0 range(n) 2loop
10:44:29
finish mi0 range(n) 2loop
10:44:29
start mi1
10:44:29
start mi1 range(p) 1 loop
10:44:29
finish mi1 range(p) 1 loop
10:44:29
start mi1 range(p) 2 loop
10:44:29
finish mi1 range(p) 2 loop
10:44:29
start mi1 range(NT) loop
10:44:29
finish mi1 range(NT) loop
10:44:29
start mi1 range(n) loop
10:44:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:44:29
start mi1 range(n) 2loop
10:44:29
finish mi1 range(n) 2loop
10:44:29
[[-3.14423533]]
end mi1 loop
10:44:29
estep
10:44:29
end estep
10:44:43
end pa10:44:43
goodness of fit correlation [0.25470888]
start cluster 10:44:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41060 instead
  warnings.warn(
12
parallel submitted
10:45:00
parallel finished
10:48:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:48:57
start mi0
10:48:57
start mi0 range(p) 1 loop
10:48:57
finish mi0 range(p) 1 loop
10:48:57
start mi0 range(p) 2 loop
10:48:57
finish mi0 range(p) 2 loop
10:48:57
start mi0 range(NT) loop
10:48:57
finish mi0 range(NT) loop
10:48:57
start mi0 range(n) loop
10:48:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:48:57
start mi0 range(n) 2loop
10:48:57
finish mi0 range(n) 2loop
10:48:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:48:57
start mi1 range(p) 1 loop
10:48:57
finish mi1 range(p) 1 loop
10:48:57
start mi1 range(p) 2 loop
10:48:57
finish mi1 range(p) 2 loop
10:48:57
start mi1 range(NT) loop
10:48:57
finish mi1 range(NT) loop
10:48:57
start mi1 range(n) loop
10:48:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:48:57
start mi1 range(n) 2loop
10:48:57
finish mi1 range(n) 2loop
10:48:57
[[-3.07672312]]
end mi1 loop
10:48:57
estep
10:48:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:12
start ppi1
10:49:12
start mi0
10:49:12
start mi0 range(p) 1 loop
10:49:12
finish mi0 range(p) 1 loop
10:49:12
start mi0 range(p) 2 loop
10:49:12
finish mi0 range(p) 2 loop
10:49:12
start mi0 range(NT) loop
10:49:12
finish mi0 range(NT) loop
10:49:12
start mi0 range(n) loop
10:49:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:12
start mi0 range(n) 2loop
10:49:12
finish mi0 range(n) 2loop
10:49:12
start mi1
10:49:12
start mi1 range(p) 1 loop
10:49:12
finish mi1 range(p) 1 loop
10:49:12
start mi1 range(p) 2 loop
10:49:12
finish mi1 range(p) 2 loop
10:49:12
start mi1 range(NT) loop
10:49:12
finish mi1 range(NT) loop
10:49:12
start mi1 range(n) loop
10:49:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:12
start mi1 range(n) 2loop
10:49:12
finish mi1 range(n) 2loop
10:49:12
[[-3.13917656]]
end mi1 loop
10:49:12
estep
10:49:12
end estep
10:49:27
end pa10:49:27
goodness of fit correlation [0.24011648]
start cluster 10:49:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42604 instead
  warnings.warn(
13
parallel submitted
10:49:45
parallel finished
10:51:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:51:49
start mi0
10:51:49
start mi0 range(p) 1 loop
10:51:49
finish mi0 range(p) 1 loop
10:51:49
start mi0 range(p) 2 loop
10:51:49
finish mi0 range(p) 2 loop
10:51:49
start mi0 range(NT) loop
10:51:49
finish mi0 range(NT) loop
10:51:49
start mi0 range(n) loop
10:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:51:49
start mi0 range(n) 2loop
10:51:49
finish mi0 range(n) 2loop
10:51:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:51:49
start mi1 range(p) 1 loop
10:51:49
finish mi1 range(p) 1 loop
10:51:49
start mi1 range(p) 2 loop
10:51:49
finish mi1 range(p) 2 loop
10:51:49
start mi1 range(NT) loop
10:51:49
finish mi1 range(NT) loop
10:51:49
start mi1 range(n) loop
10:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:51:50
start mi1 range(n) 2loop
10:51:50
finish mi1 range(n) 2loop
10:51:50
[[-3.09637951]]
end mi1 loop
10:51:50
estep
10:51:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:52:04
start ppi1
10:52:04
start mi0
10:52:04
start mi0 range(p) 1 loop
10:52:04
finish mi0 range(p) 1 loop
10:52:04
start mi0 range(p) 2 loop
10:52:04
finish mi0 range(p) 2 loop
10:52:04
start mi0 range(NT) loop
10:52:04
finish mi0 range(NT) loop
10:52:04
start mi0 range(n) loop
10:52:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:52:04
start mi0 range(n) 2loop
10:52:04
finish mi0 range(n) 2loop
10:52:04
start mi1
10:52:04
start mi1 range(p) 1 loop
10:52:04
finish mi1 range(p) 1 loop
10:52:04
start mi1 range(p) 2 loop
10:52:04
finish mi1 range(p) 2 loop
10:52:04
start mi1 range(NT) loop
10:52:04
finish mi1 range(NT) loop
10:52:04
start mi1 range(n) loop
10:52:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:52:05
start mi1 range(n) 2loop
10:52:05
finish mi1 range(n) 2loop
10:52:05
start mi2
10:52:05
start mi2 range(p) 1 loop
10:52:05
finish mi2 range(p) 1 loop
10:52:05
start mi2 range(p) 2 loop
10:52:05
finish mi2 range(p) 2 loop
10:52:05
start mi2 range(NT) loop
10:52:05
finish mi2 range(NT) loop
10:52:05
start mi2 range(n) loop
10:52:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:52:05
start mi2 range(n) 2loop
10:52:05
finish mi2 range(n) 2loop
10:52:05
[[-3.15888165]]
end mi2 loop
10:52:05
estep
10:52:05
end estep
10:52:20
end pa10:52:20
goodness of fit correlation [0.27952875]
start cluster 10:52:20
14
parallel submitted
10:52:39
parallel finished
10:54:26
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:54:32
start mi0
10:54:32
start mi0 range(p) 1 loop
10:54:32
finish mi0 range(p) 1 loop
10:54:32
start mi0 range(p) 2 loop
10:54:32
finish mi0 range(p) 2 loop
10:54:32
start mi0 range(NT) loop
10:54:32
finish mi0 range(NT) loop
10:54:32
start mi0 range(n) loop
10:54:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:54:32
start mi0 range(n) 2loop
10:54:32
finish mi0 range(n) 2loop
10:54:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:54:32
start mi1 range(p) 1 loop
10:54:32
finish mi1 range(p) 1 loop
10:54:32
start mi1 range(p) 2 loop
10:54:32
finish mi1 range(p) 2 loop
10:54:32
start mi1 range(NT) loop
10:54:32
finish mi1 range(NT) loop
10:54:32
start mi1 range(n) loop
10:54:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:54:32
start mi1 range(n) 2loop
10:54:32
finish mi1 range(n) 2loop
10:54:32
[[-3.11688495]]
end mi1 loop
10:54:32
estep
10:54:32
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:54:47
start ppi1
10:54:47
start mi0
10:54:47
start mi0 range(p) 1 loop
10:54:47
finish mi0 range(p) 1 loop
10:54:47
start mi0 range(p) 2 loop
10:54:47
finish mi0 range(p) 2 loop
10:54:47
start mi0 range(NT) loop
10:54:47
finish mi0 range(NT) loop
10:54:47
start mi0 range(n) loop
10:54:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:54:47
start mi0 range(n) 2loop
10:54:47
finish mi0 range(n) 2loop
10:54:47
start mi1
10:54:47
start mi1 range(p) 1 loop
10:54:47
finish mi1 range(p) 1 loop
10:54:47
start mi1 range(p) 2 loop
10:54:47
finish mi1 range(p) 2 loop
10:54:47
start mi1 range(NT) loop
10:54:47
finish mi1 range(NT) loop
10:54:47
start mi1 range(n) loop
10:54:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:54:47
start mi1 range(n) 2loop
10:54:47
finish mi1 range(n) 2loop
10:54:47
start mi2
10:54:47
start mi2 range(p) 1 loop
10:54:47
finish mi2 range(p) 1 loop
10:54:47
start mi2 range(p) 2 loop
10:54:47
finish mi2 range(p) 2 loop
10:54:47
start mi2 range(NT) loop
10:54:48
finish mi2 range(NT) loop
10:54:48
start mi2 range(n) loop
10:54:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:54:48
start mi2 range(n) 2loop
10:54:48
finish mi2 range(n) 2loop
10:54:48
[[-3.17939855]]
end mi2 loop
10:54:48
estep
10:54:48
end estep
10:55:02
end pa10:55:02
goodness of fit correlation [0.26583965]
start cluster 10:55:02
15
parallel submitted
10:55:19
parallel finished
10:58:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:58:12
start mi0
10:58:12
start mi0 range(p) 1 loop
10:58:12
finish mi0 range(p) 1 loop
10:58:12
start mi0 range(p) 2 loop
10:58:12
finish mi0 range(p) 2 loop
10:58:12
start mi0 range(NT) loop
10:58:12
finish mi0 range(NT) loop
10:58:12
start mi0 range(n) loop
10:58:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:58:12
start mi0 range(n) 2loop
10:58:12
finish mi0 range(n) 2loop
10:58:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:58:12
start mi1 range(p) 1 loop
10:58:12
finish mi1 range(p) 1 loop
10:58:12
start mi1 range(p) 2 loop
10:58:12
finish mi1 range(p) 2 loop
10:58:12
start mi1 range(NT) loop
10:58:12
finish mi1 range(NT) loop
10:58:12
start mi1 range(n) loop
10:58:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:58:12
start mi1 range(n) 2loop
10:58:12
finish mi1 range(n) 2loop
10:58:12
[[-3.08976029]]
end mi1 loop
10:58:12
estep
10:58:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:58:29
start ppi1
10:58:29
start mi0
10:58:29
start mi0 range(p) 1 loop
10:58:29
finish mi0 range(p) 1 loop
10:58:29
start mi0 range(p) 2 loop
10:58:29
finish mi0 range(p) 2 loop
10:58:29
start mi0 range(NT) loop
10:58:29
finish mi0 range(NT) loop
10:58:29
start mi0 range(n) loop
10:58:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:58:29
start mi0 range(n) 2loop
10:58:29
finish mi0 range(n) 2loop
10:58:29
start mi1
10:58:29
start mi1 range(p) 1 loop
10:58:29
finish mi1 range(p) 1 loop
10:58:29
start mi1 range(p) 2 loop
10:58:29
finish mi1 range(p) 2 loop
10:58:29
start mi1 range(NT) loop
10:58:29
finish mi1 range(NT) loop
10:58:29
start mi1 range(n) loop
10:58:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:58:29
start mi1 range(n) 2loop
10:58:29
finish mi1 range(n) 2loop
10:58:29
start mi2
10:58:29
start mi2 range(p) 1 loop
10:58:29
finish mi2 range(p) 1 loop
10:58:29
start mi2 range(p) 2 loop
10:58:29
finish mi2 range(p) 2 loop
10:58:29
start mi2 range(NT) loop
10:58:29
finish mi2 range(NT) loop
10:58:29
start mi2 range(n) loop
10:58:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:58:29
start mi2 range(n) 2loop
10:58:29
finish mi2 range(n) 2loop
10:58:29
[[-3.15225996]]
end mi2 loop
10:58:29
estep
10:58:29
end estep
10:58:45
end pa10:58:45
goodness of fit correlation [0.24949927]
start cluster 10:58:45
16
parallel submitted
10:59:04
parallel finished
11:02:20
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:02:29
start mi0
11:02:29
start mi0 range(p) 1 loop
11:02:29
finish mi0 range(p) 1 loop
11:02:29
start mi0 range(p) 2 loop
11:02:29
finish mi0 range(p) 2 loop
11:02:29
start mi0 range(NT) loop
11:02:29
finish mi0 range(NT) loop
11:02:29
start mi0 range(n) loop
11:02:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:02:29
start mi0 range(n) 2loop
11:02:29
finish mi0 range(n) 2loop
11:02:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:02:29
start mi1 range(p) 1 loop
11:02:29
finish mi1 range(p) 1 loop
11:02:29
start mi1 range(p) 2 loop
11:02:29
finish mi1 range(p) 2 loop
11:02:29
start mi1 range(NT) loop
11:02:29
finish mi1 range(NT) loop
11:02:29
start mi1 range(n) loop
11:02:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:02:29
start mi1 range(n) 2loop
11:02:29
finish mi1 range(n) 2loop
11:02:29
[[-3.10800849]]
end mi1 loop
11:02:29
estep
11:02:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:02:45
start ppi1
11:02:45
start mi0
11:02:45
start mi0 range(p) 1 loop
11:02:45
finish mi0 range(p) 1 loop
11:02:45
start mi0 range(p) 2 loop
11:02:45
finish mi0 range(p) 2 loop
11:02:45
start mi0 range(NT) loop
11:02:45
finish mi0 range(NT) loop
11:02:45
start mi0 range(n) loop
11:02:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:02:45
start mi0 range(n) 2loop
11:02:45
finish mi0 range(n) 2loop
11:02:45
start mi1
11:02:45
start mi1 range(p) 1 loop
11:02:45
finish mi1 range(p) 1 loop
11:02:45
start mi1 range(p) 2 loop
11:02:45
finish mi1 range(p) 2 loop
11:02:45
start mi1 range(NT) loop
11:02:46
finish mi1 range(NT) loop
11:02:46
start mi1 range(n) loop
11:02:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:02:46
start mi1 range(n) 2loop
11:02:46
finish mi1 range(n) 2loop
11:02:46
start mi2
11:02:46
start mi2 range(p) 1 loop
11:02:46
finish mi2 range(p) 1 loop
11:02:46
start mi2 range(p) 2 loop
11:02:46
finish mi2 range(p) 2 loop
11:02:46
start mi2 range(NT) loop
11:02:46
finish mi2 range(NT) loop
11:02:46
start mi2 range(n) loop
11:02:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:02:46
start mi2 range(n) 2loop
11:02:46
finish mi2 range(n) 2loop
11:02:46
[[-3.17051634]]
end mi2 loop
11:02:46
estep
11:02:46
end estep
11:03:02
end pa11:03:02
goodness of fit correlation [0.27294648]
start cluster 11:03:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38981 instead
  warnings.warn(
17
parallel submitted
11:03:21
parallel finished
11:07:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:08:05
start mi0
11:08:05
start mi0 range(p) 1 loop
11:08:05
finish mi0 range(p) 1 loop
11:08:05
start mi0 range(p) 2 loop
11:08:05
finish mi0 range(p) 2 loop
11:08:05
start mi0 range(NT) loop
11:08:05
finish mi0 range(NT) loop
11:08:05
start mi0 range(n) loop
11:08:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:08:05
start mi0 range(n) 2loop
11:08:05
finish mi0 range(n) 2loop
11:08:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:08:05
start mi1 range(p) 1 loop
11:08:05
finish mi1 range(p) 1 loop
11:08:05
start mi1 range(p) 2 loop
11:08:05
finish mi1 range(p) 2 loop
11:08:05
start mi1 range(NT) loop
11:08:05
finish mi1 range(NT) loop
11:08:05
start mi1 range(n) loop
11:08:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:08:05
start mi1 range(n) 2loop
11:08:05
finish mi1 range(n) 2loop
11:08:05
[[-3.12149661]]
end mi1 loop
11:08:05
estep
11:08:05
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:08:21
start ppi1
11:08:21
start mi0
11:08:21
start mi0 range(p) 1 loop
11:08:21
finish mi0 range(p) 1 loop
11:08:21
start mi0 range(p) 2 loop
11:08:21
finish mi0 range(p) 2 loop
11:08:21
start mi0 range(NT) loop
11:08:21
finish mi0 range(NT) loop
11:08:21
start mi0 range(n) loop
11:08:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:08:21
start mi0 range(n) 2loop
11:08:21
finish mi0 range(n) 2loop
11:08:21
start mi1
11:08:21
start mi1 range(p) 1 loop
11:08:21
finish mi1 range(p) 1 loop
11:08:21
start mi1 range(p) 2 loop
11:08:21
finish mi1 range(p) 2 loop
11:08:21
start mi1 range(NT) loop
11:08:21
finish mi1 range(NT) loop
11:08:21
start mi1 range(n) loop
11:08:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:08:21
start mi1 range(n) 2loop
11:08:21
finish mi1 range(n) 2loop
11:08:21
start mi2
11:08:21
start mi2 range(p) 1 loop
11:08:21
finish mi2 range(p) 1 loop
11:08:21
start mi2 range(p) 2 loop
11:08:21
finish mi2 range(p) 2 loop
11:08:21
start mi2 range(NT) loop
11:08:21
finish mi2 range(NT) loop
11:08:21
start mi2 range(n) loop
11:08:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:08:22
start mi2 range(n) 2loop
11:08:22
finish mi2 range(n) 2loop
11:08:22
[[-3.18401374]]
end mi2 loop
11:08:22
estep
11:08:22
end estep
11:08:38
end pa11:08:38
goodness of fit correlation [0.26148046]
start cluster 11:08:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43443 instead
  warnings.warn(
18
parallel submitted
11:08:57
parallel finished
11:10:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:10:38
start mi0
11:10:38
start mi0 range(p) 1 loop
11:10:38
finish mi0 range(p) 1 loop
11:10:38
start mi0 range(p) 2 loop
11:10:38
finish mi0 range(p) 2 loop
11:10:38
start mi0 range(NT) loop
11:10:38
finish mi0 range(NT) loop
11:10:38
start mi0 range(n) loop
11:10:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:10:38
start mi0 range(n) 2loop
11:10:38
finish mi0 range(n) 2loop
11:10:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:10:39
start mi1 range(p) 1 loop
11:10:39
finish mi1 range(p) 1 loop
11:10:39
start mi1 range(p) 2 loop
11:10:39
finish mi1 range(p) 2 loop
11:10:39
start mi1 range(NT) loop
11:10:39
finish mi1 range(NT) loop
11:10:39
start mi1 range(n) loop
11:10:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:10:39
start mi1 range(n) 2loop
11:10:39
finish mi1 range(n) 2loop
11:10:39
[[-3.07583717]]
end mi1 loop
11:10:39
estep
11:10:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:10:55
start ppi1
11:10:55
start mi0
11:10:55
start mi0 range(p) 1 loop
11:10:55
finish mi0 range(p) 1 loop
11:10:55
start mi0 range(p) 2 loop
11:10:55
finish mi0 range(p) 2 loop
11:10:55
start mi0 range(NT) loop
11:10:55
finish mi0 range(NT) loop
11:10:55
start mi0 range(n) loop
11:10:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:10:55
start mi0 range(n) 2loop
11:10:55
finish mi0 range(n) 2loop
11:10:55
start mi1
11:10:55
start mi1 range(p) 1 loop
11:10:55
finish mi1 range(p) 1 loop
11:10:55
start mi1 range(p) 2 loop
11:10:55
finish mi1 range(p) 2 loop
11:10:55
start mi1 range(NT) loop
11:10:55
finish mi1 range(NT) loop
11:10:55
start mi1 range(n) loop
11:10:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:10:55
start mi1 range(n) 2loop
11:10:55
finish mi1 range(n) 2loop
11:10:55
[[-3.13829148]]
end mi1 loop
11:10:55
estep
11:10:55
end estep
11:11:11
end pa11:11:11
goodness of fit correlation [0.26418518]
start cluster 11:11:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36007 instead
  warnings.warn(
19
parallel submitted
11:11:31
parallel finished
11:14:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:14:33
start mi0
11:14:33
start mi0 range(p) 1 loop
11:14:33
finish mi0 range(p) 1 loop
11:14:33
start mi0 range(p) 2 loop
11:14:33
finish mi0 range(p) 2 loop
11:14:33
start mi0 range(NT) loop
11:14:33
finish mi0 range(NT) loop
11:14:33
start mi0 range(n) loop
11:14:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:14:33
start mi0 range(n) 2loop
11:14:33
finish mi0 range(n) 2loop
11:14:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:14:34
start mi1 range(p) 1 loop
11:14:34
finish mi1 range(p) 1 loop
11:14:34
start mi1 range(p) 2 loop
11:14:34
finish mi1 range(p) 2 loop
11:14:34
start mi1 range(NT) loop
11:14:34
finish mi1 range(NT) loop
11:14:34
start mi1 range(n) loop
11:14:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:14:34
start mi1 range(n) 2loop
11:14:34
finish mi1 range(n) 2loop
11:14:34
[[-3.1172457]]
end mi1 loop
11:14:34
estep
11:14:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:14:49
start ppi1
11:14:49
start mi0
11:14:49
start mi0 range(p) 1 loop
11:14:49
finish mi0 range(p) 1 loop
11:14:49
start mi0 range(p) 2 loop
11:14:49
finish mi0 range(p) 2 loop
11:14:49
start mi0 range(NT) loop
11:14:49
finish mi0 range(NT) loop
11:14:49
start mi0 range(n) loop
11:14:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:14:49
start mi0 range(n) 2loop
11:14:49
finish mi0 range(n) 2loop
11:14:49
start mi1
11:14:49
start mi1 range(p) 1 loop
11:14:49
finish mi1 range(p) 1 loop
11:14:49
start mi1 range(p) 2 loop
11:14:49
finish mi1 range(p) 2 loop
11:14:49
start mi1 range(NT) loop
11:14:49
finish mi1 range(NT) loop
11:14:49
start mi1 range(n) loop
11:14:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:14:49
start mi1 range(n) 2loop
11:14:49
finish mi1 range(n) 2loop
11:14:49
start mi2
11:14:49
start mi2 range(p) 1 loop
11:14:49
finish mi2 range(p) 1 loop
11:14:49
start mi2 range(p) 2 loop
11:14:49
finish mi2 range(p) 2 loop
11:14:49
start mi2 range(NT) loop
11:14:49
finish mi2 range(NT) loop
11:14:49
start mi2 range(n) loop
11:14:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:14:49
start mi2 range(n) 2loop
11:14:49
finish mi2 range(n) 2loop
11:14:50
[[-3.17975956]]
end mi2 loop
11:14:50
estep
11:14:50
end estep
11:15:04
end pa11:15:04
goodness of fit correlation [0.27509203]
start cluster 11:15:04
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37157 instead
  warnings.warn(
20
parallel submitted
11:15:22
parallel finished
11:18:17
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:18:25
start mi0
11:18:25
start mi0 range(p) 1 loop
11:18:25
finish mi0 range(p) 1 loop
11:18:25
start mi0 range(p) 2 loop
11:18:25
finish mi0 range(p) 2 loop
11:18:25
start mi0 range(NT) loop
11:18:25
finish mi0 range(NT) loop
11:18:25
start mi0 range(n) loop
11:18:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:18:25
start mi0 range(n) 2loop
11:18:25
finish mi0 range(n) 2loop
11:18:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:18:25
start mi1 range(p) 1 loop
11:18:25
finish mi1 range(p) 1 loop
11:18:25
start mi1 range(p) 2 loop
11:18:25
finish mi1 range(p) 2 loop
11:18:25
start mi1 range(NT) loop
11:18:25
finish mi1 range(NT) loop
11:18:25
start mi1 range(n) loop
11:18:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:18:25
start mi1 range(n) 2loop
11:18:25
finish mi1 range(n) 2loop
11:18:25
[[-3.12535705]]
end mi1 loop
11:18:25
estep
11:18:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:18:42
start ppi1
11:18:42
start mi0
11:18:42
start mi0 range(p) 1 loop
11:18:42
finish mi0 range(p) 1 loop
11:18:42
start mi0 range(p) 2 loop
11:18:42
finish mi0 range(p) 2 loop
11:18:42
start mi0 range(NT) loop
11:18:42
finish mi0 range(NT) loop
11:18:42
start mi0 range(n) loop
11:18:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:18:42
start mi0 range(n) 2loop
11:18:42
finish mi0 range(n) 2loop
11:18:42
start mi1
11:18:42
start mi1 range(p) 1 loop
11:18:42
finish mi1 range(p) 1 loop
11:18:42
start mi1 range(p) 2 loop
11:18:42
finish mi1 range(p) 2 loop
11:18:42
start mi1 range(NT) loop
11:18:42
finish mi1 range(NT) loop
11:18:42
start mi1 range(n) loop
11:18:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:18:42
start mi1 range(n) 2loop
11:18:42
finish mi1 range(n) 2loop
11:18:42
start mi2
11:18:42
start mi2 range(p) 1 loop
11:18:42
finish mi2 range(p) 1 loop
11:18:42
start mi2 range(p) 2 loop
11:18:42
finish mi2 range(p) 2 loop
11:18:42
start mi2 range(NT) loop
11:18:42
finish mi2 range(NT) loop
11:18:42
start mi2 range(n) loop
11:18:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:18:42
start mi2 range(n) 2loop
11:18:42
finish mi2 range(n) 2loop
11:18:42
[[-3.18787745]]
end mi2 loop
11:18:42
estep
11:18:42
end estep
11:18:59
end pa11:18:59
goodness of fit correlation [0.2666977]
start cluster 11:18:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38937 instead
  warnings.warn(
21
parallel submitted
11:19:20
parallel finished
11:21:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:21:58
start mi0
11:21:58
start mi0 range(p) 1 loop
11:21:58
finish mi0 range(p) 1 loop
11:21:58
start mi0 range(p) 2 loop
11:21:58
finish mi0 range(p) 2 loop
11:21:58
start mi0 range(NT) loop
11:21:58
finish mi0 range(NT) loop
11:21:58
start mi0 range(n) loop
11:21:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:21:58
start mi0 range(n) 2loop
11:21:58
finish mi0 range(n) 2loop
11:21:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:21:58
start mi1 range(p) 1 loop
11:21:58
finish mi1 range(p) 1 loop
11:21:58
start mi1 range(p) 2 loop
11:21:58
finish mi1 range(p) 2 loop
11:21:58
start mi1 range(NT) loop
11:21:58
finish mi1 range(NT) loop
11:21:58
start mi1 range(n) loop
11:21:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:21:58
start mi1 range(n) 2loop
11:21:58
finish mi1 range(n) 2loop
11:21:58
start mi2
11:21:58
start mi2 range(p) 1 loop
11:21:58
finish mi2 range(p) 1 loop
11:21:58
start mi2 range(p) 2 loop
11:21:58
finish mi2 range(p) 2 loop
11:21:58
start mi2 range(NT) loop
11:21:59
finish mi2 range(NT) loop
11:21:59
start mi2 range(n) loop
11:21:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:21:59
start mi2 range(n) 2loop
11:21:59
finish mi2 range(n) 2loop
11:21:59
[[-3.19366848]]
end mi2 loop
11:21:59
estep
11:21:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:22:15
start ppi1
11:22:15
start mi0
11:22:15
start mi0 range(p) 1 loop
11:22:15
finish mi0 range(p) 1 loop
11:22:15
start mi0 range(p) 2 loop
11:22:15
finish mi0 range(p) 2 loop
11:22:15
start mi0 range(NT) loop
11:22:15
finish mi0 range(NT) loop
11:22:15
start mi0 range(n) loop
11:22:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:22:15
start mi0 range(n) 2loop
11:22:15
finish mi0 range(n) 2loop
11:22:15
start mi1
11:22:15
start mi1 range(p) 1 loop
11:22:15
finish mi1 range(p) 1 loop
11:22:15
start mi1 range(p) 2 loop
11:22:15
finish mi1 range(p) 2 loop
11:22:15
start mi1 range(NT) loop
11:22:15
finish mi1 range(NT) loop
11:22:15
start mi1 range(n) loop
11:22:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:22:15
start mi1 range(n) 2loop
11:22:15
finish mi1 range(n) 2loop
11:22:15
start mi2
11:22:15
start mi2 range(p) 1 loop
11:22:15
finish mi2 range(p) 1 loop
11:22:15
start mi2 range(p) 2 loop
11:22:15
finish mi2 range(p) 2 loop
11:22:15
start mi2 range(NT) loop
11:22:15
finish mi2 range(NT) loop
11:22:15
start mi2 range(n) loop
11:22:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:22:16
start mi2 range(n) 2loop
11:22:16
finish mi2 range(n) 2loop
11:22:16
[[-3.25616042]]
end mi2 loop
11:22:16
estep
11:22:16
end estep
11:22:32
end pa11:22:32
goodness of fit correlation [0.30689104]
start cluster 11:22:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46678 instead
  warnings.warn(
22
parallel submitted
11:22:52
parallel finished
11:26:21
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:26:31
start mi0
11:26:31
start mi0 range(p) 1 loop
11:26:31
finish mi0 range(p) 1 loop
11:26:31
start mi0 range(p) 2 loop
11:26:31
finish mi0 range(p) 2 loop
11:26:31
start mi0 range(NT) loop
11:26:31
finish mi0 range(NT) loop
11:26:31
start mi0 range(n) loop
11:26:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:26:31
start mi0 range(n) 2loop
11:26:31
finish mi0 range(n) 2loop
11:26:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:26:31
start mi1 range(p) 1 loop
11:26:31
finish mi1 range(p) 1 loop
11:26:31
start mi1 range(p) 2 loop
11:26:31
finish mi1 range(p) 2 loop
11:26:31
start mi1 range(NT) loop
11:26:31
finish mi1 range(NT) loop
11:26:31
start mi1 range(n) loop
11:26:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:26:31
start mi1 range(n) 2loop
11:26:31
finish mi1 range(n) 2loop
11:26:32
[[-3.10059822]]
end mi1 loop
11:26:32
estep
11:26:32
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:26:47
start ppi1
11:26:47
start mi0
11:26:47
start mi0 range(p) 1 loop
11:26:47
finish mi0 range(p) 1 loop
11:26:47
start mi0 range(p) 2 loop
11:26:48
finish mi0 range(p) 2 loop
11:26:48
start mi0 range(NT) loop
11:26:48
finish mi0 range(NT) loop
11:26:48
start mi0 range(n) loop
11:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:26:48
start mi0 range(n) 2loop
11:26:48
finish mi0 range(n) 2loop
11:26:48
start mi1
11:26:48
start mi1 range(p) 1 loop
11:26:48
finish mi1 range(p) 1 loop
11:26:48
start mi1 range(p) 2 loop
11:26:48
finish mi1 range(p) 2 loop
11:26:48
start mi1 range(NT) loop
11:26:48
finish mi1 range(NT) loop
11:26:48
start mi1 range(n) loop
11:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:26:48
start mi1 range(n) 2loop
11:26:48
finish mi1 range(n) 2loop
11:26:48
start mi2
11:26:48
start mi2 range(p) 1 loop
11:26:48
finish mi2 range(p) 1 loop
11:26:48
start mi2 range(p) 2 loop
11:26:48
finish mi2 range(p) 2 loop
11:26:48
start mi2 range(NT) loop
11:26:48
finish mi2 range(NT) loop
11:26:48
start mi2 range(n) loop
11:26:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:26:48
start mi2 range(n) 2loop
11:26:48
finish mi2 range(n) 2loop
11:26:48
[[-3.16310222]]
end mi2 loop
11:26:48
estep
11:26:48
end estep
11:27:05
end pa11:27:05
goodness of fit correlation [0.23442442]
start cluster 11:27:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35810 instead
  warnings.warn(
23
parallel submitted
11:27:25
parallel finished
11:30:43
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:30:53
start mi0
11:30:53
start mi0 range(p) 1 loop
11:30:53
finish mi0 range(p) 1 loop
11:30:53
start mi0 range(p) 2 loop
11:30:53
finish mi0 range(p) 2 loop
11:30:53
start mi0 range(NT) loop
11:30:53
finish mi0 range(NT) loop
11:30:53
start mi0 range(n) loop
11:30:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:30:53
start mi0 range(n) 2loop
11:30:53
finish mi0 range(n) 2loop
11:30:53
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:30:53
start mi1 range(p) 1 loop
11:30:53
finish mi1 range(p) 1 loop
11:30:53
start mi1 range(p) 2 loop
11:30:53
finish mi1 range(p) 2 loop
11:30:53
start mi1 range(NT) loop
11:30:54
finish mi1 range(NT) loop
11:30:54
start mi1 range(n) loop
11:30:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:30:54
start mi1 range(n) 2loop
11:30:54
finish mi1 range(n) 2loop
11:30:54
start mi2
11:30:54
start mi2 range(p) 1 loop
11:30:54
finish mi2 range(p) 1 loop
11:30:54
start mi2 range(p) 2 loop
11:30:54
finish mi2 range(p) 2 loop
11:30:54
start mi2 range(NT) loop
11:30:54
finish mi2 range(NT) loop
11:30:54
start mi2 range(n) loop
11:30:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:30:54
start mi2 range(n) 2loop
11:30:54
finish mi2 range(n) 2loop
11:30:54
[[-3.17007683]]
end mi2 loop
11:30:54
estep
11:30:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:31:10
start ppi1
11:31:10
start mi0
11:31:10
start mi0 range(p) 1 loop
11:31:10
finish mi0 range(p) 1 loop
11:31:10
start mi0 range(p) 2 loop
11:31:10
finish mi0 range(p) 2 loop
11:31:10
start mi0 range(NT) loop
11:31:10
finish mi0 range(NT) loop
11:31:10
start mi0 range(n) loop
11:31:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:31:10
start mi0 range(n) 2loop
11:31:10
finish mi0 range(n) 2loop
11:31:10
start mi1
11:31:10
start mi1 range(p) 1 loop
11:31:10
finish mi1 range(p) 1 loop
11:31:10
start mi1 range(p) 2 loop
11:31:10
finish mi1 range(p) 2 loop
11:31:10
start mi1 range(NT) loop
11:31:10
finish mi1 range(NT) loop
11:31:10
start mi1 range(n) loop
11:31:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:31:10
start mi1 range(n) 2loop
11:31:10
finish mi1 range(n) 2loop
11:31:10
start mi2
11:31:10
start mi2 range(p) 1 loop
11:31:10
finish mi2 range(p) 1 loop
11:31:10
start mi2 range(p) 2 loop
11:31:10
finish mi2 range(p) 2 loop
11:31:10
start mi2 range(NT) loop
11:31:11
finish mi2 range(NT) loop
11:31:11
start mi2 range(n) loop
11:31:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:31:11
start mi2 range(n) 2loop
11:31:11
finish mi2 range(n) 2loop
11:31:11
[[-3.23256882]]
end mi2 loop
11:31:11
estep
11:31:11
end estep
11:31:27
end pa11:31:27
goodness of fit correlation [0.27581289]
start cluster 11:31:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35307 instead
  warnings.warn(
24
parallel submitted
11:31:47
parallel finished
11:35:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:35:25
start mi0
11:35:25
start mi0 range(p) 1 loop
11:35:25
finish mi0 range(p) 1 loop
11:35:25
start mi0 range(p) 2 loop
11:35:25
finish mi0 range(p) 2 loop
11:35:25
start mi0 range(NT) loop
11:35:25
finish mi0 range(NT) loop
11:35:25
start mi0 range(n) loop
11:35:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:35:25
start mi0 range(n) 2loop
11:35:25
finish mi0 range(n) 2loop
11:35:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:35:25
start mi1 range(p) 1 loop
11:35:25
finish mi1 range(p) 1 loop
11:35:25
start mi1 range(p) 2 loop
11:35:25
finish mi1 range(p) 2 loop
11:35:25
start mi1 range(NT) loop
11:35:25
finish mi1 range(NT) loop
11:35:25
start mi1 range(n) loop
11:35:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:35:25
start mi1 range(n) 2loop
11:35:25
finish mi1 range(n) 2loop
11:35:25
start mi2
11:35:25
start mi2 range(p) 1 loop
11:35:25
finish mi2 range(p) 1 loop
11:35:25
start mi2 range(p) 2 loop
11:35:25
finish mi2 range(p) 2 loop
11:35:25
start mi2 range(NT) loop
11:35:25
finish mi2 range(NT) loop
11:35:25
start mi2 range(n) loop
11:35:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:35:26
start mi2 range(n) 2loop
11:35:26
finish mi2 range(n) 2loop
11:35:26
[[-3.15111143]]
end mi2 loop
11:35:26
estep
11:35:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:35:41
start ppi1
11:35:41
start mi0
11:35:41
start mi0 range(p) 1 loop
11:35:41
finish mi0 range(p) 1 loop
11:35:41
start mi0 range(p) 2 loop
11:35:41
finish mi0 range(p) 2 loop
11:35:41
start mi0 range(NT) loop
11:35:41
finish mi0 range(NT) loop
11:35:42
start mi0 range(n) loop
11:35:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:35:42
start mi0 range(n) 2loop
11:35:42
finish mi0 range(n) 2loop
11:35:42
start mi1
11:35:42
start mi1 range(p) 1 loop
11:35:42
finish mi1 range(p) 1 loop
11:35:42
start mi1 range(p) 2 loop
11:35:42
finish mi1 range(p) 2 loop
11:35:42
start mi1 range(NT) loop
11:35:42
finish mi1 range(NT) loop
11:35:42
start mi1 range(n) loop
11:35:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:35:42
start mi1 range(n) 2loop
11:35:42
finish mi1 range(n) 2loop
11:35:42
start mi2
11:35:42
start mi2 range(p) 1 loop
11:35:42
finish mi2 range(p) 1 loop
11:35:42
start mi2 range(p) 2 loop
11:35:42
finish mi2 range(p) 2 loop
11:35:42
start mi2 range(NT) loop
11:35:42
finish mi2 range(NT) loop
11:35:42
start mi2 range(n) loop
11:35:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:35:42
start mi2 range(n) 2loop
11:35:42
finish mi2 range(n) 2loop
11:35:42
[[-3.21360344]]
end mi2 loop
11:35:42
estep
11:35:42
end estep
11:35:58
end pa11:35:58
goodness of fit correlation [0.27588871]
start cluster 11:35:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33835 instead
  warnings.warn(
25
parallel submitted
11:36:19
parallel finished
11:39:43
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:39:54
start mi0
11:39:54
start mi0 range(p) 1 loop
11:39:54
finish mi0 range(p) 1 loop
11:39:54
start mi0 range(p) 2 loop
11:39:54
finish mi0 range(p) 2 loop
11:39:54
start mi0 range(NT) loop
11:39:54
finish mi0 range(NT) loop
11:39:54
start mi0 range(n) loop
11:39:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:39:54
start mi0 range(n) 2loop
11:39:54
finish mi0 range(n) 2loop
11:39:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:39:54
start mi1 range(p) 1 loop
11:39:54
finish mi1 range(p) 1 loop
11:39:54
start mi1 range(p) 2 loop
11:39:54
finish mi1 range(p) 2 loop
11:39:54
start mi1 range(NT) loop
11:39:55
finish mi1 range(NT) loop
11:39:55
start mi1 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:39:55
start mi1 range(n) 2loop
11:39:55
finish mi1 range(n) 2loop
11:39:55
start mi2
11:39:55
start mi2 range(p) 1 loop
11:39:55
finish mi2 range(p) 1 loop
11:39:55
start mi2 range(p) 2 loop
11:39:55
finish mi2 range(p) 2 loop
11:39:55
start mi2 range(NT) loop
11:39:55
finish mi2 range(NT) loop
11:39:55
start mi2 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:39:55
start mi2 range(n) 2loop
11:39:55
finish mi2 range(n) 2loop
11:39:55
[[-3.16275095]]
end mi2 loop
11:39:55
estep
11:39:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:40:11
start ppi1
11:40:11
start mi0
11:40:11
start mi0 range(p) 1 loop
11:40:11
finish mi0 range(p) 1 loop
11:40:11
start mi0 range(p) 2 loop
11:40:11
finish mi0 range(p) 2 loop
11:40:11
start mi0 range(NT) loop
11:40:11
finish mi0 range(NT) loop
11:40:11
start mi0 range(n) loop
11:40:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:40:11
start mi0 range(n) 2loop
11:40:11
finish mi0 range(n) 2loop
11:40:11
start mi1
11:40:11
start mi1 range(p) 1 loop
11:40:11
finish mi1 range(p) 1 loop
11:40:11
start mi1 range(p) 2 loop
11:40:11
finish mi1 range(p) 2 loop
11:40:11
start mi1 range(NT) loop
11:40:11
finish mi1 range(NT) loop
11:40:11
start mi1 range(n) loop
11:40:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:40:11
start mi1 range(n) 2loop
11:40:11
finish mi1 range(n) 2loop
11:40:11
start mi2
11:40:11
start mi2 range(p) 1 loop
11:40:11
finish mi2 range(p) 1 loop
11:40:11
start mi2 range(p) 2 loop
11:40:11
finish mi2 range(p) 2 loop
11:40:11
start mi2 range(NT) loop
11:40:11
finish mi2 range(NT) loop
11:40:11
start mi2 range(n) loop
11:40:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:40:12
start mi2 range(n) 2loop
11:40:12
finish mi2 range(n) 2loop
11:40:12
[[-3.22524295]]
end mi2 loop
11:40:12
estep
11:40:12
end estep
11:40:28
end pa11:40:28
goodness of fit correlation [0.25924978]
start cluster 11:40:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42344 instead
  warnings.warn(
26
parallel submitted
11:40:51
parallel finished
11:44:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:44:12
start mi0
11:44:12
start mi0 range(p) 1 loop
11:44:12
finish mi0 range(p) 1 loop
11:44:12
start mi0 range(p) 2 loop
11:44:12
finish mi0 range(p) 2 loop
11:44:12
start mi0 range(NT) loop
11:44:12
finish mi0 range(NT) loop
11:44:12
start mi0 range(n) loop
11:44:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:44:12
start mi0 range(n) 2loop
11:44:12
finish mi0 range(n) 2loop
11:44:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:44:12
start mi1 range(p) 1 loop
11:44:12
finish mi1 range(p) 1 loop
11:44:12
start mi1 range(p) 2 loop
11:44:12
finish mi1 range(p) 2 loop
11:44:12
start mi1 range(NT) loop
11:44:13
finish mi1 range(NT) loop
11:44:13
start mi1 range(n) loop
11:44:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:44:13
start mi1 range(n) 2loop
11:44:13
finish mi1 range(n) 2loop
11:44:13
[[-3.13624187]]
end mi1 loop
11:44:13
estep
11:44:13
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:44:29
start ppi1
11:44:29
start mi0
11:44:29
start mi0 range(p) 1 loop
11:44:29
finish mi0 range(p) 1 loop
11:44:29
start mi0 range(p) 2 loop
11:44:29
finish mi0 range(p) 2 loop
11:44:29
start mi0 range(NT) loop
11:44:29
finish mi0 range(NT) loop
11:44:29
start mi0 range(n) loop
11:44:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:44:29
start mi0 range(n) 2loop
11:44:29
finish mi0 range(n) 2loop
11:44:29
start mi1
11:44:29
start mi1 range(p) 1 loop
11:44:29
finish mi1 range(p) 1 loop
11:44:29
start mi1 range(p) 2 loop
11:44:29
finish mi1 range(p) 2 loop
11:44:29
start mi1 range(NT) loop
11:44:29
finish mi1 range(NT) loop
11:44:29
start mi1 range(n) loop
11:44:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:44:29
start mi1 range(n) 2loop
11:44:29
finish mi1 range(n) 2loop
11:44:29
start mi2
11:44:29
start mi2 range(p) 1 loop
11:44:29
finish mi2 range(p) 1 loop
11:44:29
start mi2 range(p) 2 loop
11:44:29
finish mi2 range(p) 2 loop
11:44:29
start mi2 range(NT) loop
11:44:29
finish mi2 range(NT) loop
11:44:29
start mi2 range(n) loop
11:44:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:44:29
start mi2 range(n) 2loop
11:44:29
finish mi2 range(n) 2loop
11:44:30
[[-3.19877318]]
end mi2 loop
11:44:30
estep
11:44:30
end estep
11:44:46
end pa11:44:46
goodness of fit correlation [0.27493814]
start cluster 11:44:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33456 instead
  warnings.warn(
27
parallel submitted
11:45:09
parallel finished
11:48:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:49:00
start mi0
11:49:00
start mi0 range(p) 1 loop
11:49:00
finish mi0 range(p) 1 loop
11:49:00
start mi0 range(p) 2 loop
11:49:00
finish mi0 range(p) 2 loop
11:49:00
start mi0 range(NT) loop
11:49:00
finish mi0 range(NT) loop
11:49:00
start mi0 range(n) loop
11:49:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:49:00
start mi0 range(n) 2loop
11:49:00
finish mi0 range(n) 2loop
11:49:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:49:00
start mi1 range(p) 1 loop
11:49:00
finish mi1 range(p) 1 loop
11:49:00
start mi1 range(p) 2 loop
11:49:00
finish mi1 range(p) 2 loop
11:49:00
start mi1 range(NT) loop
11:49:00
finish mi1 range(NT) loop
11:49:00
start mi1 range(n) loop
11:49:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:49:00
start mi1 range(n) 2loop
11:49:00
finish mi1 range(n) 2loop
11:49:00
start mi2
11:49:00
start mi2 range(p) 1 loop
11:49:00
finish mi2 range(p) 1 loop
11:49:00
start mi2 range(p) 2 loop
11:49:00
finish mi2 range(p) 2 loop
11:49:00
start mi2 range(NT) loop
11:49:00
finish mi2 range(NT) loop
11:49:00
start mi2 range(n) loop
11:49:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:49:00
start mi2 range(n) 2loop
11:49:00
finish mi2 range(n) 2loop
11:49:00
[[-3.14795792]]
end mi2 loop
11:49:00
estep
11:49:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:49:15
start ppi1
11:49:15
start mi0
11:49:15
start mi0 range(p) 1 loop
11:49:15
finish mi0 range(p) 1 loop
11:49:15
start mi0 range(p) 2 loop
11:49:15
finish mi0 range(p) 2 loop
11:49:15
start mi0 range(NT) loop
11:49:15
finish mi0 range(NT) loop
11:49:16
start mi0 range(n) loop
11:49:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:49:16
start mi0 range(n) 2loop
11:49:16
finish mi0 range(n) 2loop
11:49:16
start mi1
11:49:16
start mi1 range(p) 1 loop
11:49:16
finish mi1 range(p) 1 loop
11:49:16
start mi1 range(p) 2 loop
11:49:16
finish mi1 range(p) 2 loop
11:49:16
start mi1 range(NT) loop
11:49:16
finish mi1 range(NT) loop
11:49:16
start mi1 range(n) loop
11:49:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:49:16
start mi1 range(n) 2loop
11:49:16
finish mi1 range(n) 2loop
11:49:16
start mi2
11:49:16
start mi2 range(p) 1 loop
11:49:16
finish mi2 range(p) 1 loop
11:49:16
start mi2 range(p) 2 loop
11:49:16
finish mi2 range(p) 2 loop
11:49:16
start mi2 range(NT) loop
11:49:16
finish mi2 range(NT) loop
11:49:16
start mi2 range(n) loop
11:49:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:49:16
start mi2 range(n) 2loop
11:49:16
finish mi2 range(n) 2loop
11:49:16
[[-3.21044993]]
end mi2 loop
11:49:16
estep
11:49:16
end estep
11:49:32
end pa11:49:32
goodness of fit correlation [0.28137133]
start cluster 11:49:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36175 instead
  warnings.warn(
28
parallel submitted
11:49:53
parallel finished
11:53:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:53:26
start mi0
11:53:26
start mi0 range(p) 1 loop
11:53:26
finish mi0 range(p) 1 loop
11:53:26
start mi0 range(p) 2 loop
11:53:26
finish mi0 range(p) 2 loop
11:53:26
start mi0 range(NT) loop
11:53:26
finish mi0 range(NT) loop
11:53:26
start mi0 range(n) loop
11:53:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:53:26
start mi0 range(n) 2loop
11:53:26
finish mi0 range(n) 2loop
11:53:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:53:26
start mi1 range(p) 1 loop
11:53:26
finish mi1 range(p) 1 loop
11:53:26
start mi1 range(p) 2 loop
11:53:26
finish mi1 range(p) 2 loop
11:53:26
start mi1 range(NT) loop
11:53:26
finish mi1 range(NT) loop
11:53:26
start mi1 range(n) loop
11:53:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:53:26
start mi1 range(n) 2loop
11:53:26
finish mi1 range(n) 2loop
11:53:26
start mi2
11:53:26
start mi2 range(p) 1 loop
11:53:26
finish mi2 range(p) 1 loop
11:53:26
start mi2 range(p) 2 loop
11:53:26
finish mi2 range(p) 2 loop
11:53:26
start mi2 range(NT) loop
11:53:27
finish mi2 range(NT) loop
11:53:27
start mi2 range(n) loop
11:53:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:53:27
start mi2 range(n) 2loop
11:53:27
finish mi2 range(n) 2loop
11:53:27
[[-3.14683991]]
end mi2 loop
11:53:27
estep
11:53:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:53:42
start ppi1
11:53:42
start mi0
11:53:42
start mi0 range(p) 1 loop
11:53:42
finish mi0 range(p) 1 loop
11:53:42
start mi0 range(p) 2 loop
11:53:42
finish mi0 range(p) 2 loop
11:53:42
start mi0 range(NT) loop
11:53:42
finish mi0 range(NT) loop
11:53:42
start mi0 range(n) loop
11:53:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:53:42
start mi0 range(n) 2loop
11:53:42
finish mi0 range(n) 2loop
11:53:42
start mi1
11:53:42
start mi1 range(p) 1 loop
11:53:42
finish mi1 range(p) 1 loop
11:53:42
start mi1 range(p) 2 loop
11:53:42
finish mi1 range(p) 2 loop
11:53:42
start mi1 range(NT) loop
11:53:42
finish mi1 range(NT) loop
11:53:42
start mi1 range(n) loop
11:53:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:53:42
start mi1 range(n) 2loop
11:53:42
finish mi1 range(n) 2loop
11:53:42
start mi2
11:53:42
start mi2 range(p) 1 loop
11:53:42
finish mi2 range(p) 1 loop
11:53:42
start mi2 range(p) 2 loop
11:53:42
finish mi2 range(p) 2 loop
11:53:42
start mi2 range(NT) loop
11:53:42
finish mi2 range(NT) loop
11:53:42
start mi2 range(n) loop
11:53:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:53:42
start mi2 range(n) 2loop
11:53:42
finish mi2 range(n) 2loop
11:53:43
[[-3.20933192]]
end mi2 loop
11:53:43
estep
11:53:43
end estep
11:53:58
end pa11:53:58
goodness of fit correlation [0.28195961]
start cluster 11:53:58
29
parallel submitted
11:54:19
parallel finished
11:57:11
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:57:21
start mi0
11:57:21
start mi0 range(p) 1 loop
11:57:21
finish mi0 range(p) 1 loop
11:57:21
start mi0 range(p) 2 loop
11:57:21
finish mi0 range(p) 2 loop
11:57:21
start mi0 range(NT) loop
11:57:21
finish mi0 range(NT) loop
11:57:21
start mi0 range(n) loop
11:57:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:57:21
start mi0 range(n) 2loop
11:57:21
finish mi0 range(n) 2loop
11:57:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:57:21
start mi1 range(p) 1 loop
11:57:21
finish mi1 range(p) 1 loop
11:57:21
start mi1 range(p) 2 loop
11:57:21
finish mi1 range(p) 2 loop
11:57:21
start mi1 range(NT) loop
11:57:21
finish mi1 range(NT) loop
11:57:21
start mi1 range(n) loop
11:57:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:57:22
start mi1 range(n) 2loop
11:57:22
finish mi1 range(n) 2loop
11:57:22
start mi2
11:57:22
start mi2 range(p) 1 loop
11:57:22
finish mi2 range(p) 1 loop
11:57:22
start mi2 range(p) 2 loop
11:57:22
finish mi2 range(p) 2 loop
11:57:22
start mi2 range(NT) loop
11:57:22
finish mi2 range(NT) loop
11:57:22
start mi2 range(n) loop
11:57:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:57:22
start mi2 range(n) 2loop
11:57:22
finish mi2 range(n) 2loop
11:57:22
[[-3.14772512]]
end mi2 loop
11:57:22
estep
11:57:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:57:37
start ppi1
11:57:37
start mi0
11:57:37
start mi0 range(p) 1 loop
11:57:37
finish mi0 range(p) 1 loop
11:57:37
start mi0 range(p) 2 loop
11:57:37
finish mi0 range(p) 2 loop
11:57:37
start mi0 range(NT) loop
11:57:37
finish mi0 range(NT) loop
11:57:37
start mi0 range(n) loop
11:57:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:57:37
start mi0 range(n) 2loop
11:57:37
finish mi0 range(n) 2loop
11:57:38
start mi1
11:57:38
start mi1 range(p) 1 loop
11:57:38
finish mi1 range(p) 1 loop
11:57:38
start mi1 range(p) 2 loop
11:57:38
finish mi1 range(p) 2 loop
11:57:38
start mi1 range(NT) loop
11:57:38
finish mi1 range(NT) loop
11:57:38
start mi1 range(n) loop
11:57:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:57:38
start mi1 range(n) 2loop
11:57:38
finish mi1 range(n) 2loop
11:57:38
start mi2
11:57:38
start mi2 range(p) 1 loop
11:57:38
finish mi2 range(p) 1 loop
11:57:38
start mi2 range(p) 2 loop
11:57:38
finish mi2 range(p) 2 loop
11:57:38
start mi2 range(NT) loop
11:57:38
finish mi2 range(NT) loop
11:57:38
start mi2 range(n) loop
11:57:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:57:38
start mi2 range(n) 2loop
11:57:38
finish mi2 range(n) 2loop
11:57:38
[[-3.21021713]]
end mi2 loop
11:57:38
estep
11:57:38
end estep
11:57:53
end pa11:57:53
goodness of fit correlation [0.26142493]
start cluster 11:57:53
30
parallel submitted
11:58:18
parallel finished
12:01:55
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:02:07
start mi0
12:02:07
start mi0 range(p) 1 loop
12:02:07
finish mi0 range(p) 1 loop
12:02:07
start mi0 range(p) 2 loop
12:02:07
finish mi0 range(p) 2 loop
12:02:07
start mi0 range(NT) loop
12:02:07
finish mi0 range(NT) loop
12:02:07
start mi0 range(n) loop
12:02:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:02:07
start mi0 range(n) 2loop
12:02:07
finish mi0 range(n) 2loop
12:02:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:02:07
start mi1 range(p) 1 loop
12:02:07
finish mi1 range(p) 1 loop
12:02:07
start mi1 range(p) 2 loop
12:02:07
finish mi1 range(p) 2 loop
12:02:07
start mi1 range(NT) loop
12:02:07
finish mi1 range(NT) loop
12:02:07
start mi1 range(n) loop
12:02:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:02:07
start mi1 range(n) 2loop
12:02:07
finish mi1 range(n) 2loop
12:02:07
[[-3.05432398]]
end mi1 loop
12:02:07
estep
12:02:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:02:22
start ppi1
12:02:22
start mi0
12:02:22
start mi0 range(p) 1 loop
12:02:22
finish mi0 range(p) 1 loop
12:02:22
start mi0 range(p) 2 loop
12:02:22
finish mi0 range(p) 2 loop
12:02:22
start mi0 range(NT) loop
12:02:23
finish mi0 range(NT) loop
12:02:23
start mi0 range(n) loop
12:02:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:02:23
start mi0 range(n) 2loop
12:02:23
finish mi0 range(n) 2loop
12:02:23
start mi1
12:02:23
start mi1 range(p) 1 loop
12:02:23
finish mi1 range(p) 1 loop
12:02:23
start mi1 range(p) 2 loop
12:02:23
finish mi1 range(p) 2 loop
12:02:23
start mi1 range(NT) loop
12:02:23
finish mi1 range(NT) loop
12:02:23
start mi1 range(n) loop
12:02:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:02:23
start mi1 range(n) 2loop
12:02:23
finish mi1 range(n) 2loop
12:02:23
[[-3.11679557]]
end mi1 loop
12:02:23
estep
12:02:23
end estep
12:02:39
end pa12:02:39
goodness of fit correlation [0.22816504]
start cluster 12:02:39
31
parallel submitted
12:03:00
parallel finished
12:05:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:05:34
start mi0
12:05:34
start mi0 range(p) 1 loop
12:05:34
finish mi0 range(p) 1 loop
12:05:34
start mi0 range(p) 2 loop
12:05:34
finish mi0 range(p) 2 loop
12:05:34
start mi0 range(NT) loop
12:05:34
finish mi0 range(NT) loop
12:05:34
start mi0 range(n) loop
12:05:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:05:35
start mi0 range(n) 2loop
12:05:35
finish mi0 range(n) 2loop
12:05:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:05:35
start mi1 range(p) 1 loop
12:05:35
finish mi1 range(p) 1 loop
12:05:35
start mi1 range(p) 2 loop
12:05:35
finish mi1 range(p) 2 loop
12:05:35
start mi1 range(NT) loop
12:05:35
finish mi1 range(NT) loop
12:05:35
start mi1 range(n) loop
12:05:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:05:35
start mi1 range(n) 2loop
12:05:35
finish mi1 range(n) 2loop
12:05:35
[[-3.12530213]]
end mi1 loop
12:05:35
estep
12:05:35
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:05:51
start ppi1
12:05:51
start mi0
12:05:51
start mi0 range(p) 1 loop
12:05:51
finish mi0 range(p) 1 loop
12:05:51
start mi0 range(p) 2 loop
12:05:51
finish mi0 range(p) 2 loop
12:05:51
start mi0 range(NT) loop
12:05:51
finish mi0 range(NT) loop
12:05:51
start mi0 range(n) loop
12:05:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:05:51
start mi0 range(n) 2loop
12:05:51
finish mi0 range(n) 2loop
12:05:52
start mi1
12:05:52
start mi1 range(p) 1 loop
12:05:52
finish mi1 range(p) 1 loop
12:05:52
start mi1 range(p) 2 loop
12:05:52
finish mi1 range(p) 2 loop
12:05:52
start mi1 range(NT) loop
12:05:52
finish mi1 range(NT) loop
12:05:52
start mi1 range(n) loop
12:05:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:05:52
start mi1 range(n) 2loop
12:05:52
finish mi1 range(n) 2loop
12:05:52
start mi2
12:05:52
start mi2 range(p) 1 loop
12:05:52
finish mi2 range(p) 1 loop
12:05:52
start mi2 range(p) 2 loop
12:05:52
finish mi2 range(p) 2 loop
12:05:52
start mi2 range(NT) loop
12:05:52
finish mi2 range(NT) loop
12:05:52
start mi2 range(n) loop
12:05:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:05:52
start mi2 range(n) 2loop
12:05:52
finish mi2 range(n) 2loop
12:05:52
[[-3.18782248]]
end mi2 loop
12:05:52
estep
12:05:52
end estep
12:06:09
end pa12:06:09
goodness of fit correlation [0.29021061]
start cluster 12:06:09
32
parallel submitted
12:06:29
parallel finished
12:08:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:08:53
start mi0
12:08:53
start mi0 range(p) 1 loop
12:08:53
finish mi0 range(p) 1 loop
12:08:53
start mi0 range(p) 2 loop
12:08:53
finish mi0 range(p) 2 loop
12:08:53
start mi0 range(NT) loop
12:08:53
finish mi0 range(NT) loop
12:08:53
start mi0 range(n) loop
12:08:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:08:53
start mi0 range(n) 2loop
12:08:53
finish mi0 range(n) 2loop
12:08:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:08:54
start mi1 range(p) 1 loop
12:08:54
finish mi1 range(p) 1 loop
12:08:54
start mi1 range(p) 2 loop
12:08:54
finish mi1 range(p) 2 loop
12:08:54
start mi1 range(NT) loop
12:08:54
finish mi1 range(NT) loop
12:08:54
start mi1 range(n) loop
12:08:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:08:54
start mi1 range(n) 2loop
12:08:54
finish mi1 range(n) 2loop
12:08:54
[[-3.13684156]]
end mi1 loop
12:08:54
estep
12:08:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:09:10
start ppi1
12:09:10
start mi0
12:09:10
start mi0 range(p) 1 loop
12:09:10
finish mi0 range(p) 1 loop
12:09:10
start mi0 range(p) 2 loop
12:09:10
finish mi0 range(p) 2 loop
12:09:10
start mi0 range(NT) loop
12:09:11
finish mi0 range(NT) loop
12:09:11
start mi0 range(n) loop
12:09:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:09:11
start mi0 range(n) 2loop
12:09:11
finish mi0 range(n) 2loop
12:09:11
start mi1
12:09:11
start mi1 range(p) 1 loop
12:09:11
finish mi1 range(p) 1 loop
12:09:11
start mi1 range(p) 2 loop
12:09:11
finish mi1 range(p) 2 loop
12:09:11
start mi1 range(NT) loop
12:09:11
finish mi1 range(NT) loop
12:09:11
start mi1 range(n) loop
12:09:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:09:11
start mi1 range(n) 2loop
12:09:11
finish mi1 range(n) 2loop
12:09:11
start mi2
12:09:11
start mi2 range(p) 1 loop
12:09:11
finish mi2 range(p) 1 loop
12:09:11
start mi2 range(p) 2 loop
12:09:11
finish mi2 range(p) 2 loop
12:09:11
start mi2 range(NT) loop
12:09:11
finish mi2 range(NT) loop
12:09:11
start mi2 range(n) loop
12:09:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:09:11
start mi2 range(n) 2loop
12:09:11
finish mi2 range(n) 2loop
12:09:11
[[-3.19937355]]
end mi2 loop
12:09:11
estep
12:09:11
end estep
12:09:28
end pa12:09:28
goodness of fit correlation [0.26225404]
start cluster 12:09:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46279 instead
  warnings.warn(
33
parallel submitted
12:09:50
parallel finished
12:13:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:13:29
start mi0
12:13:29
start mi0 range(p) 1 loop
12:13:29
finish mi0 range(p) 1 loop
12:13:29
start mi0 range(p) 2 loop
12:13:29
finish mi0 range(p) 2 loop
12:13:29
start mi0 range(NT) loop
12:13:29
finish mi0 range(NT) loop
12:13:30
start mi0 range(n) loop
12:13:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:13:30
start mi0 range(n) 2loop
12:13:30
finish mi0 range(n) 2loop
12:13:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:13:30
start mi1 range(p) 1 loop
12:13:30
finish mi1 range(p) 1 loop
12:13:30
start mi1 range(p) 2 loop
12:13:30
finish mi1 range(p) 2 loop
12:13:30
start mi1 range(NT) loop
12:13:30
finish mi1 range(NT) loop
12:13:30
start mi1 range(n) loop
12:13:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:13:30
start mi1 range(n) 2loop
12:13:30
finish mi1 range(n) 2loop
12:13:30
start mi2
12:13:30
start mi2 range(p) 1 loop
12:13:30
finish mi2 range(p) 1 loop
12:13:30
start mi2 range(p) 2 loop
12:13:30
finish mi2 range(p) 2 loop
12:13:30
start mi2 range(NT) loop
12:13:30
finish mi2 range(NT) loop
12:13:30
start mi2 range(n) loop
12:13:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:13:30
start mi2 range(n) 2loop
12:13:30
finish mi2 range(n) 2loop
12:13:30
[[-3.16622755]]
end mi2 loop
12:13:30
estep
12:13:30
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:13:46
start ppi1
12:13:46
start mi0
12:13:46
start mi0 range(p) 1 loop
12:13:46
finish mi0 range(p) 1 loop
12:13:46
start mi0 range(p) 2 loop
12:13:46
finish mi0 range(p) 2 loop
12:13:46
start mi0 range(NT) loop
12:13:46
finish mi0 range(NT) loop
12:13:46
start mi0 range(n) loop
12:13:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:13:46
start mi0 range(n) 2loop
12:13:46
finish mi0 range(n) 2loop
12:13:46
start mi1
12:13:46
start mi1 range(p) 1 loop
12:13:46
finish mi1 range(p) 1 loop
12:13:46
start mi1 range(p) 2 loop
12:13:46
finish mi1 range(p) 2 loop
12:13:46
start mi1 range(NT) loop
12:13:46
finish mi1 range(NT) loop
12:13:46
start mi1 range(n) loop
12:13:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:13:46
start mi1 range(n) 2loop
12:13:46
finish mi1 range(n) 2loop
12:13:46
start mi2
12:13:46
start mi2 range(p) 1 loop
12:13:46
finish mi2 range(p) 1 loop
12:13:46
start mi2 range(p) 2 loop
12:13:46
finish mi2 range(p) 2 loop
12:13:46
start mi2 range(NT) loop
12:13:46
finish mi2 range(NT) loop
12:13:46
start mi2 range(n) loop
12:13:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:13:46
start mi2 range(n) 2loop
12:13:46
finish mi2 range(n) 2loop
12:13:46
[[-3.22871955]]
end mi2 loop
12:13:46
estep
12:13:46
end estep
12:14:02
end pa12:14:02
goodness of fit correlation [0.30848248]
start cluster 12:14:02
34
parallel submitted
12:14:23
parallel finished
12:17:27
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:17:38
start mi0
12:17:38
start mi0 range(p) 1 loop
12:17:38
finish mi0 range(p) 1 loop
12:17:38
start mi0 range(p) 2 loop
12:17:38
finish mi0 range(p) 2 loop
12:17:38
start mi0 range(NT) loop
12:17:38
finish mi0 range(NT) loop
12:17:38
start mi0 range(n) loop
12:17:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:17:38
start mi0 range(n) 2loop
12:17:38
finish mi0 range(n) 2loop
12:17:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:17:38
start mi1 range(p) 1 loop
12:17:38
finish mi1 range(p) 1 loop
12:17:38
start mi1 range(p) 2 loop
12:17:38
finish mi1 range(p) 2 loop
12:17:38
start mi1 range(NT) loop
12:17:38
finish mi1 range(NT) loop
12:17:38
start mi1 range(n) loop
12:17:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:17:38
start mi1 range(n) 2loop
12:17:38
finish mi1 range(n) 2loop
12:17:38
start mi2
12:17:38
start mi2 range(p) 1 loop
12:17:38
finish mi2 range(p) 1 loop
12:17:38
start mi2 range(p) 2 loop
12:17:38
finish mi2 range(p) 2 loop
12:17:38
start mi2 range(NT) loop
12:17:39
finish mi2 range(NT) loop
12:17:39
start mi2 range(n) loop
12:17:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:17:39
start mi2 range(n) 2loop
12:17:39
finish mi2 range(n) 2loop
12:17:39
[[-3.15013475]]
end mi2 loop
12:17:39
estep
12:17:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:17:55
start ppi1
12:17:55
start mi0
12:17:55
start mi0 range(p) 1 loop
12:17:55
finish mi0 range(p) 1 loop
12:17:55
start mi0 range(p) 2 loop
12:17:55
finish mi0 range(p) 2 loop
12:17:55
start mi0 range(NT) loop
12:17:56
finish mi0 range(NT) loop
12:17:56
start mi0 range(n) loop
12:17:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:17:56
start mi0 range(n) 2loop
12:17:56
finish mi0 range(n) 2loop
12:17:56
start mi1
12:17:56
start mi1 range(p) 1 loop
12:17:56
finish mi1 range(p) 1 loop
12:17:56
start mi1 range(p) 2 loop
12:17:56
finish mi1 range(p) 2 loop
12:17:56
start mi1 range(NT) loop
12:17:56
finish mi1 range(NT) loop
12:17:56
start mi1 range(n) loop
12:17:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:17:56
start mi1 range(n) 2loop
12:17:56
finish mi1 range(n) 2loop
12:17:56
start mi2
12:17:56
start mi2 range(p) 1 loop
12:17:56
finish mi2 range(p) 1 loop
12:17:56
start mi2 range(p) 2 loop
12:17:56
finish mi2 range(p) 2 loop
12:17:56
start mi2 range(NT) loop
12:17:56
finish mi2 range(NT) loop
12:17:56
start mi2 range(n) loop
12:17:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:17:56
start mi2 range(n) 2loop
12:17:56
finish mi2 range(n) 2loop
12:17:56
[[-3.21262676]]
end mi2 loop
12:17:56
estep
12:17:56
end estep
12:18:13
end pa12:18:13
goodness of fit correlation [0.27658496]
start cluster 12:18:13
35
parallel submitted
12:18:35
parallel finished
12:22:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:22:36
start mi0
12:22:36
start mi0 range(p) 1 loop
12:22:36
finish mi0 range(p) 1 loop
12:22:36
start mi0 range(p) 2 loop
12:22:36
finish mi0 range(p) 2 loop
12:22:36
start mi0 range(NT) loop
12:22:36
finish mi0 range(NT) loop
12:22:36
start mi0 range(n) loop
12:22:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:22:36
start mi0 range(n) 2loop
12:22:36
finish mi0 range(n) 2loop
12:22:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:22:36
start mi1 range(p) 1 loop
12:22:36
finish mi1 range(p) 1 loop
12:22:36
start mi1 range(p) 2 loop
12:22:36
finish mi1 range(p) 2 loop
12:22:36
start mi1 range(NT) loop
12:22:36
finish mi1 range(NT) loop
12:22:36
start mi1 range(n) loop
12:22:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:22:36
start mi1 range(n) 2loop
12:22:36
finish mi1 range(n) 2loop
12:22:36
start mi2
12:22:36
start mi2 range(p) 1 loop
12:22:36
finish mi2 range(p) 1 loop
12:22:36
start mi2 range(p) 2 loop
12:22:36
finish mi2 range(p) 2 loop
12:22:36
start mi2 range(NT) loop
12:22:36
finish mi2 range(NT) loop
12:22:36
start mi2 range(n) loop
12:22:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:22:37
start mi2 range(n) 2loop
12:22:37
finish mi2 range(n) 2loop
12:22:37
[[-3.18236333]]
end mi2 loop
12:22:37
estep
12:22:37
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:22:52
start ppi1
12:22:52
start mi0
12:22:52
start mi0 range(p) 1 loop
12:22:52
finish mi0 range(p) 1 loop
12:22:52
start mi0 range(p) 2 loop
12:22:52
finish mi0 range(p) 2 loop
12:22:52
start mi0 range(NT) loop
12:22:52
finish mi0 range(NT) loop
12:22:52
start mi0 range(n) loop
12:22:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:22:52
start mi0 range(n) 2loop
12:22:52
finish mi0 range(n) 2loop
12:22:52
start mi1
12:22:52
start mi1 range(p) 1 loop
12:22:52
finish mi1 range(p) 1 loop
12:22:52
start mi1 range(p) 2 loop
12:22:52
finish mi1 range(p) 2 loop
12:22:52
start mi1 range(NT) loop
12:22:52
finish mi1 range(NT) loop
12:22:52
start mi1 range(n) loop
12:22:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:22:52
start mi1 range(n) 2loop
12:22:52
finish mi1 range(n) 2loop
12:22:52
start mi2
12:22:52
start mi2 range(p) 1 loop
12:22:52
finish mi2 range(p) 1 loop
12:22:52
start mi2 range(p) 2 loop
12:22:52
finish mi2 range(p) 2 loop
12:22:53
start mi2 range(NT) loop
12:22:53
finish mi2 range(NT) loop
12:22:53
start mi2 range(n) loop
12:22:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:22:53
start mi2 range(n) 2loop
12:22:53
finish mi2 range(n) 2loop
12:22:53
[[-3.24485531]]
end mi2 loop
12:22:53
estep
12:22:53
end estep
12:23:09
end pa12:23:09
goodness of fit correlation [0.30690683]
start cluster 12:23:09
36
parallel submitted
12:23:32
parallel finished
12:26:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:26:50
start mi0
12:26:50
start mi0 range(p) 1 loop
12:26:50
finish mi0 range(p) 1 loop
12:26:50
start mi0 range(p) 2 loop
12:26:50
finish mi0 range(p) 2 loop
12:26:50
start mi0 range(NT) loop
12:26:50
finish mi0 range(NT) loop
12:26:50
start mi0 range(n) loop
12:26:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:26:50
start mi0 range(n) 2loop
12:26:50
finish mi0 range(n) 2loop
12:26:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:26:50
start mi1 range(p) 1 loop
12:26:50
finish mi1 range(p) 1 loop
12:26:50
start mi1 range(p) 2 loop
12:26:50
finish mi1 range(p) 2 loop
12:26:50
start mi1 range(NT) loop
12:26:50
finish mi1 range(NT) loop
12:26:50
start mi1 range(n) loop
12:26:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:26:50
start mi1 range(n) 2loop
12:26:50
finish mi1 range(n) 2loop
12:26:50
start mi2
12:26:50
start mi2 range(p) 1 loop
12:26:50
finish mi2 range(p) 1 loop
12:26:50
start mi2 range(p) 2 loop
12:26:50
finish mi2 range(p) 2 loop
12:26:50
start mi2 range(NT) loop
12:26:50
finish mi2 range(NT) loop
12:26:50
start mi2 range(n) loop
12:26:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:26:51
start mi2 range(n) 2loop
12:26:51
finish mi2 range(n) 2loop
12:26:51
[[-3.14649011]]
end mi2 loop
12:26:51
estep
12:26:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:27:06
start ppi1
12:27:06
start mi0
12:27:06
start mi0 range(p) 1 loop
12:27:06
finish mi0 range(p) 1 loop
12:27:06
start mi0 range(p) 2 loop
12:27:06
finish mi0 range(p) 2 loop
12:27:06
start mi0 range(NT) loop
12:27:07
finish mi0 range(NT) loop
12:27:07
start mi0 range(n) loop
12:27:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:27:07
start mi0 range(n) 2loop
12:27:07
finish mi0 range(n) 2loop
12:27:07
start mi1
12:27:07
start mi1 range(p) 1 loop
12:27:07
finish mi1 range(p) 1 loop
12:27:07
start mi1 range(p) 2 loop
12:27:07
finish mi1 range(p) 2 loop
12:27:07
start mi1 range(NT) loop
12:27:07
finish mi1 range(NT) loop
12:27:07
start mi1 range(n) loop
12:27:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:27:07
start mi1 range(n) 2loop
12:27:07
finish mi1 range(n) 2loop
12:27:07
start mi2
12:27:07
start mi2 range(p) 1 loop
12:27:07
finish mi2 range(p) 1 loop
12:27:07
start mi2 range(p) 2 loop
12:27:07
finish mi2 range(p) 2 loop
12:27:07
start mi2 range(NT) loop
12:27:07
finish mi2 range(NT) loop
12:27:07
start mi2 range(n) loop
12:27:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:27:07
start mi2 range(n) 2loop
12:27:07
finish mi2 range(n) 2loop
12:27:07
[[-3.20898212]]
end mi2 loop
12:27:07
estep
12:27:07
end estep
12:27:23
end pa12:27:23
goodness of fit correlation [0.27641364]
start cluster 12:27:23
37
parallel submitted
12:27:45
parallel finished
12:31:29
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:31:43
start mi0
12:31:43
start mi0 range(p) 1 loop
12:31:43
finish mi0 range(p) 1 loop
12:31:43
start mi0 range(p) 2 loop
12:31:43
finish mi0 range(p) 2 loop
12:31:43
start mi0 range(NT) loop
12:31:43
finish mi0 range(NT) loop
12:31:43
start mi0 range(n) loop
12:31:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:31:43
start mi0 range(n) 2loop
12:31:43
finish mi0 range(n) 2loop
12:31:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:31:43
start mi1 range(p) 1 loop
12:31:43
finish mi1 range(p) 1 loop
12:31:43
start mi1 range(p) 2 loop
12:31:43
finish mi1 range(p) 2 loop
12:31:43
start mi1 range(NT) loop
12:31:43
finish mi1 range(NT) loop
12:31:43
start mi1 range(n) loop
12:31:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:31:43
start mi1 range(n) 2loop
12:31:43
finish mi1 range(n) 2loop
12:31:43
start mi2
12:31:43
start mi2 range(p) 1 loop
12:31:43
finish mi2 range(p) 1 loop
12:31:43
start mi2 range(p) 2 loop
12:31:43
finish mi2 range(p) 2 loop
12:31:43
start mi2 range(NT) loop
12:31:43
finish mi2 range(NT) loop
12:31:43
start mi2 range(n) loop
12:31:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:31:44
start mi2 range(n) 2loop
12:31:44
finish mi2 range(n) 2loop
12:31:44
[[-3.17868075]]
end mi2 loop
12:31:44
estep
12:31:44
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:32:00
start ppi1
12:32:00
start mi0
12:32:00
start mi0 range(p) 1 loop
12:32:00
finish mi0 range(p) 1 loop
12:32:00
start mi0 range(p) 2 loop
12:32:00
finish mi0 range(p) 2 loop
12:32:00
start mi0 range(NT) loop
12:32:00
finish mi0 range(NT) loop
12:32:00
start mi0 range(n) loop
12:32:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:32:00
start mi0 range(n) 2loop
12:32:00
finish mi0 range(n) 2loop
12:32:00
start mi1
12:32:00
start mi1 range(p) 1 loop
12:32:00
finish mi1 range(p) 1 loop
12:32:00
start mi1 range(p) 2 loop
12:32:00
finish mi1 range(p) 2 loop
12:32:00
start mi1 range(NT) loop
12:32:00
finish mi1 range(NT) loop
12:32:00
start mi1 range(n) loop
12:32:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:32:00
start mi1 range(n) 2loop
12:32:00
finish mi1 range(n) 2loop
12:32:00
start mi2
12:32:00
start mi2 range(p) 1 loop
12:32:00
finish mi2 range(p) 1 loop
12:32:00
start mi2 range(p) 2 loop
12:32:00
finish mi2 range(p) 2 loop
12:32:00
start mi2 range(NT) loop
12:32:00
finish mi2 range(NT) loop
12:32:00
start mi2 range(n) loop
12:32:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:32:00
start mi2 range(n) 2loop
12:32:00
finish mi2 range(n) 2loop
12:32:00
[[-3.24117273]]
end mi2 loop
12:32:00
estep
12:32:00
end estep
12:32:17
end pa12:32:17
goodness of fit correlation [0.27893016]
start cluster 12:32:17
38
parallel submitted
12:32:40
parallel finished
12:35:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:36:11
start mi0
12:36:11
start mi0 range(p) 1 loop
12:36:11
finish mi0 range(p) 1 loop
12:36:11
start mi0 range(p) 2 loop
12:36:11
finish mi0 range(p) 2 loop
12:36:11
start mi0 range(NT) loop
12:36:11
finish mi0 range(NT) loop
12:36:11
start mi0 range(n) loop
12:36:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:36:11
start mi0 range(n) 2loop
12:36:11
finish mi0 range(n) 2loop
12:36:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:36:12
start mi1 range(p) 1 loop
12:36:12
finish mi1 range(p) 1 loop
12:36:12
start mi1 range(p) 2 loop
12:36:12
finish mi1 range(p) 2 loop
12:36:12
start mi1 range(NT) loop
12:36:12
finish mi1 range(NT) loop
12:36:12
start mi1 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:36:12
start mi1 range(n) 2loop
12:36:12
finish mi1 range(n) 2loop
12:36:12
[[-3.11704548]]
end mi1 loop
12:36:12
estep
12:36:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:36:28
start ppi1
12:36:28
start mi0
12:36:28
start mi0 range(p) 1 loop
12:36:28
finish mi0 range(p) 1 loop
12:36:28
start mi0 range(p) 2 loop
12:36:28
finish mi0 range(p) 2 loop
12:36:28
start mi0 range(NT) loop
12:36:28
finish mi0 range(NT) loop
12:36:28
start mi0 range(n) loop
12:36:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:36:28
start mi0 range(n) 2loop
12:36:28
finish mi0 range(n) 2loop
12:36:28
start mi1
12:36:28
start mi1 range(p) 1 loop
12:36:28
finish mi1 range(p) 1 loop
12:36:28
start mi1 range(p) 2 loop
12:36:28
finish mi1 range(p) 2 loop
12:36:28
start mi1 range(NT) loop
12:36:28
finish mi1 range(NT) loop
12:36:28
start mi1 range(n) loop
12:36:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:36:28
start mi1 range(n) 2loop
12:36:28
finish mi1 range(n) 2loop
12:36:28
start mi2
12:36:28
start mi2 range(p) 1 loop
12:36:28
finish mi2 range(p) 1 loop
12:36:28
start mi2 range(p) 2 loop
12:36:28
finish mi2 range(p) 2 loop
12:36:28
start mi2 range(NT) loop
12:36:28
finish mi2 range(NT) loop
12:36:28
start mi2 range(n) loop
12:36:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:36:29
start mi2 range(n) 2loop
12:36:29
finish mi2 range(n) 2loop
12:36:29
[[-3.17955919]]
end mi2 loop
12:36:29
estep
12:36:29
end estep
12:36:45
end pa12:36:45
goodness of fit correlation [0.26275639]
start cluster 12:36:45
39
parallel submitted
12:37:09
parallel finished
12:40:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:40:39
start mi0
12:40:39
start mi0 range(p) 1 loop
12:40:39
finish mi0 range(p) 1 loop
12:40:39
start mi0 range(p) 2 loop
12:40:39
finish mi0 range(p) 2 loop
12:40:39
start mi0 range(NT) loop
12:40:39
finish mi0 range(NT) loop
12:40:39
start mi0 range(n) loop
12:40:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:40:39
start mi0 range(n) 2loop
12:40:39
finish mi0 range(n) 2loop
12:40:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:40:39
start mi1 range(p) 1 loop
12:40:39
finish mi1 range(p) 1 loop
12:40:39
start mi1 range(p) 2 loop
12:40:39
finish mi1 range(p) 2 loop
12:40:39
start mi1 range(NT) loop
12:40:39
finish mi1 range(NT) loop
12:40:39
start mi1 range(n) loop
12:40:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:40:39
start mi1 range(n) 2loop
12:40:39
finish mi1 range(n) 2loop
12:40:39
start mi2
12:40:39
start mi2 range(p) 1 loop
12:40:39
finish mi2 range(p) 1 loop
12:40:39
start mi2 range(p) 2 loop
12:40:39
finish mi2 range(p) 2 loop
12:40:39
start mi2 range(NT) loop
12:40:39
finish mi2 range(NT) loop
12:40:39
start mi2 range(n) loop
12:40:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:40:39
start mi2 range(n) 2loop
12:40:39
finish mi2 range(n) 2loop
12:40:39
[[-3.15127211]]
end mi2 loop
12:40:39
estep
12:40:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:40:56
start ppi1
12:40:56
start mi0
12:40:56
start mi0 range(p) 1 loop
12:40:56
finish mi0 range(p) 1 loop
12:40:56
start mi0 range(p) 2 loop
12:40:56
finish mi0 range(p) 2 loop
12:40:56
start mi0 range(NT) loop
12:40:56
finish mi0 range(NT) loop
12:40:56
start mi0 range(n) loop
12:40:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:40:56
start mi0 range(n) 2loop
12:40:56
finish mi0 range(n) 2loop
12:40:56
start mi1
12:40:56
start mi1 range(p) 1 loop
12:40:56
finish mi1 range(p) 1 loop
12:40:56
start mi1 range(p) 2 loop
12:40:56
finish mi1 range(p) 2 loop
12:40:56
start mi1 range(NT) loop
12:40:56
finish mi1 range(NT) loop
12:40:56
start mi1 range(n) loop
12:40:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:40:56
start mi1 range(n) 2loop
12:40:56
finish mi1 range(n) 2loop
12:40:56
start mi2
12:40:56
start mi2 range(p) 1 loop
12:40:56
finish mi2 range(p) 1 loop
12:40:56
start mi2 range(p) 2 loop
12:40:56
finish mi2 range(p) 2 loop
12:40:56
start mi2 range(NT) loop
12:40:56
finish mi2 range(NT) loop
12:40:56
start mi2 range(n) loop
12:40:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:40:56
start mi2 range(n) 2loop
12:40:56
finish mi2 range(n) 2loop
12:40:57
[[-3.21376412]]
end mi2 loop
12:40:57
estep
12:40:57
end estep
12:41:13
end pa12:41:13
goodness of fit correlation [0.26054845]
start cluster 12:41:13
40
parallel submitted
12:41:37
parallel finished
12:44:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:45:02
start mi0
12:45:02
start mi0 range(p) 1 loop
12:45:02
finish mi0 range(p) 1 loop
12:45:02
start mi0 range(p) 2 loop
12:45:02
finish mi0 range(p) 2 loop
12:45:02
start mi0 range(NT) loop
12:45:02
finish mi0 range(NT) loop
12:45:02
start mi0 range(n) loop
12:45:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:45:02
start mi0 range(n) 2loop
12:45:02
finish mi0 range(n) 2loop
12:45:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:45:03
start mi1 range(p) 1 loop
12:45:03
finish mi1 range(p) 1 loop
12:45:03
start mi1 range(p) 2 loop
12:45:03
finish mi1 range(p) 2 loop
12:45:03
start mi1 range(NT) loop
12:45:03
finish mi1 range(NT) loop
12:45:03
start mi1 range(n) loop
12:45:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:45:03
start mi1 range(n) 2loop
12:45:03
finish mi1 range(n) 2loop
12:45:03
start mi2
12:45:03
start mi2 range(p) 1 loop
12:45:03
finish mi2 range(p) 1 loop
12:45:03
start mi2 range(p) 2 loop
12:45:03
finish mi2 range(p) 2 loop
12:45:03
start mi2 range(NT) loop
12:45:03
finish mi2 range(NT) loop
12:45:03
start mi2 range(n) loop
12:45:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:45:03
start mi2 range(n) 2loop
12:45:03
finish mi2 range(n) 2loop
12:45:03
[[-3.15622539]]
end mi2 loop
12:45:03
estep
12:45:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:45:19
start ppi1
12:45:19
start mi0
12:45:19
start mi0 range(p) 1 loop
12:45:19
finish mi0 range(p) 1 loop
12:45:19
start mi0 range(p) 2 loop
12:45:19
finish mi0 range(p) 2 loop
12:45:19
start mi0 range(NT) loop
12:45:19
finish mi0 range(NT) loop
12:45:19
start mi0 range(n) loop
12:45:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:45:19
start mi0 range(n) 2loop
12:45:19
finish mi0 range(n) 2loop
12:45:20
start mi1
12:45:20
start mi1 range(p) 1 loop
12:45:20
finish mi1 range(p) 1 loop
12:45:20
start mi1 range(p) 2 loop
12:45:20
finish mi1 range(p) 2 loop
12:45:20
start mi1 range(NT) loop
12:45:20
finish mi1 range(NT) loop
12:45:20
start mi1 range(n) loop
12:45:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:45:20
start mi1 range(n) 2loop
12:45:20
finish mi1 range(n) 2loop
12:45:20
start mi2
12:45:20
start mi2 range(p) 1 loop
12:45:20
finish mi2 range(p) 1 loop
12:45:20
start mi2 range(p) 2 loop
12:45:20
finish mi2 range(p) 2 loop
12:45:20
start mi2 range(NT) loop
12:45:20
finish mi2 range(NT) loop
12:45:20
start mi2 range(n) loop
12:45:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:45:20
start mi2 range(n) 2loop
12:45:20
finish mi2 range(n) 2loop
12:45:20
[[-3.21871739]]
end mi2 loop
12:45:20
estep
12:45:20
end estep
12:45:36
end pa12:45:36
goodness of fit correlation [0.28867071]
start cluster 12:45:36
41
parallel submitted
12:46:02
parallel finished
12:49:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:49:27
start mi0
12:49:27
start mi0 range(p) 1 loop
12:49:27
finish mi0 range(p) 1 loop
12:49:27
start mi0 range(p) 2 loop
12:49:27
finish mi0 range(p) 2 loop
12:49:27
start mi0 range(NT) loop
12:49:27
finish mi0 range(NT) loop
12:49:27
start mi0 range(n) loop
12:49:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:49:27
start mi0 range(n) 2loop
12:49:27
finish mi0 range(n) 2loop
12:49:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:49:27
start mi1 range(p) 1 loop
12:49:27
finish mi1 range(p) 1 loop
12:49:27
start mi1 range(p) 2 loop
12:49:27
finish mi1 range(p) 2 loop
12:49:27
start mi1 range(NT) loop
12:49:27
finish mi1 range(NT) loop
12:49:27
start mi1 range(n) loop
12:49:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:49:27
start mi1 range(n) 2loop
12:49:27
finish mi1 range(n) 2loop
12:49:27
start mi2
12:49:27
start mi2 range(p) 1 loop
12:49:27
finish mi2 range(p) 1 loop
12:49:27
start mi2 range(p) 2 loop
12:49:27
finish mi2 range(p) 2 loop
12:49:27
start mi2 range(NT) loop
12:49:27
finish mi2 range(NT) loop
12:49:27
start mi2 range(n) loop
12:49:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:49:27
start mi2 range(n) 2loop
12:49:27
finish mi2 range(n) 2loop
12:49:27
[[-3.15351057]]
end mi2 loop
12:49:27
estep
12:49:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:49:43
start ppi1
12:49:43
start mi0
12:49:43
start mi0 range(p) 1 loop
12:49:43
finish mi0 range(p) 1 loop
12:49:43
start mi0 range(p) 2 loop
12:49:43
finish mi0 range(p) 2 loop
12:49:43
start mi0 range(NT) loop
12:49:43
finish mi0 range(NT) loop
12:49:43
start mi0 range(n) loop
12:49:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:49:43
start mi0 range(n) 2loop
12:49:43
finish mi0 range(n) 2loop
12:49:43
start mi1
12:49:43
start mi1 range(p) 1 loop
12:49:43
finish mi1 range(p) 1 loop
12:49:43
start mi1 range(p) 2 loop
12:49:44
finish mi1 range(p) 2 loop
12:49:44
start mi1 range(NT) loop
12:49:44
finish mi1 range(NT) loop
12:49:44
start mi1 range(n) loop
12:49:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:49:44
start mi1 range(n) 2loop
12:49:44
finish mi1 range(n) 2loop
12:49:44
start mi2
12:49:44
start mi2 range(p) 1 loop
12:49:44
finish mi2 range(p) 1 loop
12:49:44
start mi2 range(p) 2 loop
12:49:44
finish mi2 range(p) 2 loop
12:49:44
start mi2 range(NT) loop
12:49:44
finish mi2 range(NT) loop
12:49:44
start mi2 range(n) loop
12:49:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:49:44
start mi2 range(n) 2loop
12:49:44
finish mi2 range(n) 2loop
12:49:44
[[-3.21600258]]
end mi2 loop
12:49:44
estep
12:49:44
end estep
12:50:00
end pa12:50:00
goodness of fit correlation [0.26253173]
start cluster 12:50:00
42
parallel submitted
12:50:23
parallel finished
12:54:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:54:34
start mi0
12:54:34
start mi0 range(p) 1 loop
12:54:34
finish mi0 range(p) 1 loop
12:54:34
start mi0 range(p) 2 loop
12:54:34
finish mi0 range(p) 2 loop
12:54:34
start mi0 range(NT) loop
12:54:34
finish mi0 range(NT) loop
12:54:34
start mi0 range(n) loop
12:54:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:54:34
start mi0 range(n) 2loop
12:54:34
finish mi0 range(n) 2loop
12:54:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:54:34
start mi1 range(p) 1 loop
12:54:34
finish mi1 range(p) 1 loop
12:54:34
start mi1 range(p) 2 loop
12:54:34
finish mi1 range(p) 2 loop
12:54:34
start mi1 range(NT) loop
12:54:34
finish mi1 range(NT) loop
12:54:34
start mi1 range(n) loop
12:54:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:54:34
start mi1 range(n) 2loop
12:54:34
finish mi1 range(n) 2loop
12:54:34
[[-3.13429171]]
end mi1 loop
12:54:34
estep
12:54:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:54:50
start ppi1
12:54:50
start mi0
12:54:50
start mi0 range(p) 1 loop
12:54:50
finish mi0 range(p) 1 loop
12:54:50
start mi0 range(p) 2 loop
12:54:50
finish mi0 range(p) 2 loop
12:54:50
start mi0 range(NT) loop
12:54:50
finish mi0 range(NT) loop
12:54:50
start mi0 range(n) loop
12:54:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:54:50
start mi0 range(n) 2loop
12:54:50
finish mi0 range(n) 2loop
12:54:50
start mi1
12:54:50
start mi1 range(p) 1 loop
12:54:50
finish mi1 range(p) 1 loop
12:54:50
start mi1 range(p) 2 loop
12:54:50
finish mi1 range(p) 2 loop
12:54:50
start mi1 range(NT) loop
12:54:50
finish mi1 range(NT) loop
12:54:50
start mi1 range(n) loop
12:54:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:54:50
start mi1 range(n) 2loop
12:54:50
finish mi1 range(n) 2loop
12:54:51
start mi2
12:54:51
start mi2 range(p) 1 loop
12:54:51
finish mi2 range(p) 1 loop
12:54:51
start mi2 range(p) 2 loop
12:54:51
finish mi2 range(p) 2 loop
12:54:51
start mi2 range(NT) loop
12:54:51
finish mi2 range(NT) loop
12:54:51
start mi2 range(n) loop
12:54:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:54:51
start mi2 range(n) 2loop
12:54:51
finish mi2 range(n) 2loop
12:54:51
[[-3.19682088]]
end mi2 loop
12:54:51
estep
12:54:51
end estep
12:55:08
end pa12:55:08
goodness of fit correlation [0.28699898]
start cluster 12:55:08
43
parallel submitted
12:55:32
parallel finished
12:58:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:59:01
start mi0
12:59:01
start mi0 range(p) 1 loop
12:59:01
finish mi0 range(p) 1 loop
12:59:01
start mi0 range(p) 2 loop
12:59:01
finish mi0 range(p) 2 loop
12:59:01
start mi0 range(NT) loop
12:59:01
finish mi0 range(NT) loop
12:59:01
start mi0 range(n) loop
12:59:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:59:01
start mi0 range(n) 2loop
12:59:01
finish mi0 range(n) 2loop
12:59:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:59:01
start mi1 range(p) 1 loop
12:59:01
finish mi1 range(p) 1 loop
12:59:01
start mi1 range(p) 2 loop
12:59:01
finish mi1 range(p) 2 loop
12:59:01
start mi1 range(NT) loop
12:59:02
finish mi1 range(NT) loop
12:59:02
start mi1 range(n) loop
12:59:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:59:02
start mi1 range(n) 2loop
12:59:02
finish mi1 range(n) 2loop
12:59:02
[[-3.1326409]]
end mi1 loop
12:59:02
estep
12:59:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:59:19
start ppi1
12:59:19
start mi0
12:59:19
start mi0 range(p) 1 loop
12:59:19
finish mi0 range(p) 1 loop
12:59:19
start mi0 range(p) 2 loop
12:59:19
finish mi0 range(p) 2 loop
12:59:19
start mi0 range(NT) loop
12:59:19
finish mi0 range(NT) loop
12:59:19
start mi0 range(n) loop
12:59:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:59:19
start mi0 range(n) 2loop
12:59:19
finish mi0 range(n) 2loop
12:59:19
start mi1
12:59:19
start mi1 range(p) 1 loop
12:59:19
finish mi1 range(p) 1 loop
12:59:19
start mi1 range(p) 2 loop
12:59:19
finish mi1 range(p) 2 loop
12:59:19
start mi1 range(NT) loop
12:59:19
finish mi1 range(NT) loop
12:59:20
start mi1 range(n) loop
12:59:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:59:20
start mi1 range(n) 2loop
12:59:20
finish mi1 range(n) 2loop
12:59:20
start mi2
12:59:20
start mi2 range(p) 1 loop
12:59:20
finish mi2 range(p) 1 loop
12:59:20
start mi2 range(p) 2 loop
12:59:20
finish mi2 range(p) 2 loop
12:59:20
start mi2 range(NT) loop
12:59:20
finish mi2 range(NT) loop
12:59:20
start mi2 range(n) loop
12:59:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:59:20
start mi2 range(n) 2loop
12:59:20
finish mi2 range(n) 2loop
12:59:20
[[-3.19516832]]
end mi2 loop
12:59:20
estep
12:59:20
end estep
12:59:37
end pa12:59:37
goodness of fit correlation [0.2452803]
start cluster 12:59:37
44
parallel submitted
13:00:05
parallel finished
13:03:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:03:20
start mi0
13:03:20
start mi0 range(p) 1 loop
13:03:20
finish mi0 range(p) 1 loop
13:03:20
start mi0 range(p) 2 loop
13:03:20
finish mi0 range(p) 2 loop
13:03:20
start mi0 range(NT) loop
13:03:20
finish mi0 range(NT) loop
13:03:20
start mi0 range(n) loop
13:03:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:03:20
start mi0 range(n) 2loop
13:03:20
finish mi0 range(n) 2loop
13:03:20
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:03:20
start mi1 range(p) 1 loop
13:03:20
finish mi1 range(p) 1 loop
13:03:20
start mi1 range(p) 2 loop
13:03:20
finish mi1 range(p) 2 loop
13:03:20
start mi1 range(NT) loop
13:03:20
finish mi1 range(NT) loop
13:03:20
start mi1 range(n) loop
13:03:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:03:20
start mi1 range(n) 2loop
13:03:20
finish mi1 range(n) 2loop
13:03:21
[[-3.11620639]]
end mi1 loop
13:03:21
estep
13:03:21
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:03:37
start ppi1
13:03:37
start mi0
13:03:37
start mi0 range(p) 1 loop
13:03:37
finish mi0 range(p) 1 loop
13:03:37
start mi0 range(p) 2 loop
13:03:37
finish mi0 range(p) 2 loop
13:03:37
start mi0 range(NT) loop
13:03:37
finish mi0 range(NT) loop
13:03:37
start mi0 range(n) loop
13:03:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:03:37
start mi0 range(n) 2loop
13:03:37
finish mi0 range(n) 2loop
13:03:37
start mi1
13:03:37
start mi1 range(p) 1 loop
13:03:37
finish mi1 range(p) 1 loop
13:03:37
start mi1 range(p) 2 loop
13:03:37
finish mi1 range(p) 2 loop
13:03:37
start mi1 range(NT) loop
13:03:37
finish mi1 range(NT) loop
13:03:37
start mi1 range(n) loop
13:03:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:03:37
start mi1 range(n) 2loop
13:03:37
finish mi1 range(n) 2loop
13:03:37
start mi2
13:03:37
start mi2 range(p) 1 loop
13:03:37
finish mi2 range(p) 1 loop
13:03:37
start mi2 range(p) 2 loop
13:03:37
finish mi2 range(p) 2 loop
13:03:37
start mi2 range(NT) loop
13:03:37
finish mi2 range(NT) loop
13:03:37
start mi2 range(n) loop
13:03:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:03:37
start mi2 range(n) 2loop
13:03:37
finish mi2 range(n) 2loop
13:03:38
[[-3.1787195]]
end mi2 loop
13:03:38
estep
13:03:38
end estep
13:03:55
end pa13:03:55
goodness of fit correlation [0.27308226]
start cluster 13:03:55
45
parallel submitted
13:04:20
parallel finished
13:07:17
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:07:32
start mi0
13:07:32
start mi0 range(p) 1 loop
13:07:32
finish mi0 range(p) 1 loop
13:07:32
start mi0 range(p) 2 loop
13:07:32
finish mi0 range(p) 2 loop
13:07:32
start mi0 range(NT) loop
13:07:32
finish mi0 range(NT) loop
13:07:32
start mi0 range(n) loop
13:07:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:07:32
start mi0 range(n) 2loop
13:07:32
finish mi0 range(n) 2loop
13:07:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:07:32
start mi1 range(p) 1 loop
13:07:32
finish mi1 range(p) 1 loop
13:07:32
start mi1 range(p) 2 loop
13:07:32
finish mi1 range(p) 2 loop
13:07:32
start mi1 range(NT) loop
13:07:32
finish mi1 range(NT) loop
13:07:32
start mi1 range(n) loop
13:07:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:07:32
start mi1 range(n) 2loop
13:07:32
finish mi1 range(n) 2loop
13:07:32
start mi2
13:07:32
start mi2 range(p) 1 loop
13:07:32
finish mi2 range(p) 1 loop
13:07:32
start mi2 range(p) 2 loop
13:07:32
finish mi2 range(p) 2 loop
13:07:32
start mi2 range(NT) loop
13:07:33
finish mi2 range(NT) loop
13:07:33
start mi2 range(n) loop
13:07:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:07:33
start mi2 range(n) 2loop
13:07:33
finish mi2 range(n) 2loop
13:07:33
[[-3.17614917]]
end mi2 loop
13:07:33
estep
13:07:33
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:07:50
start ppi1
13:07:50
start mi0
13:07:50
start mi0 range(p) 1 loop
13:07:50
finish mi0 range(p) 1 loop
13:07:50
start mi0 range(p) 2 loop
13:07:50
finish mi0 range(p) 2 loop
13:07:50
start mi0 range(NT) loop
13:07:50
finish mi0 range(NT) loop
13:07:50
start mi0 range(n) loop
13:07:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:07:50
start mi0 range(n) 2loop
13:07:50
finish mi0 range(n) 2loop
13:07:50
start mi1
13:07:50
start mi1 range(p) 1 loop
13:07:50
finish mi1 range(p) 1 loop
13:07:50
start mi1 range(p) 2 loop
13:07:50
finish mi1 range(p) 2 loop
13:07:50
start mi1 range(NT) loop
13:07:50
finish mi1 range(NT) loop
13:07:50
start mi1 range(n) loop
13:07:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:07:50
start mi1 range(n) 2loop
13:07:50
finish mi1 range(n) 2loop
13:07:51
start mi2
13:07:51
start mi2 range(p) 1 loop
13:07:51
finish mi2 range(p) 1 loop
13:07:51
start mi2 range(p) 2 loop
13:07:51
finish mi2 range(p) 2 loop
13:07:51
start mi2 range(NT) loop
13:07:51
finish mi2 range(NT) loop
13:07:51
start mi2 range(n) loop
13:07:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:07:51
start mi2 range(n) 2loop
13:07:51
finish mi2 range(n) 2loop
13:07:51
[[-3.23864115]]
end mi2 loop
13:07:51
estep
13:07:51
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
end estep
13:08:09
end pa13:08:09
goodness of fit correlation [0.26717078]
start cluster 13:08:09
46
parallel submitted
13:08:34
parallel finished
13:11:37
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:11:54
start mi0
13:11:54
start mi0 range(p) 1 loop
13:11:54
finish mi0 range(p) 1 loop
13:11:54
start mi0 range(p) 2 loop
13:11:54
finish mi0 range(p) 2 loop
13:11:54
start mi0 range(NT) loop
13:11:54
finish mi0 range(NT) loop
13:11:54
start mi0 range(n) loop
13:11:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:11:54
start mi0 range(n) 2loop
13:11:54
finish mi0 range(n) 2loop
13:11:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:11:54
start mi1 range(p) 1 loop
13:11:54
finish mi1 range(p) 1 loop
13:11:54
start mi1 range(p) 2 loop
13:11:54
finish mi1 range(p) 2 loop
13:11:54
start mi1 range(NT) loop
13:11:54
finish mi1 range(NT) loop
13:11:54
start mi1 range(n) loop
13:11:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:11:54
start mi1 range(n) 2loop
13:11:54
finish mi1 range(n) 2loop
13:11:54
[[-3.02559112]]
end mi1 loop
13:11:54
estep
13:11:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:12:11
start ppi1
13:12:11
start mi0
13:12:11
start mi0 range(p) 1 loop
13:12:11
finish mi0 range(p) 1 loop
13:12:11
start mi0 range(p) 2 loop
13:12:11
finish mi0 range(p) 2 loop
13:12:11
start mi0 range(NT) loop
13:12:11
finish mi0 range(NT) loop
13:12:11
start mi0 range(n) loop
13:12:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:12:11
start mi0 range(n) 2loop
13:12:11
finish mi0 range(n) 2loop
13:12:11
start mi1
13:12:11
start mi1 range(p) 1 loop
13:12:11
finish mi1 range(p) 1 loop
13:12:11
start mi1 range(p) 2 loop
13:12:11
finish mi1 range(p) 2 loop
13:12:11
start mi1 range(NT) loop
13:12:11
finish mi1 range(NT) loop
13:12:11
start mi1 range(n) loop
13:12:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:12:11
start mi1 range(n) 2loop
13:12:11
finish mi1 range(n) 2loop
13:12:11
[[-3.08807612]]
end mi1 loop
13:12:11
estep
13:12:11
end estep
13:12:29
end pa13:12:29
goodness of fit correlation [0.24675718]
start cluster 13:12:29
47
parallel submitted
13:12:54
parallel finished
13:16:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:16:59
start mi0
13:16:59
start mi0 range(p) 1 loop
13:16:59
finish mi0 range(p) 1 loop
13:16:59
start mi0 range(p) 2 loop
13:16:59
finish mi0 range(p) 2 loop
13:16:59
start mi0 range(NT) loop
13:16:59
finish mi0 range(NT) loop
13:16:59
start mi0 range(n) loop
13:16:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:16:59
start mi0 range(n) 2loop
13:16:59
finish mi0 range(n) 2loop
13:16:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:16:59
start mi1 range(p) 1 loop
13:16:59
finish mi1 range(p) 1 loop
13:16:59
start mi1 range(p) 2 loop
13:16:59
finish mi1 range(p) 2 loop
13:16:59
start mi1 range(NT) loop
13:16:59
finish mi1 range(NT) loop
13:16:59
start mi1 range(n) loop
13:16:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:16:59
start mi1 range(n) 2loop
13:16:59
finish mi1 range(n) 2loop
13:17:00
[[-3.04624937]]
end mi1 loop
13:17:00
estep
13:17:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:17:16
start ppi1
13:17:16
start mi0
13:17:16
start mi0 range(p) 1 loop
13:17:16
finish mi0 range(p) 1 loop
13:17:16
start mi0 range(p) 2 loop
13:17:16
finish mi0 range(p) 2 loop
13:17:16
start mi0 range(NT) loop
13:17:16
finish mi0 range(NT) loop
13:17:16
start mi0 range(n) loop
13:17:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:17:16
start mi0 range(n) 2loop
13:17:16
finish mi0 range(n) 2loop
13:17:16
start mi1
13:17:16
start mi1 range(p) 1 loop
13:17:16
finish mi1 range(p) 1 loop
13:17:16
start mi1 range(p) 2 loop
13:17:16
finish mi1 range(p) 2 loop
13:17:16
start mi1 range(NT) loop
13:17:16
finish mi1 range(NT) loop
13:17:16
start mi1 range(n) loop
13:17:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:17:16
start mi1 range(n) 2loop
13:17:16
finish mi1 range(n) 2loop
13:17:16
[[-3.10872572]]
end mi1 loop
13:17:16
estep
13:17:16
end estep
13:17:32
end pa13:17:32
goodness of fit correlation [0.2932215]
start cluster 13:17:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43117 instead
  warnings.warn(
48
parallel submitted
13:17:55
parallel finished
13:23:34
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:23:51
start mi0
13:23:51
start mi0 range(p) 1 loop
13:23:51
finish mi0 range(p) 1 loop
13:23:51
start mi0 range(p) 2 loop
13:23:51
finish mi0 range(p) 2 loop
13:23:51
start mi0 range(NT) loop
13:23:51
finish mi0 range(NT) loop
13:23:51
start mi0 range(n) loop
13:23:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:23:52
start mi0 range(n) 2loop
13:23:52
finish mi0 range(n) 2loop
13:23:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:23:52
start mi1 range(p) 1 loop
13:23:52
finish mi1 range(p) 1 loop
13:23:52
start mi1 range(p) 2 loop
13:23:52
finish mi1 range(p) 2 loop
13:23:52
start mi1 range(NT) loop
13:23:52
finish mi1 range(NT) loop
13:23:52
start mi1 range(n) loop
13:23:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:23:52
start mi1 range(n) 2loop
13:23:52
finish mi1 range(n) 2loop
13:23:52
[[-3.07841694]]
end mi1 loop
13:23:52
estep
13:23:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:24:10
start ppi1
13:24:10
start mi0
13:24:10
start mi0 range(p) 1 loop
13:24:10
finish mi0 range(p) 1 loop
13:24:10
start mi0 range(p) 2 loop
13:24:10
finish mi0 range(p) 2 loop
13:24:10
start mi0 range(NT) loop
13:24:10
finish mi0 range(NT) loop
13:24:10
start mi0 range(n) loop
13:24:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:24:10
start mi0 range(n) 2loop
13:24:10
finish mi0 range(n) 2loop
13:24:10
start mi1
13:24:10
start mi1 range(p) 1 loop
13:24:10
finish mi1 range(p) 1 loop
13:24:10
start mi1 range(p) 2 loop
13:24:10
finish mi1 range(p) 2 loop
13:24:10
start mi1 range(NT) loop
13:24:10
finish mi1 range(NT) loop
13:24:10
start mi1 range(n) loop
13:24:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:24:10
start mi1 range(n) 2loop
13:24:10
finish mi1 range(n) 2loop
13:24:10
[[-3.14086869]]
end mi1 loop
13:24:10
estep
13:24:10
end estep
13:24:26
end pa13:24:26
goodness of fit correlation [0.25692136]
start cluster 13:24:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38357 instead
  warnings.warn(
49
parallel submitted
13:24:50
parallel finished
13:27:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:27:57
start mi0
13:27:57
start mi0 range(p) 1 loop
13:27:57
finish mi0 range(p) 1 loop
13:27:57
start mi0 range(p) 2 loop
13:27:57
finish mi0 range(p) 2 loop
13:27:57
start mi0 range(NT) loop
13:27:57
finish mi0 range(NT) loop
13:27:57
start mi0 range(n) loop
13:27:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:27:57
start mi0 range(n) 2loop
13:27:57
finish mi0 range(n) 2loop
13:27:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:27:58
start mi1 range(p) 1 loop
13:27:58
finish mi1 range(p) 1 loop
13:27:58
start mi1 range(p) 2 loop
13:27:58
finish mi1 range(p) 2 loop
13:27:58
start mi1 range(NT) loop
13:27:58
finish mi1 range(NT) loop
13:27:58
start mi1 range(n) loop
13:27:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:27:58
start mi1 range(n) 2loop
13:27:58
finish mi1 range(n) 2loop
13:27:58
[[-3.09503134]]
end mi1 loop
13:27:58
estep
13:27:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:28:15
start ppi1
13:28:15
start mi0
13:28:15
start mi0 range(p) 1 loop
13:28:15
finish mi0 range(p) 1 loop
13:28:15
start mi0 range(p) 2 loop
13:28:15
finish mi0 range(p) 2 loop
13:28:15
start mi0 range(NT) loop
13:28:15
finish mi0 range(NT) loop
13:28:15
start mi0 range(n) loop
13:28:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:28:15
start mi0 range(n) 2loop
13:28:15
finish mi0 range(n) 2loop
13:28:15
start mi1
13:28:15
start mi1 range(p) 1 loop
13:28:15
finish mi1 range(p) 1 loop
13:28:15
start mi1 range(p) 2 loop
13:28:15
finish mi1 range(p) 2 loop
13:28:15
start mi1 range(NT) loop
13:28:15
finish mi1 range(NT) loop
13:28:15
start mi1 range(n) loop
13:28:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:28:16
start mi1 range(n) 2loop
13:28:16
finish mi1 range(n) 2loop
13:28:16
start mi2
13:28:16
start mi2 range(p) 1 loop
13:28:16
finish mi2 range(p) 1 loop
13:28:16
start mi2 range(p) 2 loop
13:28:16
finish mi2 range(p) 2 loop
13:28:16
start mi2 range(NT) loop
13:28:16
finish mi2 range(NT) loop
13:28:16
start mi2 range(n) loop
13:28:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:28:16
start mi2 range(n) 2loop
13:28:16
finish mi2 range(n) 2loop
13:28:16
[[-3.15753294]]
end mi2 loop
13:28:16
estep
13:28:16
end estep
13:28:33
end pa13:28:33
goodness of fit correlation [0.24844548]
start cluster 13:28:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42959 instead
  warnings.warn(
50
parallel submitted
13:29:00
parallel finished
13:34:32
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:34:50
start mi0
13:34:50
start mi0 range(p) 1 loop
13:34:50
finish mi0 range(p) 1 loop
13:34:50
start mi0 range(p) 2 loop
13:34:50
finish mi0 range(p) 2 loop
13:34:50
start mi0 range(NT) loop
13:34:50
finish mi0 range(NT) loop
13:34:50
start mi0 range(n) loop
13:34:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:34:50
start mi0 range(n) 2loop
13:34:50
finish mi0 range(n) 2loop
13:34:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:34:50
start mi1 range(p) 1 loop
13:34:50
finish mi1 range(p) 1 loop
13:34:50
start mi1 range(p) 2 loop
13:34:50
finish mi1 range(p) 2 loop
13:34:50
start mi1 range(NT) loop
13:34:50
finish mi1 range(NT) loop
13:34:50
start mi1 range(n) loop
13:34:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:34:50
start mi1 range(n) 2loop
13:34:50
finish mi1 range(n) 2loop
13:34:50
start mi2
13:34:50
start mi2 range(p) 1 loop
13:34:50
finish mi2 range(p) 1 loop
13:34:50
start mi2 range(p) 2 loop
13:34:50
finish mi2 range(p) 2 loop
13:34:51
start mi2 range(NT) loop
13:34:51
finish mi2 range(NT) loop
13:34:51
start mi2 range(n) loop
13:34:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:34:51
start mi2 range(n) 2loop
13:34:51
finish mi2 range(n) 2loop
13:34:51
[[-3.17302149]]
end mi2 loop
13:34:51
estep
13:34:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:35:08
start ppi1
13:35:08
start mi0
13:35:08
start mi0 range(p) 1 loop
13:35:08
finish mi0 range(p) 1 loop
13:35:08
start mi0 range(p) 2 loop
13:35:08
finish mi0 range(p) 2 loop
13:35:08
start mi0 range(NT) loop
13:35:09
finish mi0 range(NT) loop
13:35:09
start mi0 range(n) loop
13:35:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:35:09
start mi0 range(n) 2loop
13:35:09
finish mi0 range(n) 2loop
13:35:09
start mi1
13:35:09
start mi1 range(p) 1 loop
13:35:09
finish mi1 range(p) 1 loop
13:35:09
start mi1 range(p) 2 loop
13:35:09
finish mi1 range(p) 2 loop
13:35:09
start mi1 range(NT) loop
13:35:09
finish mi1 range(NT) loop
13:35:09
start mi1 range(n) loop
13:35:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:35:09
start mi1 range(n) 2loop
13:35:09
finish mi1 range(n) 2loop
13:35:09
start mi2
13:35:09
start mi2 range(p) 1 loop
13:35:09
finish mi2 range(p) 1 loop
13:35:09
start mi2 range(p) 2 loop
13:35:09
finish mi2 range(p) 2 loop
13:35:09
start mi2 range(NT) loop
13:35:09
finish mi2 range(NT) loop
13:35:09
start mi2 range(n) loop
13:35:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:35:09
start mi2 range(n) 2loop
13:35:09
finish mi2 range(n) 2loop
13:35:09
[[-3.23551347]]
end mi2 loop
13:35:09
estep
13:35:09
end estep
13:35:27
end pa13:35:27
goodness of fit correlation [0.26566855]
start cluster 13:35:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40916 instead
  warnings.warn(
51
parallel submitted
13:35:52
parallel finished
13:41:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:41:21
start mi0
13:41:21
start mi0 range(p) 1 loop
13:41:21
finish mi0 range(p) 1 loop
13:41:21
start mi0 range(p) 2 loop
13:41:21
finish mi0 range(p) 2 loop
13:41:21
start mi0 range(NT) loop
13:41:21
finish mi0 range(NT) loop
13:41:21
start mi0 range(n) loop
13:41:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:41:21
start mi0 range(n) 2loop
13:41:21
finish mi0 range(n) 2loop
13:41:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:41:21
start mi1 range(p) 1 loop
13:41:21
finish mi1 range(p) 1 loop
13:41:21
start mi1 range(p) 2 loop
13:41:21
finish mi1 range(p) 2 loop
13:41:21
start mi1 range(NT) loop
13:41:21
finish mi1 range(NT) loop
13:41:21
start mi1 range(n) loop
13:41:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:41:22
start mi1 range(n) 2loop
13:41:22
finish mi1 range(n) 2loop
13:41:22
start mi2
13:41:22
start mi2 range(p) 1 loop
13:41:22
finish mi2 range(p) 1 loop
13:41:22
start mi2 range(p) 2 loop
13:41:22
finish mi2 range(p) 2 loop
13:41:22
start mi2 range(NT) loop
13:41:22
finish mi2 range(NT) loop
13:41:22
start mi2 range(n) loop
13:41:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:41:22
start mi2 range(n) 2loop
13:41:22
finish mi2 range(n) 2loop
13:41:22
[[-3.17512483]]
end mi2 loop
13:41:22
estep
13:41:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:41:39
start ppi1
13:41:39
start mi0
13:41:39
start mi0 range(p) 1 loop
13:41:39
finish mi0 range(p) 1 loop
13:41:39
start mi0 range(p) 2 loop
13:41:39
finish mi0 range(p) 2 loop
13:41:39
start mi0 range(NT) loop
13:41:40
finish mi0 range(NT) loop
13:41:40
start mi0 range(n) loop
13:41:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:41:40
start mi0 range(n) 2loop
13:41:40
finish mi0 range(n) 2loop
13:41:40
start mi1
13:41:40
start mi1 range(p) 1 loop
13:41:40
finish mi1 range(p) 1 loop
13:41:40
start mi1 range(p) 2 loop
13:41:40
finish mi1 range(p) 2 loop
13:41:40
start mi1 range(NT) loop
13:41:40
finish mi1 range(NT) loop
13:41:40
start mi1 range(n) loop
13:41:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:41:40
start mi1 range(n) 2loop
13:41:40
finish mi1 range(n) 2loop
13:41:40
start mi2
13:41:40
start mi2 range(p) 1 loop
13:41:40
finish mi2 range(p) 1 loop
13:41:40
start mi2 range(p) 2 loop
13:41:40
finish mi2 range(p) 2 loop
13:41:40
start mi2 range(NT) loop
13:41:40
finish mi2 range(NT) loop
13:41:40
start mi2 range(n) loop
13:41:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:41:40
start mi2 range(n) 2loop
13:41:40
finish mi2 range(n) 2loop
13:41:40
[[-3.23761682]]
end mi2 loop
13:41:40
estep
13:41:40
end estep
13:41:58
end pa13:41:58
goodness of fit correlation [0.28678287]
start cluster 13:41:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42185 instead
  warnings.warn(
52
parallel submitted
13:42:25
parallel finished
13:47:21
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:47:38
start mi0
13:47:38
start mi0 range(p) 1 loop
13:47:38
finish mi0 range(p) 1 loop
13:47:38
start mi0 range(p) 2 loop
13:47:38
finish mi0 range(p) 2 loop
13:47:38
start mi0 range(NT) loop
13:47:39
finish mi0 range(NT) loop
13:47:39
start mi0 range(n) loop
13:47:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:47:39
start mi0 range(n) 2loop
13:47:39
finish mi0 range(n) 2loop
13:47:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:47:39
start mi1 range(p) 1 loop
13:47:39
finish mi1 range(p) 1 loop
13:47:39
start mi1 range(p) 2 loop
13:47:39
finish mi1 range(p) 2 loop
13:47:39
start mi1 range(NT) loop
13:47:39
finish mi1 range(NT) loop
13:47:39
start mi1 range(n) loop
13:47:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:47:39
start mi1 range(n) 2loop
13:47:39
finish mi1 range(n) 2loop
13:47:39
start mi2
13:47:39
start mi2 range(p) 1 loop
13:47:39
finish mi2 range(p) 1 loop
13:47:39
start mi2 range(p) 2 loop
13:47:39
finish mi2 range(p) 2 loop
13:47:39
start mi2 range(NT) loop
13:47:39
finish mi2 range(NT) loop
13:47:39
start mi2 range(n) loop
13:47:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:47:39
start mi2 range(n) 2loop
13:47:39
finish mi2 range(n) 2loop
13:47:39
[[-3.19861606]]
end mi2 loop
13:47:39
estep
13:47:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:47:57
start ppi1
13:47:57
start mi0
13:47:57
start mi0 range(p) 1 loop
13:47:57
finish mi0 range(p) 1 loop
13:47:57
start mi0 range(p) 2 loop
13:47:57
finish mi0 range(p) 2 loop
13:47:57
start mi0 range(NT) loop
13:47:57
finish mi0 range(NT) loop
13:47:57
start mi0 range(n) loop
13:47:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:47:57
start mi0 range(n) 2loop
13:47:57
finish mi0 range(n) 2loop
13:47:57
start mi1
13:47:57
start mi1 range(p) 1 loop
13:47:57
finish mi1 range(p) 1 loop
13:47:57
start mi1 range(p) 2 loop
13:47:57
finish mi1 range(p) 2 loop
13:47:57
start mi1 range(NT) loop
13:47:57
finish mi1 range(NT) loop
13:47:57
start mi1 range(n) loop
13:47:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:47:57
start mi1 range(n) 2loop
13:47:57
finish mi1 range(n) 2loop
13:47:57
start mi2
13:47:57
start mi2 range(p) 1 loop
13:47:57
finish mi2 range(p) 1 loop
13:47:57
start mi2 range(p) 2 loop
13:47:57
finish mi2 range(p) 2 loop
13:47:57
start mi2 range(NT) loop
13:47:57
finish mi2 range(NT) loop
13:47:57
start mi2 range(n) loop
13:47:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:47:58
start mi2 range(n) 2loop
13:47:58
finish mi2 range(n) 2loop
13:47:58
[[-3.261108]]
end mi2 loop
13:47:58
estep
13:47:58
end estep
13:48:15
end pa13:48:15
goodness of fit correlation [0.27906419]
start cluster 13:48:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39321 instead
  warnings.warn(
53
parallel submitted
13:48:43
slurmstepd: error: *** JOB 1825848 ON nodeb23 CANCELLED AT 2020-11-06T13:53:19 ***
