14
subject 111312
loaded saved variables
version 4
107
parrallel submitted 08:52:29
parrallel finished 08:56:48
estimation_imag_fix_testretest.py:217: ComplexWarning: Casting complex values to real discards the imaginary part
  inv_JinvCeJ[i,:] = J[:,i].T * inv_DiagCe
estimation_imag_fix_testretest.py:230: ComplexWarning: Casting complex values to real discards the imaginary part
  P[:,i] = (J[:,i]*np.squeeze(inv_DiagCe))
estimation_imag_fix_testretest.py:250: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = -0.5*np.exp(lembda[i])*np.trace(P[T*i:T*i+T][:, T*i:T*i+T])
estimation_imag_fix_testretest.py:255: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
/users/k1201869/wang_model/code/model_fitting/wang_functions_imag_fix.py:502: ComplexWarning: Casting complex values to real discards the imaginary part
  tr[i] = np.sum(temp)
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
[[-2.45417251]]
estimation_imag_fix_testretest.py:309: ComplexWarning: Casting complex values to real discards the imaginary part
  JinvCe[i,:] = J[:,i] * inv_DiagCe #;% J'%invCe <----- p x nT
estimation_imag_fix_testretest.py:320: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + np.squeeze(d_A) # %newton-gauss, fisher scoring, update Para_E
/users/k1201869/wang_model/code/model_fitting/wang_functions_imag_fix.py:517: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation_imag_fix_testretest.py:327: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation_imag_fix_testretest.py:331: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation_imag_fix_testretest.py:334: ComplexWarning: Casting complex values to real discards the imaginary part
  dlddpara_FDK[:,:,ppi] = dlddpara
estimation_imag_fix_testretest.py:335: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
[[-2.39211952]]
real won
goodness of fit correlation [0.07546529]
0.38062519866111083
[6.05012289e-01 5.46717777e-01 5.63402245e-01 4.37663261e-01
 5.04186422e-01 6.43675639e-01 7.01663493e-01 6.37231995e-01
 5.03408145e-01 6.71584374e-01 5.79432137e-01 6.10464280e-01
 5.26720009e-01 6.68360838e-01 5.15708725e-01 5.26408767e-01
 5.57289340e-01 5.43014212e-01 5.56993320e-01 4.78549586e-01
 6.10362069e-01 5.31061605e-01 6.12767258e-01 5.94816039e-01
 5.59144258e-01 5.36339284e-01 5.80728962e-01 6.76156400e-01
 7.06208205e-01 6.47453698e-01 5.06567886e-01 5.22439968e-01
 5.73607404e-01 6.27602841e-01 5.66385799e-01 5.30270839e-01
 5.06705196e-01 4.54975274e-01 4.98052065e-01 5.98858777e-01
 6.79038973e-01 5.58313481e-01 5.09983360e-01 5.84509641e-01
 5.48407710e-01 5.16253396e-01 5.85916336e-01 5.90425836e-01
 5.07603900e-01 5.39731963e-01 5.13445217e-01 5.19570368e-01
 5.91054062e-01 5.55291632e-01 6.77669366e-01 5.54446766e-01
 6.32960069e-01 5.31014107e-01 5.31070512e-01 5.46664723e-01
 5.41805391e-01 6.43331466e-01 5.90654941e-01 6.78391241e-01
 4.89673297e-01 5.08496303e-01 5.24258626e-01 6.60385465e-01
 3.61769303e-01 3.47713629e-01 3.38146635e-01 3.59752463e-01
 3.24629802e-01 3.45081133e-01 3.21627805e-01 3.40266415e-01
 3.59398623e-01 3.36007503e-01 3.52001246e-01 3.53216282e-01
 3.52150822e-01 3.31705352e-01 3.41159817e-01 3.52103468e-01
 3.51735626e-01 3.52730832e-01 3.51202816e-01 3.45322074e-01
 3.42799438e-01 3.50693100e-01 3.31748934e-01 3.36684422e-01
 3.53817226e-01 3.47977148e-01 3.06192707e-01 3.18989091e-01
 3.30844160e-01 3.33283239e-01 3.50928222e-01 3.41772392e-01
 3.58680019e-01 3.35895468e-01 3.68170322e-01 3.51786832e-01
 3.53573101e-01 3.62056783e-01 3.17410575e-01 3.53977605e-01
 3.25198106e-01 3.49639504e-01 3.60331199e-01 3.40305024e-01
 3.37581722e-01 3.31704648e-01 3.36269620e-01 3.40615309e-01
 3.34125842e-01 3.57673199e-01 3.51518632e-01 3.47038817e-01
 3.48268544e-01 3.45952033e-01 3.33861540e-01 3.53216831e-01
 3.30713943e-01 3.35808827e-01 3.66173428e-01 3.49600570e-01
 3.11612187e-01 3.19247746e-01 3.44772162e-01 3.33674203e-01
 3.41075751e-01 3.24680709e-01 3.47577973e-01 3.36883034e-01
 1.50403399e+00 1.00144683e-03]
