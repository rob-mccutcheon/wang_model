14
subject 1019_01_MR
start cluster 09:36:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34002 instead
  warnings.warn(
0
parallel submitted
09:36:34
parallel finished
09:39:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:39:50
start mi0
09:39:50
start mi0 range(p) 1 loop
09:39:50
finish mi0 range(p) 1 loop
09:39:50
start mi0 range(p) 2 loop
09:39:50
finish mi0 range(p) 2 loop
09:39:50
start mi0 range(NT) loop
09:39:50
finish mi0 range(NT) loop
09:39:50
start mi0 range(n) loop
09:39:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:39:50
start mi0 range(n) 2loop
09:39:50
finish mi0 range(n) 2loop
09:39:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:39:50
start mi1 range(p) 1 loop
09:39:50
finish mi1 range(p) 1 loop
09:39:50
start mi1 range(p) 2 loop
09:39:50
finish mi1 range(p) 2 loop
09:39:50
start mi1 range(NT) loop
09:39:50
finish mi1 range(NT) loop
09:39:50
start mi1 range(n) loop
09:39:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:39:50
start mi1 range(n) 2loop
09:39:50
finish mi1 range(n) 2loop
09:39:50
start mi2
09:39:50
start mi2 range(p) 1 loop
09:39:50
finish mi2 range(p) 1 loop
09:39:50
start mi2 range(p) 2 loop
09:39:50
finish mi2 range(p) 2 loop
09:39:50
start mi2 range(NT) loop
09:39:50
finish mi2 range(NT) loop
09:39:50
start mi2 range(n) loop
09:39:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:39:51
start mi2 range(n) 2loop
09:39:51
finish mi2 range(n) 2loop
09:39:51
start mi3
09:39:51
start mi3 range(p) 1 loop
09:39:51
finish mi3 range(p) 1 loop
09:39:51
start mi3 range(p) 2 loop
09:39:51
finish mi3 range(p) 2 loop
09:39:51
start mi3 range(NT) loop
09:39:51
finish mi3 range(NT) loop
09:39:51
start mi3 range(n) loop
09:39:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:39:51
start mi3 range(n) 2loop
09:39:51
finish mi3 range(n) 2loop
09:39:51
[[-2.31172849]]
end mi3 loop
09:39:51
estep
09:39:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:40:08
start ppi1
09:40:08
start mi0
09:40:08
start mi0 range(p) 1 loop
09:40:08
finish mi0 range(p) 1 loop
09:40:08
start mi0 range(p) 2 loop
09:40:08
finish mi0 range(p) 2 loop
09:40:08
start mi0 range(NT) loop
09:40:08
finish mi0 range(NT) loop
09:40:08
start mi0 range(n) loop
09:40:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:40:08
start mi0 range(n) 2loop
09:40:08
finish mi0 range(n) 2loop
09:40:08
start mi1
09:40:08
start mi1 range(p) 1 loop
09:40:08
finish mi1 range(p) 1 loop
09:40:08
start mi1 range(p) 2 loop
09:40:08
finish mi1 range(p) 2 loop
09:40:08
start mi1 range(NT) loop
09:40:08
finish mi1 range(NT) loop
09:40:08
start mi1 range(n) loop
09:40:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:40:08
start mi1 range(n) 2loop
09:40:08
finish mi1 range(n) 2loop
09:40:08
start mi2
09:40:08
start mi2 range(p) 1 loop
09:40:08
finish mi2 range(p) 1 loop
09:40:08
start mi2 range(p) 2 loop
09:40:08
finish mi2 range(p) 2 loop
09:40:08
start mi2 range(NT) loop
09:40:08
finish mi2 range(NT) loop
09:40:08
start mi2 range(n) loop
09:40:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:40:08
start mi2 range(n) 2loop
09:40:08
finish mi2 range(n) 2loop
09:40:08
start mi3
09:40:08
start mi3 range(p) 1 loop
09:40:08
finish mi3 range(p) 1 loop
09:40:08
start mi3 range(p) 2 loop
09:40:08
finish mi3 range(p) 2 loop
09:40:08
start mi3 range(NT) loop
09:40:08
finish mi3 range(NT) loop
09:40:08
start mi3 range(n) loop
09:40:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:40:09
start mi3 range(n) 2loop
09:40:09
finish mi3 range(n) 2loop
09:40:09
[[-2.31172849]]
end mi3 loop
09:40:09
estep
09:40:09
end estep
09:40:25
end pa09:40:25
goodness of fit correlation [0.04914697]
start cluster 09:40:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35715 instead
  warnings.warn(
1
parallel submitted
09:40:42
parallel finished
09:45:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:45:58
start mi0
09:45:58
start mi0 range(p) 1 loop
09:45:58
finish mi0 range(p) 1 loop
09:45:58
start mi0 range(p) 2 loop
09:45:58
finish mi0 range(p) 2 loop
09:45:58
start mi0 range(NT) loop
09:45:59
finish mi0 range(NT) loop
09:45:59
start mi0 range(n) loop
09:45:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:45:59
start mi0 range(n) 2loop
09:45:59
finish mi0 range(n) 2loop
09:45:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:45:59
start mi1 range(p) 1 loop
09:45:59
finish mi1 range(p) 1 loop
09:45:59
start mi1 range(p) 2 loop
09:45:59
finish mi1 range(p) 2 loop
09:45:59
start mi1 range(NT) loop
09:45:59
finish mi1 range(NT) loop
09:45:59
start mi1 range(n) loop
09:45:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:45:59
start mi1 range(n) 2loop
09:45:59
finish mi1 range(n) 2loop
09:45:59
start mi2
09:45:59
start mi2 range(p) 1 loop
09:45:59
finish mi2 range(p) 1 loop
09:45:59
start mi2 range(p) 2 loop
09:45:59
finish mi2 range(p) 2 loop
09:45:59
start mi2 range(NT) loop
09:45:59
finish mi2 range(NT) loop
09:45:59
start mi2 range(n) loop
09:45:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:45:59
start mi2 range(n) 2loop
09:45:59
finish mi2 range(n) 2loop
09:45:59
start mi3
09:45:59
start mi3 range(p) 1 loop
09:45:59
finish mi3 range(p) 1 loop
09:45:59
start mi3 range(p) 2 loop
09:45:59
finish mi3 range(p) 2 loop
09:45:59
start mi3 range(NT) loop
09:45:59
finish mi3 range(NT) loop
09:45:59
start mi3 range(n) loop
09:45:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:45:59
start mi3 range(n) 2loop
09:45:59
finish mi3 range(n) 2loop
09:46:00
[[-2.32263133]]
end mi3 loop
09:46:00
estep
09:46:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:46:15
start ppi1
09:46:15
start mi0
09:46:15
start mi0 range(p) 1 loop
09:46:15
finish mi0 range(p) 1 loop
09:46:15
start mi0 range(p) 2 loop
09:46:15
finish mi0 range(p) 2 loop
09:46:15
start mi0 range(NT) loop
09:46:15
finish mi0 range(NT) loop
09:46:15
start mi0 range(n) loop
09:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:46:15
start mi0 range(n) 2loop
09:46:15
finish mi0 range(n) 2loop
09:46:15
start mi1
09:46:15
start mi1 range(p) 1 loop
09:46:15
finish mi1 range(p) 1 loop
09:46:15
start mi1 range(p) 2 loop
09:46:15
finish mi1 range(p) 2 loop
09:46:15
start mi1 range(NT) loop
09:46:15
finish mi1 range(NT) loop
09:46:15
start mi1 range(n) loop
09:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:46:15
start mi1 range(n) 2loop
09:46:15
finish mi1 range(n) 2loop
09:46:16
start mi2
09:46:16
start mi2 range(p) 1 loop
09:46:16
finish mi2 range(p) 1 loop
09:46:16
start mi2 range(p) 2 loop
09:46:16
finish mi2 range(p) 2 loop
09:46:16
start mi2 range(NT) loop
09:46:16
finish mi2 range(NT) loop
09:46:16
start mi2 range(n) loop
09:46:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:46:16
start mi2 range(n) 2loop
09:46:16
finish mi2 range(n) 2loop
09:46:16
start mi3
09:46:16
start mi3 range(p) 1 loop
09:46:16
finish mi3 range(p) 1 loop
09:46:16
start mi3 range(p) 2 loop
09:46:16
finish mi3 range(p) 2 loop
09:46:16
start mi3 range(NT) loop
09:46:16
finish mi3 range(NT) loop
09:46:16
start mi3 range(n) loop
09:46:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:46:16
start mi3 range(n) 2loop
09:46:16
finish mi3 range(n) 2loop
09:46:16
[[-2.38512358]]
end mi3 loop
09:46:16
estep
09:46:16
end estep
09:46:31
end pa09:46:31
goodness of fit correlation [0.07517563]
start cluster 09:46:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39122 instead
  warnings.warn(
2
parallel submitted
09:46:48
parallel finished
09:53:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:53:49
start mi0
09:53:49
start mi0 range(p) 1 loop
09:53:49
finish mi0 range(p) 1 loop
09:53:49
start mi0 range(p) 2 loop
09:53:49
finish mi0 range(p) 2 loop
09:53:49
start mi0 range(NT) loop
09:53:49
finish mi0 range(NT) loop
09:53:49
start mi0 range(n) loop
09:53:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:53:49
start mi0 range(n) 2loop
09:53:49
finish mi0 range(n) 2loop
09:53:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:53:50
start mi1 range(p) 1 loop
09:53:50
finish mi1 range(p) 1 loop
09:53:50
start mi1 range(p) 2 loop
09:53:50
finish mi1 range(p) 2 loop
09:53:50
start mi1 range(NT) loop
09:53:50
finish mi1 range(NT) loop
09:53:50
start mi1 range(n) loop
09:53:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:53:50
start mi1 range(n) 2loop
09:53:50
finish mi1 range(n) 2loop
09:53:50
start mi2
09:53:50
start mi2 range(p) 1 loop
09:53:50
finish mi2 range(p) 1 loop
09:53:50
start mi2 range(p) 2 loop
09:53:50
finish mi2 range(p) 2 loop
09:53:50
start mi2 range(NT) loop
09:53:50
finish mi2 range(NT) loop
09:53:50
start mi2 range(n) loop
09:53:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:53:50
start mi2 range(n) 2loop
09:53:50
finish mi2 range(n) 2loop
09:53:50
start mi3
09:53:50
start mi3 range(p) 1 loop
09:53:50
finish mi3 range(p) 1 loop
09:53:50
start mi3 range(p) 2 loop
09:53:50
finish mi3 range(p) 2 loop
09:53:50
start mi3 range(NT) loop
09:53:50
finish mi3 range(NT) loop
09:53:50
start mi3 range(n) loop
09:53:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:53:50
start mi3 range(n) 2loop
09:53:50
finish mi3 range(n) 2loop
09:53:51
[[-2.35425318]]
end mi3 loop
09:53:51
estep
09:53:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:54:06
start ppi1
09:54:06
start mi0
09:54:06
start mi0 range(p) 1 loop
09:54:06
finish mi0 range(p) 1 loop
09:54:06
start mi0 range(p) 2 loop
09:54:06
finish mi0 range(p) 2 loop
09:54:06
start mi0 range(NT) loop
09:54:06
finish mi0 range(NT) loop
09:54:06
start mi0 range(n) loop
09:54:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:54:06
start mi0 range(n) 2loop
09:54:06
finish mi0 range(n) 2loop
09:54:06
start mi1
09:54:06
start mi1 range(p) 1 loop
09:54:06
finish mi1 range(p) 1 loop
09:54:06
start mi1 range(p) 2 loop
09:54:06
finish mi1 range(p) 2 loop
09:54:06
start mi1 range(NT) loop
09:54:07
finish mi1 range(NT) loop
09:54:07
start mi1 range(n) loop
09:54:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:54:07
start mi1 range(n) 2loop
09:54:07
finish mi1 range(n) 2loop
09:54:07
start mi2
09:54:07
start mi2 range(p) 1 loop
09:54:07
finish mi2 range(p) 1 loop
09:54:07
start mi2 range(p) 2 loop
09:54:07
finish mi2 range(p) 2 loop
09:54:07
start mi2 range(NT) loop
09:54:07
finish mi2 range(NT) loop
09:54:07
start mi2 range(n) loop
09:54:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:54:07
start mi2 range(n) 2loop
09:54:07
finish mi2 range(n) 2loop
09:54:07
start mi3
09:54:07
start mi3 range(p) 1 loop
09:54:07
finish mi3 range(p) 1 loop
09:54:07
start mi3 range(p) 2 loop
09:54:07
finish mi3 range(p) 2 loop
09:54:07
start mi3 range(NT) loop
09:54:07
finish mi3 range(NT) loop
09:54:07
start mi3 range(n) loop
09:54:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:54:07
start mi3 range(n) 2loop
09:54:07
finish mi3 range(n) 2loop
09:54:07
[[-2.41674531]]
end mi3 loop
09:54:07
estep
09:54:07
end estep
09:54:22
end pa09:54:22
goodness of fit correlation [0.13267652]
start cluster 09:54:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33506 instead
  warnings.warn(
3
parallel submitted
09:54:39
parallel finished
10:00:52
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:00:55
start mi0
10:00:55
start mi0 range(p) 1 loop
10:00:55
finish mi0 range(p) 1 loop
10:00:55
start mi0 range(p) 2 loop
10:00:55
finish mi0 range(p) 2 loop
10:00:55
start mi0 range(NT) loop
10:00:55
finish mi0 range(NT) loop
10:00:55
start mi0 range(n) loop
10:00:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:00:55
start mi0 range(n) 2loop
10:00:55
finish mi0 range(n) 2loop
10:00:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:00:55
start mi1 range(p) 1 loop
10:00:55
finish mi1 range(p) 1 loop
10:00:55
start mi1 range(p) 2 loop
10:00:55
finish mi1 range(p) 2 loop
10:00:55
start mi1 range(NT) loop
10:00:56
finish mi1 range(NT) loop
10:00:56
start mi1 range(n) loop
10:00:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:00:56
start mi1 range(n) 2loop
10:00:56
finish mi1 range(n) 2loop
10:00:56
start mi2
10:00:56
start mi2 range(p) 1 loop
10:00:56
finish mi2 range(p) 1 loop
10:00:56
start mi2 range(p) 2 loop
10:00:56
finish mi2 range(p) 2 loop
10:00:56
start mi2 range(NT) loop
10:00:56
finish mi2 range(NT) loop
10:00:56
start mi2 range(n) loop
10:00:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:00:56
start mi2 range(n) 2loop
10:00:56
finish mi2 range(n) 2loop
10:00:56
start mi3
10:00:56
start mi3 range(p) 1 loop
10:00:56
finish mi3 range(p) 1 loop
10:00:56
start mi3 range(p) 2 loop
10:00:56
finish mi3 range(p) 2 loop
10:00:56
start mi3 range(NT) loop
10:00:56
finish mi3 range(NT) loop
10:00:56
start mi3 range(n) loop
10:00:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:00:56
start mi3 range(n) 2loop
10:00:56
finish mi3 range(n) 2loop
10:00:56
[[-2.38346306]]
end mi3 loop
10:00:56
estep
10:00:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:01:12
start ppi1
10:01:12
start mi0
10:01:12
start mi0 range(p) 1 loop
10:01:12
finish mi0 range(p) 1 loop
10:01:12
start mi0 range(p) 2 loop
10:01:12
finish mi0 range(p) 2 loop
10:01:12
start mi0 range(NT) loop
10:01:12
finish mi0 range(NT) loop
10:01:12
start mi0 range(n) loop
10:01:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:01:12
start mi0 range(n) 2loop
10:01:12
finish mi0 range(n) 2loop
10:01:12
start mi1
10:01:12
start mi1 range(p) 1 loop
10:01:12
finish mi1 range(p) 1 loop
10:01:12
start mi1 range(p) 2 loop
10:01:12
finish mi1 range(p) 2 loop
10:01:12
start mi1 range(NT) loop
10:01:12
finish mi1 range(NT) loop
10:01:12
start mi1 range(n) loop
10:01:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:01:12
start mi1 range(n) 2loop
10:01:12
finish mi1 range(n) 2loop
10:01:12
start mi2
10:01:12
start mi2 range(p) 1 loop
10:01:12
finish mi2 range(p) 1 loop
10:01:12
start mi2 range(p) 2 loop
10:01:12
finish mi2 range(p) 2 loop
10:01:12
start mi2 range(NT) loop
10:01:12
finish mi2 range(NT) loop
10:01:12
start mi2 range(n) loop
10:01:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:01:12
start mi2 range(n) 2loop
10:01:12
finish mi2 range(n) 2loop
10:01:12
start mi3
10:01:12
start mi3 range(p) 1 loop
10:01:12
finish mi3 range(p) 1 loop
10:01:12
start mi3 range(p) 2 loop
10:01:12
finish mi3 range(p) 2 loop
10:01:12
start mi3 range(NT) loop
10:01:13
finish mi3 range(NT) loop
10:01:13
start mi3 range(n) loop
10:01:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:01:13
start mi3 range(n) 2loop
10:01:13
finish mi3 range(n) 2loop
10:01:13
[[-2.44595514]]
end mi3 loop
10:01:13
estep
10:01:13
end estep
10:01:28
end pa10:01:28
goodness of fit correlation [0.23054893]
start cluster 10:01:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38931 instead
  warnings.warn(
4
parallel submitted
10:01:45
parallel finished
10:08:39
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:08:43
start mi0
10:08:43
start mi0 range(p) 1 loop
10:08:43
finish mi0 range(p) 1 loop
10:08:43
start mi0 range(p) 2 loop
10:08:43
finish mi0 range(p) 2 loop
10:08:43
start mi0 range(NT) loop
10:08:44
finish mi0 range(NT) loop
10:08:44
start mi0 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:08:44
start mi0 range(n) 2loop
10:08:44
finish mi0 range(n) 2loop
10:08:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:08:44
start mi1 range(p) 1 loop
10:08:44
finish mi1 range(p) 1 loop
10:08:44
start mi1 range(p) 2 loop
10:08:44
finish mi1 range(p) 2 loop
10:08:44
start mi1 range(NT) loop
10:08:44
finish mi1 range(NT) loop
10:08:44
start mi1 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:08:44
start mi1 range(n) 2loop
10:08:44
finish mi1 range(n) 2loop
10:08:44
start mi2
10:08:44
start mi2 range(p) 1 loop
10:08:44
finish mi2 range(p) 1 loop
10:08:44
start mi2 range(p) 2 loop
10:08:44
finish mi2 range(p) 2 loop
10:08:44
start mi2 range(NT) loop
10:08:44
finish mi2 range(NT) loop
10:08:44
start mi2 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:08:44
start mi2 range(n) 2loop
10:08:44
finish mi2 range(n) 2loop
10:08:44
start mi3
10:08:44
start mi3 range(p) 1 loop
10:08:44
finish mi3 range(p) 1 loop
10:08:44
start mi3 range(p) 2 loop
10:08:44
finish mi3 range(p) 2 loop
10:08:44
start mi3 range(NT) loop
10:08:44
finish mi3 range(NT) loop
10:08:44
start mi3 range(n) loop
10:08:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:08:44
start mi3 range(n) 2loop
10:08:44
finish mi3 range(n) 2loop
10:08:45
[[-2.42372826]]
end mi3 loop
10:08:45
estep
10:08:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:09:01
start ppi1
10:09:01
start mi0
10:09:01
start mi0 range(p) 1 loop
10:09:01
finish mi0 range(p) 1 loop
10:09:01
start mi0 range(p) 2 loop
10:09:01
finish mi0 range(p) 2 loop
10:09:01
start mi0 range(NT) loop
10:09:01
finish mi0 range(NT) loop
10:09:01
start mi0 range(n) loop
10:09:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:09:01
start mi0 range(n) 2loop
10:09:01
finish mi0 range(n) 2loop
10:09:02
start mi1
10:09:02
start mi1 range(p) 1 loop
10:09:02
finish mi1 range(p) 1 loop
10:09:02
start mi1 range(p) 2 loop
10:09:02
finish mi1 range(p) 2 loop
10:09:02
start mi1 range(NT) loop
10:09:02
finish mi1 range(NT) loop
10:09:02
start mi1 range(n) loop
10:09:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:09:02
start mi1 range(n) 2loop
10:09:02
finish mi1 range(n) 2loop
10:09:02
start mi2
10:09:02
start mi2 range(p) 1 loop
10:09:02
finish mi2 range(p) 1 loop
10:09:02
start mi2 range(p) 2 loop
10:09:02
finish mi2 range(p) 2 loop
10:09:02
start mi2 range(NT) loop
10:09:02
finish mi2 range(NT) loop
10:09:02
start mi2 range(n) loop
10:09:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:09:02
start mi2 range(n) 2loop
10:09:02
finish mi2 range(n) 2loop
10:09:02
start mi3
10:09:02
start mi3 range(p) 1 loop
10:09:02
finish mi3 range(p) 1 loop
10:09:02
start mi3 range(p) 2 loop
10:09:02
finish mi3 range(p) 2 loop
10:09:02
start mi3 range(NT) loop
10:09:02
finish mi3 range(NT) loop
10:09:02
start mi3 range(n) loop
10:09:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:09:02
start mi3 range(n) 2loop
10:09:02
finish mi3 range(n) 2loop
10:09:02
[[-2.48622031]]
end mi3 loop
10:09:02
estep
10:09:02
end estep
10:09:19
end pa10:09:19
goodness of fit correlation [0.21291578]
start cluster 10:09:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42424 instead
  warnings.warn(
5
parallel submitted
10:09:41
parallel finished
10:19:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:20:02
start mi0
10:20:02
start mi0 range(p) 1 loop
10:20:02
finish mi0 range(p) 1 loop
10:20:02
start mi0 range(p) 2 loop
10:20:02
finish mi0 range(p) 2 loop
10:20:02
start mi0 range(NT) loop
10:20:02
finish mi0 range(NT) loop
10:20:02
start mi0 range(n) loop
10:20:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:20:02
start mi0 range(n) 2loop
10:20:02
finish mi0 range(n) 2loop
10:20:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:20:02
start mi1 range(p) 1 loop
10:20:02
finish mi1 range(p) 1 loop
10:20:02
start mi1 range(p) 2 loop
10:20:02
finish mi1 range(p) 2 loop
10:20:02
start mi1 range(NT) loop
10:20:02
finish mi1 range(NT) loop
10:20:02
start mi1 range(n) loop
10:20:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:20:02
start mi1 range(n) 2loop
10:20:02
finish mi1 range(n) 2loop
10:20:02
start mi2
10:20:02
start mi2 range(p) 1 loop
10:20:02
finish mi2 range(p) 1 loop
10:20:02
start mi2 range(p) 2 loop
10:20:02
finish mi2 range(p) 2 loop
10:20:02
start mi2 range(NT) loop
10:20:02
finish mi2 range(NT) loop
10:20:02
start mi2 range(n) loop
10:20:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:20:02
start mi2 range(n) 2loop
10:20:02
finish mi2 range(n) 2loop
10:20:03
start mi3
10:20:03
start mi3 range(p) 1 loop
10:20:03
finish mi3 range(p) 1 loop
10:20:03
start mi3 range(p) 2 loop
10:20:03
finish mi3 range(p) 2 loop
10:20:03
start mi3 range(NT) loop
10:20:03
finish mi3 range(NT) loop
10:20:03
start mi3 range(n) loop
10:20:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:20:03
start mi3 range(n) 2loop
10:20:03
finish mi3 range(n) 2loop
10:20:03
[[-2.42501753]]
end mi3 loop
10:20:03
estep
10:20:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:20:18
start ppi1
10:20:18
start mi0
10:20:18
start mi0 range(p) 1 loop
10:20:18
finish mi0 range(p) 1 loop
10:20:18
start mi0 range(p) 2 loop
10:20:18
finish mi0 range(p) 2 loop
10:20:18
start mi0 range(NT) loop
10:20:18
finish mi0 range(NT) loop
10:20:18
start mi0 range(n) loop
10:20:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:20:19
start mi0 range(n) 2loop
10:20:19
finish mi0 range(n) 2loop
10:20:19
start mi1
10:20:19
start mi1 range(p) 1 loop
10:20:19
finish mi1 range(p) 1 loop
10:20:19
start mi1 range(p) 2 loop
10:20:19
finish mi1 range(p) 2 loop
10:20:19
start mi1 range(NT) loop
10:20:19
finish mi1 range(NT) loop
10:20:19
start mi1 range(n) loop
10:20:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:20:19
start mi1 range(n) 2loop
10:20:19
finish mi1 range(n) 2loop
10:20:19
start mi2
10:20:19
start mi2 range(p) 1 loop
10:20:19
finish mi2 range(p) 1 loop
10:20:19
start mi2 range(p) 2 loop
10:20:19
finish mi2 range(p) 2 loop
10:20:19
start mi2 range(NT) loop
10:20:19
finish mi2 range(NT) loop
10:20:19
start mi2 range(n) loop
10:20:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:20:19
start mi2 range(n) 2loop
10:20:19
finish mi2 range(n) 2loop
10:20:19
start mi3
10:20:19
start mi3 range(p) 1 loop
10:20:19
finish mi3 range(p) 1 loop
10:20:19
start mi3 range(p) 2 loop
10:20:19
finish mi3 range(p) 2 loop
10:20:19
start mi3 range(NT) loop
10:20:19
finish mi3 range(NT) loop
10:20:19
start mi3 range(n) loop
10:20:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:20:19
start mi3 range(n) 2loop
10:20:19
finish mi3 range(n) 2loop
10:20:19
[[-2.48750958]]
end mi3 loop
10:20:19
estep
10:20:19
end estep
10:20:36
end pa10:20:36
goodness of fit correlation [0.20154544]
start cluster 10:20:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37845 instead
  warnings.warn(
6
parallel submitted
10:20:56
parallel finished
10:25:34
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:25:38
start mi0
10:25:38
start mi0 range(p) 1 loop
10:25:38
finish mi0 range(p) 1 loop
10:25:38
start mi0 range(p) 2 loop
10:25:38
finish mi0 range(p) 2 loop
10:25:38
start mi0 range(NT) loop
10:25:38
finish mi0 range(NT) loop
10:25:38
start mi0 range(n) loop
10:25:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:25:38
start mi0 range(n) 2loop
10:25:38
finish mi0 range(n) 2loop
10:25:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:25:39
start mi1 range(p) 1 loop
10:25:39
finish mi1 range(p) 1 loop
10:25:39
start mi1 range(p) 2 loop
10:25:39
finish mi1 range(p) 2 loop
10:25:39
start mi1 range(NT) loop
10:25:39
finish mi1 range(NT) loop
10:25:39
start mi1 range(n) loop
10:25:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:25:39
start mi1 range(n) 2loop
10:25:39
finish mi1 range(n) 2loop
10:25:39
start mi2
10:25:39
start mi2 range(p) 1 loop
10:25:39
finish mi2 range(p) 1 loop
10:25:39
start mi2 range(p) 2 loop
10:25:39
finish mi2 range(p) 2 loop
10:25:39
start mi2 range(NT) loop
10:25:39
finish mi2 range(NT) loop
10:25:39
start mi2 range(n) loop
10:25:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:25:39
start mi2 range(n) 2loop
10:25:39
finish mi2 range(n) 2loop
10:25:39
start mi3
10:25:39
start mi3 range(p) 1 loop
10:25:39
finish mi3 range(p) 1 loop
10:25:39
start mi3 range(p) 2 loop
10:25:39
finish mi3 range(p) 2 loop
10:25:39
start mi3 range(NT) loop
10:25:39
finish mi3 range(NT) loop
10:25:39
start mi3 range(n) loop
10:25:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:25:39
start mi3 range(n) 2loop
10:25:39
finish mi3 range(n) 2loop
10:25:39
[[-2.42770571]]
end mi3 loop
10:25:39
estep
10:25:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:25:55
start ppi1
10:25:55
start mi0
10:25:55
start mi0 range(p) 1 loop
10:25:55
finish mi0 range(p) 1 loop
10:25:55
start mi0 range(p) 2 loop
10:25:55
finish mi0 range(p) 2 loop
10:25:55
start mi0 range(NT) loop
10:25:55
finish mi0 range(NT) loop
10:25:55
start mi0 range(n) loop
10:25:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:25:55
start mi0 range(n) 2loop
10:25:55
finish mi0 range(n) 2loop
10:25:55
start mi1
10:25:55
start mi1 range(p) 1 loop
10:25:55
finish mi1 range(p) 1 loop
10:25:55
start mi1 range(p) 2 loop
10:25:55
finish mi1 range(p) 2 loop
10:25:55
start mi1 range(NT) loop
10:25:55
finish mi1 range(NT) loop
10:25:55
start mi1 range(n) loop
10:25:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:25:55
start mi1 range(n) 2loop
10:25:55
finish mi1 range(n) 2loop
10:25:55
start mi2
10:25:55
start mi2 range(p) 1 loop
10:25:55
finish mi2 range(p) 1 loop
10:25:55
start mi2 range(p) 2 loop
10:25:55
finish mi2 range(p) 2 loop
10:25:55
start mi2 range(NT) loop
10:25:55
finish mi2 range(NT) loop
10:25:55
start mi2 range(n) loop
10:25:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:25:56
start mi2 range(n) 2loop
10:25:56
finish mi2 range(n) 2loop
10:25:56
start mi3
10:25:56
start mi3 range(p) 1 loop
10:25:56
finish mi3 range(p) 1 loop
10:25:56
start mi3 range(p) 2 loop
10:25:56
finish mi3 range(p) 2 loop
10:25:56
start mi3 range(NT) loop
10:25:56
finish mi3 range(NT) loop
10:25:56
start mi3 range(n) loop
10:25:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:25:56
start mi3 range(n) 2loop
10:25:56
finish mi3 range(n) 2loop
10:25:56
[[-2.49019776]]
end mi3 loop
10:25:56
estep
10:25:56
end estep
10:26:12
end pa10:26:12
goodness of fit correlation [0.20703941]
start cluster 10:26:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42146 instead
  warnings.warn(
7
parallel submitted
10:26:29
parallel finished
10:30:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:30:53
start mi0
10:30:53
start mi0 range(p) 1 loop
10:30:53
finish mi0 range(p) 1 loop
10:30:53
start mi0 range(p) 2 loop
10:30:53
finish mi0 range(p) 2 loop
10:30:53
start mi0 range(NT) loop
10:30:54
finish mi0 range(NT) loop
10:30:54
start mi0 range(n) loop
10:30:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:30:54
start mi0 range(n) 2loop
10:30:54
finish mi0 range(n) 2loop
10:30:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:30:54
start mi1 range(p) 1 loop
10:30:54
finish mi1 range(p) 1 loop
10:30:54
start mi1 range(p) 2 loop
10:30:54
finish mi1 range(p) 2 loop
10:30:54
start mi1 range(NT) loop
10:30:54
finish mi1 range(NT) loop
10:30:54
start mi1 range(n) loop
10:30:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:30:54
start mi1 range(n) 2loop
10:30:54
finish mi1 range(n) 2loop
10:30:54
start mi2
10:30:54
start mi2 range(p) 1 loop
10:30:54
finish mi2 range(p) 1 loop
10:30:54
start mi2 range(p) 2 loop
10:30:54
finish mi2 range(p) 2 loop
10:30:54
start mi2 range(NT) loop
10:30:54
finish mi2 range(NT) loop
10:30:54
start mi2 range(n) loop
10:30:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:30:54
start mi2 range(n) 2loop
10:30:54
finish mi2 range(n) 2loop
10:30:54
start mi3
10:30:54
start mi3 range(p) 1 loop
10:30:54
finish mi3 range(p) 1 loop
10:30:54
start mi3 range(p) 2 loop
10:30:54
finish mi3 range(p) 2 loop
10:30:54
start mi3 range(NT) loop
10:30:54
finish mi3 range(NT) loop
10:30:54
start mi3 range(n) loop
10:30:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:30:54
start mi3 range(n) 2loop
10:30:54
finish mi3 range(n) 2loop
10:30:55
[[-2.42240481]]
end mi3 loop
10:30:55
estep
10:30:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:31:11
start ppi1
10:31:11
start mi0
10:31:11
start mi0 range(p) 1 loop
10:31:11
finish mi0 range(p) 1 loop
10:31:11
start mi0 range(p) 2 loop
10:31:11
finish mi0 range(p) 2 loop
10:31:11
start mi0 range(NT) loop
10:31:12
finish mi0 range(NT) loop
10:31:12
start mi0 range(n) loop
10:31:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:31:12
start mi0 range(n) 2loop
10:31:12
finish mi0 range(n) 2loop
10:31:12
start mi1
10:31:12
start mi1 range(p) 1 loop
10:31:12
finish mi1 range(p) 1 loop
10:31:12
start mi1 range(p) 2 loop
10:31:12
finish mi1 range(p) 2 loop
10:31:12
start mi1 range(NT) loop
10:31:12
finish mi1 range(NT) loop
10:31:12
start mi1 range(n) loop
10:31:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:31:12
start mi1 range(n) 2loop
10:31:12
finish mi1 range(n) 2loop
10:31:12
start mi2
10:31:12
start mi2 range(p) 1 loop
10:31:12
finish mi2 range(p) 1 loop
10:31:12
start mi2 range(p) 2 loop
10:31:12
finish mi2 range(p) 2 loop
10:31:12
start mi2 range(NT) loop
10:31:12
finish mi2 range(NT) loop
10:31:12
start mi2 range(n) loop
10:31:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:31:12
start mi2 range(n) 2loop
10:31:12
finish mi2 range(n) 2loop
10:31:12
start mi3
10:31:12
start mi3 range(p) 1 loop
10:31:12
finish mi3 range(p) 1 loop
10:31:12
start mi3 range(p) 2 loop
10:31:12
finish mi3 range(p) 2 loop
10:31:12
start mi3 range(NT) loop
10:31:12
finish mi3 range(NT) loop
10:31:12
start mi3 range(n) loop
10:31:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:31:12
start mi3 range(n) 2loop
10:31:12
finish mi3 range(n) 2loop
10:31:13
[[-2.48489686]]
end mi3 loop
10:31:13
estep
10:31:13
end estep
10:31:29
end pa10:31:29
goodness of fit correlation [0.15640929]
start cluster 10:31:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38409 instead
  warnings.warn(
8
parallel submitted
10:31:49
parallel finished
10:35:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:35:45
start mi0
10:35:45
start mi0 range(p) 1 loop
10:35:45
finish mi0 range(p) 1 loop
10:35:45
start mi0 range(p) 2 loop
10:35:45
finish mi0 range(p) 2 loop
10:35:45
start mi0 range(NT) loop
10:35:45
finish mi0 range(NT) loop
10:35:45
start mi0 range(n) loop
10:35:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:35:45
start mi0 range(n) 2loop
10:35:45
finish mi0 range(n) 2loop
10:35:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:35:46
start mi1 range(p) 1 loop
10:35:46
finish mi1 range(p) 1 loop
10:35:46
start mi1 range(p) 2 loop
10:35:46
finish mi1 range(p) 2 loop
10:35:46
start mi1 range(NT) loop
10:35:46
finish mi1 range(NT) loop
10:35:46
start mi1 range(n) loop
10:35:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:35:46
start mi1 range(n) 2loop
10:35:46
finish mi1 range(n) 2loop
10:35:46
start mi2
10:35:46
start mi2 range(p) 1 loop
10:35:46
finish mi2 range(p) 1 loop
10:35:46
start mi2 range(p) 2 loop
10:35:46
finish mi2 range(p) 2 loop
10:35:46
start mi2 range(NT) loop
10:35:46
finish mi2 range(NT) loop
10:35:46
start mi2 range(n) loop
10:35:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:35:46
start mi2 range(n) 2loop
10:35:46
finish mi2 range(n) 2loop
10:35:46
start mi3
10:35:46
start mi3 range(p) 1 loop
10:35:46
finish mi3 range(p) 1 loop
10:35:46
start mi3 range(p) 2 loop
10:35:46
finish mi3 range(p) 2 loop
10:35:46
start mi3 range(NT) loop
10:35:46
finish mi3 range(NT) loop
10:35:46
start mi3 range(n) loop
10:35:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:35:46
start mi3 range(n) 2loop
10:35:46
finish mi3 range(n) 2loop
10:35:46
[[-2.42541743]]
end mi3 loop
10:35:46
estep
10:35:46
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:36:02
start ppi1
10:36:02
start mi0
10:36:02
start mi0 range(p) 1 loop
10:36:02
finish mi0 range(p) 1 loop
10:36:02
start mi0 range(p) 2 loop
10:36:02
finish mi0 range(p) 2 loop
10:36:02
start mi0 range(NT) loop
10:36:02
finish mi0 range(NT) loop
10:36:02
start mi0 range(n) loop
10:36:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:36:02
start mi0 range(n) 2loop
10:36:02
finish mi0 range(n) 2loop
10:36:02
start mi1
10:36:02
start mi1 range(p) 1 loop
10:36:02
finish mi1 range(p) 1 loop
10:36:02
start mi1 range(p) 2 loop
10:36:02
finish mi1 range(p) 2 loop
10:36:02
start mi1 range(NT) loop
10:36:02
finish mi1 range(NT) loop
10:36:02
start mi1 range(n) loop
10:36:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:36:02
start mi1 range(n) 2loop
10:36:02
finish mi1 range(n) 2loop
10:36:03
start mi2
10:36:03
start mi2 range(p) 1 loop
10:36:03
finish mi2 range(p) 1 loop
10:36:03
start mi2 range(p) 2 loop
10:36:03
finish mi2 range(p) 2 loop
10:36:03
start mi2 range(NT) loop
10:36:03
finish mi2 range(NT) loop
10:36:03
start mi2 range(n) loop
10:36:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:36:03
start mi2 range(n) 2loop
10:36:03
finish mi2 range(n) 2loop
10:36:03
start mi3
10:36:03
start mi3 range(p) 1 loop
10:36:03
finish mi3 range(p) 1 loop
10:36:03
start mi3 range(p) 2 loop
10:36:03
finish mi3 range(p) 2 loop
10:36:03
start mi3 range(NT) loop
10:36:03
finish mi3 range(NT) loop
10:36:03
start mi3 range(n) loop
10:36:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:36:03
start mi3 range(n) 2loop
10:36:03
finish mi3 range(n) 2loop
10:36:03
[[-2.48790948]]
end mi3 loop
10:36:03
estep
10:36:03
end estep
10:36:20
end pa10:36:20
goodness of fit correlation [0.29517146]
start cluster 10:36:20
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46777 instead
  warnings.warn(
9
parallel submitted
10:36:40
parallel finished
10:40:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:40:45
start mi0
10:40:45
start mi0 range(p) 1 loop
10:40:45
finish mi0 range(p) 1 loop
10:40:45
start mi0 range(p) 2 loop
10:40:45
finish mi0 range(p) 2 loop
10:40:45
start mi0 range(NT) loop
10:40:45
finish mi0 range(NT) loop
10:40:45
start mi0 range(n) loop
10:40:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:40:45
start mi0 range(n) 2loop
10:40:45
finish mi0 range(n) 2loop
10:40:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:40:45
start mi1 range(p) 1 loop
10:40:45
finish mi1 range(p) 1 loop
10:40:45
start mi1 range(p) 2 loop
10:40:45
finish mi1 range(p) 2 loop
10:40:45
start mi1 range(NT) loop
10:40:45
finish mi1 range(NT) loop
10:40:45
start mi1 range(n) loop
10:40:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:40:45
start mi1 range(n) 2loop
10:40:45
finish mi1 range(n) 2loop
10:40:46
start mi2
10:40:46
start mi2 range(p) 1 loop
10:40:46
finish mi2 range(p) 1 loop
10:40:46
start mi2 range(p) 2 loop
10:40:46
finish mi2 range(p) 2 loop
10:40:46
start mi2 range(NT) loop
10:40:46
finish mi2 range(NT) loop
10:40:46
start mi2 range(n) loop
10:40:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:40:46
start mi2 range(n) 2loop
10:40:46
finish mi2 range(n) 2loop
10:40:46
start mi3
10:40:46
start mi3 range(p) 1 loop
10:40:46
finish mi3 range(p) 1 loop
10:40:46
start mi3 range(p) 2 loop
10:40:46
finish mi3 range(p) 2 loop
10:40:46
start mi3 range(NT) loop
10:40:46
finish mi3 range(NT) loop
10:40:46
start mi3 range(n) loop
10:40:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:40:46
start mi3 range(n) 2loop
10:40:46
finish mi3 range(n) 2loop
10:40:46
[[-2.48017752]]
end mi3 loop
10:40:46
estep
10:40:46
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:41:02
start ppi1
10:41:02
start mi0
10:41:02
start mi0 range(p) 1 loop
10:41:02
finish mi0 range(p) 1 loop
10:41:02
start mi0 range(p) 2 loop
10:41:02
finish mi0 range(p) 2 loop
10:41:02
start mi0 range(NT) loop
10:41:02
finish mi0 range(NT) loop
10:41:02
start mi0 range(n) loop
10:41:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:41:02
start mi0 range(n) 2loop
10:41:02
finish mi0 range(n) 2loop
10:41:02
start mi1
10:41:02
start mi1 range(p) 1 loop
10:41:02
finish mi1 range(p) 1 loop
10:41:02
start mi1 range(p) 2 loop
10:41:02
finish mi1 range(p) 2 loop
10:41:02
start mi1 range(NT) loop
10:41:02
finish mi1 range(NT) loop
10:41:02
start mi1 range(n) loop
10:41:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:41:02
start mi1 range(n) 2loop
10:41:02
finish mi1 range(n) 2loop
10:41:02
start mi2
10:41:02
start mi2 range(p) 1 loop
10:41:02
finish mi2 range(p) 1 loop
10:41:02
start mi2 range(p) 2 loop
10:41:02
finish mi2 range(p) 2 loop
10:41:02
start mi2 range(NT) loop
10:41:02
finish mi2 range(NT) loop
10:41:02
start mi2 range(n) loop
10:41:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:41:02
start mi2 range(n) 2loop
10:41:02
finish mi2 range(n) 2loop
10:41:03
[[-2.54264364]]
end mi2 loop
10:41:03
estep
10:41:03
end estep
10:41:18
end pa10:41:18
goodness of fit correlation [0.26348179]
start cluster 10:41:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34974 instead
  warnings.warn(
10
parallel submitted
10:41:36
parallel finished
10:44:32
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:44:37
start mi0
10:44:37
start mi0 range(p) 1 loop
10:44:37
finish mi0 range(p) 1 loop
10:44:37
start mi0 range(p) 2 loop
10:44:37
finish mi0 range(p) 2 loop
10:44:37
start mi0 range(NT) loop
10:44:37
finish mi0 range(NT) loop
10:44:37
start mi0 range(n) loop
10:44:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:44:37
start mi0 range(n) 2loop
10:44:37
finish mi0 range(n) 2loop
10:44:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:44:38
start mi1 range(p) 1 loop
10:44:38
finish mi1 range(p) 1 loop
10:44:38
start mi1 range(p) 2 loop
10:44:38
finish mi1 range(p) 2 loop
10:44:38
start mi1 range(NT) loop
10:44:38
finish mi1 range(NT) loop
10:44:38
start mi1 range(n) loop
10:44:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:44:38
start mi1 range(n) 2loop
10:44:38
finish mi1 range(n) 2loop
10:44:38
start mi2
10:44:38
start mi2 range(p) 1 loop
10:44:38
finish mi2 range(p) 1 loop
10:44:38
start mi2 range(p) 2 loop
10:44:38
finish mi2 range(p) 2 loop
10:44:38
start mi2 range(NT) loop
10:44:38
finish mi2 range(NT) loop
10:44:38
start mi2 range(n) loop
10:44:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:44:38
start mi2 range(n) 2loop
10:44:38
finish mi2 range(n) 2loop
10:44:38
start mi3
10:44:38
start mi3 range(p) 1 loop
10:44:38
finish mi3 range(p) 1 loop
10:44:38
start mi3 range(p) 2 loop
10:44:38
finish mi3 range(p) 2 loop
10:44:38
start mi3 range(NT) loop
10:44:38
finish mi3 range(NT) loop
10:44:38
start mi3 range(n) loop
10:44:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:44:38
start mi3 range(n) 2loop
10:44:38
finish mi3 range(n) 2loop
10:44:38
[[-2.48340114]]
end mi3 loop
10:44:38
estep
10:44:38
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:44:56
start ppi1
10:44:56
start mi0
10:44:56
start mi0 range(p) 1 loop
10:44:56
finish mi0 range(p) 1 loop
10:44:56
start mi0 range(p) 2 loop
10:44:56
finish mi0 range(p) 2 loop
10:44:56
start mi0 range(NT) loop
10:44:56
finish mi0 range(NT) loop
10:44:56
start mi0 range(n) loop
10:44:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:44:56
start mi0 range(n) 2loop
10:44:56
finish mi0 range(n) 2loop
10:44:56
start mi1
10:44:56
start mi1 range(p) 1 loop
10:44:56
finish mi1 range(p) 1 loop
10:44:56
start mi1 range(p) 2 loop
10:44:56
finish mi1 range(p) 2 loop
10:44:56
start mi1 range(NT) loop
10:44:56
finish mi1 range(NT) loop
10:44:56
start mi1 range(n) loop
10:44:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:44:56
start mi1 range(n) 2loop
10:44:56
finish mi1 range(n) 2loop
10:44:56
start mi2
10:44:56
start mi2 range(p) 1 loop
10:44:56
finish mi2 range(p) 1 loop
10:44:56
start mi2 range(p) 2 loop
10:44:56
finish mi2 range(p) 2 loop
10:44:56
start mi2 range(NT) loop
10:44:56
finish mi2 range(NT) loop
10:44:56
start mi2 range(n) loop
10:44:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:44:56
start mi2 range(n) 2loop
10:44:56
finish mi2 range(n) 2loop
10:44:56
[[-2.54586877]]
end mi2 loop
10:44:56
estep
10:44:56
end estep
10:45:13
end pa10:45:13
goodness of fit correlation [0.27254235]
start cluster 10:45:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38533 instead
  warnings.warn(
11
parallel submitted
10:45:34
parallel finished
10:48:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:48:55
start mi0
10:48:55
start mi0 range(p) 1 loop
10:48:55
finish mi0 range(p) 1 loop
10:48:55
start mi0 range(p) 2 loop
10:48:55
finish mi0 range(p) 2 loop
10:48:55
start mi0 range(NT) loop
10:48:55
finish mi0 range(NT) loop
10:48:55
start mi0 range(n) loop
10:48:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:48:55
start mi0 range(n) 2loop
10:48:55
finish mi0 range(n) 2loop
10:48:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:48:56
start mi1 range(p) 1 loop
10:48:56
finish mi1 range(p) 1 loop
10:48:56
start mi1 range(p) 2 loop
10:48:56
finish mi1 range(p) 2 loop
10:48:56
start mi1 range(NT) loop
10:48:56
finish mi1 range(NT) loop
10:48:56
start mi1 range(n) loop
10:48:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:48:56
start mi1 range(n) 2loop
10:48:56
finish mi1 range(n) 2loop
10:48:56
start mi2
10:48:56
start mi2 range(p) 1 loop
10:48:56
finish mi2 range(p) 1 loop
10:48:56
start mi2 range(p) 2 loop
10:48:56
finish mi2 range(p) 2 loop
10:48:56
start mi2 range(NT) loop
10:48:56
finish mi2 range(NT) loop
10:48:56
start mi2 range(n) loop
10:48:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:48:56
start mi2 range(n) 2loop
10:48:56
finish mi2 range(n) 2loop
10:48:56
[[-2.5177252]]
end mi2 loop
10:48:56
estep
10:48:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:12
start ppi1
10:49:12
start mi0
10:49:12
start mi0 range(p) 1 loop
10:49:12
finish mi0 range(p) 1 loop
10:49:12
start mi0 range(p) 2 loop
10:49:12
finish mi0 range(p) 2 loop
10:49:12
start mi0 range(NT) loop
10:49:12
finish mi0 range(NT) loop
10:49:12
start mi0 range(n) loop
10:49:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:12
start mi0 range(n) 2loop
10:49:12
finish mi0 range(n) 2loop
10:49:12
start mi1
10:49:12
start mi1 range(p) 1 loop
10:49:12
finish mi1 range(p) 1 loop
10:49:12
start mi1 range(p) 2 loop
10:49:12
finish mi1 range(p) 2 loop
10:49:12
start mi1 range(NT) loop
10:49:12
finish mi1 range(NT) loop
10:49:12
start mi1 range(n) loop
10:49:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:12
start mi1 range(n) 2loop
10:49:12
finish mi1 range(n) 2loop
10:49:12
start mi2
10:49:12
start mi2 range(p) 1 loop
10:49:12
finish mi2 range(p) 1 loop
10:49:12
start mi2 range(p) 2 loop
10:49:12
finish mi2 range(p) 2 loop
10:49:12
start mi2 range(NT) loop
10:49:12
finish mi2 range(NT) loop
10:49:12
start mi2 range(n) loop
10:49:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:49:12
start mi2 range(n) 2loop
10:49:12
finish mi2 range(n) 2loop
10:49:12
[[-2.58024533]]
end mi2 loop
10:49:12
estep
10:49:12
end estep
10:49:28
end pa10:49:28
goodness of fit correlation [0.30382215]
start cluster 10:49:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41488 instead
  warnings.warn(
12
parallel submitted
10:49:46
parallel finished
10:51:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:51:49
start mi0
10:51:49
start mi0 range(p) 1 loop
10:51:49
finish mi0 range(p) 1 loop
10:51:49
start mi0 range(p) 2 loop
10:51:49
finish mi0 range(p) 2 loop
10:51:49
start mi0 range(NT) loop
10:51:49
finish mi0 range(NT) loop
10:51:49
start mi0 range(n) loop
10:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:51:49
start mi0 range(n) 2loop
10:51:49
finish mi0 range(n) 2loop
10:51:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:51:50
start mi1 range(p) 1 loop
10:51:50
finish mi1 range(p) 1 loop
10:51:50
start mi1 range(p) 2 loop
10:51:50
finish mi1 range(p) 2 loop
10:51:50
start mi1 range(NT) loop
10:51:50
finish mi1 range(NT) loop
10:51:50
start mi1 range(n) loop
10:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:51:50
start mi1 range(n) 2loop
10:51:50
finish mi1 range(n) 2loop
10:51:50
start mi2
10:51:50
start mi2 range(p) 1 loop
10:51:50
finish mi2 range(p) 1 loop
10:51:50
start mi2 range(p) 2 loop
10:51:50
finish mi2 range(p) 2 loop
10:51:50
start mi2 range(NT) loop
10:51:50
finish mi2 range(NT) loop
10:51:50
start mi2 range(n) loop
10:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:51:50
start mi2 range(n) 2loop
10:51:50
finish mi2 range(n) 2loop
10:51:50
[[-2.52781084]]
end mi2 loop
10:51:50
estep
10:51:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:52:06
start ppi1
10:52:06
start mi0
10:52:06
start mi0 range(p) 1 loop
10:52:06
finish mi0 range(p) 1 loop
10:52:06
start mi0 range(p) 2 loop
10:52:06
finish mi0 range(p) 2 loop
10:52:06
start mi0 range(NT) loop
10:52:06
finish mi0 range(NT) loop
10:52:06
start mi0 range(n) loop
10:52:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:52:06
start mi0 range(n) 2loop
10:52:06
finish mi0 range(n) 2loop
10:52:06
start mi1
10:52:06
start mi1 range(p) 1 loop
10:52:06
finish mi1 range(p) 1 loop
10:52:06
start mi1 range(p) 2 loop
10:52:06
finish mi1 range(p) 2 loop
10:52:06
start mi1 range(NT) loop
10:52:07
finish mi1 range(NT) loop
10:52:07
start mi1 range(n) loop
10:52:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:52:07
start mi1 range(n) 2loop
10:52:07
finish mi1 range(n) 2loop
10:52:07
start mi2
10:52:07
start mi2 range(p) 1 loop
10:52:07
finish mi2 range(p) 1 loop
10:52:07
start mi2 range(p) 2 loop
10:52:07
finish mi2 range(p) 2 loop
10:52:07
start mi2 range(NT) loop
10:52:07
finish mi2 range(NT) loop
10:52:07
start mi2 range(n) loop
10:52:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:52:07
start mi2 range(n) 2loop
10:52:07
finish mi2 range(n) 2loop
10:52:07
[[-2.59032663]]
end mi2 loop
10:52:07
estep
10:52:07
end estep
10:52:24
end pa10:52:24
goodness of fit correlation [0.27749794]
start cluster 10:52:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41102 instead
  warnings.warn(
13
parallel submitted
10:52:44
parallel finished
10:57:08
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:57:14
start mi0
10:57:14
start mi0 range(p) 1 loop
10:57:14
finish mi0 range(p) 1 loop
10:57:14
start mi0 range(p) 2 loop
10:57:14
finish mi0 range(p) 2 loop
10:57:14
start mi0 range(NT) loop
10:57:14
finish mi0 range(NT) loop
10:57:14
start mi0 range(n) loop
10:57:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:57:14
start mi0 range(n) 2loop
10:57:14
finish mi0 range(n) 2loop
10:57:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:57:14
start mi1 range(p) 1 loop
10:57:14
finish mi1 range(p) 1 loop
10:57:14
start mi1 range(p) 2 loop
10:57:14
finish mi1 range(p) 2 loop
10:57:14
start mi1 range(NT) loop
10:57:14
finish mi1 range(NT) loop
10:57:14
start mi1 range(n) loop
10:57:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:57:14
start mi1 range(n) 2loop
10:57:14
finish mi1 range(n) 2loop
10:57:14
start mi2
10:57:14
start mi2 range(p) 1 loop
10:57:14
finish mi2 range(p) 1 loop
10:57:14
start mi2 range(p) 2 loop
10:57:14
finish mi2 range(p) 2 loop
10:57:14
start mi2 range(NT) loop
10:57:14
finish mi2 range(NT) loop
10:57:14
start mi2 range(n) loop
10:57:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:57:14
start mi2 range(n) 2loop
10:57:14
finish mi2 range(n) 2loop
10:57:15
[[-2.58131827]]
end mi2 loop
10:57:15
estep
10:57:15
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:57:31
start ppi1
10:57:31
start mi0
10:57:31
start mi0 range(p) 1 loop
10:57:31
finish mi0 range(p) 1 loop
10:57:31
start mi0 range(p) 2 loop
10:57:31
finish mi0 range(p) 2 loop
10:57:31
start mi0 range(NT) loop
10:57:31
finish mi0 range(NT) loop
10:57:31
start mi0 range(n) loop
10:57:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:57:31
start mi0 range(n) 2loop
10:57:31
finish mi0 range(n) 2loop
10:57:31
start mi1
10:57:31
start mi1 range(p) 1 loop
10:57:31
finish mi1 range(p) 1 loop
10:57:31
start mi1 range(p) 2 loop
10:57:31
finish mi1 range(p) 2 loop
10:57:31
start mi1 range(NT) loop
10:57:31
finish mi1 range(NT) loop
10:57:31
start mi1 range(n) loop
10:57:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:57:31
start mi1 range(n) 2loop
10:57:31
finish mi1 range(n) 2loop
10:57:31
start mi2
10:57:31
start mi2 range(p) 1 loop
10:57:31
finish mi2 range(p) 1 loop
10:57:31
start mi2 range(p) 2 loop
10:57:31
finish mi2 range(p) 2 loop
10:57:31
start mi2 range(NT) loop
10:57:31
finish mi2 range(NT) loop
10:57:31
start mi2 range(n) loop
10:57:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:57:31
start mi2 range(n) 2loop
10:57:31
finish mi2 range(n) 2loop
10:57:31
[[-2.64381944]]
end mi2 loop
10:57:31
estep
10:57:31
end estep
10:57:47
end pa10:57:47
goodness of fit correlation [0.35065589]
start cluster 10:57:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41207 instead
  warnings.warn(
14
parallel submitted
10:58:07
parallel finished
11:00:08
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:00:14
start mi0
11:00:14
start mi0 range(p) 1 loop
11:00:14
finish mi0 range(p) 1 loop
11:00:14
start mi0 range(p) 2 loop
11:00:14
finish mi0 range(p) 2 loop
11:00:14
start mi0 range(NT) loop
11:00:14
finish mi0 range(NT) loop
11:00:14
start mi0 range(n) loop
11:00:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:00:14
start mi0 range(n) 2loop
11:00:14
finish mi0 range(n) 2loop
11:00:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:00:14
start mi1 range(p) 1 loop
11:00:14
finish mi1 range(p) 1 loop
11:00:14
start mi1 range(p) 2 loop
11:00:14
finish mi1 range(p) 2 loop
11:00:14
start mi1 range(NT) loop
11:00:14
finish mi1 range(NT) loop
11:00:14
start mi1 range(n) loop
11:00:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:00:14
start mi1 range(n) 2loop
11:00:14
finish mi1 range(n) 2loop
11:00:15
start mi2
11:00:15
start mi2 range(p) 1 loop
11:00:15
finish mi2 range(p) 1 loop
11:00:15
start mi2 range(p) 2 loop
11:00:15
finish mi2 range(p) 2 loop
11:00:15
start mi2 range(NT) loop
11:00:15
finish mi2 range(NT) loop
11:00:15
start mi2 range(n) loop
11:00:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:00:15
start mi2 range(n) 2loop
11:00:15
finish mi2 range(n) 2loop
11:00:15
[[-2.58062406]]
end mi2 loop
11:00:15
estep
11:00:15
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:00:31
start ppi1
11:00:31
start mi0
11:00:31
start mi0 range(p) 1 loop
11:00:31
finish mi0 range(p) 1 loop
11:00:31
start mi0 range(p) 2 loop
11:00:31
finish mi0 range(p) 2 loop
11:00:31
start mi0 range(NT) loop
11:00:31
finish mi0 range(NT) loop
11:00:31
start mi0 range(n) loop
11:00:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:00:31
start mi0 range(n) 2loop
11:00:31
finish mi0 range(n) 2loop
11:00:31
start mi1
11:00:31
start mi1 range(p) 1 loop
11:00:31
finish mi1 range(p) 1 loop
11:00:31
start mi1 range(p) 2 loop
11:00:31
finish mi1 range(p) 2 loop
11:00:31
start mi1 range(NT) loop
11:00:31
finish mi1 range(NT) loop
11:00:31
start mi1 range(n) loop
11:00:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:00:31
start mi1 range(n) 2loop
11:00:31
finish mi1 range(n) 2loop
11:00:31
start mi2
11:00:31
start mi2 range(p) 1 loop
11:00:31
finish mi2 range(p) 1 loop
11:00:31
start mi2 range(p) 2 loop
11:00:31
finish mi2 range(p) 2 loop
11:00:31
start mi2 range(NT) loop
11:00:31
finish mi2 range(NT) loop
11:00:31
start mi2 range(n) loop
11:00:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:00:31
start mi2 range(n) 2loop
11:00:31
finish mi2 range(n) 2loop
11:00:31
[[-2.64312534]]
end mi2 loop
11:00:31
estep
11:00:31
end estep
11:00:48
end pa11:00:48
goodness of fit correlation [0.33408024]
start cluster 11:00:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46526 instead
  warnings.warn(
15
parallel submitted
11:01:09
parallel finished
11:04:05
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:04:13
start mi0
11:04:13
start mi0 range(p) 1 loop
11:04:13
finish mi0 range(p) 1 loop
11:04:13
start mi0 range(p) 2 loop
11:04:13
finish mi0 range(p) 2 loop
11:04:13
start mi0 range(NT) loop
11:04:13
finish mi0 range(NT) loop
11:04:13
start mi0 range(n) loop
11:04:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:04:13
start mi0 range(n) 2loop
11:04:13
finish mi0 range(n) 2loop
11:04:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:04:13
start mi1 range(p) 1 loop
11:04:13
finish mi1 range(p) 1 loop
11:04:13
start mi1 range(p) 2 loop
11:04:13
finish mi1 range(p) 2 loop
11:04:13
start mi1 range(NT) loop
11:04:13
finish mi1 range(NT) loop
11:04:13
start mi1 range(n) loop
11:04:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:04:13
start mi1 range(n) 2loop
11:04:13
finish mi1 range(n) 2loop
11:04:13
start mi2
11:04:13
start mi2 range(p) 1 loop
11:04:13
finish mi2 range(p) 1 loop
11:04:13
start mi2 range(p) 2 loop
11:04:13
finish mi2 range(p) 2 loop
11:04:13
start mi2 range(NT) loop
11:04:13
finish mi2 range(NT) loop
11:04:13
start mi2 range(n) loop
11:04:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:04:13
start mi2 range(n) 2loop
11:04:13
finish mi2 range(n) 2loop
11:04:14
[[-2.59218373]]
end mi2 loop
11:04:14
estep
11:04:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:04:30
start ppi1
11:04:30
start mi0
11:04:30
start mi0 range(p) 1 loop
11:04:30
finish mi0 range(p) 1 loop
11:04:30
start mi0 range(p) 2 loop
11:04:30
finish mi0 range(p) 2 loop
11:04:30
start mi0 range(NT) loop
11:04:30
finish mi0 range(NT) loop
11:04:30
start mi0 range(n) loop
11:04:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:04:30
start mi0 range(n) 2loop
11:04:30
finish mi0 range(n) 2loop
11:04:30
start mi1
11:04:30
start mi1 range(p) 1 loop
11:04:30
finish mi1 range(p) 1 loop
11:04:30
start mi1 range(p) 2 loop
11:04:30
finish mi1 range(p) 2 loop
11:04:30
start mi1 range(NT) loop
11:04:30
finish mi1 range(NT) loop
11:04:30
start mi1 range(n) loop
11:04:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:04:30
start mi1 range(n) 2loop
11:04:30
finish mi1 range(n) 2loop
11:04:30
start mi2
11:04:30
start mi2 range(p) 1 loop
11:04:30
finish mi2 range(p) 1 loop
11:04:30
start mi2 range(p) 2 loop
11:04:30
finish mi2 range(p) 2 loop
11:04:30
start mi2 range(NT) loop
11:04:30
finish mi2 range(NT) loop
11:04:30
start mi2 range(n) loop
11:04:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:04:31
start mi2 range(n) 2loop
11:04:31
finish mi2 range(n) 2loop
11:04:31
[[-2.65468317]]
end mi2 loop
11:04:31
estep
11:04:31
end estep
11:04:47
end pa11:04:47
goodness of fit correlation [0.30987532]
start cluster 11:04:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37632 instead
  warnings.warn(
16
parallel submitted
11:05:07
parallel finished
11:08:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:08:08
start mi0
11:08:08
start mi0 range(p) 1 loop
11:08:08
finish mi0 range(p) 1 loop
11:08:08
start mi0 range(p) 2 loop
11:08:08
finish mi0 range(p) 2 loop
11:08:08
start mi0 range(NT) loop
11:08:08
finish mi0 range(NT) loop
11:08:08
start mi0 range(n) loop
11:08:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:08:08
start mi0 range(n) 2loop
11:08:08
finish mi0 range(n) 2loop
11:08:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:08:08
start mi1 range(p) 1 loop
11:08:08
finish mi1 range(p) 1 loop
11:08:08
start mi1 range(p) 2 loop
11:08:08
finish mi1 range(p) 2 loop
11:08:08
start mi1 range(NT) loop
11:08:08
finish mi1 range(NT) loop
11:08:08
start mi1 range(n) loop
11:08:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:08:08
start mi1 range(n) 2loop
11:08:08
finish mi1 range(n) 2loop
11:08:09
start mi2
11:08:09
start mi2 range(p) 1 loop
11:08:09
finish mi2 range(p) 1 loop
11:08:09
start mi2 range(p) 2 loop
11:08:09
finish mi2 range(p) 2 loop
11:08:09
start mi2 range(NT) loop
11:08:09
finish mi2 range(NT) loop
11:08:09
start mi2 range(n) loop
11:08:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:08:09
start mi2 range(n) 2loop
11:08:09
finish mi2 range(n) 2loop
11:08:09
[[-2.60866703]]
end mi2 loop
11:08:09
estep
11:08:09
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:08:26
start ppi1
11:08:26
start mi0
11:08:26
start mi0 range(p) 1 loop
11:08:26
finish mi0 range(p) 1 loop
11:08:26
start mi0 range(p) 2 loop
11:08:26
finish mi0 range(p) 2 loop
11:08:26
start mi0 range(NT) loop
11:08:26
finish mi0 range(NT) loop
11:08:26
start mi0 range(n) loop
11:08:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:08:26
start mi0 range(n) 2loop
11:08:26
finish mi0 range(n) 2loop
11:08:26
start mi1
11:08:26
start mi1 range(p) 1 loop
11:08:26
finish mi1 range(p) 1 loop
11:08:26
start mi1 range(p) 2 loop
11:08:26
finish mi1 range(p) 2 loop
11:08:26
start mi1 range(NT) loop
11:08:26
finish mi1 range(NT) loop
11:08:26
start mi1 range(n) loop
11:08:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:08:27
start mi1 range(n) 2loop
11:08:27
finish mi1 range(n) 2loop
11:08:27
start mi2
11:08:27
start mi2 range(p) 1 loop
11:08:27
finish mi2 range(p) 1 loop
11:08:27
start mi2 range(p) 2 loop
11:08:27
finish mi2 range(p) 2 loop
11:08:27
start mi2 range(NT) loop
11:08:27
finish mi2 range(NT) loop
11:08:27
start mi2 range(n) loop
11:08:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:08:27
start mi2 range(n) 2loop
11:08:27
finish mi2 range(n) 2loop
11:08:27
[[-2.6711644]]
end mi2 loop
11:08:27
estep
11:08:27
end estep
11:08:45
end pa11:08:45
goodness of fit correlation [0.35958478]
start cluster 11:08:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33386 instead
  warnings.warn(
17
parallel submitted
11:09:08
parallel finished
11:12:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:12:24
start mi0
11:12:24
start mi0 range(p) 1 loop
11:12:24
finish mi0 range(p) 1 loop
11:12:24
start mi0 range(p) 2 loop
11:12:24
finish mi0 range(p) 2 loop
11:12:24
start mi0 range(NT) loop
11:12:25
finish mi0 range(NT) loop
11:12:25
start mi0 range(n) loop
11:12:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:12:25
start mi0 range(n) 2loop
11:12:25
finish mi0 range(n) 2loop
11:12:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:12:25
start mi1 range(p) 1 loop
11:12:25
finish mi1 range(p) 1 loop
11:12:25
start mi1 range(p) 2 loop
11:12:25
finish mi1 range(p) 2 loop
11:12:25
start mi1 range(NT) loop
11:12:25
finish mi1 range(NT) loop
11:12:25
start mi1 range(n) loop
11:12:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:12:25
start mi1 range(n) 2loop
11:12:25
finish mi1 range(n) 2loop
11:12:25
start mi2
11:12:25
start mi2 range(p) 1 loop
11:12:25
finish mi2 range(p) 1 loop
11:12:25
start mi2 range(p) 2 loop
11:12:25
finish mi2 range(p) 2 loop
11:12:25
start mi2 range(NT) loop
11:12:25
finish mi2 range(NT) loop
11:12:25
start mi2 range(n) loop
11:12:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:12:25
start mi2 range(n) 2loop
11:12:25
finish mi2 range(n) 2loop
11:12:25
[[-2.61634055]]
end mi2 loop
11:12:25
estep
11:12:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:12:41
start ppi1
11:12:41
start mi0
11:12:41
start mi0 range(p) 1 loop
11:12:41
finish mi0 range(p) 1 loop
11:12:41
start mi0 range(p) 2 loop
11:12:41
finish mi0 range(p) 2 loop
11:12:41
start mi0 range(NT) loop
11:12:41
finish mi0 range(NT) loop
11:12:41
start mi0 range(n) loop
11:12:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:12:41
start mi0 range(n) 2loop
11:12:41
finish mi0 range(n) 2loop
11:12:41
start mi1
11:12:41
start mi1 range(p) 1 loop
11:12:41
finish mi1 range(p) 1 loop
11:12:41
start mi1 range(p) 2 loop
11:12:41
finish mi1 range(p) 2 loop
11:12:41
start mi1 range(NT) loop
11:12:42
finish mi1 range(NT) loop
11:12:42
start mi1 range(n) loop
11:12:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:12:42
start mi1 range(n) 2loop
11:12:42
finish mi1 range(n) 2loop
11:12:42
start mi2
11:12:42
start mi2 range(p) 1 loop
11:12:42
finish mi2 range(p) 1 loop
11:12:42
start mi2 range(p) 2 loop
11:12:42
finish mi2 range(p) 2 loop
11:12:42
start mi2 range(NT) loop
11:12:42
finish mi2 range(NT) loop
11:12:42
start mi2 range(n) loop
11:12:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:12:42
start mi2 range(n) 2loop
11:12:42
finish mi2 range(n) 2loop
11:12:42
[[-2.67883714]]
end mi2 loop
11:12:42
estep
11:12:42
end estep
11:12:59
end pa11:12:59
goodness of fit correlation [0.27716777]
start cluster 11:12:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35576 instead
  warnings.warn(
18
parallel submitted
11:13:20
parallel finished
11:16:27
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:16:34
start mi0
11:16:34
start mi0 range(p) 1 loop
11:16:34
finish mi0 range(p) 1 loop
11:16:34
start mi0 range(p) 2 loop
11:16:34
finish mi0 range(p) 2 loop
11:16:34
start mi0 range(NT) loop
11:16:34
finish mi0 range(NT) loop
11:16:34
start mi0 range(n) loop
11:16:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:16:35
start mi0 range(n) 2loop
11:16:35
finish mi0 range(n) 2loop
11:16:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:16:35
start mi1 range(p) 1 loop
11:16:35
finish mi1 range(p) 1 loop
11:16:35
start mi1 range(p) 2 loop
11:16:35
finish mi1 range(p) 2 loop
11:16:35
start mi1 range(NT) loop
11:16:35
finish mi1 range(NT) loop
11:16:35
start mi1 range(n) loop
11:16:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:16:35
start mi1 range(n) 2loop
11:16:35
finish mi1 range(n) 2loop
11:16:35
start mi2
11:16:35
start mi2 range(p) 1 loop
11:16:35
finish mi2 range(p) 1 loop
11:16:35
start mi2 range(p) 2 loop
11:16:35
finish mi2 range(p) 2 loop
11:16:35
start mi2 range(NT) loop
11:16:35
finish mi2 range(NT) loop
11:16:35
start mi2 range(n) loop
11:16:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:16:35
start mi2 range(n) 2loop
11:16:35
finish mi2 range(n) 2loop
11:16:35
[[-2.51089956]]
end mi2 loop
11:16:35
estep
11:16:35
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:16:53
start ppi1
11:16:53
start mi0
11:16:53
start mi0 range(p) 1 loop
11:16:53
finish mi0 range(p) 1 loop
11:16:53
start mi0 range(p) 2 loop
11:16:53
finish mi0 range(p) 2 loop
11:16:53
start mi0 range(NT) loop
11:16:53
finish mi0 range(NT) loop
11:16:53
start mi0 range(n) loop
11:16:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:16:53
start mi0 range(n) 2loop
11:16:53
finish mi0 range(n) 2loop
11:16:53
start mi1
11:16:53
start mi1 range(p) 1 loop
11:16:53
finish mi1 range(p) 1 loop
11:16:53
start mi1 range(p) 2 loop
11:16:53
finish mi1 range(p) 2 loop
11:16:53
start mi1 range(NT) loop
11:16:53
finish mi1 range(NT) loop
11:16:53
start mi1 range(n) loop
11:16:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:16:53
start mi1 range(n) 2loop
11:16:53
finish mi1 range(n) 2loop
11:16:54
start mi2
11:16:54
start mi2 range(p) 1 loop
11:16:54
finish mi2 range(p) 1 loop
11:16:54
start mi2 range(p) 2 loop
11:16:54
finish mi2 range(p) 2 loop
11:16:54
start mi2 range(NT) loop
11:16:54
finish mi2 range(NT) loop
11:16:54
start mi2 range(n) loop
11:16:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:16:54
start mi2 range(n) 2loop
11:16:54
finish mi2 range(n) 2loop
11:16:54
[[-2.573423]]
end mi2 loop
11:16:54
estep
11:16:54
end estep
11:17:11
end pa11:17:11
goodness of fit correlation [0.24578708]
start cluster 11:17:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33950 instead
  warnings.warn(
19
parallel submitted
11:17:31
parallel finished
11:20:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:20:58
start mi0
11:20:58
start mi0 range(p) 1 loop
11:20:58
finish mi0 range(p) 1 loop
11:20:58
start mi0 range(p) 2 loop
11:20:58
finish mi0 range(p) 2 loop
11:20:58
start mi0 range(NT) loop
11:20:58
finish mi0 range(NT) loop
11:20:58
start mi0 range(n) loop
11:20:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:20:58
start mi0 range(n) 2loop
11:20:58
finish mi0 range(n) 2loop
11:20:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:20:58
start mi1 range(p) 1 loop
11:20:58
finish mi1 range(p) 1 loop
11:20:58
start mi1 range(p) 2 loop
11:20:58
finish mi1 range(p) 2 loop
11:20:58
start mi1 range(NT) loop
11:20:58
finish mi1 range(NT) loop
11:20:58
start mi1 range(n) loop
11:20:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:20:58
start mi1 range(n) 2loop
11:20:58
finish mi1 range(n) 2loop
11:20:58
start mi2
11:20:58
start mi2 range(p) 1 loop
11:20:58
finish mi2 range(p) 1 loop
11:20:58
start mi2 range(p) 2 loop
11:20:58
finish mi2 range(p) 2 loop
11:20:58
start mi2 range(NT) loop
11:20:58
finish mi2 range(NT) loop
11:20:58
start mi2 range(n) loop
11:20:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:20:58
start mi2 range(n) 2loop
11:20:58
finish mi2 range(n) 2loop
11:20:58
start mi3
11:20:58
start mi3 range(p) 1 loop
11:20:58
finish mi3 range(p) 1 loop
11:20:58
start mi3 range(p) 2 loop
11:20:58
finish mi3 range(p) 2 loop
11:20:58
start mi3 range(NT) loop
11:20:59
finish mi3 range(NT) loop
11:20:59
start mi3 range(n) loop
11:20:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:20:59
start mi3 range(n) 2loop
11:20:59
finish mi3 range(n) 2loop
11:20:59
[[-2.4690888]]
end mi3 loop
11:20:59
estep
11:20:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:21:16
start ppi1
11:21:16
start mi0
11:21:16
start mi0 range(p) 1 loop
11:21:16
finish mi0 range(p) 1 loop
11:21:16
start mi0 range(p) 2 loop
11:21:16
finish mi0 range(p) 2 loop
11:21:16
start mi0 range(NT) loop
11:21:16
finish mi0 range(NT) loop
11:21:17
start mi0 range(n) loop
11:21:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:21:17
start mi0 range(n) 2loop
11:21:17
finish mi0 range(n) 2loop
11:21:17
start mi1
11:21:17
start mi1 range(p) 1 loop
11:21:17
finish mi1 range(p) 1 loop
11:21:17
start mi1 range(p) 2 loop
11:21:17
finish mi1 range(p) 2 loop
11:21:17
start mi1 range(NT) loop
11:21:17
finish mi1 range(NT) loop
11:21:17
start mi1 range(n) loop
11:21:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:21:17
start mi1 range(n) 2loop
11:21:17
finish mi1 range(n) 2loop
11:21:17
start mi2
11:21:17
start mi2 range(p) 1 loop
11:21:17
finish mi2 range(p) 1 loop
11:21:17
start mi2 range(p) 2 loop
11:21:17
finish mi2 range(p) 2 loop
11:21:17
start mi2 range(NT) loop
11:21:17
finish mi2 range(NT) loop
11:21:17
start mi2 range(n) loop
11:21:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:21:17
start mi2 range(n) 2loop
11:21:17
finish mi2 range(n) 2loop
11:21:17
[[-2.53154909]]
end mi2 loop
11:21:17
estep
11:21:17
end estep
11:21:35
end pa11:21:35
goodness of fit correlation [0.28732137]
start cluster 11:21:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37917 instead
  warnings.warn(
20
parallel submitted
11:21:56
parallel finished
11:24:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:24:54
start mi0
11:24:54
start mi0 range(p) 1 loop
11:24:54
finish mi0 range(p) 1 loop
11:24:54
start mi0 range(p) 2 loop
11:24:54
finish mi0 range(p) 2 loop
11:24:54
start mi0 range(NT) loop
11:24:54
finish mi0 range(NT) loop
11:24:54
start mi0 range(n) loop
11:24:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:24:55
start mi0 range(n) 2loop
11:24:55
finish mi0 range(n) 2loop
11:24:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:24:55
start mi1 range(p) 1 loop
11:24:55
finish mi1 range(p) 1 loop
11:24:55
start mi1 range(p) 2 loop
11:24:55
finish mi1 range(p) 2 loop
11:24:55
start mi1 range(NT) loop
11:24:55
finish mi1 range(NT) loop
11:24:55
start mi1 range(n) loop
11:24:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:24:55
start mi1 range(n) 2loop
11:24:55
finish mi1 range(n) 2loop
11:24:55
start mi2
11:24:55
start mi2 range(p) 1 loop
11:24:55
finish mi2 range(p) 1 loop
11:24:55
start mi2 range(p) 2 loop
11:24:55
finish mi2 range(p) 2 loop
11:24:55
start mi2 range(NT) loop
11:24:55
finish mi2 range(NT) loop
11:24:55
start mi2 range(n) loop
11:24:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:24:55
start mi2 range(n) 2loop
11:24:55
finish mi2 range(n) 2loop
11:24:55
start mi3
11:24:55
start mi3 range(p) 1 loop
11:24:55
finish mi3 range(p) 1 loop
11:24:55
start mi3 range(p) 2 loop
11:24:55
finish mi3 range(p) 2 loop
11:24:55
start mi3 range(NT) loop
11:24:55
finish mi3 range(NT) loop
11:24:55
start mi3 range(n) loop
11:24:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:24:55
start mi3 range(n) 2loop
11:24:55
finish mi3 range(n) 2loop
11:24:56
[[-2.4856293]]
end mi3 loop
11:24:56
estep
11:24:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:25:13
start ppi1
11:25:13
start mi0
11:25:13
start mi0 range(p) 1 loop
11:25:13
finish mi0 range(p) 1 loop
11:25:13
start mi0 range(p) 2 loop
11:25:13
finish mi0 range(p) 2 loop
11:25:13
start mi0 range(NT) loop
11:25:13
finish mi0 range(NT) loop
11:25:13
start mi0 range(n) loop
11:25:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:25:13
start mi0 range(n) 2loop
11:25:13
finish mi0 range(n) 2loop
11:25:14
start mi1
11:25:14
start mi1 range(p) 1 loop
11:25:14
finish mi1 range(p) 1 loop
11:25:14
start mi1 range(p) 2 loop
11:25:14
finish mi1 range(p) 2 loop
11:25:14
start mi1 range(NT) loop
11:25:14
finish mi1 range(NT) loop
11:25:14
start mi1 range(n) loop
11:25:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:25:14
start mi1 range(n) 2loop
11:25:14
finish mi1 range(n) 2loop
11:25:14
start mi2
11:25:14
start mi2 range(p) 1 loop
11:25:14
finish mi2 range(p) 1 loop
11:25:14
start mi2 range(p) 2 loop
11:25:14
finish mi2 range(p) 2 loop
11:25:14
start mi2 range(NT) loop
11:25:14
finish mi2 range(NT) loop
11:25:14
start mi2 range(n) loop
11:25:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:25:14
start mi2 range(n) 2loop
11:25:14
finish mi2 range(n) 2loop
11:25:14
[[-2.54809793]]
end mi2 loop
11:25:14
estep
11:25:14
end estep
11:25:32
end pa11:25:32
goodness of fit correlation [0.2278809]
start cluster 11:25:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45593 instead
  warnings.warn(
21
parallel submitted
11:25:53
parallel finished
11:28:36
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:28:45
start mi0
11:28:45
start mi0 range(p) 1 loop
11:28:45
finish mi0 range(p) 1 loop
11:28:45
start mi0 range(p) 2 loop
11:28:45
finish mi0 range(p) 2 loop
11:28:45
start mi0 range(NT) loop
11:28:45
finish mi0 range(NT) loop
11:28:45
start mi0 range(n) loop
11:28:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:28:45
start mi0 range(n) 2loop
11:28:45
finish mi0 range(n) 2loop
11:28:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:28:45
start mi1 range(p) 1 loop
11:28:45
finish mi1 range(p) 1 loop
11:28:45
start mi1 range(p) 2 loop
11:28:45
finish mi1 range(p) 2 loop
11:28:45
start mi1 range(NT) loop
11:28:45
finish mi1 range(NT) loop
11:28:45
start mi1 range(n) loop
11:28:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:28:45
start mi1 range(n) 2loop
11:28:45
finish mi1 range(n) 2loop
11:28:45
start mi2
11:28:45
start mi2 range(p) 1 loop
11:28:45
finish mi2 range(p) 1 loop
11:28:45
start mi2 range(p) 2 loop
11:28:45
finish mi2 range(p) 2 loop
11:28:45
start mi2 range(NT) loop
11:28:45
finish mi2 range(NT) loop
11:28:45
start mi2 range(n) loop
11:28:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:28:45
start mi2 range(n) 2loop
11:28:45
finish mi2 range(n) 2loop
11:28:46
start mi3
11:28:46
start mi3 range(p) 1 loop
11:28:46
finish mi3 range(p) 1 loop
11:28:46
start mi3 range(p) 2 loop
11:28:46
finish mi3 range(p) 2 loop
11:28:46
start mi3 range(NT) loop
11:28:46
finish mi3 range(NT) loop
11:28:46
start mi3 range(n) loop
11:28:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:28:46
start mi3 range(n) 2loop
11:28:46
finish mi3 range(n) 2loop
11:28:46
[[-2.46427508]]
end mi3 loop
11:28:46
estep
11:28:46
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:29:04
start ppi1
11:29:04
start mi0
11:29:04
start mi0 range(p) 1 loop
11:29:04
finish mi0 range(p) 1 loop
11:29:04
start mi0 range(p) 2 loop
11:29:04
finish mi0 range(p) 2 loop
11:29:04
start mi0 range(NT) loop
11:29:04
finish mi0 range(NT) loop
11:29:04
start mi0 range(n) loop
11:29:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:29:04
start mi0 range(n) 2loop
11:29:04
finish mi0 range(n) 2loop
11:29:04
start mi1
11:29:04
start mi1 range(p) 1 loop
11:29:04
finish mi1 range(p) 1 loop
11:29:04
start mi1 range(p) 2 loop
11:29:04
finish mi1 range(p) 2 loop
11:29:04
start mi1 range(NT) loop
11:29:04
finish mi1 range(NT) loop
11:29:04
start mi1 range(n) loop
11:29:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:29:04
start mi1 range(n) 2loop
11:29:04
finish mi1 range(n) 2loop
11:29:04
start mi2
11:29:04
start mi2 range(p) 1 loop
11:29:04
finish mi2 range(p) 1 loop
11:29:04
start mi2 range(p) 2 loop
11:29:04
finish mi2 range(p) 2 loop
11:29:04
start mi2 range(NT) loop
11:29:04
finish mi2 range(NT) loop
11:29:05
start mi2 range(n) loop
11:29:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:29:05
start mi2 range(n) 2loop
11:29:05
finish mi2 range(n) 2loop
11:29:05
[[-2.52673249]]
end mi2 loop
11:29:05
estep
11:29:05
end estep
11:29:22
end pa11:29:22
goodness of fit correlation [0.18663613]
start cluster 11:29:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33112 instead
  warnings.warn(
22
parallel submitted
11:29:44
parallel finished
11:33:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:33:11
start mi0
11:33:11
start mi0 range(p) 1 loop
11:33:11
finish mi0 range(p) 1 loop
11:33:11
start mi0 range(p) 2 loop
11:33:11
finish mi0 range(p) 2 loop
11:33:11
start mi0 range(NT) loop
11:33:11
finish mi0 range(NT) loop
11:33:11
start mi0 range(n) loop
11:33:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:33:11
start mi0 range(n) 2loop
11:33:11
finish mi0 range(n) 2loop
11:33:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:33:11
start mi1 range(p) 1 loop
11:33:11
finish mi1 range(p) 1 loop
11:33:11
start mi1 range(p) 2 loop
11:33:11
finish mi1 range(p) 2 loop
11:33:11
start mi1 range(NT) loop
11:33:11
finish mi1 range(NT) loop
11:33:11
start mi1 range(n) loop
11:33:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:33:11
start mi1 range(n) 2loop
11:33:11
finish mi1 range(n) 2loop
11:33:11
start mi2
11:33:11
start mi2 range(p) 1 loop
11:33:11
finish mi2 range(p) 1 loop
11:33:11
start mi2 range(p) 2 loop
11:33:12
finish mi2 range(p) 2 loop
11:33:12
start mi2 range(NT) loop
11:33:12
finish mi2 range(NT) loop
11:33:12
start mi2 range(n) loop
11:33:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:33:12
start mi2 range(n) 2loop
11:33:12
finish mi2 range(n) 2loop
11:33:12
start mi3
11:33:12
start mi3 range(p) 1 loop
11:33:12
finish mi3 range(p) 1 loop
11:33:12
start mi3 range(p) 2 loop
11:33:12
finish mi3 range(p) 2 loop
11:33:12
start mi3 range(NT) loop
11:33:12
finish mi3 range(NT) loop
11:33:12
start mi3 range(n) loop
11:33:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:33:12
start mi3 range(n) 2loop
11:33:12
finish mi3 range(n) 2loop
11:33:12
[[-2.36137685]]
end mi3 loop
11:33:12
estep
11:33:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:33:28
start ppi1
11:33:28
start mi0
11:33:28
start mi0 range(p) 1 loop
11:33:28
finish mi0 range(p) 1 loop
11:33:28
start mi0 range(p) 2 loop
11:33:28
finish mi0 range(p) 2 loop
11:33:28
start mi0 range(NT) loop
11:33:28
finish mi0 range(NT) loop
11:33:28
start mi0 range(n) loop
11:33:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:33:28
start mi0 range(n) 2loop
11:33:28
finish mi0 range(n) 2loop
11:33:29
start mi1
11:33:29
start mi1 range(p) 1 loop
11:33:29
finish mi1 range(p) 1 loop
11:33:29
start mi1 range(p) 2 loop
11:33:29
finish mi1 range(p) 2 loop
11:33:29
start mi1 range(NT) loop
11:33:29
finish mi1 range(NT) loop
11:33:29
start mi1 range(n) loop
11:33:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:33:29
start mi1 range(n) 2loop
11:33:29
finish mi1 range(n) 2loop
11:33:29
start mi2
11:33:29
start mi2 range(p) 1 loop
11:33:29
finish mi2 range(p) 1 loop
11:33:29
start mi2 range(p) 2 loop
11:33:29
finish mi2 range(p) 2 loop
11:33:29
start mi2 range(NT) loop
11:33:29
finish mi2 range(NT) loop
11:33:29
start mi2 range(n) loop
11:33:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:33:29
start mi2 range(n) 2loop
11:33:29
finish mi2 range(n) 2loop
11:33:29
start mi3
11:33:29
start mi3 range(p) 1 loop
11:33:29
finish mi3 range(p) 1 loop
11:33:29
start mi3 range(p) 2 loop
11:33:29
finish mi3 range(p) 2 loop
11:33:29
start mi3 range(NT) loop
11:33:29
finish mi3 range(NT) loop
11:33:29
start mi3 range(n) loop
11:33:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:33:29
start mi3 range(n) 2loop
11:33:29
finish mi3 range(n) 2loop
11:33:29
[[-2.42386897]]
end mi3 loop
11:33:29
estep
11:33:29
end estep
11:33:47
end pa11:33:47
goodness of fit correlation [0.08661567]
0.35958477656478277
[5.23331785e-01 5.15569228e-01 4.45432156e-01 5.83523253e-01
 4.97284460e-01 5.76304556e-01 4.99456525e-01 6.30134470e-01
 5.79434935e-01 6.04049664e-01 4.91490657e-01 5.44620161e-01
 4.97484929e-01 5.70198764e-01 4.99000005e-01 5.78122016e-01
 5.39262220e-01 5.07369835e-01 4.97019900e-01 5.50254690e-01
 6.82898774e-01 5.44893530e-01 5.34783630e-01 5.67726852e-01
 5.04616893e-01 6.30811723e-01 5.51187924e-01 5.68435458e-01
 6.24591231e-01 6.84639996e-01 5.05983888e-01 4.85755400e-01
 5.01711282e-01 5.69689543e-01 5.22477245e-01 5.06610409e-01
 5.52471760e-01 6.32899828e-01 4.95224076e-01 5.38434675e-01
 4.62155081e-01 5.62697716e-01 6.04484673e-01 6.17433846e-01
 5.64123210e-01 5.81428283e-01 4.98315566e-01 5.19485274e-01
 5.18026042e-01 5.71004918e-01 6.01085780e-01 5.32701523e-01
 6.15302430e-01 5.39790039e-01 6.76327041e-01 6.67539873e-01
 6.76291027e-01 6.55387940e-01 5.13496234e-01 6.34903509e-01
 5.55864503e-01 6.58489755e-01 5.90284060e-01 6.54901677e-01
 5.74612306e-01 5.04205898e-01 5.31424871e-01 6.81856992e-01
 3.61890729e-01 3.54706964e-01 3.43500789e-01 3.63162071e-01
 2.94381089e-01 3.77849820e-01 3.38995151e-01 3.47456583e-01
 3.52851750e-01 3.49608712e-01 3.38440742e-01 4.00319935e-01
 2.68065414e-01 3.25695533e-01 3.22232169e-01 3.45166477e-01
 3.49669542e-01 3.47058743e-01 3.48593877e-01 3.98723523e-01
 3.32643451e-01 3.50286170e-01 3.31898847e-01 3.42100131e-01
 3.39305071e-01 3.32914581e-01 3.33510406e-01 3.25733344e-01
 3.48646598e-01 3.41033699e-01 2.78161511e-01 2.89091013e-01
 3.84170946e-01 3.46587715e-01 3.68068470e-01 3.60386359e-01
 4.07747546e-01 3.60654607e-01 3.07828167e-01 3.68300470e-01
 3.42294031e-01 3.66557104e-01 3.46801679e-01 3.49888765e-01
 3.74755348e-01 3.82161001e-01 2.64708467e-01 3.17290363e-01
 3.71132819e-01 3.45358992e-01 3.46760319e-01 3.58165547e-01
 3.43997765e-01 3.93137120e-01 3.35819813e-01 3.42309333e-01
 3.15609106e-01 3.28080606e-01 3.51882470e-01 3.30662094e-01
 2.90078831e-01 3.18844772e-01 3.51890847e-01 3.43740158e-01
 4.92803836e-01 3.14514491e-01 3.91482948e-01 3.39217634e-01
 1.51990754e+00 9.62962485e-04]
start cluster 11:33:47
0
parallel submitted
11:34:10
parallel finished
11:37:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:37:52
start mi0
11:37:52
start mi0 range(p) 1 loop
11:37:52
finish mi0 range(p) 1 loop
11:37:52
start mi0 range(p) 2 loop
11:37:52
finish mi0 range(p) 2 loop
11:37:52
start mi0 range(NT) loop
11:37:52
finish mi0 range(NT) loop
11:37:52
start mi0 range(n) loop
11:37:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:37:52
start mi0 range(n) 2loop
11:37:52
finish mi0 range(n) 2loop
11:37:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:37:52
start mi1 range(p) 1 loop
11:37:52
finish mi1 range(p) 1 loop
11:37:52
start mi1 range(p) 2 loop
11:37:52
finish mi1 range(p) 2 loop
11:37:52
start mi1 range(NT) loop
11:37:52
finish mi1 range(NT) loop
11:37:52
start mi1 range(n) loop
11:37:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:37:52
start mi1 range(n) 2loop
11:37:52
finish mi1 range(n) 2loop
11:37:52
start mi2
11:37:52
start mi2 range(p) 1 loop
11:37:52
finish mi2 range(p) 1 loop
11:37:52
start mi2 range(p) 2 loop
11:37:52
finish mi2 range(p) 2 loop
11:37:52
start mi2 range(NT) loop
11:37:53
finish mi2 range(NT) loop
11:37:53
start mi2 range(n) loop
11:37:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:37:53
start mi2 range(n) 2loop
11:37:53
finish mi2 range(n) 2loop
11:37:53
start mi3
11:37:53
start mi3 range(p) 1 loop
11:37:53
finish mi3 range(p) 1 loop
11:37:53
start mi3 range(p) 2 loop
11:37:53
finish mi3 range(p) 2 loop
11:37:53
start mi3 range(NT) loop
11:37:53
finish mi3 range(NT) loop
11:37:53
start mi3 range(n) loop
11:37:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:37:53
start mi3 range(n) 2loop
11:37:53
finish mi3 range(n) 2loop
11:37:53
[[-2.30804915]]
end mi3 loop
11:37:53
estep
11:37:53
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:38:10
start ppi1
11:38:10
start mi0
11:38:10
start mi0 range(p) 1 loop
11:38:10
finish mi0 range(p) 1 loop
11:38:10
start mi0 range(p) 2 loop
11:38:10
finish mi0 range(p) 2 loop
11:38:10
start mi0 range(NT) loop
11:38:10
finish mi0 range(NT) loop
11:38:10
start mi0 range(n) loop
11:38:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:38:10
start mi0 range(n) 2loop
11:38:10
finish mi0 range(n) 2loop
11:38:11
start mi1
11:38:11
start mi1 range(p) 1 loop
11:38:11
finish mi1 range(p) 1 loop
11:38:11
start mi1 range(p) 2 loop
11:38:11
finish mi1 range(p) 2 loop
11:38:11
start mi1 range(NT) loop
11:38:11
finish mi1 range(NT) loop
11:38:11
start mi1 range(n) loop
11:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:38:11
start mi1 range(n) 2loop
11:38:11
finish mi1 range(n) 2loop
11:38:11
start mi2
11:38:11
start mi2 range(p) 1 loop
11:38:11
finish mi2 range(p) 1 loop
11:38:11
start mi2 range(p) 2 loop
11:38:11
finish mi2 range(p) 2 loop
11:38:11
start mi2 range(NT) loop
11:38:11
finish mi2 range(NT) loop
11:38:11
start mi2 range(n) loop
11:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:38:11
start mi2 range(n) 2loop
11:38:11
finish mi2 range(n) 2loop
11:38:11
start mi3
11:38:11
start mi3 range(p) 1 loop
11:38:11
finish mi3 range(p) 1 loop
11:38:11
start mi3 range(p) 2 loop
11:38:11
finish mi3 range(p) 2 loop
11:38:11
start mi3 range(NT) loop
11:38:11
finish mi3 range(NT) loop
11:38:11
start mi3 range(n) loop
11:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:38:11
start mi3 range(n) 2loop
11:38:11
finish mi3 range(n) 2loop
11:38:11
[[-2.30804915]]
end mi3 loop
11:38:11
estep
11:38:11
end estep
11:38:29
end pa11:38:29
goodness of fit correlation [0.02018632]
start cluster 11:38:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36716 instead
  warnings.warn(
1
parallel submitted
11:38:53
parallel finished
11:42:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:42:16
start mi0
11:42:16
start mi0 range(p) 1 loop
11:42:16
finish mi0 range(p) 1 loop
11:42:16
start mi0 range(p) 2 loop
11:42:16
finish mi0 range(p) 2 loop
11:42:16
start mi0 range(NT) loop
11:42:16
finish mi0 range(NT) loop
11:42:16
start mi0 range(n) loop
11:42:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:42:16
start mi0 range(n) 2loop
11:42:16
finish mi0 range(n) 2loop
11:42:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:42:16
start mi1 range(p) 1 loop
11:42:16
finish mi1 range(p) 1 loop
11:42:16
start mi1 range(p) 2 loop
11:42:16
finish mi1 range(p) 2 loop
11:42:16
start mi1 range(NT) loop
11:42:16
finish mi1 range(NT) loop
11:42:16
start mi1 range(n) loop
11:42:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:42:17
start mi1 range(n) 2loop
11:42:17
finish mi1 range(n) 2loop
11:42:17
start mi2
11:42:17
start mi2 range(p) 1 loop
11:42:17
finish mi2 range(p) 1 loop
11:42:17
start mi2 range(p) 2 loop
11:42:17
finish mi2 range(p) 2 loop
11:42:17
start mi2 range(NT) loop
11:42:17
finish mi2 range(NT) loop
11:42:17
start mi2 range(n) loop
11:42:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:42:17
start mi2 range(n) 2loop
11:42:17
finish mi2 range(n) 2loop
11:42:17
start mi3
11:42:17
start mi3 range(p) 1 loop
11:42:17
finish mi3 range(p) 1 loop
11:42:17
start mi3 range(p) 2 loop
11:42:17
finish mi3 range(p) 2 loop
11:42:17
start mi3 range(NT) loop
11:42:17
finish mi3 range(NT) loop
11:42:17
start mi3 range(n) loop
11:42:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:42:17
start mi3 range(n) 2loop
11:42:17
finish mi3 range(n) 2loop
11:42:17
[[-2.33097361]]
end mi3 loop
11:42:17
estep
11:42:17
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:42:35
start ppi1
11:42:35
start mi0
11:42:35
start mi0 range(p) 1 loop
11:42:35
finish mi0 range(p) 1 loop
11:42:35
start mi0 range(p) 2 loop
11:42:35
finish mi0 range(p) 2 loop
11:42:35
start mi0 range(NT) loop
11:42:35
finish mi0 range(NT) loop
11:42:35
start mi0 range(n) loop
11:42:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:42:36
start mi0 range(n) 2loop
11:42:36
finish mi0 range(n) 2loop
11:42:36
start mi1
11:42:36
start mi1 range(p) 1 loop
11:42:36
finish mi1 range(p) 1 loop
11:42:36
start mi1 range(p) 2 loop
11:42:36
finish mi1 range(p) 2 loop
11:42:36
start mi1 range(NT) loop
11:42:36
finish mi1 range(NT) loop
11:42:36
start mi1 range(n) loop
11:42:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:42:36
start mi1 range(n) 2loop
11:42:36
finish mi1 range(n) 2loop
11:42:36
start mi2
11:42:36
start mi2 range(p) 1 loop
11:42:36
finish mi2 range(p) 1 loop
11:42:36
start mi2 range(p) 2 loop
11:42:36
finish mi2 range(p) 2 loop
11:42:36
start mi2 range(NT) loop
11:42:36
finish mi2 range(NT) loop
11:42:36
start mi2 range(n) loop
11:42:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:42:36
start mi2 range(n) 2loop
11:42:36
finish mi2 range(n) 2loop
11:42:36
start mi3
11:42:36
start mi3 range(p) 1 loop
11:42:36
finish mi3 range(p) 1 loop
11:42:36
start mi3 range(p) 2 loop
11:42:36
finish mi3 range(p) 2 loop
11:42:36
start mi3 range(NT) loop
11:42:36
finish mi3 range(NT) loop
11:42:36
start mi3 range(n) loop
11:42:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:42:36
start mi3 range(n) 2loop
11:42:36
finish mi3 range(n) 2loop
11:42:36
[[-2.39346582]]
end mi3 loop
11:42:36
estep
11:42:36
end estep
11:42:54
end pa11:42:54
goodness of fit correlation [0.18411524]
start cluster 11:42:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42728 instead
  warnings.warn(
2
parallel submitted
11:43:16
parallel finished
11:47:36
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:47:47
start mi0
11:47:47
start mi0 range(p) 1 loop
11:47:47
finish mi0 range(p) 1 loop
11:47:47
start mi0 range(p) 2 loop
11:47:47
finish mi0 range(p) 2 loop
11:47:47
start mi0 range(NT) loop
11:47:47
finish mi0 range(NT) loop
11:47:47
start mi0 range(n) loop
11:47:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:47:47
start mi0 range(n) 2loop
11:47:47
finish mi0 range(n) 2loop
11:47:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:47:47
start mi1 range(p) 1 loop
11:47:47
finish mi1 range(p) 1 loop
11:47:47
start mi1 range(p) 2 loop
11:47:47
finish mi1 range(p) 2 loop
11:47:47
start mi1 range(NT) loop
11:47:47
finish mi1 range(NT) loop
11:47:47
start mi1 range(n) loop
11:47:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:47:48
start mi1 range(n) 2loop
11:47:48
finish mi1 range(n) 2loop
11:47:48
start mi2
11:47:48
start mi2 range(p) 1 loop
11:47:48
finish mi2 range(p) 1 loop
11:47:48
start mi2 range(p) 2 loop
11:47:48
finish mi2 range(p) 2 loop
11:47:48
start mi2 range(NT) loop
11:47:48
finish mi2 range(NT) loop
11:47:48
start mi2 range(n) loop
11:47:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:47:48
start mi2 range(n) 2loop
11:47:48
finish mi2 range(n) 2loop
11:47:48
start mi3
11:47:48
start mi3 range(p) 1 loop
11:47:48
finish mi3 range(p) 1 loop
11:47:48
start mi3 range(p) 2 loop
11:47:48
finish mi3 range(p) 2 loop
11:47:48
start mi3 range(NT) loop
11:47:48
finish mi3 range(NT) loop
11:47:48
start mi3 range(n) loop
11:47:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:47:48
start mi3 range(n) 2loop
11:47:48
finish mi3 range(n) 2loop
11:47:48
[[-2.42585134]]
end mi3 loop
11:47:48
estep
11:47:48
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:48:05
start ppi1
11:48:05
start mi0
11:48:05
start mi0 range(p) 1 loop
11:48:05
finish mi0 range(p) 1 loop
11:48:05
start mi0 range(p) 2 loop
11:48:05
finish mi0 range(p) 2 loop
11:48:05
start mi0 range(NT) loop
11:48:05
finish mi0 range(NT) loop
11:48:05
start mi0 range(n) loop
11:48:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:48:05
start mi0 range(n) 2loop
11:48:05
finish mi0 range(n) 2loop
11:48:05
start mi1
11:48:05
start mi1 range(p) 1 loop
11:48:05
finish mi1 range(p) 1 loop
11:48:05
start mi1 range(p) 2 loop
11:48:05
finish mi1 range(p) 2 loop
11:48:05
start mi1 range(NT) loop
11:48:05
finish mi1 range(NT) loop
11:48:05
start mi1 range(n) loop
11:48:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:48:05
start mi1 range(n) 2loop
11:48:05
finish mi1 range(n) 2loop
11:48:05
start mi2
11:48:05
start mi2 range(p) 1 loop
11:48:05
finish mi2 range(p) 1 loop
11:48:05
start mi2 range(p) 2 loop
11:48:05
finish mi2 range(p) 2 loop
11:48:05
start mi2 range(NT) loop
11:48:05
finish mi2 range(NT) loop
11:48:05
start mi2 range(n) loop
11:48:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:48:05
start mi2 range(n) 2loop
11:48:05
finish mi2 range(n) 2loop
11:48:06
start mi3
11:48:06
start mi3 range(p) 1 loop
11:48:06
finish mi3 range(p) 1 loop
11:48:06
start mi3 range(p) 2 loop
11:48:06
finish mi3 range(p) 2 loop
11:48:06
start mi3 range(NT) loop
11:48:06
finish mi3 range(NT) loop
11:48:06
start mi3 range(n) loop
11:48:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:48:06
start mi3 range(n) 2loop
11:48:06
finish mi3 range(n) 2loop
11:48:06
[[-2.48834339]]
end mi3 loop
11:48:06
estep
11:48:06
end estep
11:48:22
end pa11:48:22
goodness of fit correlation [0.23856345]
start cluster 11:48:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41780 instead
  warnings.warn(
3
parallel submitted
11:48:46
parallel finished
11:53:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:53:23
start mi0
11:53:23
start mi0 range(p) 1 loop
11:53:23
finish mi0 range(p) 1 loop
11:53:23
start mi0 range(p) 2 loop
11:53:23
finish mi0 range(p) 2 loop
11:53:23
start mi0 range(NT) loop
11:53:24
finish mi0 range(NT) loop
11:53:24
start mi0 range(n) loop
11:53:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:53:24
start mi0 range(n) 2loop
11:53:24
finish mi0 range(n) 2loop
11:53:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:53:24
start mi1 range(p) 1 loop
11:53:24
finish mi1 range(p) 1 loop
11:53:24
start mi1 range(p) 2 loop
11:53:24
finish mi1 range(p) 2 loop
11:53:24
start mi1 range(NT) loop
11:53:24
finish mi1 range(NT) loop
11:53:24
start mi1 range(n) loop
11:53:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:53:24
start mi1 range(n) 2loop
11:53:24
finish mi1 range(n) 2loop
11:53:24
start mi2
11:53:24
start mi2 range(p) 1 loop
11:53:24
finish mi2 range(p) 1 loop
11:53:24
start mi2 range(p) 2 loop
11:53:24
finish mi2 range(p) 2 loop
11:53:24
start mi2 range(NT) loop
11:53:24
finish mi2 range(NT) loop
11:53:24
start mi2 range(n) loop
11:53:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:53:24
start mi2 range(n) 2loop
11:53:24
finish mi2 range(n) 2loop
11:53:24
start mi3
11:53:24
start mi3 range(p) 1 loop
11:53:24
finish mi3 range(p) 1 loop
11:53:24
start mi3 range(p) 2 loop
11:53:24
finish mi3 range(p) 2 loop
11:53:24
start mi3 range(NT) loop
11:53:24
finish mi3 range(NT) loop
11:53:24
start mi3 range(n) loop
11:53:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:53:24
start mi3 range(n) 2loop
11:53:24
finish mi3 range(n) 2loop
11:53:25
[[-2.4162768]]
end mi3 loop
11:53:25
estep
11:53:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:53:41
start ppi1
11:53:41
start mi0
11:53:41
start mi0 range(p) 1 loop
11:53:41
finish mi0 range(p) 1 loop
11:53:41
start mi0 range(p) 2 loop
11:53:41
finish mi0 range(p) 2 loop
11:53:41
start mi0 range(NT) loop
11:53:41
finish mi0 range(NT) loop
11:53:41
start mi0 range(n) loop
11:53:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:53:41
start mi0 range(n) 2loop
11:53:41
finish mi0 range(n) 2loop
11:53:41
start mi1
11:53:41
start mi1 range(p) 1 loop
11:53:41
finish mi1 range(p) 1 loop
11:53:41
start mi1 range(p) 2 loop
11:53:41
finish mi1 range(p) 2 loop
11:53:41
start mi1 range(NT) loop
11:53:41
finish mi1 range(NT) loop
11:53:41
start mi1 range(n) loop
11:53:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:53:41
start mi1 range(n) 2loop
11:53:41
finish mi1 range(n) 2loop
11:53:41
start mi2
11:53:41
start mi2 range(p) 1 loop
11:53:41
finish mi2 range(p) 1 loop
11:53:41
start mi2 range(p) 2 loop
11:53:41
finish mi2 range(p) 2 loop
11:53:41
start mi2 range(NT) loop
11:53:41
finish mi2 range(NT) loop
11:53:41
start mi2 range(n) loop
11:53:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:53:41
start mi2 range(n) 2loop
11:53:41
finish mi2 range(n) 2loop
11:53:41
start mi3
11:53:41
start mi3 range(p) 1 loop
11:53:41
finish mi3 range(p) 1 loop
11:53:41
start mi3 range(p) 2 loop
11:53:41
finish mi3 range(p) 2 loop
11:53:41
start mi3 range(NT) loop
11:53:41
finish mi3 range(NT) loop
11:53:41
start mi3 range(n) loop
11:53:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:53:42
start mi3 range(n) 2loop
11:53:42
finish mi3 range(n) 2loop
11:53:42
[[-2.47876885]]
end mi3 loop
11:53:42
estep
11:53:42
end estep
11:53:59
end pa11:53:59
goodness of fit correlation [0.26539988]
start cluster 11:53:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36458 instead
  warnings.warn(
4
parallel submitted
11:54:22
parallel finished
11:57:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:57:34
start mi0
11:57:34
start mi0 range(p) 1 loop
11:57:34
finish mi0 range(p) 1 loop
11:57:34
start mi0 range(p) 2 loop
11:57:34
finish mi0 range(p) 2 loop
11:57:34
start mi0 range(NT) loop
11:57:34
finish mi0 range(NT) loop
11:57:34
start mi0 range(n) loop
11:57:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:57:34
start mi0 range(n) 2loop
11:57:34
finish mi0 range(n) 2loop
11:57:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:57:34
start mi1 range(p) 1 loop
11:57:34
finish mi1 range(p) 1 loop
11:57:34
start mi1 range(p) 2 loop
11:57:34
finish mi1 range(p) 2 loop
11:57:34
start mi1 range(NT) loop
11:57:34
finish mi1 range(NT) loop
11:57:34
start mi1 range(n) loop
11:57:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:57:34
start mi1 range(n) 2loop
11:57:34
finish mi1 range(n) 2loop
11:57:34
start mi2
11:57:34
start mi2 range(p) 1 loop
11:57:34
finish mi2 range(p) 1 loop
11:57:34
start mi2 range(p) 2 loop
11:57:34
finish mi2 range(p) 2 loop
11:57:34
start mi2 range(NT) loop
11:57:34
finish mi2 range(NT) loop
11:57:34
start mi2 range(n) loop
11:57:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:57:34
start mi2 range(n) 2loop
11:57:34
finish mi2 range(n) 2loop
11:57:34
start mi3
11:57:34
start mi3 range(p) 1 loop
11:57:34
finish mi3 range(p) 1 loop
11:57:34
start mi3 range(p) 2 loop
11:57:34
finish mi3 range(p) 2 loop
11:57:34
start mi3 range(NT) loop
11:57:35
finish mi3 range(NT) loop
11:57:35
start mi3 range(n) loop
11:57:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:57:35
start mi3 range(n) 2loop
11:57:35
finish mi3 range(n) 2loop
11:57:35
[[-2.48981503]]
end mi3 loop
11:57:35
estep
11:57:35
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:57:51
start ppi1
11:57:51
start mi0
11:57:51
start mi0 range(p) 1 loop
11:57:51
finish mi0 range(p) 1 loop
11:57:51
start mi0 range(p) 2 loop
11:57:51
finish mi0 range(p) 2 loop
11:57:51
start mi0 range(NT) loop
11:57:51
finish mi0 range(NT) loop
11:57:51
start mi0 range(n) loop
11:57:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:57:51
start mi0 range(n) 2loop
11:57:51
finish mi0 range(n) 2loop
11:57:51
start mi1
11:57:51
start mi1 range(p) 1 loop
11:57:51
finish mi1 range(p) 1 loop
11:57:51
start mi1 range(p) 2 loop
11:57:51
finish mi1 range(p) 2 loop
11:57:51
start mi1 range(NT) loop
11:57:52
finish mi1 range(NT) loop
11:57:52
start mi1 range(n) loop
11:57:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:57:52
start mi1 range(n) 2loop
11:57:52
finish mi1 range(n) 2loop
11:57:52
start mi2
11:57:52
start mi2 range(p) 1 loop
11:57:52
finish mi2 range(p) 1 loop
11:57:52
start mi2 range(p) 2 loop
11:57:52
finish mi2 range(p) 2 loop
11:57:52
start mi2 range(NT) loop
11:57:52
finish mi2 range(NT) loop
11:57:52
start mi2 range(n) loop
11:57:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:57:52
start mi2 range(n) 2loop
11:57:52
finish mi2 range(n) 2loop
11:57:52
[[-2.55228543]]
end mi2 loop
11:57:52
estep
11:57:52
end estep
11:58:10
end pa11:58:10
goodness of fit correlation [0.21818257]
start cluster 11:58:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33897 instead
  warnings.warn(
5
parallel submitted
11:58:32
parallel finished
12:01:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:02:07
start mi0
12:02:07
start mi0 range(p) 1 loop
12:02:07
finish mi0 range(p) 1 loop
12:02:07
start mi0 range(p) 2 loop
12:02:07
finish mi0 range(p) 2 loop
12:02:07
start mi0 range(NT) loop
12:02:08
finish mi0 range(NT) loop
12:02:08
start mi0 range(n) loop
12:02:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:02:08
start mi0 range(n) 2loop
12:02:08
finish mi0 range(n) 2loop
12:02:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:02:08
start mi1 range(p) 1 loop
12:02:08
finish mi1 range(p) 1 loop
12:02:08
start mi1 range(p) 2 loop
12:02:08
finish mi1 range(p) 2 loop
12:02:08
start mi1 range(NT) loop
12:02:08
finish mi1 range(NT) loop
12:02:08
start mi1 range(n) loop
12:02:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:02:08
start mi1 range(n) 2loop
12:02:08
finish mi1 range(n) 2loop
12:02:08
start mi2
12:02:08
start mi2 range(p) 1 loop
12:02:08
finish mi2 range(p) 1 loop
12:02:08
start mi2 range(p) 2 loop
12:02:08
finish mi2 range(p) 2 loop
12:02:08
start mi2 range(NT) loop
12:02:08
finish mi2 range(NT) loop
12:02:08
start mi2 range(n) loop
12:02:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:02:08
start mi2 range(n) 2loop
12:02:08
finish mi2 range(n) 2loop
12:02:08
start mi3
12:02:08
start mi3 range(p) 1 loop
12:02:08
finish mi3 range(p) 1 loop
12:02:08
start mi3 range(p) 2 loop
12:02:08
finish mi3 range(p) 2 loop
12:02:08
start mi3 range(NT) loop
12:02:08
finish mi3 range(NT) loop
12:02:08
start mi3 range(n) loop
12:02:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:02:08
start mi3 range(n) 2loop
12:02:08
finish mi3 range(n) 2loop
12:02:09
[[-2.43771803]]
end mi3 loop
12:02:09
estep
12:02:09
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:02:25
start ppi1
12:02:25
start mi0
12:02:25
start mi0 range(p) 1 loop
12:02:25
finish mi0 range(p) 1 loop
12:02:25
start mi0 range(p) 2 loop
12:02:25
finish mi0 range(p) 2 loop
12:02:25
start mi0 range(NT) loop
12:02:25
finish mi0 range(NT) loop
12:02:25
start mi0 range(n) loop
12:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:02:25
start mi0 range(n) 2loop
12:02:25
finish mi0 range(n) 2loop
12:02:25
start mi1
12:02:25
start mi1 range(p) 1 loop
12:02:25
finish mi1 range(p) 1 loop
12:02:25
start mi1 range(p) 2 loop
12:02:25
finish mi1 range(p) 2 loop
12:02:25
start mi1 range(NT) loop
12:02:25
finish mi1 range(NT) loop
12:02:25
start mi1 range(n) loop
12:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:02:25
start mi1 range(n) 2loop
12:02:25
finish mi1 range(n) 2loop
12:02:25
start mi2
12:02:25
start mi2 range(p) 1 loop
12:02:25
finish mi2 range(p) 1 loop
12:02:25
start mi2 range(p) 2 loop
12:02:25
finish mi2 range(p) 2 loop
12:02:25
start mi2 range(NT) loop
12:02:25
finish mi2 range(NT) loop
12:02:25
start mi2 range(n) loop
12:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:02:26
start mi2 range(n) 2loop
12:02:26
finish mi2 range(n) 2loop
12:02:26
start mi3
12:02:26
start mi3 range(p) 1 loop
12:02:26
finish mi3 range(p) 1 loop
12:02:26
start mi3 range(p) 2 loop
12:02:26
finish mi3 range(p) 2 loop
12:02:26
start mi3 range(NT) loop
12:02:26
finish mi3 range(NT) loop
12:02:26
start mi3 range(n) loop
12:02:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:02:26
start mi3 range(n) 2loop
12:02:26
finish mi3 range(n) 2loop
12:02:26
[[-2.50021007]]
end mi3 loop
12:02:26
estep
12:02:26
end estep
12:02:43
end pa12:02:43
goodness of fit correlation [0.15884536]
start cluster 12:02:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44082 instead
  warnings.warn(
6
parallel submitted
12:03:07
parallel finished
12:06:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:06:22
start mi0
12:06:22
start mi0 range(p) 1 loop
12:06:22
finish mi0 range(p) 1 loop
12:06:22
start mi0 range(p) 2 loop
12:06:22
finish mi0 range(p) 2 loop
12:06:22
start mi0 range(NT) loop
12:06:22
finish mi0 range(NT) loop
12:06:22
start mi0 range(n) loop
12:06:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:06:22
start mi0 range(n) 2loop
12:06:22
finish mi0 range(n) 2loop
12:06:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:06:22
start mi1 range(p) 1 loop
12:06:22
finish mi1 range(p) 1 loop
12:06:22
start mi1 range(p) 2 loop
12:06:22
finish mi1 range(p) 2 loop
12:06:22
start mi1 range(NT) loop
12:06:22
finish mi1 range(NT) loop
12:06:22
start mi1 range(n) loop
12:06:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:06:22
start mi1 range(n) 2loop
12:06:22
finish mi1 range(n) 2loop
12:06:22
start mi2
12:06:22
start mi2 range(p) 1 loop
12:06:22
finish mi2 range(p) 1 loop
12:06:22
start mi2 range(p) 2 loop
12:06:22
finish mi2 range(p) 2 loop
12:06:22
start mi2 range(NT) loop
12:06:22
finish mi2 range(NT) loop
12:06:22
start mi2 range(n) loop
12:06:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:06:23
start mi2 range(n) 2loop
12:06:23
finish mi2 range(n) 2loop
12:06:23
start mi3
12:06:23
start mi3 range(p) 1 loop
12:06:23
finish mi3 range(p) 1 loop
12:06:23
start mi3 range(p) 2 loop
12:06:23
finish mi3 range(p) 2 loop
12:06:23
start mi3 range(NT) loop
12:06:23
finish mi3 range(NT) loop
12:06:23
start mi3 range(n) loop
12:06:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:06:23
start mi3 range(n) 2loop
12:06:23
finish mi3 range(n) 2loop
12:06:23
[[-2.38950639]]
end mi3 loop
12:06:23
estep
12:06:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:06:40
start ppi1
12:06:40
start mi0
12:06:40
start mi0 range(p) 1 loop
12:06:40
finish mi0 range(p) 1 loop
12:06:40
start mi0 range(p) 2 loop
12:06:40
finish mi0 range(p) 2 loop
12:06:40
start mi0 range(NT) loop
12:06:40
finish mi0 range(NT) loop
12:06:40
start mi0 range(n) loop
12:06:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:06:40
start mi0 range(n) 2loop
12:06:40
finish mi0 range(n) 2loop
12:06:40
start mi1
12:06:40
start mi1 range(p) 1 loop
12:06:40
finish mi1 range(p) 1 loop
12:06:40
start mi1 range(p) 2 loop
12:06:40
finish mi1 range(p) 2 loop
12:06:40
start mi1 range(NT) loop
12:06:40
finish mi1 range(NT) loop
12:06:40
start mi1 range(n) loop
12:06:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:06:40
start mi1 range(n) 2loop
12:06:40
finish mi1 range(n) 2loop
12:06:40
start mi2
12:06:40
start mi2 range(p) 1 loop
12:06:40
finish mi2 range(p) 1 loop
12:06:40
start mi2 range(p) 2 loop
12:06:40
finish mi2 range(p) 2 loop
12:06:40
start mi2 range(NT) loop
12:06:40
finish mi2 range(NT) loop
12:06:40
start mi2 range(n) loop
12:06:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:06:40
start mi2 range(n) 2loop
12:06:40
finish mi2 range(n) 2loop
12:06:41
start mi3
12:06:41
start mi3 range(p) 1 loop
12:06:41
finish mi3 range(p) 1 loop
12:06:41
start mi3 range(p) 2 loop
12:06:41
finish mi3 range(p) 2 loop
12:06:41
start mi3 range(NT) loop
12:06:41
finish mi3 range(NT) loop
12:06:41
start mi3 range(n) loop
12:06:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:06:41
start mi3 range(n) 2loop
12:06:41
finish mi3 range(n) 2loop
12:06:41
[[-2.45199846]]
end mi3 loop
12:06:41
estep
12:06:41
end estep
12:06:57
end pa12:06:57
goodness of fit correlation [0.21241885]
start cluster 12:06:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37470 instead
  warnings.warn(
7
parallel submitted
12:07:26
parallel finished
12:10:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:10:41
start mi0
12:10:41
start mi0 range(p) 1 loop
12:10:41
finish mi0 range(p) 1 loop
12:10:41
start mi0 range(p) 2 loop
12:10:41
finish mi0 range(p) 2 loop
12:10:41
start mi0 range(NT) loop
12:10:41
finish mi0 range(NT) loop
12:10:41
start mi0 range(n) loop
12:10:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:10:42
start mi0 range(n) 2loop
12:10:42
finish mi0 range(n) 2loop
12:10:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:10:42
start mi1 range(p) 1 loop
12:10:42
finish mi1 range(p) 1 loop
12:10:42
start mi1 range(p) 2 loop
12:10:42
finish mi1 range(p) 2 loop
12:10:42
start mi1 range(NT) loop
12:10:42
finish mi1 range(NT) loop
12:10:42
start mi1 range(n) loop
12:10:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:10:42
start mi1 range(n) 2loop
12:10:42
finish mi1 range(n) 2loop
12:10:42
start mi2
12:10:42
start mi2 range(p) 1 loop
12:10:42
finish mi2 range(p) 1 loop
12:10:42
start mi2 range(p) 2 loop
12:10:42
finish mi2 range(p) 2 loop
12:10:42
start mi2 range(NT) loop
12:10:42
finish mi2 range(NT) loop
12:10:42
start mi2 range(n) loop
12:10:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:10:42
start mi2 range(n) 2loop
12:10:42
finish mi2 range(n) 2loop
12:10:42
start mi3
12:10:42
start mi3 range(p) 1 loop
12:10:42
finish mi3 range(p) 1 loop
12:10:42
start mi3 range(p) 2 loop
12:10:42
finish mi3 range(p) 2 loop
12:10:42
start mi3 range(NT) loop
12:10:42
finish mi3 range(NT) loop
12:10:42
start mi3 range(n) loop
12:10:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:10:42
start mi3 range(n) 2loop
12:10:42
finish mi3 range(n) 2loop
12:10:43
[[-2.49114453]]
end mi3 loop
12:10:43
estep
12:10:43
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:10:59
start ppi1
12:10:59
start mi0
12:10:59
start mi0 range(p) 1 loop
12:10:59
finish mi0 range(p) 1 loop
12:10:59
start mi0 range(p) 2 loop
12:10:59
finish mi0 range(p) 2 loop
12:10:59
start mi0 range(NT) loop
12:10:59
finish mi0 range(NT) loop
12:10:59
start mi0 range(n) loop
12:10:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:10:59
start mi0 range(n) 2loop
12:10:59
finish mi0 range(n) 2loop
12:10:59
start mi1
12:10:59
start mi1 range(p) 1 loop
12:10:59
finish mi1 range(p) 1 loop
12:10:59
start mi1 range(p) 2 loop
12:10:59
finish mi1 range(p) 2 loop
12:10:59
start mi1 range(NT) loop
12:10:59
finish mi1 range(NT) loop
12:10:59
start mi1 range(n) loop
12:10:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:10:59
start mi1 range(n) 2loop
12:10:59
finish mi1 range(n) 2loop
12:11:00
start mi2
12:11:00
start mi2 range(p) 1 loop
12:11:00
finish mi2 range(p) 1 loop
12:11:00
start mi2 range(p) 2 loop
12:11:00
finish mi2 range(p) 2 loop
12:11:00
start mi2 range(NT) loop
12:11:00
finish mi2 range(NT) loop
12:11:00
start mi2 range(n) loop
12:11:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:11:00
start mi2 range(n) 2loop
12:11:00
finish mi2 range(n) 2loop
12:11:00
[[-2.55361547]]
end mi2 loop
12:11:00
estep
12:11:00
end estep
12:11:16
end pa12:11:16
goodness of fit correlation [0.3026014]
start cluster 12:11:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45523 instead
  warnings.warn(
8
parallel submitted
12:11:37
parallel finished
12:19:05
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:19:16
start mi0
12:19:16
start mi0 range(p) 1 loop
12:19:16
finish mi0 range(p) 1 loop
12:19:16
start mi0 range(p) 2 loop
12:19:16
finish mi0 range(p) 2 loop
12:19:16
start mi0 range(NT) loop
12:19:16
finish mi0 range(NT) loop
12:19:16
start mi0 range(n) loop
12:19:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:19:16
start mi0 range(n) 2loop
12:19:16
finish mi0 range(n) 2loop
12:19:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:19:16
start mi1 range(p) 1 loop
12:19:16
finish mi1 range(p) 1 loop
12:19:16
start mi1 range(p) 2 loop
12:19:16
finish mi1 range(p) 2 loop
12:19:16
start mi1 range(NT) loop
12:19:16
finish mi1 range(NT) loop
12:19:16
start mi1 range(n) loop
12:19:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:19:17
start mi1 range(n) 2loop
12:19:17
finish mi1 range(n) 2loop
12:19:17
start mi2
12:19:17
start mi2 range(p) 1 loop
12:19:17
finish mi2 range(p) 1 loop
12:19:17
start mi2 range(p) 2 loop
12:19:17
finish mi2 range(p) 2 loop
12:19:17
start mi2 range(NT) loop
12:19:17
finish mi2 range(NT) loop
12:19:17
start mi2 range(n) loop
12:19:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:19:17
start mi2 range(n) 2loop
12:19:17
finish mi2 range(n) 2loop
12:19:17
start mi3
12:19:17
start mi3 range(p) 1 loop
12:19:17
finish mi3 range(p) 1 loop
12:19:17
start mi3 range(p) 2 loop
12:19:17
finish mi3 range(p) 2 loop
12:19:17
start mi3 range(NT) loop
12:19:17
finish mi3 range(NT) loop
12:19:17
start mi3 range(n) loop
12:19:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:19:17
start mi3 range(n) 2loop
12:19:17
finish mi3 range(n) 2loop
12:19:17
[[-2.44297275]]
end mi3 loop
12:19:17
estep
12:19:17
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:19:34
start ppi1
12:19:34
start mi0
12:19:34
start mi0 range(p) 1 loop
12:19:34
finish mi0 range(p) 1 loop
12:19:34
start mi0 range(p) 2 loop
12:19:34
finish mi0 range(p) 2 loop
12:19:34
start mi0 range(NT) loop
12:19:34
finish mi0 range(NT) loop
12:19:34
start mi0 range(n) loop
12:19:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:19:34
start mi0 range(n) 2loop
12:19:34
finish mi0 range(n) 2loop
12:19:34
start mi1
12:19:34
start mi1 range(p) 1 loop
12:19:34
finish mi1 range(p) 1 loop
12:19:34
start mi1 range(p) 2 loop
12:19:34
finish mi1 range(p) 2 loop
12:19:34
start mi1 range(NT) loop
12:19:34
finish mi1 range(NT) loop
12:19:34
start mi1 range(n) loop
12:19:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:19:34
start mi1 range(n) 2loop
12:19:34
finish mi1 range(n) 2loop
12:19:34
start mi2
12:19:34
start mi2 range(p) 1 loop
12:19:34
finish mi2 range(p) 1 loop
12:19:34
start mi2 range(p) 2 loop
12:19:34
finish mi2 range(p) 2 loop
12:19:34
start mi2 range(NT) loop
12:19:34
finish mi2 range(NT) loop
12:19:34
start mi2 range(n) loop
12:19:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:19:34
start mi2 range(n) 2loop
12:19:34
finish mi2 range(n) 2loop
12:19:34
[[-2.50541447]]
end mi2 loop
12:19:34
estep
12:19:34
end estep
12:19:51
end pa12:19:51
goodness of fit correlation [0.21822411]
start cluster 12:19:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40761 instead
  warnings.warn(
9
parallel submitted
12:20:12
parallel finished
12:23:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:23:51
start mi0
12:23:51
start mi0 range(p) 1 loop
12:23:51
finish mi0 range(p) 1 loop
12:23:51
start mi0 range(p) 2 loop
12:23:51
finish mi0 range(p) 2 loop
12:23:51
start mi0 range(NT) loop
12:23:51
finish mi0 range(NT) loop
12:23:51
start mi0 range(n) loop
12:23:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:23:51
start mi0 range(n) 2loop
12:23:51
finish mi0 range(n) 2loop
12:23:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:23:51
start mi1 range(p) 1 loop
12:23:51
finish mi1 range(p) 1 loop
12:23:51
start mi1 range(p) 2 loop
12:23:51
finish mi1 range(p) 2 loop
12:23:51
start mi1 range(NT) loop
12:23:51
finish mi1 range(NT) loop
12:23:51
start mi1 range(n) loop
12:23:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:23:51
start mi1 range(n) 2loop
12:23:51
finish mi1 range(n) 2loop
12:23:51
start mi2
12:23:51
start mi2 range(p) 1 loop
12:23:51
finish mi2 range(p) 1 loop
12:23:51
start mi2 range(p) 2 loop
12:23:51
finish mi2 range(p) 2 loop
12:23:51
start mi2 range(NT) loop
12:23:52
finish mi2 range(NT) loop
12:23:52
start mi2 range(n) loop
12:23:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:23:52
start mi2 range(n) 2loop
12:23:52
finish mi2 range(n) 2loop
12:23:52
start mi3
12:23:52
start mi3 range(p) 1 loop
12:23:52
finish mi3 range(p) 1 loop
12:23:52
start mi3 range(p) 2 loop
12:23:52
finish mi3 range(p) 2 loop
12:23:52
start mi3 range(NT) loop
12:23:52
finish mi3 range(NT) loop
12:23:52
start mi3 range(n) loop
12:23:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:23:52
start mi3 range(n) 2loop
12:23:52
finish mi3 range(n) 2loop
12:23:52
[[-2.43758049]]
end mi3 loop
12:23:52
estep
12:23:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:24:10
start ppi1
12:24:10
start mi0
12:24:10
start mi0 range(p) 1 loop
12:24:10
finish mi0 range(p) 1 loop
12:24:10
start mi0 range(p) 2 loop
12:24:11
finish mi0 range(p) 2 loop
12:24:11
start mi0 range(NT) loop
12:24:11
finish mi0 range(NT) loop
12:24:11
start mi0 range(n) loop
12:24:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:24:11
start mi0 range(n) 2loop
12:24:11
finish mi0 range(n) 2loop
12:24:11
start mi1
12:24:11
start mi1 range(p) 1 loop
12:24:11
finish mi1 range(p) 1 loop
12:24:11
start mi1 range(p) 2 loop
12:24:11
finish mi1 range(p) 2 loop
12:24:11
start mi1 range(NT) loop
12:24:11
finish mi1 range(NT) loop
12:24:11
start mi1 range(n) loop
12:24:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:24:11
start mi1 range(n) 2loop
12:24:11
finish mi1 range(n) 2loop
12:24:11
start mi2
12:24:11
start mi2 range(p) 1 loop
12:24:11
finish mi2 range(p) 1 loop
12:24:11
start mi2 range(p) 2 loop
12:24:11
finish mi2 range(p) 2 loop
12:24:11
start mi2 range(NT) loop
12:24:11
finish mi2 range(NT) loop
12:24:11
start mi2 range(n) loop
12:24:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:24:11
start mi2 range(n) 2loop
12:24:11
finish mi2 range(n) 2loop
12:24:11
start mi3
12:24:11
start mi3 range(p) 1 loop
12:24:11
finish mi3 range(p) 1 loop
12:24:11
start mi3 range(p) 2 loop
12:24:11
finish mi3 range(p) 2 loop
12:24:11
start mi3 range(NT) loop
12:24:11
finish mi3 range(NT) loop
12:24:12
start mi3 range(n) loop
12:24:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:24:12
start mi3 range(n) 2loop
12:24:12
finish mi3 range(n) 2loop
12:24:12
[[-2.50007254]]
end mi3 loop
12:24:12
estep
12:24:12
end estep
12:24:30
end pa12:24:30
goodness of fit correlation [0.23989638]
start cluster 12:24:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39674 instead
  warnings.warn(
10
parallel submitted
12:24:53
parallel finished
12:26:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:27:09
start mi0
12:27:09
start mi0 range(p) 1 loop
12:27:09
finish mi0 range(p) 1 loop
12:27:09
start mi0 range(p) 2 loop
12:27:09
finish mi0 range(p) 2 loop
12:27:09
start mi0 range(NT) loop
12:27:09
finish mi0 range(NT) loop
12:27:09
start mi0 range(n) loop
12:27:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:27:09
start mi0 range(n) 2loop
12:27:09
finish mi0 range(n) 2loop
12:27:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:27:10
start mi1 range(p) 1 loop
12:27:10
finish mi1 range(p) 1 loop
12:27:10
start mi1 range(p) 2 loop
12:27:10
finish mi1 range(p) 2 loop
12:27:10
start mi1 range(NT) loop
12:27:10
finish mi1 range(NT) loop
12:27:10
start mi1 range(n) loop
12:27:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:27:10
start mi1 range(n) 2loop
12:27:10
finish mi1 range(n) 2loop
12:27:10
start mi2
12:27:10
start mi2 range(p) 1 loop
12:27:10
finish mi2 range(p) 1 loop
12:27:10
start mi2 range(p) 2 loop
12:27:10
finish mi2 range(p) 2 loop
12:27:10
start mi2 range(NT) loop
12:27:10
finish mi2 range(NT) loop
12:27:10
start mi2 range(n) loop
12:27:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:27:10
start mi2 range(n) 2loop
12:27:10
finish mi2 range(n) 2loop
12:27:10
start mi3
12:27:10
start mi3 range(p) 1 loop
12:27:10
finish mi3 range(p) 1 loop
12:27:10
start mi3 range(p) 2 loop
12:27:10
finish mi3 range(p) 2 loop
12:27:10
start mi3 range(NT) loop
12:27:10
finish mi3 range(NT) loop
12:27:10
start mi3 range(n) loop
12:27:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:27:10
start mi3 range(n) 2loop
12:27:10
finish mi3 range(n) 2loop
12:27:10
[[-2.45156448]]
end mi3 loop
12:27:10
estep
12:27:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:27:27
start ppi1
12:27:27
start mi0
12:27:27
start mi0 range(p) 1 loop
12:27:27
finish mi0 range(p) 1 loop
12:27:27
start mi0 range(p) 2 loop
12:27:27
finish mi0 range(p) 2 loop
12:27:27
start mi0 range(NT) loop
12:27:27
finish mi0 range(NT) loop
12:27:27
start mi0 range(n) loop
12:27:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:27:27
start mi0 range(n) 2loop
12:27:27
finish mi0 range(n) 2loop
12:27:27
start mi1
12:27:27
start mi1 range(p) 1 loop
12:27:27
finish mi1 range(p) 1 loop
12:27:27
start mi1 range(p) 2 loop
12:27:27
finish mi1 range(p) 2 loop
12:27:27
start mi1 range(NT) loop
12:27:27
finish mi1 range(NT) loop
12:27:27
start mi1 range(n) loop
12:27:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:27:27
start mi1 range(n) 2loop
12:27:27
finish mi1 range(n) 2loop
12:27:27
start mi2
12:27:27
start mi2 range(p) 1 loop
12:27:27
finish mi2 range(p) 1 loop
12:27:27
start mi2 range(p) 2 loop
12:27:27
finish mi2 range(p) 2 loop
12:27:27
start mi2 range(NT) loop
12:27:27
finish mi2 range(NT) loop
12:27:27
start mi2 range(n) loop
12:27:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:27:27
start mi2 range(n) 2loop
12:27:27
finish mi2 range(n) 2loop
12:27:28
[[-2.51401316]]
end mi2 loop
12:27:28
estep
12:27:28
end estep
12:27:45
end pa12:27:45
goodness of fit correlation [0.2382213]
start cluster 12:27:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37811 instead
  warnings.warn(
11
parallel submitted
12:28:09
parallel finished
12:31:32
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:31:43
start mi0
12:31:43
start mi0 range(p) 1 loop
12:31:43
finish mi0 range(p) 1 loop
12:31:43
start mi0 range(p) 2 loop
12:31:43
finish mi0 range(p) 2 loop
12:31:44
start mi0 range(NT) loop
12:31:44
finish mi0 range(NT) loop
12:31:44
start mi0 range(n) loop
12:31:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:31:44
start mi0 range(n) 2loop
12:31:44
finish mi0 range(n) 2loop
12:31:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:31:44
start mi1 range(p) 1 loop
12:31:44
finish mi1 range(p) 1 loop
12:31:44
start mi1 range(p) 2 loop
12:31:44
finish mi1 range(p) 2 loop
12:31:44
start mi1 range(NT) loop
12:31:44
finish mi1 range(NT) loop
12:31:44
start mi1 range(n) loop
12:31:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:31:44
start mi1 range(n) 2loop
12:31:44
finish mi1 range(n) 2loop
12:31:44
start mi2
12:31:44
start mi2 range(p) 1 loop
12:31:44
finish mi2 range(p) 1 loop
12:31:44
start mi2 range(p) 2 loop
12:31:44
finish mi2 range(p) 2 loop
12:31:44
start mi2 range(NT) loop
12:31:44
finish mi2 range(NT) loop
12:31:44
start mi2 range(n) loop
12:31:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:31:44
start mi2 range(n) 2loop
12:31:44
finish mi2 range(n) 2loop
12:31:44
start mi3
12:31:44
start mi3 range(p) 1 loop
12:31:44
finish mi3 range(p) 1 loop
12:31:44
start mi3 range(p) 2 loop
12:31:44
finish mi3 range(p) 2 loop
12:31:44
start mi3 range(NT) loop
12:31:44
finish mi3 range(NT) loop
12:31:44
start mi3 range(n) loop
12:31:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:31:45
start mi3 range(n) 2loop
12:31:45
finish mi3 range(n) 2loop
12:31:45
[[-2.44461532]]
end mi3 loop
12:31:45
estep
12:31:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:32:02
start ppi1
12:32:02
start mi0
12:32:02
start mi0 range(p) 1 loop
12:32:02
finish mi0 range(p) 1 loop
12:32:02
start mi0 range(p) 2 loop
12:32:02
finish mi0 range(p) 2 loop
12:32:02
start mi0 range(NT) loop
12:32:02
finish mi0 range(NT) loop
12:32:02
start mi0 range(n) loop
12:32:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:32:02
start mi0 range(n) 2loop
12:32:02
finish mi0 range(n) 2loop
12:32:02
start mi1
12:32:02
start mi1 range(p) 1 loop
12:32:02
finish mi1 range(p) 1 loop
12:32:02
start mi1 range(p) 2 loop
12:32:02
finish mi1 range(p) 2 loop
12:32:02
start mi1 range(NT) loop
12:32:02
finish mi1 range(NT) loop
12:32:02
start mi1 range(n) loop
12:32:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:32:02
start mi1 range(n) 2loop
12:32:02
finish mi1 range(n) 2loop
12:32:02
start mi2
12:32:02
start mi2 range(p) 1 loop
12:32:02
finish mi2 range(p) 1 loop
12:32:02
start mi2 range(p) 2 loop
12:32:02
finish mi2 range(p) 2 loop
12:32:02
start mi2 range(NT) loop
12:32:02
finish mi2 range(NT) loop
12:32:02
start mi2 range(n) loop
12:32:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:32:02
start mi2 range(n) 2loop
12:32:02
finish mi2 range(n) 2loop
12:32:02
[[-2.50705844]]
end mi2 loop
12:32:02
estep
12:32:02
end estep
12:32:21
end pa12:32:21
goodness of fit correlation [0.25332642]
start cluster 12:32:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35464 instead
  warnings.warn(
12
parallel submitted
12:32:45
parallel finished
12:36:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:36:12
start mi0
12:36:12
start mi0 range(p) 1 loop
12:36:12
finish mi0 range(p) 1 loop
12:36:12
start mi0 range(p) 2 loop
12:36:12
finish mi0 range(p) 2 loop
12:36:12
start mi0 range(NT) loop
12:36:12
finish mi0 range(NT) loop
12:36:12
start mi0 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:36:12
start mi0 range(n) 2loop
12:36:12
finish mi0 range(n) 2loop
12:36:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:36:12
start mi1 range(p) 1 loop
12:36:12
finish mi1 range(p) 1 loop
12:36:12
start mi1 range(p) 2 loop
12:36:12
finish mi1 range(p) 2 loop
12:36:12
start mi1 range(NT) loop
12:36:12
finish mi1 range(NT) loop
12:36:12
start mi1 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:36:12
start mi1 range(n) 2loop
12:36:12
finish mi1 range(n) 2loop
12:36:12
start mi2
12:36:12
start mi2 range(p) 1 loop
12:36:12
finish mi2 range(p) 1 loop
12:36:12
start mi2 range(p) 2 loop
12:36:12
finish mi2 range(p) 2 loop
12:36:12
start mi2 range(NT) loop
12:36:12
finish mi2 range(NT) loop
12:36:12
start mi2 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:36:12
start mi2 range(n) 2loop
12:36:12
finish mi2 range(n) 2loop
12:36:12
[[-2.54272947]]
end mi2 loop
12:36:12
estep
12:36:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:36:29
start ppi1
12:36:29
start mi0
12:36:29
start mi0 range(p) 1 loop
12:36:29
finish mi0 range(p) 1 loop
12:36:29
start mi0 range(p) 2 loop
12:36:29
finish mi0 range(p) 2 loop
12:36:29
start mi0 range(NT) loop
12:36:29
finish mi0 range(NT) loop
12:36:29
start mi0 range(n) loop
12:36:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:36:29
start mi0 range(n) 2loop
12:36:29
finish mi0 range(n) 2loop
12:36:29
start mi1
12:36:29
start mi1 range(p) 1 loop
12:36:29
finish mi1 range(p) 1 loop
12:36:29
start mi1 range(p) 2 loop
12:36:29
finish mi1 range(p) 2 loop
12:36:29
start mi1 range(NT) loop
12:36:29
finish mi1 range(NT) loop
12:36:30
start mi1 range(n) loop
12:36:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:36:30
start mi1 range(n) 2loop
12:36:30
finish mi1 range(n) 2loop
12:36:30
start mi2
12:36:30
start mi2 range(p) 1 loop
12:36:30
finish mi2 range(p) 1 loop
12:36:30
start mi2 range(p) 2 loop
12:36:30
finish mi2 range(p) 2 loop
12:36:30
start mi2 range(NT) loop
12:36:30
finish mi2 range(NT) loop
12:36:30
start mi2 range(n) loop
12:36:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:36:30
start mi2 range(n) 2loop
12:36:30
finish mi2 range(n) 2loop
12:36:30
[[-2.60523991]]
end mi2 loop
12:36:30
estep
12:36:30
end estep
12:36:48
end pa12:36:48
goodness of fit correlation [0.34732812]
start cluster 12:36:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37117 instead
  warnings.warn(
13
parallel submitted
12:37:13
parallel finished
12:40:26
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:40:39
start mi0
12:40:39
start mi0 range(p) 1 loop
12:40:39
finish mi0 range(p) 1 loop
12:40:39
start mi0 range(p) 2 loop
12:40:39
finish mi0 range(p) 2 loop
12:40:39
start mi0 range(NT) loop
12:40:39
finish mi0 range(NT) loop
12:40:39
start mi0 range(n) loop
12:40:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:40:39
start mi0 range(n) 2loop
12:40:39
finish mi0 range(n) 2loop
12:40:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:40:40
start mi1 range(p) 1 loop
12:40:40
finish mi1 range(p) 1 loop
12:40:40
start mi1 range(p) 2 loop
12:40:40
finish mi1 range(p) 2 loop
12:40:40
start mi1 range(NT) loop
12:40:40
finish mi1 range(NT) loop
12:40:40
start mi1 range(n) loop
12:40:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:40:40
start mi1 range(n) 2loop
12:40:40
finish mi1 range(n) 2loop
12:40:40
start mi2
12:40:40
start mi2 range(p) 1 loop
12:40:40
finish mi2 range(p) 1 loop
12:40:40
start mi2 range(p) 2 loop
12:40:40
finish mi2 range(p) 2 loop
12:40:40
start mi2 range(NT) loop
12:40:40
finish mi2 range(NT) loop
12:40:40
start mi2 range(n) loop
12:40:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:40:40
start mi2 range(n) 2loop
12:40:40
finish mi2 range(n) 2loop
12:40:40
[[-2.58498048]]
end mi2 loop
12:40:40
estep
12:40:40
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:40:57
start ppi1
12:40:57
start mi0
12:40:57
start mi0 range(p) 1 loop
12:40:57
finish mi0 range(p) 1 loop
12:40:57
start mi0 range(p) 2 loop
12:40:57
finish mi0 range(p) 2 loop
12:40:57
start mi0 range(NT) loop
12:40:57
finish mi0 range(NT) loop
12:40:57
start mi0 range(n) loop
12:40:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:40:57
start mi0 range(n) 2loop
12:40:57
finish mi0 range(n) 2loop
12:40:57
start mi1
12:40:57
start mi1 range(p) 1 loop
12:40:57
finish mi1 range(p) 1 loop
12:40:57
start mi1 range(p) 2 loop
12:40:57
finish mi1 range(p) 2 loop
12:40:57
start mi1 range(NT) loop
12:40:57
finish mi1 range(NT) loop
12:40:57
start mi1 range(n) loop
12:40:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:40:57
start mi1 range(n) 2loop
12:40:57
finish mi1 range(n) 2loop
12:40:57
start mi2
12:40:57
start mi2 range(p) 1 loop
12:40:57
finish mi2 range(p) 1 loop
12:40:57
start mi2 range(p) 2 loop
12:40:57
finish mi2 range(p) 2 loop
12:40:57
start mi2 range(NT) loop
12:40:57
finish mi2 range(NT) loop
12:40:57
start mi2 range(n) loop
12:40:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:40:58
start mi2 range(n) 2loop
12:40:58
finish mi2 range(n) 2loop
12:40:58
[[-2.64748103]]
end mi2 loop
12:40:58
estep
12:40:58
end estep
12:41:15
end pa12:41:15
goodness of fit correlation [0.2765688]
start cluster 12:41:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33763 instead
  warnings.warn(
14
parallel submitted
12:41:39
parallel finished
12:45:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:45:14
start mi0
12:45:14
start mi0 range(p) 1 loop
12:45:14
finish mi0 range(p) 1 loop
12:45:14
start mi0 range(p) 2 loop
12:45:14
finish mi0 range(p) 2 loop
12:45:14
start mi0 range(NT) loop
12:45:15
finish mi0 range(NT) loop
12:45:15
start mi0 range(n) loop
12:45:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:45:15
start mi0 range(n) 2loop
12:45:15
finish mi0 range(n) 2loop
12:45:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:45:15
start mi1 range(p) 1 loop
12:45:15
finish mi1 range(p) 1 loop
12:45:15
start mi1 range(p) 2 loop
12:45:15
finish mi1 range(p) 2 loop
12:45:15
start mi1 range(NT) loop
12:45:15
finish mi1 range(NT) loop
12:45:15
start mi1 range(n) loop
12:45:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:45:15
start mi1 range(n) 2loop
12:45:15
finish mi1 range(n) 2loop
12:45:15
start mi2
12:45:15
start mi2 range(p) 1 loop
12:45:15
finish mi2 range(p) 1 loop
12:45:15
start mi2 range(p) 2 loop
12:45:15
finish mi2 range(p) 2 loop
12:45:15
start mi2 range(NT) loop
12:45:15
finish mi2 range(NT) loop
12:45:15
start mi2 range(n) loop
12:45:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:45:15
start mi2 range(n) 2loop
12:45:15
finish mi2 range(n) 2loop
12:45:15
start mi3
12:45:15
start mi3 range(p) 1 loop
12:45:15
finish mi3 range(p) 1 loop
12:45:15
start mi3 range(p) 2 loop
12:45:15
finish mi3 range(p) 2 loop
12:45:15
start mi3 range(NT) loop
12:45:15
finish mi3 range(NT) loop
12:45:15
start mi3 range(n) loop
12:45:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:45:15
start mi3 range(n) 2loop
12:45:15
finish mi3 range(n) 2loop
12:45:16
[[-2.46676779]]
end mi3 loop
12:45:16
estep
12:45:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:45:32
start ppi1
12:45:32
start mi0
12:45:32
start mi0 range(p) 1 loop
12:45:32
finish mi0 range(p) 1 loop
12:45:32
start mi0 range(p) 2 loop
12:45:32
finish mi0 range(p) 2 loop
12:45:32
start mi0 range(NT) loop
12:45:32
finish mi0 range(NT) loop
12:45:32
start mi0 range(n) loop
12:45:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:45:32
start mi0 range(n) 2loop
12:45:32
finish mi0 range(n) 2loop
12:45:32
start mi1
12:45:32
start mi1 range(p) 1 loop
12:45:32
finish mi1 range(p) 1 loop
12:45:32
start mi1 range(p) 2 loop
12:45:32
finish mi1 range(p) 2 loop
12:45:32
start mi1 range(NT) loop
12:45:33
finish mi1 range(NT) loop
12:45:33
start mi1 range(n) loop
12:45:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:45:33
start mi1 range(n) 2loop
12:45:33
finish mi1 range(n) 2loop
12:45:33
start mi2
12:45:33
start mi2 range(p) 1 loop
12:45:33
finish mi2 range(p) 1 loop
12:45:33
start mi2 range(p) 2 loop
12:45:33
finish mi2 range(p) 2 loop
12:45:33
start mi2 range(NT) loop
12:45:33
finish mi2 range(NT) loop
12:45:33
start mi2 range(n) loop
12:45:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:45:33
start mi2 range(n) 2loop
12:45:33
finish mi2 range(n) 2loop
12:45:33
[[-2.52922671]]
end mi2 loop
12:45:33
estep
12:45:33
end estep
12:45:51
end pa12:45:51
goodness of fit correlation [0.18422832]
start cluster 12:45:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44966 instead
  warnings.warn(
15
parallel submitted
12:46:16
parallel finished
12:49:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:49:59
start mi0
12:49:59
start mi0 range(p) 1 loop
12:49:59
finish mi0 range(p) 1 loop
12:49:59
start mi0 range(p) 2 loop
12:49:59
finish mi0 range(p) 2 loop
12:49:59
start mi0 range(NT) loop
12:49:59
finish mi0 range(NT) loop
12:50:00
start mi0 range(n) loop
12:50:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:50:00
start mi0 range(n) 2loop
12:50:00
finish mi0 range(n) 2loop
12:50:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:50:00
start mi1 range(p) 1 loop
12:50:00
finish mi1 range(p) 1 loop
12:50:00
start mi1 range(p) 2 loop
12:50:00
finish mi1 range(p) 2 loop
12:50:00
start mi1 range(NT) loop
12:50:00
finish mi1 range(NT) loop
12:50:00
start mi1 range(n) loop
12:50:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:50:00
start mi1 range(n) 2loop
12:50:00
finish mi1 range(n) 2loop
12:50:00
start mi2
12:50:00
start mi2 range(p) 1 loop
12:50:00
finish mi2 range(p) 1 loop
12:50:00
start mi2 range(p) 2 loop
12:50:00
finish mi2 range(p) 2 loop
12:50:00
start mi2 range(NT) loop
12:50:00
finish mi2 range(NT) loop
12:50:00
start mi2 range(n) loop
12:50:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:50:00
start mi2 range(n) 2loop
12:50:00
finish mi2 range(n) 2loop
12:50:00
start mi3
12:50:00
start mi3 range(p) 1 loop
12:50:00
finish mi3 range(p) 1 loop
12:50:00
start mi3 range(p) 2 loop
12:50:00
finish mi3 range(p) 2 loop
12:50:00
start mi3 range(NT) loop
12:50:00
finish mi3 range(NT) loop
12:50:00
start mi3 range(n) loop
12:50:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:50:00
start mi3 range(n) 2loop
12:50:00
finish mi3 range(n) 2loop
12:50:01
[[-2.45582144]]
end mi3 loop
12:50:01
estep
12:50:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:50:18
start ppi1
12:50:18
start mi0
12:50:18
start mi0 range(p) 1 loop
12:50:18
finish mi0 range(p) 1 loop
12:50:18
start mi0 range(p) 2 loop
12:50:18
finish mi0 range(p) 2 loop
12:50:18
start mi0 range(NT) loop
12:50:18
finish mi0 range(NT) loop
12:50:18
start mi0 range(n) loop
12:50:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:50:18
start mi0 range(n) 2loop
12:50:18
finish mi0 range(n) 2loop
12:50:18
start mi1
12:50:18
start mi1 range(p) 1 loop
12:50:18
finish mi1 range(p) 1 loop
12:50:18
start mi1 range(p) 2 loop
12:50:18
finish mi1 range(p) 2 loop
12:50:18
start mi1 range(NT) loop
12:50:18
finish mi1 range(NT) loop
12:50:18
start mi1 range(n) loop
12:50:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:50:18
start mi1 range(n) 2loop
12:50:18
finish mi1 range(n) 2loop
12:50:18
start mi2
12:50:18
start mi2 range(p) 1 loop
12:50:18
finish mi2 range(p) 1 loop
12:50:18
start mi2 range(p) 2 loop
12:50:18
finish mi2 range(p) 2 loop
12:50:18
start mi2 range(NT) loop
12:50:18
finish mi2 range(NT) loop
12:50:18
start mi2 range(n) loop
12:50:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:50:19
start mi2 range(n) 2loop
12:50:19
finish mi2 range(n) 2loop
12:50:19
[[-2.51827324]]
end mi2 loop
12:50:19
estep
12:50:19
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
end estep
12:50:37
end pa12:50:37
goodness of fit correlation [0.33815169]
start cluster 12:50:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45609 instead
  warnings.warn(
16
parallel submitted
12:51:02
parallel finished
12:54:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:54:32
start mi0
12:54:32
start mi0 range(p) 1 loop
12:54:32
finish mi0 range(p) 1 loop
12:54:32
start mi0 range(p) 2 loop
12:54:32
finish mi0 range(p) 2 loop
12:54:32
start mi0 range(NT) loop
12:54:32
finish mi0 range(NT) loop
12:54:32
start mi0 range(n) loop
12:54:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:54:32
start mi0 range(n) 2loop
12:54:32
finish mi0 range(n) 2loop
12:54:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:54:32
start mi1 range(p) 1 loop
12:54:32
finish mi1 range(p) 1 loop
12:54:32
start mi1 range(p) 2 loop
12:54:32
finish mi1 range(p) 2 loop
12:54:32
start mi1 range(NT) loop
12:54:33
finish mi1 range(NT) loop
12:54:33
start mi1 range(n) loop
12:54:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:54:33
start mi1 range(n) 2loop
12:54:33
finish mi1 range(n) 2loop
12:54:33
start mi2
12:54:33
start mi2 range(p) 1 loop
12:54:33
finish mi2 range(p) 1 loop
12:54:33
start mi2 range(p) 2 loop
12:54:33
finish mi2 range(p) 2 loop
12:54:33
start mi2 range(NT) loop
12:54:33
finish mi2 range(NT) loop
12:54:33
start mi2 range(n) loop
12:54:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:54:33
start mi2 range(n) 2loop
12:54:33
finish mi2 range(n) 2loop
12:54:33
[[-2.51877162]]
end mi2 loop
12:54:33
estep
12:54:33
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:54:50
start ppi1
12:54:50
start mi0
12:54:50
start mi0 range(p) 1 loop
12:54:50
finish mi0 range(p) 1 loop
12:54:50
start mi0 range(p) 2 loop
12:54:50
finish mi0 range(p) 2 loop
12:54:50
start mi0 range(NT) loop
12:54:50
finish mi0 range(NT) loop
12:54:50
start mi0 range(n) loop
12:54:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:54:50
start mi0 range(n) 2loop
12:54:50
finish mi0 range(n) 2loop
12:54:50
start mi1
12:54:50
start mi1 range(p) 1 loop
12:54:50
finish mi1 range(p) 1 loop
12:54:50
start mi1 range(p) 2 loop
12:54:50
finish mi1 range(p) 2 loop
12:54:50
start mi1 range(NT) loop
12:54:50
finish mi1 range(NT) loop
12:54:50
start mi1 range(n) loop
12:54:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:54:50
start mi1 range(n) 2loop
12:54:50
finish mi1 range(n) 2loop
12:54:50
start mi2
12:54:50
start mi2 range(p) 1 loop
12:54:50
finish mi2 range(p) 1 loop
12:54:50
start mi2 range(p) 2 loop
12:54:50
finish mi2 range(p) 2 loop
12:54:50
start mi2 range(NT) loop
12:54:50
finish mi2 range(NT) loop
12:54:50
start mi2 range(n) loop
12:54:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:54:50
start mi2 range(n) 2loop
12:54:50
finish mi2 range(n) 2loop
12:54:51
[[-2.58129127]]
end mi2 loop
12:54:51
estep
12:54:51
end estep
12:55:08
end pa12:55:08
goodness of fit correlation [0.2367785]
0.34732812275260894
[5.50501575e-01 5.35033838e-01 5.50138509e-01 5.21834040e-01
 5.00708350e-01 5.40256351e-01 6.06712469e-01 5.85381875e-01
 5.34259274e-01 5.34590168e-01 5.48578251e-01 5.31396517e-01
 5.04836913e-01 5.51755055e-01 5.11172977e-01 6.05824507e-01
 5.76755609e-01 5.36189401e-01 5.56541002e-01 5.16251170e-01
 7.10806852e-01 5.46683234e-01 5.18529404e-01 5.98662487e-01
 5.27598642e-01 5.77554386e-01 5.52052990e-01 6.42586562e-01
 6.14534891e-01 6.38305666e-01 4.94008948e-01 5.08204477e-01
 5.51846578e-01 6.36489676e-01 5.52019723e-01 5.87222533e-01
 5.77657324e-01 5.24741420e-01 5.04779620e-01 5.27313592e-01
 5.67086793e-01 5.53175830e-01 5.59514346e-01 5.32718919e-01
 5.67417621e-01 5.03882624e-01 4.90671754e-01 5.34373715e-01
 5.13955629e-01 6.45827986e-01 6.14252482e-01 5.14764525e-01
 5.49214319e-01 5.59576204e-01 6.98847147e-01 5.48164328e-01
 5.32555274e-01 5.56197657e-01 5.13767536e-01 6.44530591e-01
 5.53756302e-01 5.07161036e-01 5.75925694e-01 5.99828306e-01
 4.90019938e-01 4.91383303e-01 5.22463734e-01 6.29295417e-01
 3.67257852e-01 3.56811570e-01 3.31133011e-01 3.74067240e-01
 3.10691291e-01 3.67972924e-01 3.24793680e-01 3.39024213e-01
 3.33363430e-01 3.55317608e-01 3.61229609e-01 3.70260234e-01
 2.97790142e-01 3.40320387e-01 3.66161944e-01 3.45349449e-01
 3.44626683e-01 3.53222022e-01 3.74952044e-01 4.00690889e-01
 3.29809874e-01 3.56245062e-01 3.35573351e-01 3.31383239e-01
 3.59110700e-01 3.44189659e-01 3.14093973e-01 3.24829807e-01
 3.42864892e-01 3.39059330e-01 2.97441389e-01 2.89468605e-01
 3.72541640e-01 3.40175224e-01 3.78351618e-01 3.60434317e-01
 3.36676618e-01 3.74194650e-01 3.08393556e-01 3.59427751e-01
 3.34317947e-01 3.61909449e-01 3.42628774e-01 3.51074268e-01
 3.56299452e-01 3.68257597e-01 2.90311392e-01 3.32299201e-01
 3.65735828e-01 3.39807499e-01 3.59112954e-01 3.41488034e-01
 3.43798375e-01 3.93611891e-01 3.29628428e-01 3.45060226e-01
 3.40377335e-01 3.29803858e-01 3.48461582e-01 3.40071513e-01
 3.16480039e-01 3.33305088e-01 3.49801390e-01 3.53427434e-01
 2.82038197e-01 3.08874287e-01 3.91335892e-01 3.35009220e-01
 1.51653223e+00 9.66010859e-04]
start cluster 12:55:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37308 instead
  warnings.warn(
0
parallel submitted
12:55:34
parallel finished
12:58:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:59:15
start mi0
12:59:15
start mi0 range(p) 1 loop
12:59:15
finish mi0 range(p) 1 loop
12:59:15
start mi0 range(p) 2 loop
12:59:15
finish mi0 range(p) 2 loop
12:59:15
start mi0 range(NT) loop
12:59:15
finish mi0 range(NT) loop
12:59:15
start mi0 range(n) loop
12:59:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:59:15
start mi0 range(n) 2loop
12:59:15
finish mi0 range(n) 2loop
12:59:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:59:15
start mi1 range(p) 1 loop
12:59:15
finish mi1 range(p) 1 loop
12:59:15
start mi1 range(p) 2 loop
12:59:15
finish mi1 range(p) 2 loop
12:59:15
start mi1 range(NT) loop
12:59:15
finish mi1 range(NT) loop
12:59:15
start mi1 range(n) loop
12:59:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:59:15
start mi1 range(n) 2loop
12:59:15
finish mi1 range(n) 2loop
12:59:15
start mi2
12:59:15
start mi2 range(p) 1 loop
12:59:15
finish mi2 range(p) 1 loop
12:59:15
start mi2 range(p) 2 loop
12:59:15
finish mi2 range(p) 2 loop
12:59:15
start mi2 range(NT) loop
12:59:15
finish mi2 range(NT) loop
12:59:15
start mi2 range(n) loop
12:59:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:59:15
start mi2 range(n) 2loop
12:59:15
finish mi2 range(n) 2loop
12:59:15
start mi3
12:59:15
start mi3 range(p) 1 loop
12:59:15
finish mi3 range(p) 1 loop
12:59:15
start mi3 range(p) 2 loop
12:59:15
finish mi3 range(p) 2 loop
12:59:15
start mi3 range(NT) loop
12:59:16
finish mi3 range(NT) loop
12:59:16
start mi3 range(n) loop
12:59:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:59:16
start mi3 range(n) 2loop
12:59:16
finish mi3 range(n) 2loop
12:59:16
[[-2.32206312]]
end mi3 loop
12:59:16
estep
12:59:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:59:33
start ppi1
12:59:33
start mi0
12:59:33
start mi0 range(p) 1 loop
12:59:33
finish mi0 range(p) 1 loop
12:59:33
start mi0 range(p) 2 loop
12:59:33
finish mi0 range(p) 2 loop
12:59:33
start mi0 range(NT) loop
12:59:33
finish mi0 range(NT) loop
12:59:33
start mi0 range(n) loop
12:59:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:59:33
start mi0 range(n) 2loop
12:59:33
finish mi0 range(n) 2loop
12:59:33
start mi1
12:59:33
start mi1 range(p) 1 loop
12:59:33
finish mi1 range(p) 1 loop
12:59:33
start mi1 range(p) 2 loop
12:59:33
finish mi1 range(p) 2 loop
12:59:33
start mi1 range(NT) loop
12:59:33
finish mi1 range(NT) loop
12:59:33
start mi1 range(n) loop
12:59:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:59:33
start mi1 range(n) 2loop
12:59:33
finish mi1 range(n) 2loop
12:59:33
start mi2
12:59:33
start mi2 range(p) 1 loop
12:59:33
finish mi2 range(p) 1 loop
12:59:33
start mi2 range(p) 2 loop
12:59:33
finish mi2 range(p) 2 loop
12:59:33
start mi2 range(NT) loop
12:59:33
finish mi2 range(NT) loop
12:59:33
start mi2 range(n) loop
12:59:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:59:33
start mi2 range(n) 2loop
12:59:33
finish mi2 range(n) 2loop
12:59:34
start mi3
12:59:34
start mi3 range(p) 1 loop
12:59:34
finish mi3 range(p) 1 loop
12:59:34
start mi3 range(p) 2 loop
12:59:34
finish mi3 range(p) 2 loop
12:59:34
start mi3 range(NT) loop
12:59:34
finish mi3 range(NT) loop
12:59:34
start mi3 range(n) loop
12:59:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:59:34
start mi3 range(n) 2loop
12:59:34
finish mi3 range(n) 2loop
12:59:34
[[-2.32206312]]
end mi3 loop
12:59:34
estep
12:59:34
end estep
12:59:51
end pa12:59:51
goodness of fit correlation [0.04121216]
start cluster 12:59:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45874 instead
  warnings.warn(
1
parallel submitted
13:00:14
parallel finished
13:03:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:03:20
start mi0
13:03:20
start mi0 range(p) 1 loop
13:03:20
finish mi0 range(p) 1 loop
13:03:20
start mi0 range(p) 2 loop
13:03:20
finish mi0 range(p) 2 loop
13:03:20
start mi0 range(NT) loop
13:03:21
finish mi0 range(NT) loop
13:03:21
start mi0 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:03:21
start mi0 range(n) 2loop
13:03:21
finish mi0 range(n) 2loop
13:03:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:03:21
start mi1 range(p) 1 loop
13:03:21
finish mi1 range(p) 1 loop
13:03:21
start mi1 range(p) 2 loop
13:03:21
finish mi1 range(p) 2 loop
13:03:21
start mi1 range(NT) loop
13:03:21
finish mi1 range(NT) loop
13:03:21
start mi1 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:03:21
start mi1 range(n) 2loop
13:03:21
finish mi1 range(n) 2loop
13:03:21
start mi2
13:03:21
start mi2 range(p) 1 loop
13:03:21
finish mi2 range(p) 1 loop
13:03:21
start mi2 range(p) 2 loop
13:03:21
finish mi2 range(p) 2 loop
13:03:21
start mi2 range(NT) loop
13:03:21
finish mi2 range(NT) loop
13:03:21
start mi2 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:03:21
start mi2 range(n) 2loop
13:03:21
finish mi2 range(n) 2loop
13:03:21
start mi3
13:03:21
start mi3 range(p) 1 loop
13:03:21
finish mi3 range(p) 1 loop
13:03:21
start mi3 range(p) 2 loop
13:03:21
finish mi3 range(p) 2 loop
13:03:21
start mi3 range(NT) loop
13:03:21
finish mi3 range(NT) loop
13:03:21
start mi3 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:03:22
start mi3 range(n) 2loop
13:03:22
finish mi3 range(n) 2loop
13:03:22
[[-2.33355043]]
end mi3 loop
13:03:22
estep
13:03:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:03:39
start ppi1
13:03:39
start mi0
13:03:39
start mi0 range(p) 1 loop
13:03:39
finish mi0 range(p) 1 loop
13:03:39
start mi0 range(p) 2 loop
13:03:39
finish mi0 range(p) 2 loop
13:03:39
start mi0 range(NT) loop
13:03:39
finish mi0 range(NT) loop
13:03:39
start mi0 range(n) loop
13:03:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:03:39
start mi0 range(n) 2loop
13:03:39
finish mi0 range(n) 2loop
13:03:39
start mi1
13:03:39
start mi1 range(p) 1 loop
13:03:39
finish mi1 range(p) 1 loop
13:03:39
start mi1 range(p) 2 loop
13:03:39
finish mi1 range(p) 2 loop
13:03:39
start mi1 range(NT) loop
13:03:39
finish mi1 range(NT) loop
13:03:39
start mi1 range(n) loop
13:03:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:03:39
start mi1 range(n) 2loop
13:03:39
finish mi1 range(n) 2loop
13:03:39
start mi2
13:03:39
start mi2 range(p) 1 loop
13:03:39
finish mi2 range(p) 1 loop
13:03:39
start mi2 range(p) 2 loop
13:03:39
finish mi2 range(p) 2 loop
13:03:39
start mi2 range(NT) loop
13:03:39
finish mi2 range(NT) loop
13:03:39
start mi2 range(n) loop
13:03:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:03:39
start mi2 range(n) 2loop
13:03:39
finish mi2 range(n) 2loop
13:03:39
start mi3
13:03:39
start mi3 range(p) 1 loop
13:03:39
finish mi3 range(p) 1 loop
13:03:39
start mi3 range(p) 2 loop
13:03:39
finish mi3 range(p) 2 loop
13:03:39
start mi3 range(NT) loop
13:03:39
finish mi3 range(NT) loop
13:03:39
start mi3 range(n) loop
13:03:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:03:40
start mi3 range(n) 2loop
13:03:40
finish mi3 range(n) 2loop
13:03:40
[[-2.39604264]]
end mi3 loop
13:03:40
estep
13:03:40
end estep
13:03:58
end pa13:03:58
goodness of fit correlation [0.18432244]
start cluster 13:03:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44561 instead
  warnings.warn(
2
parallel submitted
13:04:28
parallel finished
13:07:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:07:56
start mi0
13:07:56
start mi0 range(p) 1 loop
13:07:56
finish mi0 range(p) 1 loop
13:07:56
start mi0 range(p) 2 loop
13:07:56
finish mi0 range(p) 2 loop
13:07:56
start mi0 range(NT) loop
13:07:56
finish mi0 range(NT) loop
13:07:56
start mi0 range(n) loop
13:07:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:07:56
start mi0 range(n) 2loop
13:07:56
finish mi0 range(n) 2loop
13:07:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:07:56
start mi1 range(p) 1 loop
13:07:56
finish mi1 range(p) 1 loop
13:07:56
start mi1 range(p) 2 loop
13:07:56
finish mi1 range(p) 2 loop
13:07:56
start mi1 range(NT) loop
13:07:56
finish mi1 range(NT) loop
13:07:56
start mi1 range(n) loop
13:07:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:07:56
start mi1 range(n) 2loop
13:07:56
finish mi1 range(n) 2loop
13:07:56
start mi2
13:07:56
start mi2 range(p) 1 loop
13:07:56
finish mi2 range(p) 1 loop
13:07:56
start mi2 range(p) 2 loop
13:07:56
finish mi2 range(p) 2 loop
13:07:56
start mi2 range(NT) loop
13:07:57
finish mi2 range(NT) loop
13:07:57
start mi2 range(n) loop
13:07:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:07:57
start mi2 range(n) 2loop
13:07:57
finish mi2 range(n) 2loop
13:07:57
start mi3
13:07:57
start mi3 range(p) 1 loop
13:07:57
finish mi3 range(p) 1 loop
13:07:57
start mi3 range(p) 2 loop
13:07:57
finish mi3 range(p) 2 loop
13:07:57
start mi3 range(NT) loop
13:07:57
finish mi3 range(NT) loop
13:07:57
start mi3 range(n) loop
13:07:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:07:57
start mi3 range(n) 2loop
13:07:57
finish mi3 range(n) 2loop
13:07:57
[[-2.38523474]]
end mi3 loop
13:07:57
estep
13:07:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:08:14
start ppi1
13:08:14
start mi0
13:08:14
start mi0 range(p) 1 loop
13:08:14
finish mi0 range(p) 1 loop
13:08:14
start mi0 range(p) 2 loop
13:08:14
finish mi0 range(p) 2 loop
13:08:14
start mi0 range(NT) loop
13:08:15
finish mi0 range(NT) loop
13:08:15
start mi0 range(n) loop
13:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:08:15
start mi0 range(n) 2loop
13:08:15
finish mi0 range(n) 2loop
13:08:15
start mi1
13:08:15
start mi1 range(p) 1 loop
13:08:15
finish mi1 range(p) 1 loop
13:08:15
start mi1 range(p) 2 loop
13:08:15
finish mi1 range(p) 2 loop
13:08:15
start mi1 range(NT) loop
13:08:15
finish mi1 range(NT) loop
13:08:15
start mi1 range(n) loop
13:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:08:15
start mi1 range(n) 2loop
13:08:15
finish mi1 range(n) 2loop
13:08:15
start mi2
13:08:15
start mi2 range(p) 1 loop
13:08:15
finish mi2 range(p) 1 loop
13:08:15
start mi2 range(p) 2 loop
13:08:15
finish mi2 range(p) 2 loop
13:08:15
start mi2 range(NT) loop
13:08:15
finish mi2 range(NT) loop
13:08:15
start mi2 range(n) loop
13:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:08:15
start mi2 range(n) 2loop
13:08:15
finish mi2 range(n) 2loop
13:08:15
start mi3
13:08:15
start mi3 range(p) 1 loop
13:08:15
finish mi3 range(p) 1 loop
13:08:15
start mi3 range(p) 2 loop
13:08:15
finish mi3 range(p) 2 loop
13:08:15
start mi3 range(NT) loop
13:08:15
finish mi3 range(NT) loop
13:08:15
start mi3 range(n) loop
13:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:08:15
start mi3 range(n) 2loop
13:08:15
finish mi3 range(n) 2loop
13:08:16
[[-2.44772682]]
end mi3 loop
13:08:16
estep
13:08:16
end estep
13:08:34
end pa13:08:34
goodness of fit correlation [0.19968978]
start cluster 13:08:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46388 instead
  warnings.warn(
3
parallel submitted
13:09:00
parallel finished
13:12:26
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:12:40
start mi0
13:12:40
start mi0 range(p) 1 loop
13:12:40
finish mi0 range(p) 1 loop
13:12:40
start mi0 range(p) 2 loop
13:12:40
finish mi0 range(p) 2 loop
13:12:40
start mi0 range(NT) loop
13:12:40
finish mi0 range(NT) loop
13:12:40
start mi0 range(n) loop
13:12:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:12:40
start mi0 range(n) 2loop
13:12:40
finish mi0 range(n) 2loop
13:12:41
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:12:41
start mi1 range(p) 1 loop
13:12:41
finish mi1 range(p) 1 loop
13:12:41
start mi1 range(p) 2 loop
13:12:41
finish mi1 range(p) 2 loop
13:12:41
start mi1 range(NT) loop
13:12:41
finish mi1 range(NT) loop
13:12:41
start mi1 range(n) loop
13:12:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:12:41
start mi1 range(n) 2loop
13:12:41
finish mi1 range(n) 2loop
13:12:41
start mi2
13:12:41
start mi2 range(p) 1 loop
13:12:41
finish mi2 range(p) 1 loop
13:12:41
start mi2 range(p) 2 loop
13:12:41
finish mi2 range(p) 2 loop
13:12:41
start mi2 range(NT) loop
13:12:41
finish mi2 range(NT) loop
13:12:41
start mi2 range(n) loop
13:12:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:12:41
start mi2 range(n) 2loop
13:12:41
finish mi2 range(n) 2loop
13:12:41
start mi3
13:12:41
start mi3 range(p) 1 loop
13:12:41
finish mi3 range(p) 1 loop
13:12:41
start mi3 range(p) 2 loop
13:12:41
finish mi3 range(p) 2 loop
13:12:41
start mi3 range(NT) loop
13:12:41
finish mi3 range(NT) loop
13:12:41
start mi3 range(n) loop
13:12:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:12:41
start mi3 range(n) 2loop
13:12:41
finish mi3 range(n) 2loop
13:12:41
[[-2.40248968]]
end mi3 loop
13:12:41
estep
13:12:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:13:00
start ppi1
13:13:00
start mi0
13:13:00
start mi0 range(p) 1 loop
13:13:00
finish mi0 range(p) 1 loop
13:13:00
start mi0 range(p) 2 loop
13:13:01
finish mi0 range(p) 2 loop
13:13:01
start mi0 range(NT) loop
13:13:01
finish mi0 range(NT) loop
13:13:01
start mi0 range(n) loop
13:13:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:13:01
start mi0 range(n) 2loop
13:13:01
finish mi0 range(n) 2loop
13:13:01
start mi1
13:13:01
start mi1 range(p) 1 loop
13:13:01
finish mi1 range(p) 1 loop
13:13:01
start mi1 range(p) 2 loop
13:13:01
finish mi1 range(p) 2 loop
13:13:01
start mi1 range(NT) loop
13:13:01
finish mi1 range(NT) loop
13:13:01
start mi1 range(n) loop
13:13:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:13:01
start mi1 range(n) 2loop
13:13:01
finish mi1 range(n) 2loop
13:13:01
start mi2
13:13:01
start mi2 range(p) 1 loop
13:13:01
finish mi2 range(p) 1 loop
13:13:01
start mi2 range(p) 2 loop
13:13:01
finish mi2 range(p) 2 loop
13:13:01
start mi2 range(NT) loop
13:13:01
finish mi2 range(NT) loop
13:13:01
start mi2 range(n) loop
13:13:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:13:01
start mi2 range(n) 2loop
13:13:01
finish mi2 range(n) 2loop
13:13:01
start mi3
13:13:01
start mi3 range(p) 1 loop
13:13:01
finish mi3 range(p) 1 loop
13:13:01
start mi3 range(p) 2 loop
13:13:01
finish mi3 range(p) 2 loop
13:13:01
start mi3 range(NT) loop
13:13:02
finish mi3 range(NT) loop
13:13:02
start mi3 range(n) loop
13:13:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:13:02
start mi3 range(n) 2loop
13:13:02
finish mi3 range(n) 2loop
13:13:02
[[-2.46498174]]
end mi3 loop
13:13:02
estep
13:13:02
end estep
13:13:21
end pa13:13:21
goodness of fit correlation [0.16955021]
start cluster 13:13:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35282 instead
  warnings.warn(
4
parallel submitted
13:13:49
parallel finished
13:17:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:17:14
start mi0
13:17:14
start mi0 range(p) 1 loop
13:17:14
finish mi0 range(p) 1 loop
13:17:14
start mi0 range(p) 2 loop
13:17:14
finish mi0 range(p) 2 loop
13:17:14
start mi0 range(NT) loop
13:17:14
finish mi0 range(NT) loop
13:17:14
start mi0 range(n) loop
13:17:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:17:14
start mi0 range(n) 2loop
13:17:14
finish mi0 range(n) 2loop
13:17:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:17:14
start mi1 range(p) 1 loop
13:17:14
finish mi1 range(p) 1 loop
13:17:14
start mi1 range(p) 2 loop
13:17:14
finish mi1 range(p) 2 loop
13:17:14
start mi1 range(NT) loop
13:17:14
finish mi1 range(NT) loop
13:17:14
start mi1 range(n) loop
13:17:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:17:14
start mi1 range(n) 2loop
13:17:14
finish mi1 range(n) 2loop
13:17:14
start mi2
13:17:14
start mi2 range(p) 1 loop
13:17:14
finish mi2 range(p) 1 loop
13:17:14
start mi2 range(p) 2 loop
13:17:14
finish mi2 range(p) 2 loop
13:17:14
start mi2 range(NT) loop
13:17:15
finish mi2 range(NT) loop
13:17:15
start mi2 range(n) loop
13:17:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:17:15
start mi2 range(n) 2loop
13:17:15
finish mi2 range(n) 2loop
13:17:15
start mi3
13:17:15
start mi3 range(p) 1 loop
13:17:15
finish mi3 range(p) 1 loop
13:17:15
start mi3 range(p) 2 loop
13:17:15
finish mi3 range(p) 2 loop
13:17:15
start mi3 range(NT) loop
13:17:15
finish mi3 range(NT) loop
13:17:15
start mi3 range(n) loop
13:17:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:17:15
start mi3 range(n) 2loop
13:17:15
finish mi3 range(n) 2loop
13:17:15
[[-2.40374415]]
end mi3 loop
13:17:15
estep
13:17:15
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:17:33
start ppi1
13:17:33
start mi0
13:17:33
start mi0 range(p) 1 loop
13:17:33
finish mi0 range(p) 1 loop
13:17:33
start mi0 range(p) 2 loop
13:17:33
finish mi0 range(p) 2 loop
13:17:33
start mi0 range(NT) loop
13:17:33
finish mi0 range(NT) loop
13:17:33
start mi0 range(n) loop
13:17:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:17:33
start mi0 range(n) 2loop
13:17:33
finish mi0 range(n) 2loop
13:17:33
start mi1
13:17:33
start mi1 range(p) 1 loop
13:17:33
finish mi1 range(p) 1 loop
13:17:33
start mi1 range(p) 2 loop
13:17:33
finish mi1 range(p) 2 loop
13:17:33
start mi1 range(NT) loop
13:17:33
finish mi1 range(NT) loop
13:17:33
start mi1 range(n) loop
13:17:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:17:33
start mi1 range(n) 2loop
13:17:33
finish mi1 range(n) 2loop
13:17:33
start mi2
13:17:33
start mi2 range(p) 1 loop
13:17:33
finish mi2 range(p) 1 loop
13:17:33
start mi2 range(p) 2 loop
13:17:33
finish mi2 range(p) 2 loop
13:17:33
start mi2 range(NT) loop
13:17:33
finish mi2 range(NT) loop
13:17:33
start mi2 range(n) loop
13:17:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:17:33
start mi2 range(n) 2loop
13:17:33
finish mi2 range(n) 2loop
13:17:33
start mi3
13:17:33
start mi3 range(p) 1 loop
13:17:33
finish mi3 range(p) 1 loop
13:17:33
start mi3 range(p) 2 loop
13:17:33
finish mi3 range(p) 2 loop
13:17:33
start mi3 range(NT) loop
13:17:33
finish mi3 range(NT) loop
13:17:34
start mi3 range(n) loop
13:17:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:17:34
start mi3 range(n) 2loop
13:17:34
finish mi3 range(n) 2loop
13:17:34
[[-2.46623621]]
end mi3 loop
13:17:34
estep
13:17:34
end estep
13:17:51
end pa13:17:51
goodness of fit correlation [0.13773683]
start cluster 13:17:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43411 instead
  warnings.warn(
5
parallel submitted
13:18:17
parallel finished
13:24:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:24:28
start mi0
13:24:28
start mi0 range(p) 1 loop
13:24:28
finish mi0 range(p) 1 loop
13:24:28
start mi0 range(p) 2 loop
13:24:28
finish mi0 range(p) 2 loop
13:24:28
start mi0 range(NT) loop
13:24:28
finish mi0 range(NT) loop
13:24:28
start mi0 range(n) loop
13:24:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:24:28
start mi0 range(n) 2loop
13:24:28
finish mi0 range(n) 2loop
13:24:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:24:28
start mi1 range(p) 1 loop
13:24:28
finish mi1 range(p) 1 loop
13:24:28
start mi1 range(p) 2 loop
13:24:28
finish mi1 range(p) 2 loop
13:24:28
start mi1 range(NT) loop
13:24:28
finish mi1 range(NT) loop
13:24:28
start mi1 range(n) loop
13:24:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:24:28
start mi1 range(n) 2loop
13:24:28
finish mi1 range(n) 2loop
13:24:29
start mi2
13:24:29
start mi2 range(p) 1 loop
13:24:29
finish mi2 range(p) 1 loop
13:24:29
start mi2 range(p) 2 loop
13:24:29
finish mi2 range(p) 2 loop
13:24:29
start mi2 range(NT) loop
13:24:29
finish mi2 range(NT) loop
13:24:29
start mi2 range(n) loop
13:24:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:24:29
start mi2 range(n) 2loop
13:24:29
finish mi2 range(n) 2loop
13:24:29
start mi3
13:24:29
start mi3 range(p) 1 loop
13:24:29
finish mi3 range(p) 1 loop
13:24:29
start mi3 range(p) 2 loop
13:24:29
finish mi3 range(p) 2 loop
13:24:29
start mi3 range(NT) loop
13:24:29
finish mi3 range(NT) loop
13:24:29
start mi3 range(n) loop
13:24:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:24:29
start mi3 range(n) 2loop
13:24:29
finish mi3 range(n) 2loop
13:24:29
[[-2.37057784]]
end mi3 loop
13:24:29
estep
13:24:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:24:47
start ppi1
13:24:47
start mi0
13:24:47
start mi0 range(p) 1 loop
13:24:47
finish mi0 range(p) 1 loop
13:24:47
start mi0 range(p) 2 loop
13:24:47
finish mi0 range(p) 2 loop
13:24:47
start mi0 range(NT) loop
13:24:47
finish mi0 range(NT) loop
13:24:47
start mi0 range(n) loop
13:24:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:24:47
start mi0 range(n) 2loop
13:24:47
finish mi0 range(n) 2loop
13:24:47
start mi1
13:24:47
start mi1 range(p) 1 loop
13:24:47
finish mi1 range(p) 1 loop
13:24:47
start mi1 range(p) 2 loop
13:24:47
finish mi1 range(p) 2 loop
13:24:47
start mi1 range(NT) loop
13:24:47
finish mi1 range(NT) loop
13:24:47
start mi1 range(n) loop
13:24:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:24:47
start mi1 range(n) 2loop
13:24:47
finish mi1 range(n) 2loop
13:24:47
start mi2
13:24:47
start mi2 range(p) 1 loop
13:24:47
finish mi2 range(p) 1 loop
13:24:47
start mi2 range(p) 2 loop
13:24:47
finish mi2 range(p) 2 loop
13:24:47
start mi2 range(NT) loop
13:24:47
finish mi2 range(NT) loop
13:24:47
start mi2 range(n) loop
13:24:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:24:47
start mi2 range(n) 2loop
13:24:47
finish mi2 range(n) 2loop
13:24:47
start mi3
13:24:47
start mi3 range(p) 1 loop
13:24:47
finish mi3 range(p) 1 loop
13:24:47
start mi3 range(p) 2 loop
13:24:47
finish mi3 range(p) 2 loop
13:24:47
start mi3 range(NT) loop
13:24:48
finish mi3 range(NT) loop
13:24:48
start mi3 range(n) loop
13:24:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:24:48
start mi3 range(n) 2loop
13:24:48
finish mi3 range(n) 2loop
13:24:48
[[-2.43306994]]
end mi3 loop
13:24:48
estep
13:24:48
end estep
13:25:05
end pa13:25:05
goodness of fit correlation [0.11647117]
start cluster 13:25:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 32790 instead
  warnings.warn(
6
parallel submitted
13:25:29
parallel finished
13:31:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:31:17
start mi0
13:31:17
start mi0 range(p) 1 loop
13:31:17
finish mi0 range(p) 1 loop
13:31:17
start mi0 range(p) 2 loop
13:31:17
finish mi0 range(p) 2 loop
13:31:17
start mi0 range(NT) loop
13:31:18
finish mi0 range(NT) loop
13:31:18
start mi0 range(n) loop
13:31:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:31:18
start mi0 range(n) 2loop
13:31:18
finish mi0 range(n) 2loop
13:31:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:31:18
start mi1 range(p) 1 loop
13:31:18
finish mi1 range(p) 1 loop
13:31:18
start mi1 range(p) 2 loop
13:31:18
finish mi1 range(p) 2 loop
13:31:18
start mi1 range(NT) loop
13:31:18
finish mi1 range(NT) loop
13:31:18
start mi1 range(n) loop
13:31:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:31:18
start mi1 range(n) 2loop
13:31:18
finish mi1 range(n) 2loop
13:31:18
start mi2
13:31:18
start mi2 range(p) 1 loop
13:31:18
finish mi2 range(p) 1 loop
13:31:18
start mi2 range(p) 2 loop
13:31:18
finish mi2 range(p) 2 loop
13:31:18
start mi2 range(NT) loop
13:31:18
finish mi2 range(NT) loop
13:31:18
start mi2 range(n) loop
13:31:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:31:18
start mi2 range(n) 2loop
13:31:18
finish mi2 range(n) 2loop
13:31:18
start mi3
13:31:18
start mi3 range(p) 1 loop
13:31:18
finish mi3 range(p) 1 loop
13:31:18
start mi3 range(p) 2 loop
13:31:18
finish mi3 range(p) 2 loop
13:31:18
start mi3 range(NT) loop
13:31:18
finish mi3 range(NT) loop
13:31:18
start mi3 range(n) loop
13:31:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:31:19
start mi3 range(n) 2loop
13:31:19
finish mi3 range(n) 2loop
13:31:19
[[-2.40383324]]
end mi3 loop
13:31:19
estep
13:31:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:31:36
start ppi1
13:31:36
start mi0
13:31:36
start mi0 range(p) 1 loop
13:31:36
finish mi0 range(p) 1 loop
13:31:36
start mi0 range(p) 2 loop
13:31:36
finish mi0 range(p) 2 loop
13:31:36
start mi0 range(NT) loop
13:31:36
finish mi0 range(NT) loop
13:31:36
start mi0 range(n) loop
13:31:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:31:36
start mi0 range(n) 2loop
13:31:36
finish mi0 range(n) 2loop
13:31:37
start mi1
13:31:37
start mi1 range(p) 1 loop
13:31:37
finish mi1 range(p) 1 loop
13:31:37
start mi1 range(p) 2 loop
13:31:37
finish mi1 range(p) 2 loop
13:31:37
start mi1 range(NT) loop
13:31:37
finish mi1 range(NT) loop
13:31:37
start mi1 range(n) loop
13:31:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:31:37
start mi1 range(n) 2loop
13:31:37
finish mi1 range(n) 2loop
13:31:37
start mi2
13:31:37
start mi2 range(p) 1 loop
13:31:37
finish mi2 range(p) 1 loop
13:31:37
start mi2 range(p) 2 loop
13:31:37
finish mi2 range(p) 2 loop
13:31:37
start mi2 range(NT) loop
13:31:37
finish mi2 range(NT) loop
13:31:37
start mi2 range(n) loop
13:31:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:31:37
start mi2 range(n) 2loop
13:31:37
finish mi2 range(n) 2loop
13:31:37
start mi3
13:31:37
start mi3 range(p) 1 loop
13:31:37
finish mi3 range(p) 1 loop
13:31:37
start mi3 range(p) 2 loop
13:31:37
finish mi3 range(p) 2 loop
13:31:37
start mi3 range(NT) loop
13:31:37
finish mi3 range(NT) loop
13:31:37
start mi3 range(n) loop
13:31:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:31:37
start mi3 range(n) 2loop
13:31:37
finish mi3 range(n) 2loop
13:31:37
[[-2.4663253]]
end mi3 loop
13:31:37
estep
13:31:37
end estep
13:31:55
end pa13:31:55
goodness of fit correlation [0.24777721]
start cluster 13:31:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40754 instead
  warnings.warn(
7
parallel submitted
13:32:20
parallel finished
13:38:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:38:56
start mi0
13:38:56
start mi0 range(p) 1 loop
13:38:56
finish mi0 range(p) 1 loop
13:38:56
start mi0 range(p) 2 loop
13:38:56
finish mi0 range(p) 2 loop
13:38:56
start mi0 range(NT) loop
13:38:56
finish mi0 range(NT) loop
13:38:57
start mi0 range(n) loop
13:38:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:38:57
start mi0 range(n) 2loop
13:38:57
finish mi0 range(n) 2loop
13:38:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:38:57
start mi1 range(p) 1 loop
13:38:57
finish mi1 range(p) 1 loop
13:38:57
start mi1 range(p) 2 loop
13:38:57
finish mi1 range(p) 2 loop
13:38:57
start mi1 range(NT) loop
13:38:57
finish mi1 range(NT) loop
13:38:57
start mi1 range(n) loop
13:38:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:38:57
start mi1 range(n) 2loop
13:38:57
finish mi1 range(n) 2loop
13:38:57
start mi2
13:38:57
start mi2 range(p) 1 loop
13:38:57
finish mi2 range(p) 1 loop
13:38:57
start mi2 range(p) 2 loop
13:38:57
finish mi2 range(p) 2 loop
13:38:57
start mi2 range(NT) loop
13:38:57
finish mi2 range(NT) loop
13:38:57
start mi2 range(n) loop
13:38:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:38:57
start mi2 range(n) 2loop
13:38:57
finish mi2 range(n) 2loop
13:38:57
start mi3
13:38:57
start mi3 range(p) 1 loop
13:38:57
finish mi3 range(p) 1 loop
13:38:57
start mi3 range(p) 2 loop
13:38:57
finish mi3 range(p) 2 loop
13:38:57
start mi3 range(NT) loop
13:38:57
finish mi3 range(NT) loop
13:38:57
start mi3 range(n) loop
13:38:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:38:57
start mi3 range(n) 2loop
13:38:57
finish mi3 range(n) 2loop
13:38:58
[[-2.41609292]]
end mi3 loop
13:38:58
estep
13:38:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:39:15
start ppi1
13:39:15
start mi0
13:39:15
start mi0 range(p) 1 loop
13:39:15
finish mi0 range(p) 1 loop
13:39:15
start mi0 range(p) 2 loop
13:39:15
finish mi0 range(p) 2 loop
13:39:15
start mi0 range(NT) loop
13:39:15
finish mi0 range(NT) loop
13:39:15
start mi0 range(n) loop
13:39:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:39:15
start mi0 range(n) 2loop
13:39:15
finish mi0 range(n) 2loop
13:39:15
start mi1
13:39:15
start mi1 range(p) 1 loop
13:39:15
finish mi1 range(p) 1 loop
13:39:15
start mi1 range(p) 2 loop
13:39:15
finish mi1 range(p) 2 loop
13:39:15
start mi1 range(NT) loop
13:39:15
finish mi1 range(NT) loop
13:39:15
start mi1 range(n) loop
13:39:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:39:15
start mi1 range(n) 2loop
13:39:15
finish mi1 range(n) 2loop
13:39:15
start mi2
13:39:15
start mi2 range(p) 1 loop
13:39:15
finish mi2 range(p) 1 loop
13:39:15
start mi2 range(p) 2 loop
13:39:15
finish mi2 range(p) 2 loop
13:39:15
start mi2 range(NT) loop
13:39:16
finish mi2 range(NT) loop
13:39:16
start mi2 range(n) loop
13:39:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:39:16
start mi2 range(n) 2loop
13:39:16
finish mi2 range(n) 2loop
13:39:16
start mi3
13:39:16
start mi3 range(p) 1 loop
13:39:16
finish mi3 range(p) 1 loop
13:39:16
start mi3 range(p) 2 loop
13:39:16
finish mi3 range(p) 2 loop
13:39:16
start mi3 range(NT) loop
13:39:16
finish mi3 range(NT) loop
13:39:16
start mi3 range(n) loop
13:39:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:39:16
start mi3 range(n) 2loop
13:39:16
finish mi3 range(n) 2loop
13:39:16
[[-2.47858498]]
end mi3 loop
13:39:16
estep
13:39:16
end estep
13:39:35
end pa13:39:35
goodness of fit correlation [0.28390807]
start cluster 13:39:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33169 instead
  warnings.warn(
8
parallel submitted
13:40:03
parallel finished
13:45:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:45:17
start mi0
13:45:17
start mi0 range(p) 1 loop
13:45:17
finish mi0 range(p) 1 loop
13:45:17
start mi0 range(p) 2 loop
13:45:17
finish mi0 range(p) 2 loop
13:45:17
start mi0 range(NT) loop
13:45:17
finish mi0 range(NT) loop
13:45:17
start mi0 range(n) loop
13:45:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:45:17
start mi0 range(n) 2loop
13:45:17
finish mi0 range(n) 2loop
13:45:17
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:45:17
start mi1 range(p) 1 loop
13:45:17
finish mi1 range(p) 1 loop
13:45:17
start mi1 range(p) 2 loop
13:45:17
finish mi1 range(p) 2 loop
13:45:17
start mi1 range(NT) loop
13:45:17
finish mi1 range(NT) loop
13:45:17
start mi1 range(n) loop
13:45:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:45:17
start mi1 range(n) 2loop
13:45:17
finish mi1 range(n) 2loop
13:45:17
start mi2
13:45:17
start mi2 range(p) 1 loop
13:45:17
finish mi2 range(p) 1 loop
13:45:17
start mi2 range(p) 2 loop
13:45:17
finish mi2 range(p) 2 loop
13:45:17
start mi2 range(NT) loop
13:45:17
finish mi2 range(NT) loop
13:45:17
start mi2 range(n) loop
13:45:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:45:17
start mi2 range(n) 2loop
13:45:17
finish mi2 range(n) 2loop
13:45:18
[[-2.52620463]]
end mi2 loop
13:45:18
estep
13:45:18
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:45:35
start ppi1
13:45:35
start mi0
13:45:35
start mi0 range(p) 1 loop
13:45:35
finish mi0 range(p) 1 loop
13:45:35
start mi0 range(p) 2 loop
13:45:35
finish mi0 range(p) 2 loop
13:45:35
start mi0 range(NT) loop
13:45:35
finish mi0 range(NT) loop
13:45:35
start mi0 range(n) loop
13:45:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:45:35
start mi0 range(n) 2loop
13:45:35
finish mi0 range(n) 2loop
13:45:35
start mi1
13:45:35
start mi1 range(p) 1 loop
13:45:35
finish mi1 range(p) 1 loop
13:45:35
start mi1 range(p) 2 loop
13:45:35
finish mi1 range(p) 2 loop
13:45:35
start mi1 range(NT) loop
13:45:36
finish mi1 range(NT) loop
13:45:36
start mi1 range(n) loop
13:45:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:45:36
start mi1 range(n) 2loop
13:45:36
finish mi1 range(n) 2loop
13:45:36
start mi2
13:45:36
start mi2 range(p) 1 loop
13:45:36
finish mi2 range(p) 1 loop
13:45:36
start mi2 range(p) 2 loop
13:45:36
finish mi2 range(p) 2 loop
13:45:36
start mi2 range(NT) loop
13:45:36
finish mi2 range(NT) loop
13:45:36
start mi2 range(n) loop
13:45:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:45:36
start mi2 range(n) 2loop
13:45:36
finish mi2 range(n) 2loop
13:45:36
[[-2.58872107]]
end mi2 loop
13:45:36
estep
13:45:36
end estep
13:45:55
end pa13:45:55
goodness of fit correlation [0.22509735]
start cluster 13:45:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38442 instead
  warnings.warn(
9
parallel submitted
13:46:22
parallel finished
13:51:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:51:32
start mi0
13:51:32
start mi0 range(p) 1 loop
13:51:32
finish mi0 range(p) 1 loop
13:51:32
start mi0 range(p) 2 loop
13:51:32
finish mi0 range(p) 2 loop
13:51:32
start mi0 range(NT) loop
13:51:32
finish mi0 range(NT) loop
13:51:32
start mi0 range(n) loop
13:51:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:51:33
start mi0 range(n) 2loop
13:51:33
finish mi0 range(n) 2loop
13:51:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:51:33
start mi1 range(p) 1 loop
13:51:33
finish mi1 range(p) 1 loop
13:51:33
start mi1 range(p) 2 loop
13:51:33
finish mi1 range(p) 2 loop
13:51:33
start mi1 range(NT) loop
13:51:33
finish mi1 range(NT) loop
13:51:33
start mi1 range(n) loop
13:51:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:51:33
start mi1 range(n) 2loop
13:51:33
finish mi1 range(n) 2loop
13:51:33
start mi2
13:51:33
start mi2 range(p) 1 loop
13:51:33
finish mi2 range(p) 1 loop
13:51:33
start mi2 range(p) 2 loop
13:51:33
finish mi2 range(p) 2 loop
13:51:33
start mi2 range(NT) loop
13:51:33
finish mi2 range(NT) loop
13:51:33
start mi2 range(n) loop
13:51:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:51:33
start mi2 range(n) 2loop
13:51:33
finish mi2 range(n) 2loop
13:51:33
start mi3
13:51:33
start mi3 range(p) 1 loop
13:51:33
finish mi3 range(p) 1 loop
13:51:33
start mi3 range(p) 2 loop
13:51:33
finish mi3 range(p) 2 loop
13:51:33
start mi3 range(NT) loop
13:51:33
finish mi3 range(NT) loop
13:51:33
start mi3 range(n) loop
13:51:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:51:33
start mi3 range(n) 2loop
13:51:33
finish mi3 range(n) 2loop
13:51:34
[[-2.43670459]]
end mi3 loop
13:51:34
estep
13:51:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:51:51
start ppi1
13:51:51
start mi0
13:51:51
start mi0 range(p) 1 loop
13:51:51
finish mi0 range(p) 1 loop
13:51:51
start mi0 range(p) 2 loop
13:51:51
finish mi0 range(p) 2 loop
13:51:51
start mi0 range(NT) loop
13:51:51
finish mi0 range(NT) loop
13:51:51
start mi0 range(n) loop
13:51:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:51:51
start mi0 range(n) 2loop
13:51:51
finish mi0 range(n) 2loop
13:51:51
start mi1
13:51:51
start mi1 range(p) 1 loop
13:51:51
finish mi1 range(p) 1 loop
13:51:51
start mi1 range(p) 2 loop
13:51:51
finish mi1 range(p) 2 loop
13:51:51
start mi1 range(NT) loop
13:51:52
finish mi1 range(NT) loop
13:51:52
start mi1 range(n) loop
13:51:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:51:52
start mi1 range(n) 2loop
13:51:52
finish mi1 range(n) 2loop
13:51:52
start mi2
13:51:52
start mi2 range(p) 1 loop
13:51:52
finish mi2 range(p) 1 loop
13:51:52
start mi2 range(p) 2 loop
13:51:52
finish mi2 range(p) 2 loop
13:51:52
start mi2 range(NT) loop
13:51:52
finish mi2 range(NT) loop
13:51:52
start mi2 range(n) loop
13:51:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:51:52
start mi2 range(n) 2loop
13:51:52
finish mi2 range(n) 2loop
13:51:52
start mi3
13:51:52
start mi3 range(p) 1 loop
13:51:52
finish mi3 range(p) 1 loop
13:51:52
start mi3 range(p) 2 loop
13:51:52
finish mi3 range(p) 2 loop
13:51:52
start mi3 range(NT) loop
13:51:52
finish mi3 range(NT) loop
13:51:52
start mi3 range(n) loop
13:51:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:51:52
start mi3 range(n) 2loop
13:51:52
finish mi3 range(n) 2loop
13:51:52
[[-2.49919664]]
end mi3 loop
13:51:52
estep
13:51:52
end estep
13:52:10
end pa13:52:10
goodness of fit correlation [0.18107874]
start cluster 13:52:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35037 instead
  warnings.warn(
10
parallel submitted
13:52:35
slurmstepd: error: *** JOB 1825843 ON nodeb20 CANCELLED AT 2020-11-06T13:53:19 ***
