5
subject 1005_01_MR
start cluster 09:36:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35117 instead
  warnings.warn(
0
parallel submitted
09:36:33
parallel finished
09:38:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:39:00
start mi0
09:39:00
start mi0 range(p) 1 loop
09:39:00
finish mi0 range(p) 1 loop
09:39:00
start mi0 range(p) 2 loop
09:39:00
finish mi0 range(p) 2 loop
09:39:00
start mi0 range(NT) loop
09:39:00
finish mi0 range(NT) loop
09:39:00
start mi0 range(n) loop
09:39:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:39:00
start mi0 range(n) 2loop
09:39:00
finish mi0 range(n) 2loop
09:39:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:39:00
start mi1 range(p) 1 loop
09:39:00
finish mi1 range(p) 1 loop
09:39:00
start mi1 range(p) 2 loop
09:39:00
finish mi1 range(p) 2 loop
09:39:00
start mi1 range(NT) loop
09:39:00
finish mi1 range(NT) loop
09:39:00
start mi1 range(n) loop
09:39:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:39:00
start mi1 range(n) 2loop
09:39:00
finish mi1 range(n) 2loop
09:39:00
start mi2
09:39:00
start mi2 range(p) 1 loop
09:39:00
finish mi2 range(p) 1 loop
09:39:00
start mi2 range(p) 2 loop
09:39:00
finish mi2 range(p) 2 loop
09:39:00
start mi2 range(NT) loop
09:39:00
finish mi2 range(NT) loop
09:39:00
start mi2 range(n) loop
09:39:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:39:00
start mi2 range(n) 2loop
09:39:00
finish mi2 range(n) 2loop
09:39:00
[[-2.56319029]]
end mi2 loop
09:39:00
estep
09:39:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:39:18
start ppi1
09:39:18
start mi0
09:39:18
start mi0 range(p) 1 loop
09:39:18
finish mi0 range(p) 1 loop
09:39:18
start mi0 range(p) 2 loop
09:39:18
finish mi0 range(p) 2 loop
09:39:18
start mi0 range(NT) loop
09:39:19
finish mi0 range(NT) loop
09:39:19
start mi0 range(n) loop
09:39:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:39:19
start mi0 range(n) 2loop
09:39:19
finish mi0 range(n) 2loop
09:39:19
start mi1
09:39:19
start mi1 range(p) 1 loop
09:39:19
finish mi1 range(p) 1 loop
09:39:19
start mi1 range(p) 2 loop
09:39:19
finish mi1 range(p) 2 loop
09:39:19
start mi1 range(NT) loop
09:39:19
finish mi1 range(NT) loop
09:39:19
start mi1 range(n) loop
09:39:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:39:19
start mi1 range(n) 2loop
09:39:19
finish mi1 range(n) 2loop
09:39:19
start mi2
09:39:19
start mi2 range(p) 1 loop
09:39:19
finish mi2 range(p) 1 loop
09:39:19
start mi2 range(p) 2 loop
09:39:19
finish mi2 range(p) 2 loop
09:39:19
start mi2 range(NT) loop
09:39:19
finish mi2 range(NT) loop
09:39:19
start mi2 range(n) loop
09:39:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:39:19
start mi2 range(n) 2loop
09:39:19
finish mi2 range(n) 2loop
09:39:19
[[-2.56319029]]
end mi2 loop
09:39:19
estep
09:39:19
end estep
09:39:35
end pa09:39:35
goodness of fit correlation [0.05376907]
start cluster 09:39:35
1
parallel submitted
09:39:50
parallel finished
09:43:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:43:07
start mi0
09:43:07
start mi0 range(p) 1 loop
09:43:07
finish mi0 range(p) 1 loop
09:43:07
start mi0 range(p) 2 loop
09:43:07
finish mi0 range(p) 2 loop
09:43:07
start mi0 range(NT) loop
09:43:07
finish mi0 range(NT) loop
09:43:07
start mi0 range(n) loop
09:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:43:07
start mi0 range(n) 2loop
09:43:07
finish mi0 range(n) 2loop
09:43:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:43:08
start mi1 range(p) 1 loop
09:43:08
finish mi1 range(p) 1 loop
09:43:08
start mi1 range(p) 2 loop
09:43:08
finish mi1 range(p) 2 loop
09:43:08
start mi1 range(NT) loop
09:43:08
finish mi1 range(NT) loop
09:43:08
start mi1 range(n) loop
09:43:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:43:08
start mi1 range(n) 2loop
09:43:08
finish mi1 range(n) 2loop
09:43:08
start mi2
09:43:08
start mi2 range(p) 1 loop
09:43:08
finish mi2 range(p) 1 loop
09:43:08
start mi2 range(p) 2 loop
09:43:08
finish mi2 range(p) 2 loop
09:43:08
start mi2 range(NT) loop
09:43:08
finish mi2 range(NT) loop
09:43:08
start mi2 range(n) loop
09:43:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:43:08
start mi2 range(n) 2loop
09:43:08
finish mi2 range(n) 2loop
09:43:08
[[-2.57108113]]
end mi2 loop
09:43:08
estep
09:43:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:43:24
start ppi1
09:43:24
start mi0
09:43:24
start mi0 range(p) 1 loop
09:43:24
finish mi0 range(p) 1 loop
09:43:24
start mi0 range(p) 2 loop
09:43:24
finish mi0 range(p) 2 loop
09:43:24
start mi0 range(NT) loop
09:43:24
finish mi0 range(NT) loop
09:43:24
start mi0 range(n) loop
09:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:43:24
start mi0 range(n) 2loop
09:43:24
finish mi0 range(n) 2loop
09:43:24
start mi1
09:43:24
start mi1 range(p) 1 loop
09:43:24
finish mi1 range(p) 1 loop
09:43:24
start mi1 range(p) 2 loop
09:43:24
finish mi1 range(p) 2 loop
09:43:24
start mi1 range(NT) loop
09:43:24
finish mi1 range(NT) loop
09:43:24
start mi1 range(n) loop
09:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:43:24
start mi1 range(n) 2loop
09:43:24
finish mi1 range(n) 2loop
09:43:24
start mi2
09:43:24
start mi2 range(p) 1 loop
09:43:24
finish mi2 range(p) 1 loop
09:43:24
start mi2 range(p) 2 loop
09:43:24
finish mi2 range(p) 2 loop
09:43:24
start mi2 range(NT) loop
09:43:24
finish mi2 range(NT) loop
09:43:24
start mi2 range(n) loop
09:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:43:24
start mi2 range(n) 2loop
09:43:24
finish mi2 range(n) 2loop
09:43:24
[[-2.63358423]]
end mi2 loop
09:43:24
estep
09:43:24
end estep
09:43:40
end pa09:43:40
goodness of fit correlation [0.07290219]
start cluster 09:43:40
2
parallel submitted
09:43:57
parallel finished
09:49:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:49:45
start mi0
09:49:45
start mi0 range(p) 1 loop
09:49:45
finish mi0 range(p) 1 loop
09:49:45
start mi0 range(p) 2 loop
09:49:45
finish mi0 range(p) 2 loop
09:49:45
start mi0 range(NT) loop
09:49:45
finish mi0 range(NT) loop
09:49:45
start mi0 range(n) loop
09:49:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:49:45
start mi0 range(n) 2loop
09:49:45
finish mi0 range(n) 2loop
09:49:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:49:45
start mi1 range(p) 1 loop
09:49:45
finish mi1 range(p) 1 loop
09:49:45
start mi1 range(p) 2 loop
09:49:45
finish mi1 range(p) 2 loop
09:49:45
start mi1 range(NT) loop
09:49:45
finish mi1 range(NT) loop
09:49:45
start mi1 range(n) loop
09:49:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:49:45
start mi1 range(n) 2loop
09:49:45
finish mi1 range(n) 2loop
09:49:46
start mi2
09:49:46
start mi2 range(p) 1 loop
09:49:46
finish mi2 range(p) 1 loop
09:49:46
start mi2 range(p) 2 loop
09:49:46
finish mi2 range(p) 2 loop
09:49:46
start mi2 range(NT) loop
09:49:46
finish mi2 range(NT) loop
09:49:46
start mi2 range(n) loop
09:49:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:49:46
start mi2 range(n) 2loop
09:49:46
finish mi2 range(n) 2loop
09:49:46
[[-2.61548637]]
end mi2 loop
09:49:46
estep
09:49:46
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:50:02
start ppi1
09:50:02
start mi0
09:50:02
start mi0 range(p) 1 loop
09:50:02
finish mi0 range(p) 1 loop
09:50:02
start mi0 range(p) 2 loop
09:50:02
finish mi0 range(p) 2 loop
09:50:02
start mi0 range(NT) loop
09:50:02
finish mi0 range(NT) loop
09:50:02
start mi0 range(n) loop
09:50:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:50:02
start mi0 range(n) 2loop
09:50:02
finish mi0 range(n) 2loop
09:50:02
start mi1
09:50:02
start mi1 range(p) 1 loop
09:50:02
finish mi1 range(p) 1 loop
09:50:02
start mi1 range(p) 2 loop
09:50:02
finish mi1 range(p) 2 loop
09:50:02
start mi1 range(NT) loop
09:50:02
finish mi1 range(NT) loop
09:50:02
start mi1 range(n) loop
09:50:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:50:02
start mi1 range(n) 2loop
09:50:02
finish mi1 range(n) 2loop
09:50:02
start mi2
09:50:02
start mi2 range(p) 1 loop
09:50:02
finish mi2 range(p) 1 loop
09:50:02
start mi2 range(p) 2 loop
09:50:02
finish mi2 range(p) 2 loop
09:50:02
start mi2 range(NT) loop
09:50:02
finish mi2 range(NT) loop
09:50:02
start mi2 range(n) loop
09:50:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:50:02
start mi2 range(n) 2loop
09:50:02
finish mi2 range(n) 2loop
09:50:02
[[-2.67798304]]
end mi2 loop
09:50:02
estep
09:50:02
end estep
09:50:18
end pa09:50:18
goodness of fit correlation [0.13697258]
start cluster 09:50:18
3
parallel submitted
09:50:37
parallel finished
09:57:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:57:29
start mi0
09:57:29
start mi0 range(p) 1 loop
09:57:29
finish mi0 range(p) 1 loop
09:57:29
start mi0 range(p) 2 loop
09:57:29
finish mi0 range(p) 2 loop
09:57:29
start mi0 range(NT) loop
09:57:29
finish mi0 range(NT) loop
09:57:29
start mi0 range(n) loop
09:57:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:57:29
start mi0 range(n) 2loop
09:57:29
finish mi0 range(n) 2loop
09:57:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:57:29
start mi1 range(p) 1 loop
09:57:29
finish mi1 range(p) 1 loop
09:57:29
start mi1 range(p) 2 loop
09:57:29
finish mi1 range(p) 2 loop
09:57:29
start mi1 range(NT) loop
09:57:29
finish mi1 range(NT) loop
09:57:29
start mi1 range(n) loop
09:57:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:57:29
start mi1 range(n) 2loop
09:57:29
finish mi1 range(n) 2loop
09:57:29
start mi2
09:57:29
start mi2 range(p) 1 loop
09:57:29
finish mi2 range(p) 1 loop
09:57:29
start mi2 range(p) 2 loop
09:57:29
finish mi2 range(p) 2 loop
09:57:29
start mi2 range(NT) loop
09:57:29
finish mi2 range(NT) loop
09:57:29
start mi2 range(n) loop
09:57:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:57:29
start mi2 range(n) 2loop
09:57:29
finish mi2 range(n) 2loop
09:57:29
[[-2.64257691]]
end mi2 loop
09:57:29
estep
09:57:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:57:45
start ppi1
09:57:45
start mi0
09:57:45
start mi0 range(p) 1 loop
09:57:45
finish mi0 range(p) 1 loop
09:57:45
start mi0 range(p) 2 loop
09:57:45
finish mi0 range(p) 2 loop
09:57:45
start mi0 range(NT) loop
09:57:45
finish mi0 range(NT) loop
09:57:45
start mi0 range(n) loop
09:57:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:57:45
start mi0 range(n) 2loop
09:57:45
finish mi0 range(n) 2loop
09:57:45
start mi1
09:57:45
start mi1 range(p) 1 loop
09:57:45
finish mi1 range(p) 1 loop
09:57:45
start mi1 range(p) 2 loop
09:57:45
finish mi1 range(p) 2 loop
09:57:45
start mi1 range(NT) loop
09:57:45
finish mi1 range(NT) loop
09:57:46
start mi1 range(n) loop
09:57:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:57:46
start mi1 range(n) 2loop
09:57:46
finish mi1 range(n) 2loop
09:57:46
start mi2
09:57:46
start mi2 range(p) 1 loop
09:57:46
finish mi2 range(p) 1 loop
09:57:46
start mi2 range(p) 2 loop
09:57:46
finish mi2 range(p) 2 loop
09:57:46
start mi2 range(NT) loop
09:57:46
finish mi2 range(NT) loop
09:57:46
start mi2 range(n) loop
09:57:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:57:46
start mi2 range(n) 2loop
09:57:46
finish mi2 range(n) 2loop
09:57:46
[[-2.70507153]]
end mi2 loop
09:57:46
estep
09:57:46
end estep
09:58:01
end pa09:58:01
goodness of fit correlation [0.14454314]
start cluster 09:58:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37948 instead
  warnings.warn(
4
parallel submitted
09:58:20
parallel finished
10:05:29
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:05:33
start mi0
10:05:33
start mi0 range(p) 1 loop
10:05:33
finish mi0 range(p) 1 loop
10:05:33
start mi0 range(p) 2 loop
10:05:33
finish mi0 range(p) 2 loop
10:05:33
start mi0 range(NT) loop
10:05:33
finish mi0 range(NT) loop
10:05:33
start mi0 range(n) loop
10:05:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:05:33
start mi0 range(n) 2loop
10:05:33
finish mi0 range(n) 2loop
10:05:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:05:33
start mi1 range(p) 1 loop
10:05:33
finish mi1 range(p) 1 loop
10:05:33
start mi1 range(p) 2 loop
10:05:33
finish mi1 range(p) 2 loop
10:05:33
start mi1 range(NT) loop
10:05:33
finish mi1 range(NT) loop
10:05:33
start mi1 range(n) loop
10:05:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:05:33
start mi1 range(n) 2loop
10:05:33
finish mi1 range(n) 2loop
10:05:33
start mi2
10:05:33
start mi2 range(p) 1 loop
10:05:33
finish mi2 range(p) 1 loop
10:05:33
start mi2 range(p) 2 loop
10:05:33
finish mi2 range(p) 2 loop
10:05:33
start mi2 range(NT) loop
10:05:34
finish mi2 range(NT) loop
10:05:34
start mi2 range(n) loop
10:05:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:05:34
start mi2 range(n) 2loop
10:05:34
finish mi2 range(n) 2loop
10:05:34
[[-2.61741025]]
end mi2 loop
10:05:34
estep
10:05:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:05:49
start ppi1
10:05:49
start mi0
10:05:49
start mi0 range(p) 1 loop
10:05:49
finish mi0 range(p) 1 loop
10:05:49
start mi0 range(p) 2 loop
10:05:49
finish mi0 range(p) 2 loop
10:05:49
start mi0 range(NT) loop
10:05:49
finish mi0 range(NT) loop
10:05:50
start mi0 range(n) loop
10:05:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:05:50
start mi0 range(n) 2loop
10:05:50
finish mi0 range(n) 2loop
10:05:50
start mi1
10:05:50
start mi1 range(p) 1 loop
10:05:50
finish mi1 range(p) 1 loop
10:05:50
start mi1 range(p) 2 loop
10:05:50
finish mi1 range(p) 2 loop
10:05:50
start mi1 range(NT) loop
10:05:50
finish mi1 range(NT) loop
10:05:50
start mi1 range(n) loop
10:05:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:05:50
start mi1 range(n) 2loop
10:05:50
finish mi1 range(n) 2loop
10:05:50
start mi2
10:05:50
start mi2 range(p) 1 loop
10:05:50
finish mi2 range(p) 1 loop
10:05:50
start mi2 range(p) 2 loop
10:05:50
finish mi2 range(p) 2 loop
10:05:50
start mi2 range(NT) loop
10:05:50
finish mi2 range(NT) loop
10:05:50
start mi2 range(n) loop
10:05:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:05:50
start mi2 range(n) 2loop
10:05:50
finish mi2 range(n) 2loop
10:05:50
[[-2.67990674]]
end mi2 loop
10:05:50
estep
10:05:50
end estep
10:06:06
end pa10:06:06
goodness of fit correlation [0.15302497]
start cluster 10:06:06
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45544 instead
  warnings.warn(
5
parallel submitted
10:06:23
parallel finished
10:13:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:14:00
start mi0
10:14:00
start mi0 range(p) 1 loop
10:14:00
finish mi0 range(p) 1 loop
10:14:00
start mi0 range(p) 2 loop
10:14:00
finish mi0 range(p) 2 loop
10:14:00
start mi0 range(NT) loop
10:14:00
finish mi0 range(NT) loop
10:14:00
start mi0 range(n) loop
10:14:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:14:00
start mi0 range(n) 2loop
10:14:00
finish mi0 range(n) 2loop
10:14:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:14:00
start mi1 range(p) 1 loop
10:14:00
finish mi1 range(p) 1 loop
10:14:00
start mi1 range(p) 2 loop
10:14:00
finish mi1 range(p) 2 loop
10:14:00
start mi1 range(NT) loop
10:14:00
finish mi1 range(NT) loop
10:14:00
start mi1 range(n) loop
10:14:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:14:00
start mi1 range(n) 2loop
10:14:00
finish mi1 range(n) 2loop
10:14:01
start mi2
10:14:01
start mi2 range(p) 1 loop
10:14:01
finish mi2 range(p) 1 loop
10:14:01
start mi2 range(p) 2 loop
10:14:01
finish mi2 range(p) 2 loop
10:14:01
start mi2 range(NT) loop
10:14:01
finish mi2 range(NT) loop
10:14:01
start mi2 range(n) loop
10:14:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:14:01
start mi2 range(n) 2loop
10:14:01
finish mi2 range(n) 2loop
10:14:01
[[-2.63392753]]
end mi2 loop
10:14:01
estep
10:14:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:14:15
start ppi1
10:14:15
start mi0
10:14:15
start mi0 range(p) 1 loop
10:14:15
finish mi0 range(p) 1 loop
10:14:15
start mi0 range(p) 2 loop
10:14:15
finish mi0 range(p) 2 loop
10:14:15
start mi0 range(NT) loop
10:14:15
finish mi0 range(NT) loop
10:14:15
start mi0 range(n) loop
10:14:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:14:16
start mi0 range(n) 2loop
10:14:16
finish mi0 range(n) 2loop
10:14:16
start mi1
10:14:16
start mi1 range(p) 1 loop
10:14:16
finish mi1 range(p) 1 loop
10:14:16
start mi1 range(p) 2 loop
10:14:16
finish mi1 range(p) 2 loop
10:14:16
start mi1 range(NT) loop
10:14:16
finish mi1 range(NT) loop
10:14:16
start mi1 range(n) loop
10:14:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:14:16
start mi1 range(n) 2loop
10:14:16
finish mi1 range(n) 2loop
10:14:16
start mi2
10:14:16
start mi2 range(p) 1 loop
10:14:16
finish mi2 range(p) 1 loop
10:14:16
start mi2 range(p) 2 loop
10:14:16
finish mi2 range(p) 2 loop
10:14:16
start mi2 range(NT) loop
10:14:16
finish mi2 range(NT) loop
10:14:16
start mi2 range(n) loop
10:14:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:14:16
start mi2 range(n) 2loop
10:14:16
finish mi2 range(n) 2loop
10:14:16
[[-2.6964227]]
end mi2 loop
10:14:16
estep
10:14:16
end estep
10:14:32
end pa10:14:32
goodness of fit correlation [0.14764962]
start cluster 10:14:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39100 instead
  warnings.warn(
6
parallel submitted
10:14:49
parallel finished
10:21:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:21:06
start mi0
10:21:06
start mi0 range(p) 1 loop
10:21:06
finish mi0 range(p) 1 loop
10:21:06
start mi0 range(p) 2 loop
10:21:06
finish mi0 range(p) 2 loop
10:21:06
start mi0 range(NT) loop
10:21:06
finish mi0 range(NT) loop
10:21:06
start mi0 range(n) loop
10:21:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:21:06
start mi0 range(n) 2loop
10:21:06
finish mi0 range(n) 2loop
10:21:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:21:07
start mi1 range(p) 1 loop
10:21:07
finish mi1 range(p) 1 loop
10:21:07
start mi1 range(p) 2 loop
10:21:07
finish mi1 range(p) 2 loop
10:21:07
start mi1 range(NT) loop
10:21:07
finish mi1 range(NT) loop
10:21:07
start mi1 range(n) loop
10:21:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:21:07
start mi1 range(n) 2loop
10:21:07
finish mi1 range(n) 2loop
10:21:07
start mi2
10:21:07
start mi2 range(p) 1 loop
10:21:07
finish mi2 range(p) 1 loop
10:21:07
start mi2 range(p) 2 loop
10:21:07
finish mi2 range(p) 2 loop
10:21:07
start mi2 range(NT) loop
10:21:07
finish mi2 range(NT) loop
10:21:07
start mi2 range(n) loop
10:21:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:21:07
start mi2 range(n) 2loop
10:21:07
finish mi2 range(n) 2loop
10:21:07
[[-2.67210981]]
end mi2 loop
10:21:07
estep
10:21:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:21:23
start ppi1
10:21:23
start mi0
10:21:23
start mi0 range(p) 1 loop
10:21:23
finish mi0 range(p) 1 loop
10:21:23
start mi0 range(p) 2 loop
10:21:23
finish mi0 range(p) 2 loop
10:21:23
start mi0 range(NT) loop
10:21:23
finish mi0 range(NT) loop
10:21:23
start mi0 range(n) loop
10:21:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:21:23
start mi0 range(n) 2loop
10:21:23
finish mi0 range(n) 2loop
10:21:23
start mi1
10:21:23
start mi1 range(p) 1 loop
10:21:23
finish mi1 range(p) 1 loop
10:21:23
start mi1 range(p) 2 loop
10:21:23
finish mi1 range(p) 2 loop
10:21:23
start mi1 range(NT) loop
10:21:23
finish mi1 range(NT) loop
10:21:23
start mi1 range(n) loop
10:21:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:21:23
start mi1 range(n) 2loop
10:21:23
finish mi1 range(n) 2loop
10:21:23
start mi2
10:21:23
start mi2 range(p) 1 loop
10:21:23
finish mi2 range(p) 1 loop
10:21:23
start mi2 range(p) 2 loop
10:21:23
finish mi2 range(p) 2 loop
10:21:23
start mi2 range(NT) loop
10:21:23
finish mi2 range(NT) loop
10:21:23
start mi2 range(n) loop
10:21:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:21:24
start mi2 range(n) 2loop
10:21:24
finish mi2 range(n) 2loop
10:21:24
[[-2.73460314]]
end mi2 loop
10:21:24
estep
10:21:24
end estep
10:21:39
end pa10:21:39
goodness of fit correlation [0.1711742]
start cluster 10:21:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45298 instead
  warnings.warn(
7
parallel submitted
10:21:57
parallel finished
10:25:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:26:00
start mi0
10:26:00
start mi0 range(p) 1 loop
10:26:00
finish mi0 range(p) 1 loop
10:26:00
start mi0 range(p) 2 loop
10:26:00
finish mi0 range(p) 2 loop
10:26:00
start mi0 range(NT) loop
10:26:00
finish mi0 range(NT) loop
10:26:00
start mi0 range(n) loop
10:26:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:26:00
start mi0 range(n) 2loop
10:26:00
finish mi0 range(n) 2loop
10:26:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:26:01
start mi1 range(p) 1 loop
10:26:01
finish mi1 range(p) 1 loop
10:26:01
start mi1 range(p) 2 loop
10:26:01
finish mi1 range(p) 2 loop
10:26:01
start mi1 range(NT) loop
10:26:01
finish mi1 range(NT) loop
10:26:01
start mi1 range(n) loop
10:26:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:26:01
start mi1 range(n) 2loop
10:26:01
finish mi1 range(n) 2loop
10:26:01
start mi2
10:26:01
start mi2 range(p) 1 loop
10:26:01
finish mi2 range(p) 1 loop
10:26:01
start mi2 range(p) 2 loop
10:26:01
finish mi2 range(p) 2 loop
10:26:01
start mi2 range(NT) loop
10:26:01
finish mi2 range(NT) loop
10:26:01
start mi2 range(n) loop
10:26:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:26:01
start mi2 range(n) 2loop
10:26:01
finish mi2 range(n) 2loop
10:26:01
[[-2.6566015]]
end mi2 loop
10:26:01
estep
10:26:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:26:17
start ppi1
10:26:17
start mi0
10:26:17
start mi0 range(p) 1 loop
10:26:17
finish mi0 range(p) 1 loop
10:26:17
start mi0 range(p) 2 loop
10:26:17
finish mi0 range(p) 2 loop
10:26:17
start mi0 range(NT) loop
10:26:17
finish mi0 range(NT) loop
10:26:17
start mi0 range(n) loop
10:26:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:26:17
start mi0 range(n) 2loop
10:26:17
finish mi0 range(n) 2loop
10:26:17
start mi1
10:26:17
start mi1 range(p) 1 loop
10:26:17
finish mi1 range(p) 1 loop
10:26:17
start mi1 range(p) 2 loop
10:26:17
finish mi1 range(p) 2 loop
10:26:17
start mi1 range(NT) loop
10:26:17
finish mi1 range(NT) loop
10:26:17
start mi1 range(n) loop
10:26:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:26:17
start mi1 range(n) 2loop
10:26:17
finish mi1 range(n) 2loop
10:26:17
start mi2
10:26:17
start mi2 range(p) 1 loop
10:26:17
finish mi2 range(p) 1 loop
10:26:17
start mi2 range(p) 2 loop
10:26:17
finish mi2 range(p) 2 loop
10:26:17
start mi2 range(NT) loop
10:26:17
finish mi2 range(NT) loop
10:26:18
start mi2 range(n) loop
10:26:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:26:18
start mi2 range(n) 2loop
10:26:18
finish mi2 range(n) 2loop
10:26:18
[[-2.71909542]]
end mi2 loop
10:26:18
estep
10:26:18
end estep
10:26:34
end pa10:26:34
goodness of fit correlation [0.18756902]
start cluster 10:26:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45380 instead
  warnings.warn(
8
parallel submitted
10:26:52
parallel finished
10:30:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:31:00
start mi0
10:31:00
start mi0 range(p) 1 loop
10:31:00
finish mi0 range(p) 1 loop
10:31:00
start mi0 range(p) 2 loop
10:31:00
finish mi0 range(p) 2 loop
10:31:00
start mi0 range(NT) loop
10:31:00
finish mi0 range(NT) loop
10:31:00
start mi0 range(n) loop
10:31:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:31:00
start mi0 range(n) 2loop
10:31:00
finish mi0 range(n) 2loop
10:31:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:31:00
start mi1 range(p) 1 loop
10:31:00
finish mi1 range(p) 1 loop
10:31:00
start mi1 range(p) 2 loop
10:31:00
finish mi1 range(p) 2 loop
10:31:00
start mi1 range(NT) loop
10:31:00
finish mi1 range(NT) loop
10:31:00
start mi1 range(n) loop
10:31:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:31:00
start mi1 range(n) 2loop
10:31:00
finish mi1 range(n) 2loop
10:31:00
start mi2
10:31:00
start mi2 range(p) 1 loop
10:31:00
finish mi2 range(p) 1 loop
10:31:00
start mi2 range(p) 2 loop
10:31:00
finish mi2 range(p) 2 loop
10:31:00
start mi2 range(NT) loop
10:31:00
finish mi2 range(NT) loop
10:31:00
start mi2 range(n) loop
10:31:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:31:00
start mi2 range(n) 2loop
10:31:00
finish mi2 range(n) 2loop
10:31:01
[[-2.73847302]]
end mi2 loop
10:31:01
estep
10:31:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:31:16
start ppi1
10:31:16
start mi0
10:31:16
start mi0 range(p) 1 loop
10:31:16
finish mi0 range(p) 1 loop
10:31:16
start mi0 range(p) 2 loop
10:31:16
finish mi0 range(p) 2 loop
10:31:16
start mi0 range(NT) loop
10:31:17
finish mi0 range(NT) loop
10:31:17
start mi0 range(n) loop
10:31:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:31:17
start mi0 range(n) 2loop
10:31:17
finish mi0 range(n) 2loop
10:31:17
start mi1
10:31:17
start mi1 range(p) 1 loop
10:31:17
finish mi1 range(p) 1 loop
10:31:17
start mi1 range(p) 2 loop
10:31:17
finish mi1 range(p) 2 loop
10:31:17
start mi1 range(NT) loop
10:31:17
finish mi1 range(NT) loop
10:31:17
start mi1 range(n) loop
10:31:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:31:17
start mi1 range(n) 2loop
10:31:17
finish mi1 range(n) 2loop
10:31:17
start mi2
10:31:17
start mi2 range(p) 1 loop
10:31:17
finish mi2 range(p) 1 loop
10:31:17
start mi2 range(p) 2 loop
10:31:17
finish mi2 range(p) 2 loop
10:31:17
start mi2 range(NT) loop
10:31:17
finish mi2 range(NT) loop
10:31:17
start mi2 range(n) loop
10:31:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:31:17
start mi2 range(n) 2loop
10:31:17
finish mi2 range(n) 2loop
10:31:17
[[-2.80096527]]
end mi2 loop
10:31:17
estep
10:31:17
end estep
10:31:33
end pa10:31:33
goodness of fit correlation [0.24567847]
start cluster 10:31:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43168 instead
  warnings.warn(
9
parallel submitted
10:31:50
parallel finished
10:35:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:35:49
start mi0
10:35:49
start mi0 range(p) 1 loop
10:35:49
finish mi0 range(p) 1 loop
10:35:49
start mi0 range(p) 2 loop
10:35:49
finish mi0 range(p) 2 loop
10:35:49
start mi0 range(NT) loop
10:35:49
finish mi0 range(NT) loop
10:35:49
start mi0 range(n) loop
10:35:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:35:49
start mi0 range(n) 2loop
10:35:49
finish mi0 range(n) 2loop
10:35:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:35:49
start mi1 range(p) 1 loop
10:35:49
finish mi1 range(p) 1 loop
10:35:49
start mi1 range(p) 2 loop
10:35:49
finish mi1 range(p) 2 loop
10:35:49
start mi1 range(NT) loop
10:35:49
finish mi1 range(NT) loop
10:35:49
start mi1 range(n) loop
10:35:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:35:49
start mi1 range(n) 2loop
10:35:49
finish mi1 range(n) 2loop
10:35:49
start mi2
10:35:49
start mi2 range(p) 1 loop
10:35:49
finish mi2 range(p) 1 loop
10:35:49
start mi2 range(p) 2 loop
10:35:50
finish mi2 range(p) 2 loop
10:35:50
start mi2 range(NT) loop
10:35:50
finish mi2 range(NT) loop
10:35:50
start mi2 range(n) loop
10:35:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:35:50
start mi2 range(n) 2loop
10:35:50
finish mi2 range(n) 2loop
10:35:50
[[-2.73534328]]
end mi2 loop
10:35:50
estep
10:35:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:36:05
start ppi1
10:36:05
start mi0
10:36:05
start mi0 range(p) 1 loop
10:36:05
finish mi0 range(p) 1 loop
10:36:05
start mi0 range(p) 2 loop
10:36:05
finish mi0 range(p) 2 loop
10:36:05
start mi0 range(NT) loop
10:36:05
finish mi0 range(NT) loop
10:36:05
start mi0 range(n) loop
10:36:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:36:05
start mi0 range(n) 2loop
10:36:05
finish mi0 range(n) 2loop
10:36:05
start mi1
10:36:05
start mi1 range(p) 1 loop
10:36:05
finish mi1 range(p) 1 loop
10:36:05
start mi1 range(p) 2 loop
10:36:05
finish mi1 range(p) 2 loop
10:36:05
start mi1 range(NT) loop
10:36:06
finish mi1 range(NT) loop
10:36:06
start mi1 range(n) loop
10:36:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:36:06
start mi1 range(n) 2loop
10:36:06
finish mi1 range(n) 2loop
10:36:06
start mi2
10:36:06
start mi2 range(p) 1 loop
10:36:06
finish mi2 range(p) 1 loop
10:36:06
start mi2 range(p) 2 loop
10:36:06
finish mi2 range(p) 2 loop
10:36:06
start mi2 range(NT) loop
10:36:06
finish mi2 range(NT) loop
10:36:06
start mi2 range(n) loop
10:36:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:36:06
start mi2 range(n) 2loop
10:36:06
finish mi2 range(n) 2loop
10:36:06
[[-2.79783555]]
end mi2 loop
10:36:06
estep
10:36:06
end estep
10:36:21
end pa10:36:21
goodness of fit correlation [0.24515345]
start cluster 10:36:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36362 instead
  warnings.warn(
10
parallel submitted
10:36:38
parallel finished
10:40:43
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:40:49
start mi0
10:40:49
start mi0 range(p) 1 loop
10:40:49
finish mi0 range(p) 1 loop
10:40:49
start mi0 range(p) 2 loop
10:40:49
finish mi0 range(p) 2 loop
10:40:49
start mi0 range(NT) loop
10:40:49
finish mi0 range(NT) loop
10:40:49
start mi0 range(n) loop
10:40:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:40:49
start mi0 range(n) 2loop
10:40:49
finish mi0 range(n) 2loop
10:40:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:40:49
start mi1 range(p) 1 loop
10:40:49
finish mi1 range(p) 1 loop
10:40:49
start mi1 range(p) 2 loop
10:40:49
finish mi1 range(p) 2 loop
10:40:49
start mi1 range(NT) loop
10:40:49
finish mi1 range(NT) loop
10:40:49
start mi1 range(n) loop
10:40:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:40:49
start mi1 range(n) 2loop
10:40:49
finish mi1 range(n) 2loop
10:40:50
start mi2
10:40:50
start mi2 range(p) 1 loop
10:40:50
finish mi2 range(p) 1 loop
10:40:50
start mi2 range(p) 2 loop
10:40:50
finish mi2 range(p) 2 loop
10:40:50
start mi2 range(NT) loop
10:40:50
finish mi2 range(NT) loop
10:40:50
start mi2 range(n) loop
10:40:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:40:50
start mi2 range(n) 2loop
10:40:50
finish mi2 range(n) 2loop
10:40:50
[[-2.76217752]]
end mi2 loop
10:40:50
estep
10:40:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:41:06
start ppi1
10:41:06
start mi0
10:41:06
start mi0 range(p) 1 loop
10:41:06
finish mi0 range(p) 1 loop
10:41:06
start mi0 range(p) 2 loop
10:41:06
finish mi0 range(p) 2 loop
10:41:06
start mi0 range(NT) loop
10:41:06
finish mi0 range(NT) loop
10:41:06
start mi0 range(n) loop
10:41:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:41:06
start mi0 range(n) 2loop
10:41:06
finish mi0 range(n) 2loop
10:41:06
start mi1
10:41:06
start mi1 range(p) 1 loop
10:41:06
finish mi1 range(p) 1 loop
10:41:06
start mi1 range(p) 2 loop
10:41:06
finish mi1 range(p) 2 loop
10:41:06
start mi1 range(NT) loop
10:41:06
finish mi1 range(NT) loop
10:41:06
start mi1 range(n) loop
10:41:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:41:06
start mi1 range(n) 2loop
10:41:06
finish mi1 range(n) 2loop
10:41:07
start mi2
10:41:07
start mi2 range(p) 1 loop
10:41:07
finish mi2 range(p) 1 loop
10:41:07
start mi2 range(p) 2 loop
10:41:07
finish mi2 range(p) 2 loop
10:41:07
start mi2 range(NT) loop
10:41:07
finish mi2 range(NT) loop
10:41:07
start mi2 range(n) loop
10:41:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:41:07
start mi2 range(n) 2loop
10:41:07
finish mi2 range(n) 2loop
10:41:07
[[-2.82466965]]
end mi2 loop
10:41:07
estep
10:41:07
end estep
10:41:23
end pa10:41:23
goodness of fit correlation [0.23232766]
start cluster 10:41:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44855 instead
  warnings.warn(
11
parallel submitted
10:41:43
parallel finished
10:45:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:45:58
start mi0
10:45:58
start mi0 range(p) 1 loop
10:45:58
finish mi0 range(p) 1 loop
10:45:58
start mi0 range(p) 2 loop
10:45:58
finish mi0 range(p) 2 loop
10:45:58
start mi0 range(NT) loop
10:45:58
finish mi0 range(NT) loop
10:45:58
start mi0 range(n) loop
10:45:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:45:58
start mi0 range(n) 2loop
10:45:58
finish mi0 range(n) 2loop
10:45:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:45:58
start mi1 range(p) 1 loop
10:45:58
finish mi1 range(p) 1 loop
10:45:58
start mi1 range(p) 2 loop
10:45:58
finish mi1 range(p) 2 loop
10:45:58
start mi1 range(NT) loop
10:45:58
finish mi1 range(NT) loop
10:45:58
start mi1 range(n) loop
10:45:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:45:58
start mi1 range(n) 2loop
10:45:58
finish mi1 range(n) 2loop
10:45:58
start mi2
10:45:58
start mi2 range(p) 1 loop
10:45:58
finish mi2 range(p) 1 loop
10:45:58
start mi2 range(p) 2 loop
10:45:58
finish mi2 range(p) 2 loop
10:45:58
start mi2 range(NT) loop
10:45:58
finish mi2 range(NT) loop
10:45:58
start mi2 range(n) loop
10:45:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:45:58
start mi2 range(n) 2loop
10:45:58
finish mi2 range(n) 2loop
10:45:58
[[-2.75607513]]
end mi2 loop
10:45:58
estep
10:45:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:46:15
start ppi1
10:46:15
start mi0
10:46:15
start mi0 range(p) 1 loop
10:46:15
finish mi0 range(p) 1 loop
10:46:15
start mi0 range(p) 2 loop
10:46:15
finish mi0 range(p) 2 loop
10:46:15
start mi0 range(NT) loop
10:46:15
finish mi0 range(NT) loop
10:46:15
start mi0 range(n) loop
10:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:46:15
start mi0 range(n) 2loop
10:46:15
finish mi0 range(n) 2loop
10:46:15
start mi1
10:46:15
start mi1 range(p) 1 loop
10:46:15
finish mi1 range(p) 1 loop
10:46:15
start mi1 range(p) 2 loop
10:46:15
finish mi1 range(p) 2 loop
10:46:15
start mi1 range(NT) loop
10:46:15
finish mi1 range(NT) loop
10:46:15
start mi1 range(n) loop
10:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:46:15
start mi1 range(n) 2loop
10:46:15
finish mi1 range(n) 2loop
10:46:15
start mi2
10:46:15
start mi2 range(p) 1 loop
10:46:15
finish mi2 range(p) 1 loop
10:46:15
start mi2 range(p) 2 loop
10:46:15
finish mi2 range(p) 2 loop
10:46:15
start mi2 range(NT) loop
10:46:15
finish mi2 range(NT) loop
10:46:15
start mi2 range(n) loop
10:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:46:15
start mi2 range(n) 2loop
10:46:15
finish mi2 range(n) 2loop
10:46:15
[[-2.81856729]]
end mi2 loop
10:46:15
estep
10:46:15
end estep
10:46:31
end pa10:46:31
goodness of fit correlation [0.23398355]
start cluster 10:46:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37864 instead
  warnings.warn(
12
parallel submitted
10:46:49
parallel finished
10:49:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:49:09
start mi0
10:49:09
start mi0 range(p) 1 loop
10:49:09
finish mi0 range(p) 1 loop
10:49:09
start mi0 range(p) 2 loop
10:49:10
finish mi0 range(p) 2 loop
10:49:10
start mi0 range(NT) loop
10:49:10
finish mi0 range(NT) loop
10:49:10
start mi0 range(n) loop
10:49:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:49:10
start mi0 range(n) 2loop
10:49:10
finish mi0 range(n) 2loop
10:49:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:49:10
start mi1 range(p) 1 loop
10:49:10
finish mi1 range(p) 1 loop
10:49:10
start mi1 range(p) 2 loop
10:49:10
finish mi1 range(p) 2 loop
10:49:10
start mi1 range(NT) loop
10:49:10
finish mi1 range(NT) loop
10:49:10
start mi1 range(n) loop
10:49:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:49:10
start mi1 range(n) 2loop
10:49:10
finish mi1 range(n) 2loop
10:49:10
start mi2
10:49:10
start mi2 range(p) 1 loop
10:49:10
finish mi2 range(p) 1 loop
10:49:10
start mi2 range(p) 2 loop
10:49:10
finish mi2 range(p) 2 loop
10:49:10
start mi2 range(NT) loop
10:49:10
finish mi2 range(NT) loop
10:49:10
start mi2 range(n) loop
10:49:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:49:10
start mi2 range(n) 2loop
10:49:10
finish mi2 range(n) 2loop
10:49:10
[[-2.73388004]]
end mi2 loop
10:49:10
estep
10:49:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:25
start ppi1
10:49:25
start mi0
10:49:25
start mi0 range(p) 1 loop
10:49:25
finish mi0 range(p) 1 loop
10:49:25
start mi0 range(p) 2 loop
10:49:25
finish mi0 range(p) 2 loop
10:49:25
start mi0 range(NT) loop
10:49:25
finish mi0 range(NT) loop
10:49:25
start mi0 range(n) loop
10:49:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:25
start mi0 range(n) 2loop
10:49:25
finish mi0 range(n) 2loop
10:49:25
start mi1
10:49:25
start mi1 range(p) 1 loop
10:49:25
finish mi1 range(p) 1 loop
10:49:25
start mi1 range(p) 2 loop
10:49:25
finish mi1 range(p) 2 loop
10:49:25
start mi1 range(NT) loop
10:49:25
finish mi1 range(NT) loop
10:49:25
start mi1 range(n) loop
10:49:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:25
start mi1 range(n) 2loop
10:49:25
finish mi1 range(n) 2loop
10:49:25
start mi2
10:49:25
start mi2 range(p) 1 loop
10:49:25
finish mi2 range(p) 1 loop
10:49:25
start mi2 range(p) 2 loop
10:49:25
finish mi2 range(p) 2 loop
10:49:25
start mi2 range(NT) loop
10:49:25
finish mi2 range(NT) loop
10:49:25
start mi2 range(n) loop
10:49:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:49:25
start mi2 range(n) 2loop
10:49:25
finish mi2 range(n) 2loop
10:49:26
[[-2.79637232]]
end mi2 loop
10:49:26
estep
10:49:26
end estep
10:49:40
end pa10:49:40
goodness of fit correlation [0.24477778]
start cluster 10:49:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46417 instead
  warnings.warn(
13
parallel submitted
10:49:57
parallel finished
10:53:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:53:24
start mi0
10:53:24
start mi0 range(p) 1 loop
10:53:24
finish mi0 range(p) 1 loop
10:53:24
start mi0 range(p) 2 loop
10:53:24
finish mi0 range(p) 2 loop
10:53:24
start mi0 range(NT) loop
10:53:24
finish mi0 range(NT) loop
10:53:24
start mi0 range(n) loop
10:53:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:53:24
start mi0 range(n) 2loop
10:53:24
finish mi0 range(n) 2loop
10:53:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:53:24
start mi1 range(p) 1 loop
10:53:24
finish mi1 range(p) 1 loop
10:53:24
start mi1 range(p) 2 loop
10:53:24
finish mi1 range(p) 2 loop
10:53:24
start mi1 range(NT) loop
10:53:24
finish mi1 range(NT) loop
10:53:24
start mi1 range(n) loop
10:53:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:53:24
start mi1 range(n) 2loop
10:53:24
finish mi1 range(n) 2loop
10:53:24
start mi2
10:53:24
start mi2 range(p) 1 loop
10:53:24
finish mi2 range(p) 1 loop
10:53:24
start mi2 range(p) 2 loop
10:53:24
finish mi2 range(p) 2 loop
10:53:24
start mi2 range(NT) loop
10:53:24
finish mi2 range(NT) loop
10:53:24
start mi2 range(n) loop
10:53:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:53:25
start mi2 range(n) 2loop
10:53:25
finish mi2 range(n) 2loop
10:53:25
[[-2.79133893]]
end mi2 loop
10:53:25
estep
10:53:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:53:41
start ppi1
10:53:41
start mi0
10:53:41
start mi0 range(p) 1 loop
10:53:41
finish mi0 range(p) 1 loop
10:53:41
start mi0 range(p) 2 loop
10:53:41
finish mi0 range(p) 2 loop
10:53:41
start mi0 range(NT) loop
10:53:41
finish mi0 range(NT) loop
10:53:41
start mi0 range(n) loop
10:53:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:53:41
start mi0 range(n) 2loop
10:53:41
finish mi0 range(n) 2loop
10:53:41
start mi1
10:53:41
start mi1 range(p) 1 loop
10:53:41
finish mi1 range(p) 1 loop
10:53:41
start mi1 range(p) 2 loop
10:53:41
finish mi1 range(p) 2 loop
10:53:41
start mi1 range(NT) loop
10:53:41
finish mi1 range(NT) loop
10:53:41
start mi1 range(n) loop
10:53:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:53:41
start mi1 range(n) 2loop
10:53:41
finish mi1 range(n) 2loop
10:53:41
start mi2
10:53:41
start mi2 range(p) 1 loop
10:53:41
finish mi2 range(p) 1 loop
10:53:41
start mi2 range(p) 2 loop
10:53:41
finish mi2 range(p) 2 loop
10:53:41
start mi2 range(NT) loop
10:53:41
finish mi2 range(NT) loop
10:53:41
start mi2 range(n) loop
10:53:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:53:41
start mi2 range(n) 2loop
10:53:41
finish mi2 range(n) 2loop
10:53:41
[[-2.853831]]
end mi2 loop
10:53:41
estep
10:53:41
end estep
10:53:57
end pa10:53:57
goodness of fit correlation [0.29092185]
start cluster 10:53:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35969 instead
  warnings.warn(
14
parallel submitted
10:54:14
parallel finished
10:57:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:57:22
start mi0
10:57:22
start mi0 range(p) 1 loop
10:57:22
finish mi0 range(p) 1 loop
10:57:22
start mi0 range(p) 2 loop
10:57:22
finish mi0 range(p) 2 loop
10:57:22
start mi0 range(NT) loop
10:57:22
finish mi0 range(NT) loop
10:57:22
start mi0 range(n) loop
10:57:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:57:23
start mi0 range(n) 2loop
10:57:23
finish mi0 range(n) 2loop
10:57:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:57:23
start mi1 range(p) 1 loop
10:57:23
finish mi1 range(p) 1 loop
10:57:23
start mi1 range(p) 2 loop
10:57:23
finish mi1 range(p) 2 loop
10:57:23
start mi1 range(NT) loop
10:57:23
finish mi1 range(NT) loop
10:57:23
start mi1 range(n) loop
10:57:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:57:23
start mi1 range(n) 2loop
10:57:23
finish mi1 range(n) 2loop
10:57:23
start mi2
10:57:23
start mi2 range(p) 1 loop
10:57:23
finish mi2 range(p) 1 loop
10:57:23
start mi2 range(p) 2 loop
10:57:23
finish mi2 range(p) 2 loop
10:57:23
start mi2 range(NT) loop
10:57:23
finish mi2 range(NT) loop
10:57:23
start mi2 range(n) loop
10:57:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:57:23
start mi2 range(n) 2loop
10:57:23
finish mi2 range(n) 2loop
10:57:23
[[-2.7476485]]
end mi2 loop
10:57:23
estep
10:57:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:57:38
start ppi1
10:57:38
start mi0
10:57:38
start mi0 range(p) 1 loop
10:57:38
finish mi0 range(p) 1 loop
10:57:38
start mi0 range(p) 2 loop
10:57:38
finish mi0 range(p) 2 loop
10:57:38
start mi0 range(NT) loop
10:57:38
finish mi0 range(NT) loop
10:57:38
start mi0 range(n) loop
10:57:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:57:38
start mi0 range(n) 2loop
10:57:38
finish mi0 range(n) 2loop
10:57:38
start mi1
10:57:38
start mi1 range(p) 1 loop
10:57:38
finish mi1 range(p) 1 loop
10:57:38
start mi1 range(p) 2 loop
10:57:38
finish mi1 range(p) 2 loop
10:57:38
start mi1 range(NT) loop
10:57:38
finish mi1 range(NT) loop
10:57:38
start mi1 range(n) loop
10:57:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:57:38
start mi1 range(n) 2loop
10:57:38
finish mi1 range(n) 2loop
10:57:38
start mi2
10:57:38
start mi2 range(p) 1 loop
10:57:38
finish mi2 range(p) 1 loop
10:57:38
start mi2 range(p) 2 loop
10:57:38
finish mi2 range(p) 2 loop
10:57:38
start mi2 range(NT) loop
10:57:38
finish mi2 range(NT) loop
10:57:38
start mi2 range(n) loop
10:57:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:57:38
start mi2 range(n) 2loop
10:57:38
finish mi2 range(n) 2loop
10:57:38
[[-2.8101407]]
end mi2 loop
10:57:38
estep
10:57:38
end estep
10:57:53
end pa10:57:53
goodness of fit correlation [0.25703317]
start cluster 10:57:53
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40989 instead
  warnings.warn(
15
parallel submitted
10:58:11
parallel finished
11:00:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:00:15
start mi0
11:00:15
start mi0 range(p) 1 loop
11:00:15
finish mi0 range(p) 1 loop
11:00:15
start mi0 range(p) 2 loop
11:00:15
finish mi0 range(p) 2 loop
11:00:15
start mi0 range(NT) loop
11:00:15
finish mi0 range(NT) loop
11:00:15
start mi0 range(n) loop
11:00:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:00:16
start mi0 range(n) 2loop
11:00:16
finish mi0 range(n) 2loop
11:00:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:00:16
start mi1 range(p) 1 loop
11:00:16
finish mi1 range(p) 1 loop
11:00:16
start mi1 range(p) 2 loop
11:00:16
finish mi1 range(p) 2 loop
11:00:16
start mi1 range(NT) loop
11:00:16
finish mi1 range(NT) loop
11:00:16
start mi1 range(n) loop
11:00:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:00:16
start mi1 range(n) 2loop
11:00:16
finish mi1 range(n) 2loop
11:00:16
start mi2
11:00:16
start mi2 range(p) 1 loop
11:00:16
finish mi2 range(p) 1 loop
11:00:16
start mi2 range(p) 2 loop
11:00:16
finish mi2 range(p) 2 loop
11:00:16
start mi2 range(NT) loop
11:00:16
finish mi2 range(NT) loop
11:00:16
start mi2 range(n) loop
11:00:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:00:16
start mi2 range(n) 2loop
11:00:16
finish mi2 range(n) 2loop
11:00:16
[[-2.78108236]]
end mi2 loop
11:00:16
estep
11:00:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:00:31
start ppi1
11:00:31
start mi0
11:00:31
start mi0 range(p) 1 loop
11:00:31
finish mi0 range(p) 1 loop
11:00:31
start mi0 range(p) 2 loop
11:00:31
finish mi0 range(p) 2 loop
11:00:31
start mi0 range(NT) loop
11:00:31
finish mi0 range(NT) loop
11:00:31
start mi0 range(n) loop
11:00:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:00:31
start mi0 range(n) 2loop
11:00:31
finish mi0 range(n) 2loop
11:00:31
start mi1
11:00:31
start mi1 range(p) 1 loop
11:00:31
finish mi1 range(p) 1 loop
11:00:31
start mi1 range(p) 2 loop
11:00:31
finish mi1 range(p) 2 loop
11:00:31
start mi1 range(NT) loop
11:00:31
finish mi1 range(NT) loop
11:00:31
start mi1 range(n) loop
11:00:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:00:31
start mi1 range(n) 2loop
11:00:31
finish mi1 range(n) 2loop
11:00:31
start mi2
11:00:31
start mi2 range(p) 1 loop
11:00:31
finish mi2 range(p) 1 loop
11:00:31
start mi2 range(p) 2 loop
11:00:31
finish mi2 range(p) 2 loop
11:00:31
start mi2 range(NT) loop
11:00:31
finish mi2 range(NT) loop
11:00:31
start mi2 range(n) loop
11:00:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:00:31
start mi2 range(n) 2loop
11:00:31
finish mi2 range(n) 2loop
11:00:32
[[-2.84357445]]
end mi2 loop
11:00:32
estep
11:00:32
end estep
11:00:47
end pa11:00:47
goodness of fit correlation [0.27084076]
start cluster 11:00:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41951 instead
  warnings.warn(
16
parallel submitted
11:01:07
parallel finished
11:04:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:04:13
start mi0
11:04:13
start mi0 range(p) 1 loop
11:04:13
finish mi0 range(p) 1 loop
11:04:13
start mi0 range(p) 2 loop
11:04:13
finish mi0 range(p) 2 loop
11:04:13
start mi0 range(NT) loop
11:04:13
finish mi0 range(NT) loop
11:04:13
start mi0 range(n) loop
11:04:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:04:13
start mi0 range(n) 2loop
11:04:13
finish mi0 range(n) 2loop
11:04:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:04:13
start mi1 range(p) 1 loop
11:04:13
finish mi1 range(p) 1 loop
11:04:13
start mi1 range(p) 2 loop
11:04:13
finish mi1 range(p) 2 loop
11:04:13
start mi1 range(NT) loop
11:04:13
finish mi1 range(NT) loop
11:04:13
start mi1 range(n) loop
11:04:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:04:13
start mi1 range(n) 2loop
11:04:13
finish mi1 range(n) 2loop
11:04:13
start mi2
11:04:13
start mi2 range(p) 1 loop
11:04:13
finish mi2 range(p) 1 loop
11:04:13
start mi2 range(p) 2 loop
11:04:14
finish mi2 range(p) 2 loop
11:04:14
start mi2 range(NT) loop
11:04:14
finish mi2 range(NT) loop
11:04:14
start mi2 range(n) loop
11:04:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:04:14
start mi2 range(n) 2loop
11:04:14
finish mi2 range(n) 2loop
11:04:14
[[-2.80934945]]
end mi2 loop
11:04:14
estep
11:04:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:04:30
start ppi1
11:04:30
start mi0
11:04:30
start mi0 range(p) 1 loop
11:04:30
finish mi0 range(p) 1 loop
11:04:30
start mi0 range(p) 2 loop
11:04:30
finish mi0 range(p) 2 loop
11:04:30
start mi0 range(NT) loop
11:04:30
finish mi0 range(NT) loop
11:04:30
start mi0 range(n) loop
11:04:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:04:30
start mi0 range(n) 2loop
11:04:30
finish mi0 range(n) 2loop
11:04:30
start mi1
11:04:30
start mi1 range(p) 1 loop
11:04:30
finish mi1 range(p) 1 loop
11:04:30
start mi1 range(p) 2 loop
11:04:30
finish mi1 range(p) 2 loop
11:04:30
start mi1 range(NT) loop
11:04:30
finish mi1 range(NT) loop
11:04:30
start mi1 range(n) loop
11:04:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:04:30
start mi1 range(n) 2loop
11:04:30
finish mi1 range(n) 2loop
11:04:31
[[-2.87180484]]
end mi1 loop
11:04:31
estep
11:04:31
end estep
11:04:47
end pa11:04:47
goodness of fit correlation [0.28432009]
start cluster 11:04:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37907 instead
  warnings.warn(
17
parallel submitted
11:05:07
parallel finished
11:08:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:08:08
start mi0
11:08:08
start mi0 range(p) 1 loop
11:08:08
finish mi0 range(p) 1 loop
11:08:08
start mi0 range(p) 2 loop
11:08:08
finish mi0 range(p) 2 loop
11:08:08
start mi0 range(NT) loop
11:08:09
finish mi0 range(NT) loop
11:08:09
start mi0 range(n) loop
11:08:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:08:09
start mi0 range(n) 2loop
11:08:09
finish mi0 range(n) 2loop
11:08:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:08:09
start mi1 range(p) 1 loop
11:08:09
finish mi1 range(p) 1 loop
11:08:09
start mi1 range(p) 2 loop
11:08:09
finish mi1 range(p) 2 loop
11:08:09
start mi1 range(NT) loop
11:08:09
finish mi1 range(NT) loop
11:08:09
start mi1 range(n) loop
11:08:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:08:09
start mi1 range(n) 2loop
11:08:09
finish mi1 range(n) 2loop
11:08:09
start mi2
11:08:09
start mi2 range(p) 1 loop
11:08:09
finish mi2 range(p) 1 loop
11:08:09
start mi2 range(p) 2 loop
11:08:09
finish mi2 range(p) 2 loop
11:08:09
start mi2 range(NT) loop
11:08:09
finish mi2 range(NT) loop
11:08:09
start mi2 range(n) loop
11:08:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:08:09
start mi2 range(n) 2loop
11:08:09
finish mi2 range(n) 2loop
11:08:09
[[-2.79106371]]
end mi2 loop
11:08:09
estep
11:08:09
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:08:25
start ppi1
11:08:25
start mi0
11:08:25
start mi0 range(p) 1 loop
11:08:25
finish mi0 range(p) 1 loop
11:08:25
start mi0 range(p) 2 loop
11:08:25
finish mi0 range(p) 2 loop
11:08:25
start mi0 range(NT) loop
11:08:26
finish mi0 range(NT) loop
11:08:26
start mi0 range(n) loop
11:08:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:08:26
start mi0 range(n) 2loop
11:08:26
finish mi0 range(n) 2loop
11:08:26
start mi1
11:08:26
start mi1 range(p) 1 loop
11:08:26
finish mi1 range(p) 1 loop
11:08:26
start mi1 range(p) 2 loop
11:08:26
finish mi1 range(p) 2 loop
11:08:26
start mi1 range(NT) loop
11:08:26
finish mi1 range(NT) loop
11:08:26
start mi1 range(n) loop
11:08:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:08:26
start mi1 range(n) 2loop
11:08:26
finish mi1 range(n) 2loop
11:08:26
start mi2
11:08:26
start mi2 range(p) 1 loop
11:08:26
finish mi2 range(p) 1 loop
11:08:26
start mi2 range(p) 2 loop
11:08:26
finish mi2 range(p) 2 loop
11:08:26
start mi2 range(NT) loop
11:08:26
finish mi2 range(NT) loop
11:08:26
start mi2 range(n) loop
11:08:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:08:26
start mi2 range(n) 2loop
11:08:26
finish mi2 range(n) 2loop
11:08:26
[[-2.85355578]]
end mi2 loop
11:08:26
estep
11:08:26
end estep
11:08:42
end pa11:08:42
goodness of fit correlation [0.24813837]
start cluster 11:08:42
18
parallel submitted
11:09:06
parallel finished
11:12:06
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:12:15
start mi0
11:12:15
start mi0 range(p) 1 loop
11:12:15
finish mi0 range(p) 1 loop
11:12:15
start mi0 range(p) 2 loop
11:12:15
finish mi0 range(p) 2 loop
11:12:15
start mi0 range(NT) loop
11:12:15
finish mi0 range(NT) loop
11:12:15
start mi0 range(n) loop
11:12:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:12:15
start mi0 range(n) 2loop
11:12:15
finish mi0 range(n) 2loop
11:12:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:12:15
start mi1 range(p) 1 loop
11:12:15
finish mi1 range(p) 1 loop
11:12:15
start mi1 range(p) 2 loop
11:12:15
finish mi1 range(p) 2 loop
11:12:15
start mi1 range(NT) loop
11:12:16
finish mi1 range(NT) loop
11:12:16
start mi1 range(n) loop
11:12:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:12:16
start mi1 range(n) 2loop
11:12:16
finish mi1 range(n) 2loop
11:12:16
start mi2
11:12:16
start mi2 range(p) 1 loop
11:12:16
finish mi2 range(p) 1 loop
11:12:16
start mi2 range(p) 2 loop
11:12:16
finish mi2 range(p) 2 loop
11:12:16
start mi2 range(NT) loop
11:12:16
finish mi2 range(NT) loop
11:12:16
start mi2 range(n) loop
11:12:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:12:16
start mi2 range(n) 2loop
11:12:16
finish mi2 range(n) 2loop
11:12:16
[[-2.77207871]]
end mi2 loop
11:12:16
estep
11:12:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:12:32
start ppi1
11:12:32
start mi0
11:12:32
start mi0 range(p) 1 loop
11:12:32
finish mi0 range(p) 1 loop
11:12:32
start mi0 range(p) 2 loop
11:12:32
finish mi0 range(p) 2 loop
11:12:32
start mi0 range(NT) loop
11:12:32
finish mi0 range(NT) loop
11:12:32
start mi0 range(n) loop
11:12:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:12:32
start mi0 range(n) 2loop
11:12:32
finish mi0 range(n) 2loop
11:12:33
start mi1
11:12:33
start mi1 range(p) 1 loop
11:12:33
finish mi1 range(p) 1 loop
11:12:33
start mi1 range(p) 2 loop
11:12:33
finish mi1 range(p) 2 loop
11:12:33
start mi1 range(NT) loop
11:12:33
finish mi1 range(NT) loop
11:12:33
start mi1 range(n) loop
11:12:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:12:33
start mi1 range(n) 2loop
11:12:33
finish mi1 range(n) 2loop
11:12:33
start mi2
11:12:33
start mi2 range(p) 1 loop
11:12:33
finish mi2 range(p) 1 loop
11:12:33
start mi2 range(p) 2 loop
11:12:33
finish mi2 range(p) 2 loop
11:12:33
start mi2 range(NT) loop
11:12:33
finish mi2 range(NT) loop
11:12:33
start mi2 range(n) loop
11:12:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:12:33
start mi2 range(n) 2loop
11:12:33
finish mi2 range(n) 2loop
11:12:33
[[-2.83457082]]
end mi2 loop
11:12:33
estep
11:12:33
end estep
11:12:48
end pa11:12:48
goodness of fit correlation [0.24226377]
start cluster 11:12:48
19
parallel submitted
11:13:08
parallel finished
11:15:30
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:15:39
start mi0
11:15:39
start mi0 range(p) 1 loop
11:15:39
finish mi0 range(p) 1 loop
11:15:39
start mi0 range(p) 2 loop
11:15:39
finish mi0 range(p) 2 loop
11:15:39
start mi0 range(NT) loop
11:15:39
finish mi0 range(NT) loop
11:15:39
start mi0 range(n) loop
11:15:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:15:39
start mi0 range(n) 2loop
11:15:39
finish mi0 range(n) 2loop
11:15:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:15:40
start mi1 range(p) 1 loop
11:15:40
finish mi1 range(p) 1 loop
11:15:40
start mi1 range(p) 2 loop
11:15:40
finish mi1 range(p) 2 loop
11:15:40
start mi1 range(NT) loop
11:15:40
finish mi1 range(NT) loop
11:15:40
start mi1 range(n) loop
11:15:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:15:40
start mi1 range(n) 2loop
11:15:40
finish mi1 range(n) 2loop
11:15:40
start mi2
11:15:40
start mi2 range(p) 1 loop
11:15:40
finish mi2 range(p) 1 loop
11:15:40
start mi2 range(p) 2 loop
11:15:40
finish mi2 range(p) 2 loop
11:15:40
start mi2 range(NT) loop
11:15:40
finish mi2 range(NT) loop
11:15:40
start mi2 range(n) loop
11:15:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:15:40
start mi2 range(n) 2loop
11:15:40
finish mi2 range(n) 2loop
11:15:40
[[-2.75393621]]
end mi2 loop
11:15:40
estep
11:15:40
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:15:56
start ppi1
11:15:56
start mi0
11:15:56
start mi0 range(p) 1 loop
11:15:56
finish mi0 range(p) 1 loop
11:15:56
start mi0 range(p) 2 loop
11:15:56
finish mi0 range(p) 2 loop
11:15:56
start mi0 range(NT) loop
11:15:56
finish mi0 range(NT) loop
11:15:56
start mi0 range(n) loop
11:15:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:15:57
start mi0 range(n) 2loop
11:15:57
finish mi0 range(n) 2loop
11:15:57
start mi1
11:15:57
start mi1 range(p) 1 loop
11:15:57
finish mi1 range(p) 1 loop
11:15:57
start mi1 range(p) 2 loop
11:15:57
finish mi1 range(p) 2 loop
11:15:57
start mi1 range(NT) loop
11:15:57
finish mi1 range(NT) loop
11:15:57
start mi1 range(n) loop
11:15:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:15:57
start mi1 range(n) 2loop
11:15:57
finish mi1 range(n) 2loop
11:15:57
start mi2
11:15:57
start mi2 range(p) 1 loop
11:15:57
finish mi2 range(p) 1 loop
11:15:57
start mi2 range(p) 2 loop
11:15:57
finish mi2 range(p) 2 loop
11:15:57
start mi2 range(NT) loop
11:15:57
finish mi2 range(NT) loop
11:15:57
start mi2 range(n) loop
11:15:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:15:57
start mi2 range(n) 2loop
11:15:57
finish mi2 range(n) 2loop
11:15:57
[[-2.81642838]]
end mi2 loop
11:15:57
estep
11:15:57
end estep
11:16:13
end pa11:16:13
goodness of fit correlation [0.24037083]
start cluster 11:16:13
20
parallel submitted
11:16:33
parallel finished
11:19:34
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:19:43
start mi0
11:19:43
start mi0 range(p) 1 loop
11:19:43
finish mi0 range(p) 1 loop
11:19:43
start mi0 range(p) 2 loop
11:19:43
finish mi0 range(p) 2 loop
11:19:43
start mi0 range(NT) loop
11:19:43
finish mi0 range(NT) loop
11:19:43
start mi0 range(n) loop
11:19:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:19:44
start mi0 range(n) 2loop
11:19:44
finish mi0 range(n) 2loop
11:19:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:19:44
start mi1 range(p) 1 loop
11:19:44
finish mi1 range(p) 1 loop
11:19:44
start mi1 range(p) 2 loop
11:19:44
finish mi1 range(p) 2 loop
11:19:44
start mi1 range(NT) loop
11:19:44
finish mi1 range(NT) loop
11:19:44
start mi1 range(n) loop
11:19:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:19:44
start mi1 range(n) 2loop
11:19:44
finish mi1 range(n) 2loop
11:19:44
start mi2
11:19:44
start mi2 range(p) 1 loop
11:19:44
finish mi2 range(p) 1 loop
11:19:44
start mi2 range(p) 2 loop
11:19:44
finish mi2 range(p) 2 loop
11:19:44
start mi2 range(NT) loop
11:19:44
finish mi2 range(NT) loop
11:19:44
start mi2 range(n) loop
11:19:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:19:44
start mi2 range(n) 2loop
11:19:44
finish mi2 range(n) 2loop
11:19:44
[[-2.70040796]]
end mi2 loop
11:19:44
estep
11:19:44
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:19:59
start ppi1
11:19:59
start mi0
11:19:59
start mi0 range(p) 1 loop
11:19:59
finish mi0 range(p) 1 loop
11:19:59
start mi0 range(p) 2 loop
11:19:59
finish mi0 range(p) 2 loop
11:19:59
start mi0 range(NT) loop
11:19:59
finish mi0 range(NT) loop
11:19:59
start mi0 range(n) loop
11:19:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:19:59
start mi0 range(n) 2loop
11:19:59
finish mi0 range(n) 2loop
11:19:59
start mi1
11:19:59
start mi1 range(p) 1 loop
11:19:59
finish mi1 range(p) 1 loop
11:19:59
start mi1 range(p) 2 loop
11:19:59
finish mi1 range(p) 2 loop
11:19:59
start mi1 range(NT) loop
11:19:59
finish mi1 range(NT) loop
11:19:59
start mi1 range(n) loop
11:19:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:19:59
start mi1 range(n) 2loop
11:19:59
finish mi1 range(n) 2loop
11:19:59
start mi2
11:19:59
start mi2 range(p) 1 loop
11:19:59
finish mi2 range(p) 1 loop
11:19:59
start mi2 range(p) 2 loop
11:19:59
finish mi2 range(p) 2 loop
11:19:59
start mi2 range(NT) loop
11:19:59
finish mi2 range(NT) loop
11:19:59
start mi2 range(n) loop
11:19:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:20:00
start mi2 range(n) 2loop
11:20:00
finish mi2 range(n) 2loop
11:20:00
[[-2.76290062]]
end mi2 loop
11:20:00
estep
11:20:00
end estep
11:20:15
end pa11:20:15
goodness of fit correlation [0.18062752]
start cluster 11:20:15
21
parallel submitted
11:20:35
parallel finished
11:24:06
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:24:16
start mi0
11:24:16
start mi0 range(p) 1 loop
11:24:16
finish mi0 range(p) 1 loop
11:24:16
start mi0 range(p) 2 loop
11:24:16
finish mi0 range(p) 2 loop
11:24:16
start mi0 range(NT) loop
11:24:16
finish mi0 range(NT) loop
11:24:16
start mi0 range(n) loop
11:24:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:24:16
start mi0 range(n) 2loop
11:24:16
finish mi0 range(n) 2loop
11:24:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:24:16
start mi1 range(p) 1 loop
11:24:16
finish mi1 range(p) 1 loop
11:24:16
start mi1 range(p) 2 loop
11:24:16
finish mi1 range(p) 2 loop
11:24:16
start mi1 range(NT) loop
11:24:16
finish mi1 range(NT) loop
11:24:16
start mi1 range(n) loop
11:24:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:24:16
start mi1 range(n) 2loop
11:24:16
finish mi1 range(n) 2loop
11:24:16
start mi2
11:24:16
start mi2 range(p) 1 loop
11:24:16
finish mi2 range(p) 1 loop
11:24:16
start mi2 range(p) 2 loop
11:24:16
finish mi2 range(p) 2 loop
11:24:16
start mi2 range(NT) loop
11:24:16
finish mi2 range(NT) loop
11:24:16
start mi2 range(n) loop
11:24:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:24:16
start mi2 range(n) 2loop
11:24:16
finish mi2 range(n) 2loop
11:24:16
[[-2.70928765]]
end mi2 loop
11:24:16
estep
11:24:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:24:31
start ppi1
11:24:31
start mi0
11:24:31
start mi0 range(p) 1 loop
11:24:31
finish mi0 range(p) 1 loop
11:24:31
start mi0 range(p) 2 loop
11:24:31
finish mi0 range(p) 2 loop
11:24:31
start mi0 range(NT) loop
11:24:31
finish mi0 range(NT) loop
11:24:31
start mi0 range(n) loop
11:24:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:24:31
start mi0 range(n) 2loop
11:24:31
finish mi0 range(n) 2loop
11:24:31
start mi1
11:24:31
start mi1 range(p) 1 loop
11:24:31
finish mi1 range(p) 1 loop
11:24:31
start mi1 range(p) 2 loop
11:24:31
finish mi1 range(p) 2 loop
11:24:31
start mi1 range(NT) loop
11:24:31
finish mi1 range(NT) loop
11:24:31
start mi1 range(n) loop
11:24:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:24:32
start mi1 range(n) 2loop
11:24:32
finish mi1 range(n) 2loop
11:24:32
start mi2
11:24:32
start mi2 range(p) 1 loop
11:24:32
finish mi2 range(p) 1 loop
11:24:32
start mi2 range(p) 2 loop
11:24:32
finish mi2 range(p) 2 loop
11:24:32
start mi2 range(NT) loop
11:24:32
finish mi2 range(NT) loop
11:24:32
start mi2 range(n) loop
11:24:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:24:32
start mi2 range(n) 2loop
11:24:32
finish mi2 range(n) 2loop
11:24:32
[[-2.77178018]]
end mi2 loop
11:24:32
estep
11:24:32
end estep
11:24:47
end pa11:24:47
goodness of fit correlation [0.2022704]
start cluster 11:24:47
22
parallel submitted
11:25:08
parallel finished
11:28:22
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:28:31
start mi0
11:28:31
start mi0 range(p) 1 loop
11:28:31
finish mi0 range(p) 1 loop
11:28:31
start mi0 range(p) 2 loop
11:28:31
finish mi0 range(p) 2 loop
11:28:31
start mi0 range(NT) loop
11:28:31
finish mi0 range(NT) loop
11:28:31
start mi0 range(n) loop
11:28:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:28:31
start mi0 range(n) 2loop
11:28:31
finish mi0 range(n) 2loop
11:28:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:28:31
start mi1 range(p) 1 loop
11:28:31
finish mi1 range(p) 1 loop
11:28:31
start mi1 range(p) 2 loop
11:28:31
finish mi1 range(p) 2 loop
11:28:31
start mi1 range(NT) loop
11:28:31
finish mi1 range(NT) loop
11:28:31
start mi1 range(n) loop
11:28:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:28:31
start mi1 range(n) 2loop
11:28:31
finish mi1 range(n) 2loop
11:28:31
start mi2
11:28:31
start mi2 range(p) 1 loop
11:28:31
finish mi2 range(p) 1 loop
11:28:31
start mi2 range(p) 2 loop
11:28:31
finish mi2 range(p) 2 loop
11:28:31
start mi2 range(NT) loop
11:28:31
finish mi2 range(NT) loop
11:28:31
start mi2 range(n) loop
11:28:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:28:31
start mi2 range(n) 2loop
11:28:31
finish mi2 range(n) 2loop
11:28:31
[[-2.63926399]]
end mi2 loop
11:28:31
estep
11:28:31
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:28:47
start ppi1
11:28:47
start mi0
11:28:47
start mi0 range(p) 1 loop
11:28:47
finish mi0 range(p) 1 loop
11:28:47
start mi0 range(p) 2 loop
11:28:47
finish mi0 range(p) 2 loop
11:28:47
start mi0 range(NT) loop
11:28:47
finish mi0 range(NT) loop
11:28:47
start mi0 range(n) loop
11:28:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:28:47
start mi0 range(n) 2loop
11:28:47
finish mi0 range(n) 2loop
11:28:47
start mi1
11:28:47
start mi1 range(p) 1 loop
11:28:47
finish mi1 range(p) 1 loop
11:28:47
start mi1 range(p) 2 loop
11:28:47
finish mi1 range(p) 2 loop
11:28:47
start mi1 range(NT) loop
11:28:47
finish mi1 range(NT) loop
11:28:47
start mi1 range(n) loop
11:28:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:28:47
start mi1 range(n) 2loop
11:28:47
finish mi1 range(n) 2loop
11:28:47
start mi2
11:28:47
start mi2 range(p) 1 loop
11:28:47
finish mi2 range(p) 1 loop
11:28:47
start mi2 range(p) 2 loop
11:28:47
finish mi2 range(p) 2 loop
11:28:47
start mi2 range(NT) loop
11:28:47
finish mi2 range(NT) loop
11:28:47
start mi2 range(n) loop
11:28:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:28:47
start mi2 range(n) 2loop
11:28:47
finish mi2 range(n) 2loop
11:28:47
[[-2.70175881]]
end mi2 loop
11:28:47
estep
11:28:47
end estep
11:29:02
end pa11:29:02
goodness of fit correlation [0.19940253]
start cluster 11:29:02
23
parallel submitted
11:29:25
parallel finished
11:33:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:33:10
start mi0
11:33:10
start mi0 range(p) 1 loop
11:33:10
finish mi0 range(p) 1 loop
11:33:10
start mi0 range(p) 2 loop
11:33:10
finish mi0 range(p) 2 loop
11:33:10
start mi0 range(NT) loop
11:33:10
finish mi0 range(NT) loop
11:33:10
start mi0 range(n) loop
11:33:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:33:11
start mi0 range(n) 2loop
11:33:11
finish mi0 range(n) 2loop
11:33:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:33:11
start mi1 range(p) 1 loop
11:33:11
finish mi1 range(p) 1 loop
11:33:11
start mi1 range(p) 2 loop
11:33:11
finish mi1 range(p) 2 loop
11:33:11
start mi1 range(NT) loop
11:33:11
finish mi1 range(NT) loop
11:33:11
start mi1 range(n) loop
11:33:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:33:11
start mi1 range(n) 2loop
11:33:11
finish mi1 range(n) 2loop
11:33:11
start mi2
11:33:11
start mi2 range(p) 1 loop
11:33:11
finish mi2 range(p) 1 loop
11:33:11
start mi2 range(p) 2 loop
11:33:11
finish mi2 range(p) 2 loop
11:33:11
start mi2 range(NT) loop
11:33:11
finish mi2 range(NT) loop
11:33:11
start mi2 range(n) loop
11:33:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:33:11
start mi2 range(n) 2loop
11:33:11
finish mi2 range(n) 2loop
11:33:11
[[-2.72628207]]
end mi2 loop
11:33:11
estep
11:33:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:33:26
start ppi1
11:33:26
start mi0
11:33:26
start mi0 range(p) 1 loop
11:33:26
finish mi0 range(p) 1 loop
11:33:26
start mi0 range(p) 2 loop
11:33:26
finish mi0 range(p) 2 loop
11:33:26
start mi0 range(NT) loop
11:33:26
finish mi0 range(NT) loop
11:33:26
start mi0 range(n) loop
11:33:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:33:26
start mi0 range(n) 2loop
11:33:26
finish mi0 range(n) 2loop
11:33:26
start mi1
11:33:26
start mi1 range(p) 1 loop
11:33:26
finish mi1 range(p) 1 loop
11:33:26
start mi1 range(p) 2 loop
11:33:26
finish mi1 range(p) 2 loop
11:33:26
start mi1 range(NT) loop
11:33:26
finish mi1 range(NT) loop
11:33:26
start mi1 range(n) loop
11:33:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:33:27
start mi1 range(n) 2loop
11:33:27
finish mi1 range(n) 2loop
11:33:27
start mi2
11:33:27
start mi2 range(p) 1 loop
11:33:27
finish mi2 range(p) 1 loop
11:33:27
start mi2 range(p) 2 loop
11:33:27
finish mi2 range(p) 2 loop
11:33:27
start mi2 range(NT) loop
11:33:27
finish mi2 range(NT) loop
11:33:27
start mi2 range(n) loop
11:33:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:33:27
start mi2 range(n) 2loop
11:33:27
finish mi2 range(n) 2loop
11:33:27
[[-2.78877441]]
end mi2 loop
11:33:27
estep
11:33:27
end estep
11:33:42
end pa11:33:42
goodness of fit correlation [0.19359708]
start cluster 11:33:42
24
parallel submitted
11:34:03
parallel finished
11:37:28
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:37:39
start mi0
11:37:39
start mi0 range(p) 1 loop
11:37:39
finish mi0 range(p) 1 loop
11:37:39
start mi0 range(p) 2 loop
11:37:39
finish mi0 range(p) 2 loop
11:37:39
start mi0 range(NT) loop
11:37:39
finish mi0 range(NT) loop
11:37:39
start mi0 range(n) loop
11:37:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:37:39
start mi0 range(n) 2loop
11:37:39
finish mi0 range(n) 2loop
11:37:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:37:39
start mi1 range(p) 1 loop
11:37:39
finish mi1 range(p) 1 loop
11:37:39
start mi1 range(p) 2 loop
11:37:39
finish mi1 range(p) 2 loop
11:37:39
start mi1 range(NT) loop
11:37:40
finish mi1 range(NT) loop
11:37:40
start mi1 range(n) loop
11:37:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:37:40
start mi1 range(n) 2loop
11:37:40
finish mi1 range(n) 2loop
11:37:40
start mi2
11:37:40
start mi2 range(p) 1 loop
11:37:40
finish mi2 range(p) 1 loop
11:37:40
start mi2 range(p) 2 loop
11:37:40
finish mi2 range(p) 2 loop
11:37:40
start mi2 range(NT) loop
11:37:40
finish mi2 range(NT) loop
11:37:40
start mi2 range(n) loop
11:37:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:37:40
start mi2 range(n) 2loop
11:37:40
finish mi2 range(n) 2loop
11:37:40
[[-2.72190401]]
end mi2 loop
11:37:40
estep
11:37:40
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:37:55
start ppi1
11:37:55
start mi0
11:37:55
start mi0 range(p) 1 loop
11:37:55
finish mi0 range(p) 1 loop
11:37:55
start mi0 range(p) 2 loop
11:37:55
finish mi0 range(p) 2 loop
11:37:55
start mi0 range(NT) loop
11:37:55
finish mi0 range(NT) loop
11:37:55
start mi0 range(n) loop
11:37:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:37:55
start mi0 range(n) 2loop
11:37:55
finish mi0 range(n) 2loop
11:37:55
start mi1
11:37:55
start mi1 range(p) 1 loop
11:37:55
finish mi1 range(p) 1 loop
11:37:55
start mi1 range(p) 2 loop
11:37:55
finish mi1 range(p) 2 loop
11:37:55
start mi1 range(NT) loop
11:37:55
finish mi1 range(NT) loop
11:37:55
start mi1 range(n) loop
11:37:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:37:56
start mi1 range(n) 2loop
11:37:56
finish mi1 range(n) 2loop
11:37:56
start mi2
11:37:56
start mi2 range(p) 1 loop
11:37:56
finish mi2 range(p) 1 loop
11:37:56
start mi2 range(p) 2 loop
11:37:56
finish mi2 range(p) 2 loop
11:37:56
start mi2 range(NT) loop
11:37:56
finish mi2 range(NT) loop
11:37:56
start mi2 range(n) loop
11:37:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:37:56
start mi2 range(n) 2loop
11:37:56
finish mi2 range(n) 2loop
11:37:56
[[-2.7843964]]
end mi2 loop
11:37:56
estep
11:37:56
end estep
11:38:11
end pa11:38:11
goodness of fit correlation [0.20108319]
start cluster 11:38:11
25
parallel submitted
11:38:32
parallel finished
11:41:07
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:41:17
start mi0
11:41:17
start mi0 range(p) 1 loop
11:41:17
finish mi0 range(p) 1 loop
11:41:17
start mi0 range(p) 2 loop
11:41:17
finish mi0 range(p) 2 loop
11:41:17
start mi0 range(NT) loop
11:41:17
finish mi0 range(NT) loop
11:41:17
start mi0 range(n) loop
11:41:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:41:17
start mi0 range(n) 2loop
11:41:17
finish mi0 range(n) 2loop
11:41:17
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:41:17
start mi1 range(p) 1 loop
11:41:17
finish mi1 range(p) 1 loop
11:41:17
start mi1 range(p) 2 loop
11:41:17
finish mi1 range(p) 2 loop
11:41:17
start mi1 range(NT) loop
11:41:17
finish mi1 range(NT) loop
11:41:17
start mi1 range(n) loop
11:41:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:41:17
start mi1 range(n) 2loop
11:41:17
finish mi1 range(n) 2loop
11:41:17
start mi2
11:41:17
start mi2 range(p) 1 loop
11:41:17
finish mi2 range(p) 1 loop
11:41:17
start mi2 range(p) 2 loop
11:41:17
finish mi2 range(p) 2 loop
11:41:17
start mi2 range(NT) loop
11:41:17
finish mi2 range(NT) loop
11:41:17
start mi2 range(n) loop
11:41:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:41:18
start mi2 range(n) 2loop
11:41:18
finish mi2 range(n) 2loop
11:41:18
[[-2.67415472]]
end mi2 loop
11:41:18
estep
11:41:18
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:41:34
start ppi1
11:41:34
start mi0
11:41:34
start mi0 range(p) 1 loop
11:41:34
finish mi0 range(p) 1 loop
11:41:34
start mi0 range(p) 2 loop
11:41:34
finish mi0 range(p) 2 loop
11:41:34
start mi0 range(NT) loop
11:41:34
finish mi0 range(NT) loop
11:41:34
start mi0 range(n) loop
11:41:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:41:34
start mi0 range(n) 2loop
11:41:34
finish mi0 range(n) 2loop
11:41:35
start mi1
11:41:35
start mi1 range(p) 1 loop
11:41:35
finish mi1 range(p) 1 loop
11:41:35
start mi1 range(p) 2 loop
11:41:35
finish mi1 range(p) 2 loop
11:41:35
start mi1 range(NT) loop
11:41:35
finish mi1 range(NT) loop
11:41:35
start mi1 range(n) loop
11:41:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:41:35
start mi1 range(n) 2loop
11:41:35
finish mi1 range(n) 2loop
11:41:35
start mi2
11:41:35
start mi2 range(p) 1 loop
11:41:35
finish mi2 range(p) 1 loop
11:41:35
start mi2 range(p) 2 loop
11:41:35
finish mi2 range(p) 2 loop
11:41:35
start mi2 range(NT) loop
11:41:35
finish mi2 range(NT) loop
11:41:35
start mi2 range(n) loop
11:41:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:41:35
start mi2 range(n) 2loop
11:41:35
finish mi2 range(n) 2loop
11:41:35
[[-2.73664799]]
end mi2 loop
11:41:35
estep
11:41:35
end estep
11:41:51
end pa11:41:51
goodness of fit correlation [0.14799296]
start cluster 11:41:51
26
parallel submitted
11:42:12
parallel finished
11:45:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:46:10
start mi0
11:46:10
start mi0 range(p) 1 loop
11:46:10
finish mi0 range(p) 1 loop
11:46:10
start mi0 range(p) 2 loop
11:46:10
finish mi0 range(p) 2 loop
11:46:10
start mi0 range(NT) loop
11:46:10
finish mi0 range(NT) loop
11:46:10
start mi0 range(n) loop
11:46:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:46:10
start mi0 range(n) 2loop
11:46:10
finish mi0 range(n) 2loop
11:46:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:46:10
start mi1 range(p) 1 loop
11:46:10
finish mi1 range(p) 1 loop
11:46:10
start mi1 range(p) 2 loop
11:46:10
finish mi1 range(p) 2 loop
11:46:10
start mi1 range(NT) loop
11:46:10
finish mi1 range(NT) loop
11:46:10
start mi1 range(n) loop
11:46:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:46:10
start mi1 range(n) 2loop
11:46:10
finish mi1 range(n) 2loop
11:46:10
start mi2
11:46:10
start mi2 range(p) 1 loop
11:46:10
finish mi2 range(p) 1 loop
11:46:10
start mi2 range(p) 2 loop
11:46:10
finish mi2 range(p) 2 loop
11:46:10
start mi2 range(NT) loop
11:46:10
finish mi2 range(NT) loop
11:46:10
start mi2 range(n) loop
11:46:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:46:10
start mi2 range(n) 2loop
11:46:10
finish mi2 range(n) 2loop
11:46:10
[[-2.64439678]]
end mi2 loop
11:46:10
estep
11:46:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:46:27
start ppi1
11:46:27
start mi0
11:46:27
start mi0 range(p) 1 loop
11:46:27
finish mi0 range(p) 1 loop
11:46:27
start mi0 range(p) 2 loop
11:46:27
finish mi0 range(p) 2 loop
11:46:27
start mi0 range(NT) loop
11:46:27
finish mi0 range(NT) loop
11:46:27
start mi0 range(n) loop
11:46:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:46:27
start mi0 range(n) 2loop
11:46:27
finish mi0 range(n) 2loop
11:46:27
start mi1
11:46:27
start mi1 range(p) 1 loop
11:46:27
finish mi1 range(p) 1 loop
11:46:27
start mi1 range(p) 2 loop
11:46:27
finish mi1 range(p) 2 loop
11:46:27
start mi1 range(NT) loop
11:46:27
finish mi1 range(NT) loop
11:46:27
start mi1 range(n) loop
11:46:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:46:27
start mi1 range(n) 2loop
11:46:27
finish mi1 range(n) 2loop
11:46:28
start mi2
11:46:28
start mi2 range(p) 1 loop
11:46:28
finish mi2 range(p) 1 loop
11:46:28
start mi2 range(p) 2 loop
11:46:28
finish mi2 range(p) 2 loop
11:46:28
start mi2 range(NT) loop
11:46:28
finish mi2 range(NT) loop
11:46:28
start mi2 range(n) loop
11:46:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:46:28
start mi2 range(n) 2loop
11:46:28
finish mi2 range(n) 2loop
11:46:28
[[-2.7068913]]
end mi2 loop
11:46:28
estep
11:46:28
end estep
11:46:44
end pa11:46:44
goodness of fit correlation [0.12754581]
start cluster 11:46:44
27
parallel submitted
11:47:05
parallel finished
11:51:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:51:13
start mi0
11:51:13
start mi0 range(p) 1 loop
11:51:13
finish mi0 range(p) 1 loop
11:51:13
start mi0 range(p) 2 loop
11:51:13
finish mi0 range(p) 2 loop
11:51:13
start mi0 range(NT) loop
11:51:13
finish mi0 range(NT) loop
11:51:13
start mi0 range(n) loop
11:51:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:51:13
start mi0 range(n) 2loop
11:51:13
finish mi0 range(n) 2loop
11:51:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:51:13
start mi1 range(p) 1 loop
11:51:13
finish mi1 range(p) 1 loop
11:51:13
start mi1 range(p) 2 loop
11:51:13
finish mi1 range(p) 2 loop
11:51:13
start mi1 range(NT) loop
11:51:13
finish mi1 range(NT) loop
11:51:13
start mi1 range(n) loop
11:51:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:51:14
start mi1 range(n) 2loop
11:51:14
finish mi1 range(n) 2loop
11:51:14
start mi2
11:51:14
start mi2 range(p) 1 loop
11:51:14
finish mi2 range(p) 1 loop
11:51:14
start mi2 range(p) 2 loop
11:51:14
finish mi2 range(p) 2 loop
11:51:14
start mi2 range(NT) loop
11:51:14
finish mi2 range(NT) loop
11:51:14
start mi2 range(n) loop
11:51:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:51:14
start mi2 range(n) 2loop
11:51:14
finish mi2 range(n) 2loop
11:51:14
[[-2.63829579]]
end mi2 loop
11:51:14
estep
11:51:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:51:29
start ppi1
11:51:29
start mi0
11:51:29
start mi0 range(p) 1 loop
11:51:29
finish mi0 range(p) 1 loop
11:51:29
start mi0 range(p) 2 loop
11:51:29
finish mi0 range(p) 2 loop
11:51:29
start mi0 range(NT) loop
11:51:29
finish mi0 range(NT) loop
11:51:29
start mi0 range(n) loop
11:51:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:51:29
start mi0 range(n) 2loop
11:51:29
finish mi0 range(n) 2loop
11:51:29
start mi1
11:51:29
start mi1 range(p) 1 loop
11:51:29
finish mi1 range(p) 1 loop
11:51:29
start mi1 range(p) 2 loop
11:51:29
finish mi1 range(p) 2 loop
11:51:29
start mi1 range(NT) loop
11:51:29
finish mi1 range(NT) loop
11:51:29
start mi1 range(n) loop
11:51:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:51:29
start mi1 range(n) 2loop
11:51:29
finish mi1 range(n) 2loop
11:51:29
start mi2
11:51:29
start mi2 range(p) 1 loop
11:51:29
finish mi2 range(p) 1 loop
11:51:29
start mi2 range(p) 2 loop
11:51:29
finish mi2 range(p) 2 loop
11:51:29
start mi2 range(NT) loop
11:51:29
finish mi2 range(NT) loop
11:51:29
start mi2 range(n) loop
11:51:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:51:30
start mi2 range(n) 2loop
11:51:30
finish mi2 range(n) 2loop
11:51:30
[[-2.70079068]]
end mi2 loop
11:51:30
estep
11:51:30
end estep
11:51:45
end pa11:51:45
goodness of fit correlation [0.20441908]
start cluster 11:51:45
28
parallel submitted
11:52:07
parallel finished
11:55:28
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:55:38
start mi0
11:55:38
start mi0 range(p) 1 loop
11:55:38
finish mi0 range(p) 1 loop
11:55:38
start mi0 range(p) 2 loop
11:55:38
finish mi0 range(p) 2 loop
11:55:38
start mi0 range(NT) loop
11:55:38
finish mi0 range(NT) loop
11:55:38
start mi0 range(n) loop
11:55:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:55:38
start mi0 range(n) 2loop
11:55:38
finish mi0 range(n) 2loop
11:55:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:55:38
start mi1 range(p) 1 loop
11:55:38
finish mi1 range(p) 1 loop
11:55:38
start mi1 range(p) 2 loop
11:55:38
finish mi1 range(p) 2 loop
11:55:38
start mi1 range(NT) loop
11:55:38
finish mi1 range(NT) loop
11:55:38
start mi1 range(n) loop
11:55:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:55:38
start mi1 range(n) 2loop
11:55:38
finish mi1 range(n) 2loop
11:55:38
start mi2
11:55:38
start mi2 range(p) 1 loop
11:55:38
finish mi2 range(p) 1 loop
11:55:38
start mi2 range(p) 2 loop
11:55:38
finish mi2 range(p) 2 loop
11:55:38
start mi2 range(NT) loop
11:55:39
finish mi2 range(NT) loop
11:55:39
start mi2 range(n) loop
11:55:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:55:39
start mi2 range(n) 2loop
11:55:39
finish mi2 range(n) 2loop
11:55:39
[[-2.71699489]]
end mi2 loop
11:55:39
estep
11:55:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:55:54
start ppi1
11:55:54
start mi0
11:55:54
start mi0 range(p) 1 loop
11:55:54
finish mi0 range(p) 1 loop
11:55:54
start mi0 range(p) 2 loop
11:55:54
finish mi0 range(p) 2 loop
11:55:54
start mi0 range(NT) loop
11:55:54
finish mi0 range(NT) loop
11:55:54
start mi0 range(n) loop
11:55:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:55:55
start mi0 range(n) 2loop
11:55:55
finish mi0 range(n) 2loop
11:55:55
start mi1
11:55:55
start mi1 range(p) 1 loop
11:55:55
finish mi1 range(p) 1 loop
11:55:55
start mi1 range(p) 2 loop
11:55:55
finish mi1 range(p) 2 loop
11:55:55
start mi1 range(NT) loop
11:55:55
finish mi1 range(NT) loop
11:55:55
start mi1 range(n) loop
11:55:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:55:55
start mi1 range(n) 2loop
11:55:55
finish mi1 range(n) 2loop
11:55:55
start mi2
11:55:55
start mi2 range(p) 1 loop
11:55:55
finish mi2 range(p) 1 loop
11:55:55
start mi2 range(p) 2 loop
11:55:55
finish mi2 range(p) 2 loop
11:55:55
start mi2 range(NT) loop
11:55:55
finish mi2 range(NT) loop
11:55:55
start mi2 range(n) loop
11:55:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:55:55
start mi2 range(n) 2loop
11:55:55
finish mi2 range(n) 2loop
11:55:55
[[-2.77948733]]
end mi2 loop
11:55:55
estep
11:55:55
end estep
11:56:12
end pa11:56:12
goodness of fit correlation [0.32280892]
start cluster 11:56:12
29
parallel submitted
11:56:34
parallel finished
11:59:37
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:59:49
start mi0
11:59:49
start mi0 range(p) 1 loop
11:59:49
finish mi0 range(p) 1 loop
11:59:49
start mi0 range(p) 2 loop
11:59:49
finish mi0 range(p) 2 loop
11:59:49
start mi0 range(NT) loop
11:59:49
finish mi0 range(NT) loop
11:59:49
start mi0 range(n) loop
11:59:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:59:49
start mi0 range(n) 2loop
11:59:49
finish mi0 range(n) 2loop
11:59:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:59:49
start mi1 range(p) 1 loop
11:59:49
finish mi1 range(p) 1 loop
11:59:49
start mi1 range(p) 2 loop
11:59:49
finish mi1 range(p) 2 loop
11:59:49
start mi1 range(NT) loop
11:59:49
finish mi1 range(NT) loop
11:59:49
start mi1 range(n) loop
11:59:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:59:49
start mi1 range(n) 2loop
11:59:49
finish mi1 range(n) 2loop
11:59:49
[[-2.87244715]]
end mi1 loop
11:59:49
estep
11:59:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:00:05
start ppi1
12:00:05
start mi0
12:00:05
start mi0 range(p) 1 loop
12:00:05
finish mi0 range(p) 1 loop
12:00:05
start mi0 range(p) 2 loop
12:00:05
finish mi0 range(p) 2 loop
12:00:05
start mi0 range(NT) loop
12:00:05
finish mi0 range(NT) loop
12:00:05
start mi0 range(n) loop
12:00:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:00:05
start mi0 range(n) 2loop
12:00:05
finish mi0 range(n) 2loop
12:00:05
start mi1
12:00:05
start mi1 range(p) 1 loop
12:00:05
finish mi1 range(p) 1 loop
12:00:05
start mi1 range(p) 2 loop
12:00:05
finish mi1 range(p) 2 loop
12:00:05
start mi1 range(NT) loop
12:00:05
finish mi1 range(NT) loop
12:00:05
start mi1 range(n) loop
12:00:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:00:05
start mi1 range(n) 2loop
12:00:05
finish mi1 range(n) 2loop
12:00:05
[[-2.93497277]]
end mi1 loop
12:00:05
estep
12:00:05
end estep
12:00:20
end pa12:00:20
goodness of fit correlation [0.30831806]
start cluster 12:00:20
30
parallel submitted
12:00:42
parallel finished
12:03:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:03:25
start mi0
12:03:25
start mi0 range(p) 1 loop
12:03:25
finish mi0 range(p) 1 loop
12:03:25
start mi0 range(p) 2 loop
12:03:25
finish mi0 range(p) 2 loop
12:03:25
start mi0 range(NT) loop
12:03:25
finish mi0 range(NT) loop
12:03:25
start mi0 range(n) loop
12:03:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:03:25
start mi0 range(n) 2loop
12:03:25
finish mi0 range(n) 2loop
12:03:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:03:25
start mi1 range(p) 1 loop
12:03:25
finish mi1 range(p) 1 loop
12:03:25
start mi1 range(p) 2 loop
12:03:25
finish mi1 range(p) 2 loop
12:03:25
start mi1 range(NT) loop
12:03:25
finish mi1 range(NT) loop
12:03:25
start mi1 range(n) loop
12:03:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:03:25
start mi1 range(n) 2loop
12:03:25
finish mi1 range(n) 2loop
12:03:26
[[-2.92817728]]
end mi1 loop
12:03:26
estep
12:03:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:03:42
start ppi1
12:03:42
start mi0
12:03:42
start mi0 range(p) 1 loop
12:03:42
finish mi0 range(p) 1 loop
12:03:42
start mi0 range(p) 2 loop
12:03:42
finish mi0 range(p) 2 loop
12:03:42
start mi0 range(NT) loop
12:03:42
finish mi0 range(NT) loop
12:03:42
start mi0 range(n) loop
12:03:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:03:43
start mi0 range(n) 2loop
12:03:43
finish mi0 range(n) 2loop
12:03:43
[[-2.99062917]]
end mi0 loop
12:03:43
estep
12:03:43
end estep
12:03:59
end pa12:03:59
goodness of fit correlation [0.29257903]
start cluster 12:03:59
31
parallel submitted
12:04:21
parallel finished
12:06:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:06:41
start mi0
12:06:41
start mi0 range(p) 1 loop
12:06:42
finish mi0 range(p) 1 loop
12:06:42
start mi0 range(p) 2 loop
12:06:42
finish mi0 range(p) 2 loop
12:06:42
start mi0 range(NT) loop
12:06:42
finish mi0 range(NT) loop
12:06:42
start mi0 range(n) loop
12:06:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:06:42
start mi0 range(n) 2loop
12:06:42
finish mi0 range(n) 2loop
12:06:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:06:42
start mi1 range(p) 1 loop
12:06:42
finish mi1 range(p) 1 loop
12:06:42
start mi1 range(p) 2 loop
12:06:42
finish mi1 range(p) 2 loop
12:06:42
start mi1 range(NT) loop
12:06:42
finish mi1 range(NT) loop
12:06:42
start mi1 range(n) loop
12:06:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:06:42
start mi1 range(n) 2loop
12:06:42
finish mi1 range(n) 2loop
12:06:42
[[-3.03020255]]
end mi1 loop
12:06:42
estep
12:06:42
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:06:58
start ppi1
12:06:58
start mi0
12:06:58
start mi0 range(p) 1 loop
12:06:58
finish mi0 range(p) 1 loop
12:06:58
start mi0 range(p) 2 loop
12:06:58
finish mi0 range(p) 2 loop
12:06:58
start mi0 range(NT) loop
12:06:58
finish mi0 range(NT) loop
12:06:58
start mi0 range(n) loop
12:06:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:06:58
start mi0 range(n) 2loop
12:06:58
finish mi0 range(n) 2loop
12:06:58
start mi1
12:06:58
start mi1 range(p) 1 loop
12:06:58
finish mi1 range(p) 1 loop
12:06:58
start mi1 range(p) 2 loop
12:06:58
finish mi1 range(p) 2 loop
12:06:58
start mi1 range(NT) loop
12:06:58
finish mi1 range(NT) loop
12:06:58
start mi1 range(n) loop
12:06:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:06:58
start mi1 range(n) 2loop
12:06:58
finish mi1 range(n) 2loop
12:06:58
[[-3.09268603]]
end mi1 loop
12:06:58
estep
12:06:58
end estep
12:07:15
end pa12:07:15
goodness of fit correlation [0.3312076]
start cluster 12:07:15
32
parallel submitted
12:07:37
parallel finished
12:10:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:10:55
start mi0
12:10:55
start mi0 range(p) 1 loop
12:10:55
finish mi0 range(p) 1 loop
12:10:55
start mi0 range(p) 2 loop
12:10:55
finish mi0 range(p) 2 loop
12:10:55
start mi0 range(NT) loop
12:10:55
finish mi0 range(NT) loop
12:10:55
start mi0 range(n) loop
12:10:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:10:55
start mi0 range(n) 2loop
12:10:55
finish mi0 range(n) 2loop
12:10:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:10:56
start mi1 range(p) 1 loop
12:10:56
finish mi1 range(p) 1 loop
12:10:56
start mi1 range(p) 2 loop
12:10:56
finish mi1 range(p) 2 loop
12:10:56
start mi1 range(NT) loop
12:10:56
finish mi1 range(NT) loop
12:10:56
start mi1 range(n) loop
12:10:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:10:56
start mi1 range(n) 2loop
12:10:56
finish mi1 range(n) 2loop
12:10:56
[[-3.03209207]]
end mi1 loop
12:10:56
estep
12:10:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:11:11
start ppi1
12:11:11
start mi0
12:11:11
start mi0 range(p) 1 loop
12:11:11
finish mi0 range(p) 1 loop
12:11:11
start mi0 range(p) 2 loop
12:11:11
finish mi0 range(p) 2 loop
12:11:11
start mi0 range(NT) loop
12:11:11
finish mi0 range(NT) loop
12:11:11
start mi0 range(n) loop
12:11:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:11:11
start mi0 range(n) 2loop
12:11:11
finish mi0 range(n) 2loop
12:11:11
start mi1
12:11:11
start mi1 range(p) 1 loop
12:11:11
finish mi1 range(p) 1 loop
12:11:11
start mi1 range(p) 2 loop
12:11:11
finish mi1 range(p) 2 loop
12:11:11
start mi1 range(NT) loop
12:11:11
finish mi1 range(NT) loop
12:11:11
start mi1 range(n) loop
12:11:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:11:11
start mi1 range(n) 2loop
12:11:11
finish mi1 range(n) 2loop
12:11:12
[[-3.09457485]]
end mi1 loop
12:11:12
estep
12:11:12
end estep
12:11:29
end pa12:11:29
goodness of fit correlation [0.3165238]
start cluster 12:11:29
33
parallel submitted
12:11:51
parallel finished
12:16:39
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:16:54
start mi0
12:16:54
start mi0 range(p) 1 loop
12:16:54
finish mi0 range(p) 1 loop
12:16:54
start mi0 range(p) 2 loop
12:16:54
finish mi0 range(p) 2 loop
12:16:54
start mi0 range(NT) loop
12:16:54
finish mi0 range(NT) loop
12:16:54
start mi0 range(n) loop
12:16:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:16:54
start mi0 range(n) 2loop
12:16:54
finish mi0 range(n) 2loop
12:16:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:16:54
start mi1 range(p) 1 loop
12:16:54
finish mi1 range(p) 1 loop
12:16:54
start mi1 range(p) 2 loop
12:16:54
finish mi1 range(p) 2 loop
12:16:54
start mi1 range(NT) loop
12:16:54
finish mi1 range(NT) loop
12:16:54
start mi1 range(n) loop
12:16:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:16:55
start mi1 range(n) 2loop
12:16:55
finish mi1 range(n) 2loop
12:16:55
[[-3.06109782]]
end mi1 loop
12:16:55
estep
12:16:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:17:10
start ppi1
12:17:10
start mi0
12:17:10
start mi0 range(p) 1 loop
12:17:10
finish mi0 range(p) 1 loop
12:17:10
start mi0 range(p) 2 loop
12:17:10
finish mi0 range(p) 2 loop
12:17:10
start mi0 range(NT) loop
12:17:10
finish mi0 range(NT) loop
12:17:10
start mi0 range(n) loop
12:17:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:17:10
start mi0 range(n) 2loop
12:17:10
finish mi0 range(n) 2loop
12:17:10
start mi1
12:17:10
start mi1 range(p) 1 loop
12:17:10
finish mi1 range(p) 1 loop
12:17:10
start mi1 range(p) 2 loop
12:17:10
finish mi1 range(p) 2 loop
12:17:10
start mi1 range(NT) loop
12:17:10
finish mi1 range(NT) loop
12:17:10
start mi1 range(n) loop
12:17:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:17:10
start mi1 range(n) 2loop
12:17:10
finish mi1 range(n) 2loop
12:17:10
[[-3.12356471]]
end mi1 loop
12:17:10
estep
12:17:10
end estep
12:17:26
end pa12:17:26
goodness of fit correlation [0.33541578]
start cluster 12:17:26
34
parallel submitted
12:17:46
parallel finished
12:21:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:22:03
start mi0
12:22:03
start mi0 range(p) 1 loop
12:22:03
finish mi0 range(p) 1 loop
12:22:03
start mi0 range(p) 2 loop
12:22:03
finish mi0 range(p) 2 loop
12:22:03
start mi0 range(NT) loop
12:22:03
finish mi0 range(NT) loop
12:22:03
start mi0 range(n) loop
12:22:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:22:03
start mi0 range(n) 2loop
12:22:03
finish mi0 range(n) 2loop
12:22:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:22:03
start mi1 range(p) 1 loop
12:22:03
finish mi1 range(p) 1 loop
12:22:03
start mi1 range(p) 2 loop
12:22:03
finish mi1 range(p) 2 loop
12:22:03
start mi1 range(NT) loop
12:22:03
finish mi1 range(NT) loop
12:22:03
start mi1 range(n) loop
12:22:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:22:03
start mi1 range(n) 2loop
12:22:03
finish mi1 range(n) 2loop
12:22:03
[[-3.10271022]]
end mi1 loop
12:22:03
estep
12:22:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:22:20
start ppi1
12:22:20
start mi0
12:22:20
start mi0 range(p) 1 loop
12:22:20
finish mi0 range(p) 1 loop
12:22:20
start mi0 range(p) 2 loop
12:22:20
finish mi0 range(p) 2 loop
12:22:20
start mi0 range(NT) loop
12:22:20
finish mi0 range(NT) loop
12:22:20
start mi0 range(n) loop
12:22:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:22:20
start mi0 range(n) 2loop
12:22:20
finish mi0 range(n) 2loop
12:22:20
start mi1
12:22:20
start mi1 range(p) 1 loop
12:22:20
finish mi1 range(p) 1 loop
12:22:20
start mi1 range(p) 2 loop
12:22:20
finish mi1 range(p) 2 loop
12:22:20
start mi1 range(NT) loop
12:22:20
finish mi1 range(NT) loop
12:22:20
start mi1 range(n) loop
12:22:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:22:20
start mi1 range(n) 2loop
12:22:20
finish mi1 range(n) 2loop
12:22:20
start mi2
12:22:20
start mi2 range(p) 1 loop
12:22:20
finish mi2 range(p) 1 loop
12:22:20
start mi2 range(p) 2 loop
12:22:20
finish mi2 range(p) 2 loop
12:22:20
start mi2 range(NT) loop
12:22:21
finish mi2 range(NT) loop
12:22:21
start mi2 range(n) loop
12:22:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:22:21
start mi2 range(n) 2loop
12:22:21
finish mi2 range(n) 2loop
12:22:21
[[-3.16521523]]
end mi2 loop
12:22:21
estep
12:22:21
end estep
12:22:37
end pa12:22:37
goodness of fit correlation [0.33946157]
start cluster 12:22:37
35
parallel submitted
12:22:57
parallel finished
12:24:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:24:55
start mi0
12:24:55
start mi0 range(p) 1 loop
12:24:55
finish mi0 range(p) 1 loop
12:24:55
start mi0 range(p) 2 loop
12:24:55
finish mi0 range(p) 2 loop
12:24:55
start mi0 range(NT) loop
12:24:55
finish mi0 range(NT) loop
12:24:55
start mi0 range(n) loop
12:24:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:24:55
start mi0 range(n) 2loop
12:24:55
finish mi0 range(n) 2loop
12:24:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:24:56
start mi1 range(p) 1 loop
12:24:56
finish mi1 range(p) 1 loop
12:24:56
start mi1 range(p) 2 loop
12:24:56
finish mi1 range(p) 2 loop
12:24:56
start mi1 range(NT) loop
12:24:56
finish mi1 range(NT) loop
12:24:56
start mi1 range(n) loop
12:24:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:24:56
start mi1 range(n) 2loop
12:24:56
finish mi1 range(n) 2loop
12:24:56
[[-3.07351468]]
end mi1 loop
12:24:56
estep
12:24:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:25:11
start ppi1
12:25:11
start mi0
12:25:11
start mi0 range(p) 1 loop
12:25:11
finish mi0 range(p) 1 loop
12:25:11
start mi0 range(p) 2 loop
12:25:11
finish mi0 range(p) 2 loop
12:25:11
start mi0 range(NT) loop
12:25:11
finish mi0 range(NT) loop
12:25:11
start mi0 range(n) loop
12:25:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:25:11
start mi0 range(n) 2loop
12:25:11
finish mi0 range(n) 2loop
12:25:11
start mi1
12:25:11
start mi1 range(p) 1 loop
12:25:11
finish mi1 range(p) 1 loop
12:25:11
start mi1 range(p) 2 loop
12:25:11
finish mi1 range(p) 2 loop
12:25:11
start mi1 range(NT) loop
12:25:11
finish mi1 range(NT) loop
12:25:11
start mi1 range(n) loop
12:25:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:25:11
start mi1 range(n) 2loop
12:25:11
finish mi1 range(n) 2loop
12:25:11
[[-3.1359712]]
end mi1 loop
12:25:11
estep
12:25:11
end estep
12:25:28
end pa12:25:28
goodness of fit correlation [0.33434558]
start cluster 12:25:28
36
parallel submitted
12:25:51
parallel finished
12:29:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:29:26
start mi0
12:29:26
start mi0 range(p) 1 loop
12:29:26
finish mi0 range(p) 1 loop
12:29:26
start mi0 range(p) 2 loop
12:29:26
finish mi0 range(p) 2 loop
12:29:26
start mi0 range(NT) loop
12:29:26
finish mi0 range(NT) loop
12:29:26
start mi0 range(n) loop
12:29:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:29:26
start mi0 range(n) 2loop
12:29:26
finish mi0 range(n) 2loop
12:29:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:29:26
start mi1 range(p) 1 loop
12:29:26
finish mi1 range(p) 1 loop
12:29:26
start mi1 range(p) 2 loop
12:29:26
finish mi1 range(p) 2 loop
12:29:26
start mi1 range(NT) loop
12:29:26
finish mi1 range(NT) loop
12:29:26
start mi1 range(n) loop
12:29:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:29:26
start mi1 range(n) 2loop
12:29:26
finish mi1 range(n) 2loop
12:29:26
[[-3.10564016]]
end mi1 loop
12:29:26
estep
12:29:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:29:42
start ppi1
12:29:42
start mi0
12:29:42
start mi0 range(p) 1 loop
12:29:42
finish mi0 range(p) 1 loop
12:29:42
start mi0 range(p) 2 loop
12:29:42
finish mi0 range(p) 2 loop
12:29:42
start mi0 range(NT) loop
12:29:42
finish mi0 range(NT) loop
12:29:42
start mi0 range(n) loop
12:29:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:29:42
start mi0 range(n) 2loop
12:29:42
finish mi0 range(n) 2loop
12:29:42
start mi1
12:29:42
start mi1 range(p) 1 loop
12:29:42
finish mi1 range(p) 1 loop
12:29:42
start mi1 range(p) 2 loop
12:29:42
finish mi1 range(p) 2 loop
12:29:42
start mi1 range(NT) loop
12:29:42
finish mi1 range(NT) loop
12:29:42
start mi1 range(n) loop
12:29:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:29:42
start mi1 range(n) 2loop
12:29:42
finish mi1 range(n) 2loop
12:29:42
start mi2
12:29:42
start mi2 range(p) 1 loop
12:29:42
finish mi2 range(p) 1 loop
12:29:42
start mi2 range(p) 2 loop
12:29:42
finish mi2 range(p) 2 loop
12:29:42
start mi2 range(NT) loop
12:29:42
finish mi2 range(NT) loop
12:29:42
start mi2 range(n) loop
12:29:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:29:42
start mi2 range(n) 2loop
12:29:42
finish mi2 range(n) 2loop
12:29:42
[[-3.16814669]]
end mi2 loop
12:29:42
estep
12:29:42
end estep
12:29:58
end pa12:29:58
goodness of fit correlation [0.3404383]
start cluster 12:29:58
37
parallel submitted
12:30:21
parallel finished
12:33:43
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:33:57
start mi0
12:33:57
start mi0 range(p) 1 loop
12:33:57
finish mi0 range(p) 1 loop
12:33:57
start mi0 range(p) 2 loop
12:33:57
finish mi0 range(p) 2 loop
12:33:57
start mi0 range(NT) loop
12:33:58
finish mi0 range(NT) loop
12:33:58
start mi0 range(n) loop
12:33:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:33:58
start mi0 range(n) 2loop
12:33:58
finish mi0 range(n) 2loop
12:33:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:33:58
start mi1 range(p) 1 loop
12:33:58
finish mi1 range(p) 1 loop
12:33:58
start mi1 range(p) 2 loop
12:33:58
finish mi1 range(p) 2 loop
12:33:58
start mi1 range(NT) loop
12:33:58
finish mi1 range(NT) loop
12:33:58
start mi1 range(n) loop
12:33:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:33:58
start mi1 range(n) 2loop
12:33:58
finish mi1 range(n) 2loop
12:33:58
[[-3.09927883]]
end mi1 loop
12:33:58
estep
12:33:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:34:13
start ppi1
12:34:13
start mi0
12:34:13
start mi0 range(p) 1 loop
12:34:13
finish mi0 range(p) 1 loop
12:34:13
start mi0 range(p) 2 loop
12:34:13
finish mi0 range(p) 2 loop
12:34:13
start mi0 range(NT) loop
12:34:13
finish mi0 range(NT) loop
12:34:13
start mi0 range(n) loop
12:34:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:34:14
start mi0 range(n) 2loop
12:34:14
finish mi0 range(n) 2loop
12:34:14
start mi1
12:34:14
start mi1 range(p) 1 loop
12:34:14
finish mi1 range(p) 1 loop
12:34:14
start mi1 range(p) 2 loop
12:34:14
finish mi1 range(p) 2 loop
12:34:14
start mi1 range(NT) loop
12:34:14
finish mi1 range(NT) loop
12:34:14
start mi1 range(n) loop
12:34:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:34:14
start mi1 range(n) 2loop
12:34:14
finish mi1 range(n) 2loop
12:34:14
start mi2
12:34:14
start mi2 range(p) 1 loop
12:34:14
finish mi2 range(p) 1 loop
12:34:14
start mi2 range(p) 2 loop
12:34:14
finish mi2 range(p) 2 loop
12:34:14
start mi2 range(NT) loop
12:34:14
finish mi2 range(NT) loop
12:34:14
start mi2 range(n) loop
12:34:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:34:14
start mi2 range(n) 2loop
12:34:14
finish mi2 range(n) 2loop
12:34:14
[[-3.16178222]]
end mi2 loop
12:34:14
estep
12:34:14
end estep
12:34:30
end pa12:34:30
goodness of fit correlation [0.34668955]
start cluster 12:34:30
38
parallel submitted
12:34:53
parallel finished
12:38:11
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:38:25
start mi0
12:38:25
start mi0 range(p) 1 loop
12:38:25
finish mi0 range(p) 1 loop
12:38:25
start mi0 range(p) 2 loop
12:38:25
finish mi0 range(p) 2 loop
12:38:25
start mi0 range(NT) loop
12:38:25
finish mi0 range(NT) loop
12:38:25
start mi0 range(n) loop
12:38:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:38:25
start mi0 range(n) 2loop
12:38:25
finish mi0 range(n) 2loop
12:38:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:38:25
start mi1 range(p) 1 loop
12:38:25
finish mi1 range(p) 1 loop
12:38:25
start mi1 range(p) 2 loop
12:38:25
finish mi1 range(p) 2 loop
12:38:25
start mi1 range(NT) loop
12:38:25
finish mi1 range(NT) loop
12:38:25
start mi1 range(n) loop
12:38:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:38:25
start mi1 range(n) 2loop
12:38:25
finish mi1 range(n) 2loop
12:38:25
[[-3.09236649]]
end mi1 loop
12:38:25
estep
12:38:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:38:41
start ppi1
12:38:41
start mi0
12:38:41
start mi0 range(p) 1 loop
12:38:41
finish mi0 range(p) 1 loop
12:38:41
start mi0 range(p) 2 loop
12:38:41
finish mi0 range(p) 2 loop
12:38:41
start mi0 range(NT) loop
12:38:41
finish mi0 range(NT) loop
12:38:41
start mi0 range(n) loop
12:38:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:38:41
start mi0 range(n) 2loop
12:38:41
finish mi0 range(n) 2loop
12:38:41
start mi1
12:38:41
start mi1 range(p) 1 loop
12:38:41
finish mi1 range(p) 1 loop
12:38:41
start mi1 range(p) 2 loop
12:38:41
finish mi1 range(p) 2 loop
12:38:41
start mi1 range(NT) loop
12:38:41
finish mi1 range(NT) loop
12:38:41
start mi1 range(n) loop
12:38:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:38:41
start mi1 range(n) 2loop
12:38:41
finish mi1 range(n) 2loop
12:38:41
start mi2
12:38:41
start mi2 range(p) 1 loop
12:38:41
finish mi2 range(p) 1 loop
12:38:41
start mi2 range(p) 2 loop
12:38:41
finish mi2 range(p) 2 loop
12:38:41
start mi2 range(NT) loop
12:38:41
finish mi2 range(NT) loop
12:38:41
start mi2 range(n) loop
12:38:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:38:41
start mi2 range(n) 2loop
12:38:41
finish mi2 range(n) 2loop
12:38:41
[[-3.15486708]]
end mi2 loop
12:38:41
estep
12:38:41
end estep
12:38:58
end pa12:38:58
goodness of fit correlation [0.34400766]
start cluster 12:38:58
39
parallel submitted
12:39:21
parallel finished
12:42:30
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:42:43
start mi0
12:42:43
start mi0 range(p) 1 loop
12:42:43
finish mi0 range(p) 1 loop
12:42:43
start mi0 range(p) 2 loop
12:42:43
finish mi0 range(p) 2 loop
12:42:43
start mi0 range(NT) loop
12:42:43
finish mi0 range(NT) loop
12:42:43
start mi0 range(n) loop
12:42:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:42:43
start mi0 range(n) 2loop
12:42:43
finish mi0 range(n) 2loop
12:42:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:42:43
start mi1 range(p) 1 loop
12:42:43
finish mi1 range(p) 1 loop
12:42:43
start mi1 range(p) 2 loop
12:42:43
finish mi1 range(p) 2 loop
12:42:43
start mi1 range(NT) loop
12:42:43
finish mi1 range(NT) loop
12:42:43
start mi1 range(n) loop
12:42:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:42:43
start mi1 range(n) 2loop
12:42:43
finish mi1 range(n) 2loop
12:42:43
[[-3.08533013]]
end mi1 loop
12:42:43
estep
12:42:43
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:42:59
start ppi1
12:42:59
start mi0
12:42:59
start mi0 range(p) 1 loop
12:42:59
finish mi0 range(p) 1 loop
12:42:59
start mi0 range(p) 2 loop
12:42:59
finish mi0 range(p) 2 loop
12:42:59
start mi0 range(NT) loop
12:42:59
finish mi0 range(NT) loop
12:42:59
start mi0 range(n) loop
12:42:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:43:00
start mi0 range(n) 2loop
12:43:00
finish mi0 range(n) 2loop
12:43:00
start mi1
12:43:00
start mi1 range(p) 1 loop
12:43:00
finish mi1 range(p) 1 loop
12:43:00
start mi1 range(p) 2 loop
12:43:00
finish mi1 range(p) 2 loop
12:43:00
start mi1 range(NT) loop
12:43:00
finish mi1 range(NT) loop
12:43:00
start mi1 range(n) loop
12:43:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:43:00
start mi1 range(n) 2loop
12:43:00
finish mi1 range(n) 2loop
12:43:00
start mi2
12:43:00
start mi2 range(p) 1 loop
12:43:00
finish mi2 range(p) 1 loop
12:43:00
start mi2 range(p) 2 loop
12:43:00
finish mi2 range(p) 2 loop
12:43:00
start mi2 range(NT) loop
12:43:00
finish mi2 range(NT) loop
12:43:00
start mi2 range(n) loop
12:43:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:43:00
start mi2 range(n) 2loop
12:43:00
finish mi2 range(n) 2loop
12:43:00
[[-3.14782842]]
end mi2 loop
12:43:00
estep
12:43:00
end estep
12:43:15
end pa12:43:15
goodness of fit correlation [0.32923764]
start cluster 12:43:15
40
parallel submitted
12:43:38
parallel finished
12:47:17
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:47:31
start mi0
12:47:31
start mi0 range(p) 1 loop
12:47:31
finish mi0 range(p) 1 loop
12:47:31
start mi0 range(p) 2 loop
12:47:31
finish mi0 range(p) 2 loop
12:47:31
start mi0 range(NT) loop
12:47:31
finish mi0 range(NT) loop
12:47:31
start mi0 range(n) loop
12:47:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:47:31
start mi0 range(n) 2loop
12:47:31
finish mi0 range(n) 2loop
12:47:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:47:31
start mi1 range(p) 1 loop
12:47:31
finish mi1 range(p) 1 loop
12:47:31
start mi1 range(p) 2 loop
12:47:31
finish mi1 range(p) 2 loop
12:47:31
start mi1 range(NT) loop
12:47:31
finish mi1 range(NT) loop
12:47:31
start mi1 range(n) loop
12:47:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:47:31
start mi1 range(n) 2loop
12:47:31
finish mi1 range(n) 2loop
12:47:31
[[-3.09052214]]
end mi1 loop
12:47:31
estep
12:47:31
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:47:49
start ppi1
12:47:49
start mi0
12:47:49
start mi0 range(p) 1 loop
12:47:49
finish mi0 range(p) 1 loop
12:47:49
start mi0 range(p) 2 loop
12:47:49
finish mi0 range(p) 2 loop
12:47:49
start mi0 range(NT) loop
12:47:49
finish mi0 range(NT) loop
12:47:49
start mi0 range(n) loop
12:47:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:47:49
start mi0 range(n) 2loop
12:47:49
finish mi0 range(n) 2loop
12:47:49
start mi1
12:47:49
start mi1 range(p) 1 loop
12:47:49
finish mi1 range(p) 1 loop
12:47:49
start mi1 range(p) 2 loop
12:47:49
finish mi1 range(p) 2 loop
12:47:49
start mi1 range(NT) loop
12:47:49
finish mi1 range(NT) loop
12:47:49
start mi1 range(n) loop
12:47:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:47:49
start mi1 range(n) 2loop
12:47:49
finish mi1 range(n) 2loop
12:47:49
start mi2
12:47:49
start mi2 range(p) 1 loop
12:47:49
finish mi2 range(p) 1 loop
12:47:49
start mi2 range(p) 2 loop
12:47:49
finish mi2 range(p) 2 loop
12:47:49
start mi2 range(NT) loop
12:47:49
finish mi2 range(NT) loop
12:47:49
start mi2 range(n) loop
12:47:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:47:50
start mi2 range(n) 2loop
12:47:50
finish mi2 range(n) 2loop
12:47:50
[[-3.15302207]]
end mi2 loop
12:47:50
estep
12:47:50
end estep
12:48:05
end pa12:48:05
goodness of fit correlation [0.35096476]
start cluster 12:48:05
41
parallel submitted
12:48:34
parallel finished
12:52:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:52:15
start mi0
12:52:15
start mi0 range(p) 1 loop
12:52:15
finish mi0 range(p) 1 loop
12:52:15
start mi0 range(p) 2 loop
12:52:15
finish mi0 range(p) 2 loop
12:52:15
start mi0 range(NT) loop
12:52:15
finish mi0 range(NT) loop
12:52:15
start mi0 range(n) loop
12:52:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:52:15
start mi0 range(n) 2loop
12:52:15
finish mi0 range(n) 2loop
12:52:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:52:16
start mi1 range(p) 1 loop
12:52:16
finish mi1 range(p) 1 loop
12:52:16
start mi1 range(p) 2 loop
12:52:16
finish mi1 range(p) 2 loop
12:52:16
start mi1 range(NT) loop
12:52:16
finish mi1 range(NT) loop
12:52:16
start mi1 range(n) loop
12:52:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:52:16
start mi1 range(n) 2loop
12:52:16
finish mi1 range(n) 2loop
12:52:16
[[-3.0559156]]
end mi1 loop
12:52:16
estep
12:52:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:52:31
start ppi1
12:52:31
start mi0
12:52:31
start mi0 range(p) 1 loop
12:52:31
finish mi0 range(p) 1 loop
12:52:31
start mi0 range(p) 2 loop
12:52:31
finish mi0 range(p) 2 loop
12:52:31
start mi0 range(NT) loop
12:52:31
finish mi0 range(NT) loop
12:52:31
start mi0 range(n) loop
12:52:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:52:32
start mi0 range(n) 2loop
12:52:32
finish mi0 range(n) 2loop
12:52:32
start mi1
12:52:32
start mi1 range(p) 1 loop
12:52:32
finish mi1 range(p) 1 loop
12:52:32
start mi1 range(p) 2 loop
12:52:32
finish mi1 range(p) 2 loop
12:52:32
start mi1 range(NT) loop
12:52:32
finish mi1 range(NT) loop
12:52:32
start mi1 range(n) loop
12:52:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:52:32
start mi1 range(n) 2loop
12:52:32
finish mi1 range(n) 2loop
12:52:32
[[-3.11838614]]
end mi1 loop
12:52:32
estep
12:52:32
end estep
12:52:49
end pa12:52:49
goodness of fit correlation [0.33322239]
start cluster 12:52:49
42
parallel submitted
12:53:13
parallel finished
12:56:33
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:56:47
start mi0
12:56:47
start mi0 range(p) 1 loop
12:56:47
finish mi0 range(p) 1 loop
12:56:47
start mi0 range(p) 2 loop
12:56:47
finish mi0 range(p) 2 loop
12:56:47
start mi0 range(NT) loop
12:56:47
finish mi0 range(NT) loop
12:56:47
start mi0 range(n) loop
12:56:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:56:48
start mi0 range(n) 2loop
12:56:48
finish mi0 range(n) 2loop
12:56:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:56:48
start mi1 range(p) 1 loop
12:56:48
finish mi1 range(p) 1 loop
12:56:48
start mi1 range(p) 2 loop
12:56:48
finish mi1 range(p) 2 loop
12:56:48
start mi1 range(NT) loop
12:56:48
finish mi1 range(NT) loop
12:56:48
start mi1 range(n) loop
12:56:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:56:48
start mi1 range(n) 2loop
12:56:48
finish mi1 range(n) 2loop
12:56:48
[[-3.10696503]]
end mi1 loop
12:56:48
estep
12:56:48
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:57:04
start ppi1
12:57:04
start mi0
12:57:04
start mi0 range(p) 1 loop
12:57:04
finish mi0 range(p) 1 loop
12:57:04
start mi0 range(p) 2 loop
12:57:04
finish mi0 range(p) 2 loop
12:57:04
start mi0 range(NT) loop
12:57:04
finish mi0 range(NT) loop
12:57:04
start mi0 range(n) loop
12:57:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:57:04
start mi0 range(n) 2loop
12:57:04
finish mi0 range(n) 2loop
12:57:04
start mi1
12:57:04
start mi1 range(p) 1 loop
12:57:04
finish mi1 range(p) 1 loop
12:57:04
start mi1 range(p) 2 loop
12:57:04
finish mi1 range(p) 2 loop
12:57:04
start mi1 range(NT) loop
12:57:04
finish mi1 range(NT) loop
12:57:04
start mi1 range(n) loop
12:57:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:57:04
start mi1 range(n) 2loop
12:57:04
finish mi1 range(n) 2loop
12:57:04
start mi2
12:57:04
start mi2 range(p) 1 loop
12:57:04
finish mi2 range(p) 1 loop
12:57:04
start mi2 range(p) 2 loop
12:57:04
finish mi2 range(p) 2 loop
12:57:04
start mi2 range(NT) loop
12:57:04
finish mi2 range(NT) loop
12:57:04
start mi2 range(n) loop
12:57:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:57:05
start mi2 range(n) 2loop
12:57:05
finish mi2 range(n) 2loop
12:57:05
[[-3.16947229]]
end mi2 loop
12:57:05
estep
12:57:05
end estep
12:57:22
end pa12:57:22
goodness of fit correlation [0.35585411]
start cluster 12:57:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33487 instead
  warnings.warn(
43
parallel submitted
12:57:47
parallel finished
13:00:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:01:01
start mi0
13:01:01
start mi0 range(p) 1 loop
13:01:01
finish mi0 range(p) 1 loop
13:01:01
start mi0 range(p) 2 loop
13:01:01
finish mi0 range(p) 2 loop
13:01:01
start mi0 range(NT) loop
13:01:01
finish mi0 range(NT) loop
13:01:01
start mi0 range(n) loop
13:01:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:01:01
start mi0 range(n) 2loop
13:01:01
finish mi0 range(n) 2loop
13:01:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:01:01
start mi1 range(p) 1 loop
13:01:01
finish mi1 range(p) 1 loop
13:01:01
start mi1 range(p) 2 loop
13:01:01
finish mi1 range(p) 2 loop
13:01:01
start mi1 range(NT) loop
13:01:01
finish mi1 range(NT) loop
13:01:01
start mi1 range(n) loop
13:01:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:01:02
start mi1 range(n) 2loop
13:01:02
finish mi1 range(n) 2loop
13:01:02
[[-3.06033358]]
end mi1 loop
13:01:02
estep
13:01:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:01:17
start ppi1
13:01:17
start mi0
13:01:17
start mi0 range(p) 1 loop
13:01:17
finish mi0 range(p) 1 loop
13:01:17
start mi0 range(p) 2 loop
13:01:17
finish mi0 range(p) 2 loop
13:01:17
start mi0 range(NT) loop
13:01:17
finish mi0 range(NT) loop
13:01:17
start mi0 range(n) loop
13:01:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:01:17
start mi0 range(n) 2loop
13:01:17
finish mi0 range(n) 2loop
13:01:17
start mi1
13:01:17
start mi1 range(p) 1 loop
13:01:17
finish mi1 range(p) 1 loop
13:01:17
start mi1 range(p) 2 loop
13:01:18
finish mi1 range(p) 2 loop
13:01:18
start mi1 range(NT) loop
13:01:18
finish mi1 range(NT) loop
13:01:18
start mi1 range(n) loop
13:01:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:01:18
start mi1 range(n) 2loop
13:01:18
finish mi1 range(n) 2loop
13:01:18
[[-3.12280103]]
end mi1 loop
13:01:18
estep
13:01:18
end estep
13:01:35
end pa13:01:35
goodness of fit correlation [0.33047287]
start cluster 13:01:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33608 instead
  warnings.warn(
44
parallel submitted
13:02:00
parallel finished
13:05:08
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:05:21
start mi0
13:05:21
start mi0 range(p) 1 loop
13:05:21
finish mi0 range(p) 1 loop
13:05:21
start mi0 range(p) 2 loop
13:05:21
finish mi0 range(p) 2 loop
13:05:21
start mi0 range(NT) loop
13:05:22
finish mi0 range(NT) loop
13:05:22
start mi0 range(n) loop
13:05:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:05:22
start mi0 range(n) 2loop
13:05:22
finish mi0 range(n) 2loop
13:05:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:05:22
start mi1 range(p) 1 loop
13:05:22
finish mi1 range(p) 1 loop
13:05:22
start mi1 range(p) 2 loop
13:05:22
finish mi1 range(p) 2 loop
13:05:22
start mi1 range(NT) loop
13:05:22
finish mi1 range(NT) loop
13:05:22
start mi1 range(n) loop
13:05:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:05:22
start mi1 range(n) 2loop
13:05:22
finish mi1 range(n) 2loop
13:05:22
[[-3.08623748]]
end mi1 loop
13:05:22
estep
13:05:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:05:38
start ppi1
13:05:38
start mi0
13:05:38
start mi0 range(p) 1 loop
13:05:38
finish mi0 range(p) 1 loop
13:05:38
start mi0 range(p) 2 loop
13:05:38
finish mi0 range(p) 2 loop
13:05:38
start mi0 range(NT) loop
13:05:38
finish mi0 range(NT) loop
13:05:38
start mi0 range(n) loop
13:05:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:05:38
start mi0 range(n) 2loop
13:05:38
finish mi0 range(n) 2loop
13:05:38
start mi1
13:05:38
start mi1 range(p) 1 loop
13:05:38
finish mi1 range(p) 1 loop
13:05:38
start mi1 range(p) 2 loop
13:05:38
finish mi1 range(p) 2 loop
13:05:38
start mi1 range(NT) loop
13:05:38
finish mi1 range(NT) loop
13:05:38
start mi1 range(n) loop
13:05:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:05:39
start mi1 range(n) 2loop
13:05:39
finish mi1 range(n) 2loop
13:05:39
start mi2
13:05:39
start mi2 range(p) 1 loop
13:05:39
finish mi2 range(p) 1 loop
13:05:39
start mi2 range(p) 2 loop
13:05:39
finish mi2 range(p) 2 loop
13:05:39
start mi2 range(NT) loop
13:05:39
finish mi2 range(NT) loop
13:05:39
start mi2 range(n) loop
13:05:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:05:39
start mi2 range(n) 2loop
13:05:39
finish mi2 range(n) 2loop
13:05:39
[[-3.14873604]]
end mi2 loop
13:05:39
estep
13:05:39
end estep
13:05:55
end pa13:05:55
goodness of fit correlation [0.33461439]
start cluster 13:05:55
45
parallel submitted
13:06:23
parallel finished
13:09:26
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:09:41
start mi0
13:09:41
start mi0 range(p) 1 loop
13:09:41
finish mi0 range(p) 1 loop
13:09:41
start mi0 range(p) 2 loop
13:09:41
finish mi0 range(p) 2 loop
13:09:41
start mi0 range(NT) loop
13:09:41
finish mi0 range(NT) loop
13:09:41
start mi0 range(n) loop
13:09:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:09:42
start mi0 range(n) 2loop
13:09:42
finish mi0 range(n) 2loop
13:09:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:09:42
start mi1 range(p) 1 loop
13:09:42
finish mi1 range(p) 1 loop
13:09:42
start mi1 range(p) 2 loop
13:09:42
finish mi1 range(p) 2 loop
13:09:42
start mi1 range(NT) loop
13:09:42
finish mi1 range(NT) loop
13:09:42
start mi1 range(n) loop
13:09:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:09:42
start mi1 range(n) 2loop
13:09:42
finish mi1 range(n) 2loop
13:09:42
[[-3.14496407]]
end mi1 loop
13:09:42
estep
13:09:42
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:10:00
start ppi1
13:10:00
start mi0
13:10:00
start mi0 range(p) 1 loop
13:10:00
finish mi0 range(p) 1 loop
13:10:00
start mi0 range(p) 2 loop
13:10:00
finish mi0 range(p) 2 loop
13:10:00
start mi0 range(NT) loop
13:10:00
finish mi0 range(NT) loop
13:10:00
start mi0 range(n) loop
13:10:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:10:00
start mi0 range(n) 2loop
13:10:00
finish mi0 range(n) 2loop
13:10:00
start mi1
13:10:00
start mi1 range(p) 1 loop
13:10:00
finish mi1 range(p) 1 loop
13:10:00
start mi1 range(p) 2 loop
13:10:00
finish mi1 range(p) 2 loop
13:10:00
start mi1 range(NT) loop
13:10:00
finish mi1 range(NT) loop
13:10:00
start mi1 range(n) loop
13:10:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:10:00
start mi1 range(n) 2loop
13:10:00
finish mi1 range(n) 2loop
13:10:00
start mi2
13:10:00
start mi2 range(p) 1 loop
13:10:00
finish mi2 range(p) 1 loop
13:10:00
start mi2 range(p) 2 loop
13:10:00
finish mi2 range(p) 2 loop
13:10:00
start mi2 range(NT) loop
13:10:00
finish mi2 range(NT) loop
13:10:00
start mi2 range(n) loop
13:10:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:10:00
start mi2 range(n) 2loop
13:10:00
finish mi2 range(n) 2loop
13:10:00
[[-3.20750616]]
end mi2 loop
13:10:00
estep
13:10:00
end estep
13:10:16
end pa13:10:16
goodness of fit correlation [0.35865059]
start cluster 13:10:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38401 instead
  warnings.warn(
46
parallel submitted
13:10:40
parallel finished
13:13:06
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:13:22
start mi0
13:13:22
start mi0 range(p) 1 loop
13:13:22
finish mi0 range(p) 1 loop
13:13:22
start mi0 range(p) 2 loop
13:13:22
finish mi0 range(p) 2 loop
13:13:22
start mi0 range(NT) loop
13:13:22
finish mi0 range(NT) loop
13:13:22
start mi0 range(n) loop
13:13:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:13:22
start mi0 range(n) 2loop
13:13:22
finish mi0 range(n) 2loop
13:13:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:13:22
start mi1 range(p) 1 loop
13:13:22
finish mi1 range(p) 1 loop
13:13:22
start mi1 range(p) 2 loop
13:13:22
finish mi1 range(p) 2 loop
13:13:22
start mi1 range(NT) loop
13:13:22
finish mi1 range(NT) loop
13:13:22
start mi1 range(n) loop
13:13:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:13:22
start mi1 range(n) 2loop
13:13:22
finish mi1 range(n) 2loop
13:13:23
[[-3.03827704]]
end mi1 loop
13:13:23
estep
13:13:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:13:38
start ppi1
13:13:38
start mi0
13:13:38
start mi0 range(p) 1 loop
13:13:38
finish mi0 range(p) 1 loop
13:13:38
start mi0 range(p) 2 loop
13:13:38
finish mi0 range(p) 2 loop
13:13:38
start mi0 range(NT) loop
13:13:38
finish mi0 range(NT) loop
13:13:38
start mi0 range(n) loop
13:13:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:13:39
start mi0 range(n) 2loop
13:13:39
finish mi0 range(n) 2loop
13:13:39
start mi1
13:13:39
start mi1 range(p) 1 loop
13:13:39
finish mi1 range(p) 1 loop
13:13:39
start mi1 range(p) 2 loop
13:13:39
finish mi1 range(p) 2 loop
13:13:39
start mi1 range(NT) loop
13:13:39
finish mi1 range(NT) loop
13:13:39
start mi1 range(n) loop
13:13:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:13:39
start mi1 range(n) 2loop
13:13:39
finish mi1 range(n) 2loop
13:13:39
[[-3.1007573]]
end mi1 loop
13:13:39
estep
13:13:39
end estep
13:13:54
end pa13:13:54
goodness of fit correlation [0.32022052]
start cluster 13:13:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42954 instead
  warnings.warn(
47
parallel submitted
13:14:17
parallel finished
13:20:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:21:03
start mi0
13:21:03
start mi0 range(p) 1 loop
13:21:03
finish mi0 range(p) 1 loop
13:21:03
start mi0 range(p) 2 loop
13:21:03
finish mi0 range(p) 2 loop
13:21:03
start mi0 range(NT) loop
13:21:03
finish mi0 range(NT) loop
13:21:03
start mi0 range(n) loop
13:21:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:21:03
start mi0 range(n) 2loop
13:21:03
finish mi0 range(n) 2loop
13:21:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:21:03
start mi1 range(p) 1 loop
13:21:03
finish mi1 range(p) 1 loop
13:21:03
start mi1 range(p) 2 loop
13:21:03
finish mi1 range(p) 2 loop
13:21:03
start mi1 range(NT) loop
13:21:03
finish mi1 range(NT) loop
13:21:03
start mi1 range(n) loop
13:21:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:21:03
start mi1 range(n) 2loop
13:21:03
finish mi1 range(n) 2loop
13:21:03
[[-3.09869377]]
end mi1 loop
13:21:03
estep
13:21:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:21:19
start ppi1
13:21:19
start mi0
13:21:19
start mi0 range(p) 1 loop
13:21:19
finish mi0 range(p) 1 loop
13:21:19
start mi0 range(p) 2 loop
13:21:19
finish mi0 range(p) 2 loop
13:21:19
start mi0 range(NT) loop
13:21:19
finish mi0 range(NT) loop
13:21:19
start mi0 range(n) loop
13:21:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:21:19
start mi0 range(n) 2loop
13:21:19
finish mi0 range(n) 2loop
13:21:19
start mi1
13:21:19
start mi1 range(p) 1 loop
13:21:19
finish mi1 range(p) 1 loop
13:21:19
start mi1 range(p) 2 loop
13:21:19
finish mi1 range(p) 2 loop
13:21:19
start mi1 range(NT) loop
13:21:19
finish mi1 range(NT) loop
13:21:19
start mi1 range(n) loop
13:21:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:21:19
start mi1 range(n) 2loop
13:21:19
finish mi1 range(n) 2loop
13:21:20
start mi2
13:21:20
start mi2 range(p) 1 loop
13:21:20
finish mi2 range(p) 1 loop
13:21:20
start mi2 range(p) 2 loop
13:21:20
finish mi2 range(p) 2 loop
13:21:20
start mi2 range(NT) loop
13:21:20
finish mi2 range(NT) loop
13:21:20
start mi2 range(n) loop
13:21:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:21:20
start mi2 range(n) 2loop
13:21:20
finish mi2 range(n) 2loop
13:21:20
[[-3.1611969]]
end mi2 loop
13:21:20
estep
13:21:20
end estep
13:21:36
end pa13:21:36
goodness of fit correlation [0.34470061]
start cluster 13:21:36
48
parallel submitted
13:21:59
parallel finished
13:25:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:26:14
start mi0
13:26:14
start mi0 range(p) 1 loop
13:26:14
finish mi0 range(p) 1 loop
13:26:14
start mi0 range(p) 2 loop
13:26:14
finish mi0 range(p) 2 loop
13:26:14
start mi0 range(NT) loop
13:26:14
finish mi0 range(NT) loop
13:26:14
start mi0 range(n) loop
13:26:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:26:14
start mi0 range(n) 2loop
13:26:14
finish mi0 range(n) 2loop
13:26:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:26:14
start mi1 range(p) 1 loop
13:26:14
finish mi1 range(p) 1 loop
13:26:14
start mi1 range(p) 2 loop
13:26:14
finish mi1 range(p) 2 loop
13:26:14
start mi1 range(NT) loop
13:26:14
finish mi1 range(NT) loop
13:26:14
start mi1 range(n) loop
13:26:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:26:14
start mi1 range(n) 2loop
13:26:14
finish mi1 range(n) 2loop
13:26:14
[[-3.05285002]]
end mi1 loop
13:26:14
estep
13:26:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:26:32
start ppi1
13:26:32
start mi0
13:26:32
start mi0 range(p) 1 loop
13:26:32
finish mi0 range(p) 1 loop
13:26:32
start mi0 range(p) 2 loop
13:26:32
finish mi0 range(p) 2 loop
13:26:32
start mi0 range(NT) loop
13:26:32
finish mi0 range(NT) loop
13:26:32
start mi0 range(n) loop
13:26:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:26:32
start mi0 range(n) 2loop
13:26:32
finish mi0 range(n) 2loop
13:26:33
start mi1
13:26:33
start mi1 range(p) 1 loop
13:26:33
finish mi1 range(p) 1 loop
13:26:33
start mi1 range(p) 2 loop
13:26:33
finish mi1 range(p) 2 loop
13:26:33
start mi1 range(NT) loop
13:26:33
finish mi1 range(NT) loop
13:26:33
start mi1 range(n) loop
13:26:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:26:33
start mi1 range(n) 2loop
13:26:33
finish mi1 range(n) 2loop
13:26:33
[[-3.11532254]]
end mi1 loop
13:26:33
estep
13:26:33
end estep
13:26:51
end pa13:26:51
goodness of fit correlation [0.33700796]
start cluster 13:26:51
49
parallel submitted
13:27:17
parallel finished
13:31:28
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:31:44
start mi0
13:31:44
start mi0 range(p) 1 loop
13:31:44
finish mi0 range(p) 1 loop
13:31:44
start mi0 range(p) 2 loop
13:31:44
finish mi0 range(p) 2 loop
13:31:44
start mi0 range(NT) loop
13:31:44
finish mi0 range(NT) loop
13:31:44
start mi0 range(n) loop
13:31:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:31:44
start mi0 range(n) 2loop
13:31:44
finish mi0 range(n) 2loop
13:31:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:31:44
start mi1 range(p) 1 loop
13:31:44
finish mi1 range(p) 1 loop
13:31:44
start mi1 range(p) 2 loop
13:31:44
finish mi1 range(p) 2 loop
13:31:44
start mi1 range(NT) loop
13:31:45
finish mi1 range(NT) loop
13:31:45
start mi1 range(n) loop
13:31:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:31:45
start mi1 range(n) 2loop
13:31:45
finish mi1 range(n) 2loop
13:31:45
[[-3.02551091]]
end mi1 loop
13:31:45
estep
13:31:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:32:01
start ppi1
13:32:01
start mi0
13:32:01
start mi0 range(p) 1 loop
13:32:01
finish mi0 range(p) 1 loop
13:32:01
start mi0 range(p) 2 loop
13:32:01
finish mi0 range(p) 2 loop
13:32:01
start mi0 range(NT) loop
13:32:01
finish mi0 range(NT) loop
13:32:01
start mi0 range(n) loop
13:32:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:32:01
start mi0 range(n) 2loop
13:32:01
finish mi0 range(n) 2loop
13:32:01
start mi1
13:32:01
start mi1 range(p) 1 loop
13:32:01
finish mi1 range(p) 1 loop
13:32:01
start mi1 range(p) 2 loop
13:32:01
finish mi1 range(p) 2 loop
13:32:01
start mi1 range(NT) loop
13:32:01
finish mi1 range(NT) loop
13:32:02
start mi1 range(n) loop
13:32:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:32:02
start mi1 range(n) 2loop
13:32:02
finish mi1 range(n) 2loop
13:32:02
[[-3.08799593]]
end mi1 loop
13:32:02
estep
13:32:02
end estep
13:32:18
end pa13:32:18
goodness of fit correlation [0.31832874]
start cluster 13:32:18
50
parallel submitted
13:32:41
parallel finished
13:38:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:38:57
start mi0
13:38:57
start mi0 range(p) 1 loop
13:38:57
finish mi0 range(p) 1 loop
13:38:57
start mi0 range(p) 2 loop
13:38:57
finish mi0 range(p) 2 loop
13:38:57
start mi0 range(NT) loop
13:38:57
finish mi0 range(NT) loop
13:38:57
start mi0 range(n) loop
13:38:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:38:57
start mi0 range(n) 2loop
13:38:57
finish mi0 range(n) 2loop
13:38:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:38:58
start mi1 range(p) 1 loop
13:38:58
finish mi1 range(p) 1 loop
13:38:58
start mi1 range(p) 2 loop
13:38:58
finish mi1 range(p) 2 loop
13:38:58
start mi1 range(NT) loop
13:38:58
finish mi1 range(NT) loop
13:38:58
start mi1 range(n) loop
13:38:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:38:58
start mi1 range(n) 2loop
13:38:58
finish mi1 range(n) 2loop
13:38:58
[[-3.11048088]]
end mi1 loop
13:38:58
estep
13:38:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:39:14
start ppi1
13:39:14
start mi0
13:39:14
start mi0 range(p) 1 loop
13:39:14
finish mi0 range(p) 1 loop
13:39:14
start mi0 range(p) 2 loop
13:39:14
finish mi0 range(p) 2 loop
13:39:14
start mi0 range(NT) loop
13:39:14
finish mi0 range(NT) loop
13:39:14
start mi0 range(n) loop
13:39:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:39:14
start mi0 range(n) 2loop
13:39:14
finish mi0 range(n) 2loop
13:39:14
start mi1
13:39:14
start mi1 range(p) 1 loop
13:39:14
finish mi1 range(p) 1 loop
13:39:14
start mi1 range(p) 2 loop
13:39:14
finish mi1 range(p) 2 loop
13:39:14
start mi1 range(NT) loop
13:39:14
finish mi1 range(NT) loop
13:39:14
start mi1 range(n) loop
13:39:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:39:14
start mi1 range(n) 2loop
13:39:14
finish mi1 range(n) 2loop
13:39:15
start mi2
13:39:15
start mi2 range(p) 1 loop
13:39:15
finish mi2 range(p) 1 loop
13:39:15
start mi2 range(p) 2 loop
13:39:15
finish mi2 range(p) 2 loop
13:39:15
start mi2 range(NT) loop
13:39:15
finish mi2 range(NT) loop
13:39:15
start mi2 range(n) loop
13:39:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:39:15
start mi2 range(n) 2loop
13:39:15
finish mi2 range(n) 2loop
13:39:15
[[-3.17299021]]
end mi2 loop
13:39:15
estep
13:39:15
end estep
13:39:33
end pa13:39:33
goodness of fit correlation [0.34244467]
start cluster 13:39:33
51
parallel submitted
13:39:59
parallel finished
13:45:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:45:17
start mi0
13:45:17
start mi0 range(p) 1 loop
13:45:17
finish mi0 range(p) 1 loop
13:45:17
start mi0 range(p) 2 loop
13:45:17
finish mi0 range(p) 2 loop
13:45:17
start mi0 range(NT) loop
13:45:17
finish mi0 range(NT) loop
13:45:17
start mi0 range(n) loop
13:45:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:45:17
start mi0 range(n) 2loop
13:45:17
finish mi0 range(n) 2loop
13:45:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:45:18
start mi1 range(p) 1 loop
13:45:18
finish mi1 range(p) 1 loop
13:45:18
start mi1 range(p) 2 loop
13:45:18
finish mi1 range(p) 2 loop
13:45:18
start mi1 range(NT) loop
13:45:18
finish mi1 range(NT) loop
13:45:18
start mi1 range(n) loop
13:45:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:45:18
start mi1 range(n) 2loop
13:45:18
finish mi1 range(n) 2loop
13:45:18
[[-3.06404364]]
end mi1 loop
13:45:18
estep
13:45:18
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:45:34
start ppi1
13:45:34
start mi0
13:45:34
start mi0 range(p) 1 loop
13:45:34
finish mi0 range(p) 1 loop
13:45:34
start mi0 range(p) 2 loop
13:45:34
finish mi0 range(p) 2 loop
13:45:34
start mi0 range(NT) loop
13:45:34
finish mi0 range(NT) loop
13:45:34
start mi0 range(n) loop
13:45:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:45:34
start mi0 range(n) 2loop
13:45:34
finish mi0 range(n) 2loop
13:45:35
start mi1
13:45:35
start mi1 range(p) 1 loop
13:45:35
finish mi1 range(p) 1 loop
13:45:35
start mi1 range(p) 2 loop
13:45:35
finish mi1 range(p) 2 loop
13:45:35
start mi1 range(NT) loop
13:45:35
finish mi1 range(NT) loop
13:45:35
start mi1 range(n) loop
13:45:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:45:35
start mi1 range(n) 2loop
13:45:35
finish mi1 range(n) 2loop
13:45:35
[[-3.12650829]]
end mi1 loop
13:45:35
estep
13:45:35
end estep
13:45:52
end pa13:45:52
goodness of fit correlation [0.33043954]
start cluster 13:45:52
52
parallel submitted
13:46:19
parallel finished
13:51:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:51:32
start mi0
13:51:32
start mi0 range(p) 1 loop
13:51:32
finish mi0 range(p) 1 loop
13:51:32
start mi0 range(p) 2 loop
13:51:32
finish mi0 range(p) 2 loop
13:51:32
start mi0 range(NT) loop
13:51:32
finish mi0 range(NT) loop
13:51:32
start mi0 range(n) loop
13:51:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:51:32
start mi0 range(n) 2loop
13:51:32
finish mi0 range(n) 2loop
13:51:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:51:32
start mi1 range(p) 1 loop
13:51:32
finish mi1 range(p) 1 loop
13:51:32
start mi1 range(p) 2 loop
13:51:32
finish mi1 range(p) 2 loop
13:51:32
start mi1 range(NT) loop
13:51:32
finish mi1 range(NT) loop
13:51:32
start mi1 range(n) loop
13:51:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:51:32
start mi1 range(n) 2loop
13:51:32
finish mi1 range(n) 2loop
13:51:33
[[-3.06879665]]
end mi1 loop
13:51:33
estep
13:51:33
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:51:49
start ppi1
13:51:49
start mi0
13:51:49
start mi0 range(p) 1 loop
13:51:49
finish mi0 range(p) 1 loop
13:51:49
start mi0 range(p) 2 loop
13:51:49
finish mi0 range(p) 2 loop
13:51:49
start mi0 range(NT) loop
13:51:49
finish mi0 range(NT) loop
13:51:49
start mi0 range(n) loop
13:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:51:49
start mi0 range(n) 2loop
13:51:49
finish mi0 range(n) 2loop
13:51:49
start mi1
13:51:49
start mi1 range(p) 1 loop
13:51:49
finish mi1 range(p) 1 loop
13:51:49
start mi1 range(p) 2 loop
13:51:49
finish mi1 range(p) 2 loop
13:51:49
start mi1 range(NT) loop
13:51:49
finish mi1 range(NT) loop
13:51:49
start mi1 range(n) loop
13:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:51:49
start mi1 range(n) 2loop
13:51:49
finish mi1 range(n) 2loop
13:51:50
[[-3.1312574]]
end mi1 loop
13:51:50
estep
13:51:50
end estep
13:52:06
end pa13:52:06
goodness of fit correlation [0.33626886]
start cluster 13:52:06
53
parallel submitted
13:52:30
slurmstepd: error: *** JOB 1825834 ON nodeb22 CANCELLED AT 2020-11-06T13:53:19 ***
