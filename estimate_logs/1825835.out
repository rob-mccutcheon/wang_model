6
subject 1006_01_MR
start cluster 09:36:16
0
parallel submitted
09:36:33
parallel finished
09:39:36
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:39:39
start mi0
09:39:39
start mi0 range(p) 1 loop
09:39:39
finish mi0 range(p) 1 loop
09:39:39
start mi0 range(p) 2 loop
09:39:39
finish mi0 range(p) 2 loop
09:39:39
start mi0 range(NT) loop
09:39:39
finish mi0 range(NT) loop
09:39:39
start mi0 range(n) loop
09:39:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:39:39
start mi0 range(n) 2loop
09:39:39
finish mi0 range(n) 2loop
09:39:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:39:39
start mi1 range(p) 1 loop
09:39:39
finish mi1 range(p) 1 loop
09:39:39
start mi1 range(p) 2 loop
09:39:39
finish mi1 range(p) 2 loop
09:39:39
start mi1 range(NT) loop
09:39:39
finish mi1 range(NT) loop
09:39:39
start mi1 range(n) loop
09:39:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:39:39
start mi1 range(n) 2loop
09:39:39
finish mi1 range(n) 2loop
09:39:39
start mi2
09:39:39
start mi2 range(p) 1 loop
09:39:39
finish mi2 range(p) 1 loop
09:39:39
start mi2 range(p) 2 loop
09:39:39
finish mi2 range(p) 2 loop
09:39:39
start mi2 range(NT) loop
09:39:39
finish mi2 range(NT) loop
09:39:39
start mi2 range(n) loop
09:39:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:39:39
start mi2 range(n) 2loop
09:39:39
finish mi2 range(n) 2loop
09:39:40
[[-2.72532933]]
end mi2 loop
09:39:40
estep
09:39:40
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:39:54
start ppi1
09:39:54
start mi0
09:39:54
start mi0 range(p) 1 loop
09:39:54
finish mi0 range(p) 1 loop
09:39:54
start mi0 range(p) 2 loop
09:39:54
finish mi0 range(p) 2 loop
09:39:54
start mi0 range(NT) loop
09:39:54
finish mi0 range(NT) loop
09:39:54
start mi0 range(n) loop
09:39:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:39:55
start mi0 range(n) 2loop
09:39:55
finish mi0 range(n) 2loop
09:39:55
start mi1
09:39:55
start mi1 range(p) 1 loop
09:39:55
finish mi1 range(p) 1 loop
09:39:55
start mi1 range(p) 2 loop
09:39:55
finish mi1 range(p) 2 loop
09:39:55
start mi1 range(NT) loop
09:39:55
finish mi1 range(NT) loop
09:39:55
start mi1 range(n) loop
09:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:39:55
start mi1 range(n) 2loop
09:39:55
finish mi1 range(n) 2loop
09:39:55
start mi2
09:39:55
start mi2 range(p) 1 loop
09:39:55
finish mi2 range(p) 1 loop
09:39:55
start mi2 range(p) 2 loop
09:39:55
finish mi2 range(p) 2 loop
09:39:55
start mi2 range(NT) loop
09:39:55
finish mi2 range(NT) loop
09:39:55
start mi2 range(n) loop
09:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:39:55
start mi2 range(n) 2loop
09:39:55
finish mi2 range(n) 2loop
09:39:55
[[-2.72532933]]
end mi2 loop
09:39:55
estep
09:39:55
end estep
09:40:11
end pa09:40:11
goodness of fit correlation [0.02054579]
start cluster 09:40:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40240 instead
  warnings.warn(
1
parallel submitted
09:40:28
parallel finished
09:45:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:45:56
start mi0
09:45:56
start mi0 range(p) 1 loop
09:45:56
finish mi0 range(p) 1 loop
09:45:56
start mi0 range(p) 2 loop
09:45:56
finish mi0 range(p) 2 loop
09:45:56
start mi0 range(NT) loop
09:45:56
finish mi0 range(NT) loop
09:45:56
start mi0 range(n) loop
09:45:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:45:56
start mi0 range(n) 2loop
09:45:56
finish mi0 range(n) 2loop
09:45:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:45:56
start mi1 range(p) 1 loop
09:45:56
finish mi1 range(p) 1 loop
09:45:56
start mi1 range(p) 2 loop
09:45:56
finish mi1 range(p) 2 loop
09:45:56
start mi1 range(NT) loop
09:45:56
finish mi1 range(NT) loop
09:45:56
start mi1 range(n) loop
09:45:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:45:56
start mi1 range(n) 2loop
09:45:56
finish mi1 range(n) 2loop
09:45:56
start mi2
09:45:56
start mi2 range(p) 1 loop
09:45:56
finish mi2 range(p) 1 loop
09:45:56
start mi2 range(p) 2 loop
09:45:56
finish mi2 range(p) 2 loop
09:45:56
start mi2 range(NT) loop
09:45:56
finish mi2 range(NT) loop
09:45:56
start mi2 range(n) loop
09:45:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:45:57
start mi2 range(n) 2loop
09:45:57
finish mi2 range(n) 2loop
09:45:57
[[-2.72875113]]
end mi2 loop
09:45:57
estep
09:45:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:46:11
start ppi1
09:46:11
start mi0
09:46:11
start mi0 range(p) 1 loop
09:46:11
finish mi0 range(p) 1 loop
09:46:11
start mi0 range(p) 2 loop
09:46:11
finish mi0 range(p) 2 loop
09:46:11
start mi0 range(NT) loop
09:46:11
finish mi0 range(NT) loop
09:46:11
start mi0 range(n) loop
09:46:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:46:11
start mi0 range(n) 2loop
09:46:11
finish mi0 range(n) 2loop
09:46:11
start mi1
09:46:11
start mi1 range(p) 1 loop
09:46:11
finish mi1 range(p) 1 loop
09:46:11
start mi1 range(p) 2 loop
09:46:11
finish mi1 range(p) 2 loop
09:46:11
start mi1 range(NT) loop
09:46:11
finish mi1 range(NT) loop
09:46:11
start mi1 range(n) loop
09:46:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:46:11
start mi1 range(n) 2loop
09:46:11
finish mi1 range(n) 2loop
09:46:11
start mi2
09:46:11
start mi2 range(p) 1 loop
09:46:11
finish mi2 range(p) 1 loop
09:46:11
start mi2 range(p) 2 loop
09:46:11
finish mi2 range(p) 2 loop
09:46:11
start mi2 range(NT) loop
09:46:11
finish mi2 range(NT) loop
09:46:11
start mi2 range(n) loop
09:46:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:46:12
start mi2 range(n) 2loop
09:46:12
finish mi2 range(n) 2loop
09:46:12
[[-2.79124346]]
end mi2 loop
09:46:12
estep
09:46:12
end estep
09:46:26
end pa09:46:26
goodness of fit correlation [0.01824356]
start cluster 09:46:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37551 instead
  warnings.warn(
2
parallel submitted
09:46:41
parallel finished
09:53:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:53:49
start mi0
09:53:49
start mi0 range(p) 1 loop
09:53:49
finish mi0 range(p) 1 loop
09:53:49
start mi0 range(p) 2 loop
09:53:49
finish mi0 range(p) 2 loop
09:53:49
start mi0 range(NT) loop
09:53:49
finish mi0 range(NT) loop
09:53:49
start mi0 range(n) loop
09:53:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:53:50
start mi0 range(n) 2loop
09:53:50
finish mi0 range(n) 2loop
09:53:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:53:50
start mi1 range(p) 1 loop
09:53:50
finish mi1 range(p) 1 loop
09:53:50
start mi1 range(p) 2 loop
09:53:50
finish mi1 range(p) 2 loop
09:53:50
start mi1 range(NT) loop
09:53:50
finish mi1 range(NT) loop
09:53:50
start mi1 range(n) loop
09:53:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:53:50
start mi1 range(n) 2loop
09:53:50
finish mi1 range(n) 2loop
09:53:50
start mi2
09:53:50
start mi2 range(p) 1 loop
09:53:50
finish mi2 range(p) 1 loop
09:53:50
start mi2 range(p) 2 loop
09:53:50
finish mi2 range(p) 2 loop
09:53:50
start mi2 range(NT) loop
09:53:50
finish mi2 range(NT) loop
09:53:50
start mi2 range(n) loop
09:53:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:53:50
start mi2 range(n) 2loop
09:53:50
finish mi2 range(n) 2loop
09:53:50
[[-2.76590151]]
end mi2 loop
09:53:50
estep
09:53:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:54:06
start ppi1
09:54:06
start mi0
09:54:06
start mi0 range(p) 1 loop
09:54:06
finish mi0 range(p) 1 loop
09:54:06
start mi0 range(p) 2 loop
09:54:06
finish mi0 range(p) 2 loop
09:54:06
start mi0 range(NT) loop
09:54:06
finish mi0 range(NT) loop
09:54:06
start mi0 range(n) loop
09:54:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:54:06
start mi0 range(n) 2loop
09:54:06
finish mi0 range(n) 2loop
09:54:06
start mi1
09:54:06
start mi1 range(p) 1 loop
09:54:06
finish mi1 range(p) 1 loop
09:54:06
start mi1 range(p) 2 loop
09:54:06
finish mi1 range(p) 2 loop
09:54:06
start mi1 range(NT) loop
09:54:07
finish mi1 range(NT) loop
09:54:07
start mi1 range(n) loop
09:54:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:54:07
start mi1 range(n) 2loop
09:54:07
finish mi1 range(n) 2loop
09:54:07
start mi2
09:54:07
start mi2 range(p) 1 loop
09:54:07
finish mi2 range(p) 1 loop
09:54:07
start mi2 range(p) 2 loop
09:54:07
finish mi2 range(p) 2 loop
09:54:07
start mi2 range(NT) loop
09:54:07
finish mi2 range(NT) loop
09:54:07
start mi2 range(n) loop
09:54:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:54:07
start mi2 range(n) 2loop
09:54:07
finish mi2 range(n) 2loop
09:54:07
[[-2.82839363]]
end mi2 loop
09:54:07
estep
09:54:07
end estep
09:54:23
end pa09:54:23
goodness of fit correlation [0.0858952]
start cluster 09:54:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34335 instead
  warnings.warn(
3
parallel submitted
09:54:38
parallel finished
10:00:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:00:54
start mi0
10:00:54
start mi0 range(p) 1 loop
10:00:54
finish mi0 range(p) 1 loop
10:00:54
start mi0 range(p) 2 loop
10:00:54
finish mi0 range(p) 2 loop
10:00:54
start mi0 range(NT) loop
10:00:54
finish mi0 range(NT) loop
10:00:54
start mi0 range(n) loop
10:00:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:00:54
start mi0 range(n) 2loop
10:00:54
finish mi0 range(n) 2loop
10:00:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:00:54
start mi1 range(p) 1 loop
10:00:54
finish mi1 range(p) 1 loop
10:00:54
start mi1 range(p) 2 loop
10:00:54
finish mi1 range(p) 2 loop
10:00:54
start mi1 range(NT) loop
10:00:54
finish mi1 range(NT) loop
10:00:54
start mi1 range(n) loop
10:00:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:00:54
start mi1 range(n) 2loop
10:00:54
finish mi1 range(n) 2loop
10:00:54
start mi2
10:00:54
start mi2 range(p) 1 loop
10:00:54
finish mi2 range(p) 1 loop
10:00:54
start mi2 range(p) 2 loop
10:00:54
finish mi2 range(p) 2 loop
10:00:54
start mi2 range(NT) loop
10:00:54
finish mi2 range(NT) loop
10:00:54
start mi2 range(n) loop
10:00:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:00:54
start mi2 range(n) 2loop
10:00:54
finish mi2 range(n) 2loop
10:00:54
[[-2.76997311]]
end mi2 loop
10:00:54
estep
10:00:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:01:10
start ppi1
10:01:10
start mi0
10:01:10
start mi0 range(p) 1 loop
10:01:10
finish mi0 range(p) 1 loop
10:01:10
start mi0 range(p) 2 loop
10:01:10
finish mi0 range(p) 2 loop
10:01:10
start mi0 range(NT) loop
10:01:11
finish mi0 range(NT) loop
10:01:11
start mi0 range(n) loop
10:01:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:01:11
start mi0 range(n) 2loop
10:01:11
finish mi0 range(n) 2loop
10:01:11
start mi1
10:01:11
start mi1 range(p) 1 loop
10:01:11
finish mi1 range(p) 1 loop
10:01:11
start mi1 range(p) 2 loop
10:01:11
finish mi1 range(p) 2 loop
10:01:11
start mi1 range(NT) loop
10:01:11
finish mi1 range(NT) loop
10:01:11
start mi1 range(n) loop
10:01:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:01:11
start mi1 range(n) 2loop
10:01:11
finish mi1 range(n) 2loop
10:01:11
start mi2
10:01:11
start mi2 range(p) 1 loop
10:01:11
finish mi2 range(p) 1 loop
10:01:11
start mi2 range(p) 2 loop
10:01:11
finish mi2 range(p) 2 loop
10:01:11
start mi2 range(NT) loop
10:01:11
finish mi2 range(NT) loop
10:01:11
start mi2 range(n) loop
10:01:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:01:11
start mi2 range(n) 2loop
10:01:11
finish mi2 range(n) 2loop
10:01:11
[[-2.83246522]]
end mi2 loop
10:01:11
estep
10:01:11
end estep
10:01:27
end pa10:01:27
goodness of fit correlation [0.10329894]
start cluster 10:01:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39882 instead
  warnings.warn(
4
parallel submitted
10:01:45
parallel finished
10:07:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:07:42
start mi0
10:07:42
start mi0 range(p) 1 loop
10:07:42
finish mi0 range(p) 1 loop
10:07:42
start mi0 range(p) 2 loop
10:07:42
finish mi0 range(p) 2 loop
10:07:42
start mi0 range(NT) loop
10:07:42
finish mi0 range(NT) loop
10:07:42
start mi0 range(n) loop
10:07:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:07:42
start mi0 range(n) 2loop
10:07:42
finish mi0 range(n) 2loop
10:07:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:07:43
start mi1 range(p) 1 loop
10:07:43
finish mi1 range(p) 1 loop
10:07:43
start mi1 range(p) 2 loop
10:07:43
finish mi1 range(p) 2 loop
10:07:43
start mi1 range(NT) loop
10:07:43
finish mi1 range(NT) loop
10:07:43
start mi1 range(n) loop
10:07:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:07:43
start mi1 range(n) 2loop
10:07:43
finish mi1 range(n) 2loop
10:07:43
start mi2
10:07:43
start mi2 range(p) 1 loop
10:07:43
finish mi2 range(p) 1 loop
10:07:43
start mi2 range(p) 2 loop
10:07:43
finish mi2 range(p) 2 loop
10:07:43
start mi2 range(NT) loop
10:07:43
finish mi2 range(NT) loop
10:07:43
start mi2 range(n) loop
10:07:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:07:43
start mi2 range(n) 2loop
10:07:43
finish mi2 range(n) 2loop
10:07:43
[[-2.76931682]]
end mi2 loop
10:07:43
estep
10:07:43
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:07:59
start ppi1
10:07:59
start mi0
10:07:59
start mi0 range(p) 1 loop
10:07:59
finish mi0 range(p) 1 loop
10:07:59
start mi0 range(p) 2 loop
10:07:59
finish mi0 range(p) 2 loop
10:07:59
start mi0 range(NT) loop
10:07:59
finish mi0 range(NT) loop
10:07:59
start mi0 range(n) loop
10:07:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:07:59
start mi0 range(n) 2loop
10:07:59
finish mi0 range(n) 2loop
10:07:59
start mi1
10:07:59
start mi1 range(p) 1 loop
10:07:59
finish mi1 range(p) 1 loop
10:07:59
start mi1 range(p) 2 loop
10:07:59
finish mi1 range(p) 2 loop
10:07:59
start mi1 range(NT) loop
10:07:59
finish mi1 range(NT) loop
10:07:59
start mi1 range(n) loop
10:07:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:08:00
start mi1 range(n) 2loop
10:08:00
finish mi1 range(n) 2loop
10:08:00
start mi2
10:08:00
start mi2 range(p) 1 loop
10:08:00
finish mi2 range(p) 1 loop
10:08:00
start mi2 range(p) 2 loop
10:08:00
finish mi2 range(p) 2 loop
10:08:00
start mi2 range(NT) loop
10:08:00
finish mi2 range(NT) loop
10:08:00
start mi2 range(n) loop
10:08:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:08:00
start mi2 range(n) 2loop
10:08:00
finish mi2 range(n) 2loop
10:08:00
[[-2.83180894]]
end mi2 loop
10:08:00
estep
10:08:00
end estep
10:08:16
end pa10:08:16
goodness of fit correlation [0.11297769]
start cluster 10:08:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42878 instead
  warnings.warn(
5
parallel submitted
10:08:34
parallel finished
10:14:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:14:03
start mi0
10:14:03
start mi0 range(p) 1 loop
10:14:03
finish mi0 range(p) 1 loop
10:14:03
start mi0 range(p) 2 loop
10:14:03
finish mi0 range(p) 2 loop
10:14:03
start mi0 range(NT) loop
10:14:03
finish mi0 range(NT) loop
10:14:03
start mi0 range(n) loop
10:14:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:14:03
start mi0 range(n) 2loop
10:14:03
finish mi0 range(n) 2loop
10:14:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:14:03
start mi1 range(p) 1 loop
10:14:03
finish mi1 range(p) 1 loop
10:14:03
start mi1 range(p) 2 loop
10:14:03
finish mi1 range(p) 2 loop
10:14:03
start mi1 range(NT) loop
10:14:03
finish mi1 range(NT) loop
10:14:03
start mi1 range(n) loop
10:14:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:14:04
start mi1 range(n) 2loop
10:14:04
finish mi1 range(n) 2loop
10:14:04
start mi2
10:14:04
start mi2 range(p) 1 loop
10:14:04
finish mi2 range(p) 1 loop
10:14:04
start mi2 range(p) 2 loop
10:14:04
finish mi2 range(p) 2 loop
10:14:04
start mi2 range(NT) loop
10:14:04
finish mi2 range(NT) loop
10:14:04
start mi2 range(n) loop
10:14:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:14:04
start mi2 range(n) 2loop
10:14:04
finish mi2 range(n) 2loop
10:14:04
[[-2.78402726]]
end mi2 loop
10:14:04
estep
10:14:04
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:14:19
start ppi1
10:14:19
start mi0
10:14:19
start mi0 range(p) 1 loop
10:14:19
finish mi0 range(p) 1 loop
10:14:19
start mi0 range(p) 2 loop
10:14:19
finish mi0 range(p) 2 loop
10:14:19
start mi0 range(NT) loop
10:14:19
finish mi0 range(NT) loop
10:14:19
start mi0 range(n) loop
10:14:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:14:19
start mi0 range(n) 2loop
10:14:19
finish mi0 range(n) 2loop
10:14:19
start mi1
10:14:19
start mi1 range(p) 1 loop
10:14:19
finish mi1 range(p) 1 loop
10:14:19
start mi1 range(p) 2 loop
10:14:19
finish mi1 range(p) 2 loop
10:14:19
start mi1 range(NT) loop
10:14:19
finish mi1 range(NT) loop
10:14:19
start mi1 range(n) loop
10:14:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:14:19
start mi1 range(n) 2loop
10:14:19
finish mi1 range(n) 2loop
10:14:20
start mi2
10:14:20
start mi2 range(p) 1 loop
10:14:20
finish mi2 range(p) 1 loop
10:14:20
start mi2 range(p) 2 loop
10:14:20
finish mi2 range(p) 2 loop
10:14:20
start mi2 range(NT) loop
10:14:20
finish mi2 range(NT) loop
10:14:20
start mi2 range(n) loop
10:14:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:14:20
start mi2 range(n) 2loop
10:14:20
finish mi2 range(n) 2loop
10:14:20
[[-2.84651934]]
end mi2 loop
10:14:20
estep
10:14:20
end estep
10:14:38
end pa10:14:38
goodness of fit correlation [0.11710105]
start cluster 10:14:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33494 instead
  warnings.warn(
6
parallel submitted
10:14:55
parallel finished
10:22:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:22:09
start mi0
10:22:09
start mi0 range(p) 1 loop
10:22:09
finish mi0 range(p) 1 loop
10:22:09
start mi0 range(p) 2 loop
10:22:09
finish mi0 range(p) 2 loop
10:22:09
start mi0 range(NT) loop
10:22:09
finish mi0 range(NT) loop
10:22:09
start mi0 range(n) loop
10:22:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:22:10
start mi0 range(n) 2loop
10:22:10
finish mi0 range(n) 2loop
10:22:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:22:10
start mi1 range(p) 1 loop
10:22:10
finish mi1 range(p) 1 loop
10:22:10
start mi1 range(p) 2 loop
10:22:10
finish mi1 range(p) 2 loop
10:22:10
start mi1 range(NT) loop
10:22:10
finish mi1 range(NT) loop
10:22:10
start mi1 range(n) loop
10:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:22:10
start mi1 range(n) 2loop
10:22:10
finish mi1 range(n) 2loop
10:22:10
start mi2
10:22:10
start mi2 range(p) 1 loop
10:22:10
finish mi2 range(p) 1 loop
10:22:10
start mi2 range(p) 2 loop
10:22:10
finish mi2 range(p) 2 loop
10:22:10
start mi2 range(NT) loop
10:22:10
finish mi2 range(NT) loop
10:22:10
start mi2 range(n) loop
10:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:22:10
start mi2 range(n) 2loop
10:22:10
finish mi2 range(n) 2loop
10:22:10
[[-2.7991098]]
end mi2 loop
10:22:10
estep
10:22:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:22:26
start ppi1
10:22:26
start mi0
10:22:26
start mi0 range(p) 1 loop
10:22:26
finish mi0 range(p) 1 loop
10:22:26
start mi0 range(p) 2 loop
10:22:26
finish mi0 range(p) 2 loop
10:22:26
start mi0 range(NT) loop
10:22:26
finish mi0 range(NT) loop
10:22:26
start mi0 range(n) loop
10:22:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:22:26
start mi0 range(n) 2loop
10:22:26
finish mi0 range(n) 2loop
10:22:26
start mi1
10:22:26
start mi1 range(p) 1 loop
10:22:26
finish mi1 range(p) 1 loop
10:22:26
start mi1 range(p) 2 loop
10:22:26
finish mi1 range(p) 2 loop
10:22:26
start mi1 range(NT) loop
10:22:26
finish mi1 range(NT) loop
10:22:26
start mi1 range(n) loop
10:22:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:22:27
start mi1 range(n) 2loop
10:22:27
finish mi1 range(n) 2loop
10:22:27
[[-2.86155168]]
end mi1 loop
10:22:27
estep
10:22:27
end estep
10:22:43
end pa10:22:43
goodness of fit correlation [0.10757647]
start cluster 10:22:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33691 instead
  warnings.warn(
7
parallel submitted
10:23:00
parallel finished
10:28:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:28:54
start mi0
10:28:54
start mi0 range(p) 1 loop
10:28:54
finish mi0 range(p) 1 loop
10:28:54
start mi0 range(p) 2 loop
10:28:54
finish mi0 range(p) 2 loop
10:28:54
start mi0 range(NT) loop
10:28:54
finish mi0 range(NT) loop
10:28:54
start mi0 range(n) loop
10:28:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:28:54
start mi0 range(n) 2loop
10:28:54
finish mi0 range(n) 2loop
10:28:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:28:54
start mi1 range(p) 1 loop
10:28:54
finish mi1 range(p) 1 loop
10:28:54
start mi1 range(p) 2 loop
10:28:54
finish mi1 range(p) 2 loop
10:28:54
start mi1 range(NT) loop
10:28:54
finish mi1 range(NT) loop
10:28:54
start mi1 range(n) loop
10:28:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:28:55
start mi1 range(n) 2loop
10:28:55
finish mi1 range(n) 2loop
10:28:55
start mi2
10:28:55
start mi2 range(p) 1 loop
10:28:55
finish mi2 range(p) 1 loop
10:28:55
start mi2 range(p) 2 loop
10:28:55
finish mi2 range(p) 2 loop
10:28:55
start mi2 range(NT) loop
10:28:55
finish mi2 range(NT) loop
10:28:55
start mi2 range(n) loop
10:28:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:28:55
start mi2 range(n) 2loop
10:28:55
finish mi2 range(n) 2loop
10:28:55
[[-2.8038209]]
end mi2 loop
10:28:55
estep
10:28:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:29:11
start ppi1
10:29:11
start mi0
10:29:11
start mi0 range(p) 1 loop
10:29:11
finish mi0 range(p) 1 loop
10:29:11
start mi0 range(p) 2 loop
10:29:11
finish mi0 range(p) 2 loop
10:29:11
start mi0 range(NT) loop
10:29:11
finish mi0 range(NT) loop
10:29:11
start mi0 range(n) loop
10:29:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:29:11
start mi0 range(n) 2loop
10:29:11
finish mi0 range(n) 2loop
10:29:11
start mi1
10:29:11
start mi1 range(p) 1 loop
10:29:11
finish mi1 range(p) 1 loop
10:29:11
start mi1 range(p) 2 loop
10:29:11
finish mi1 range(p) 2 loop
10:29:11
start mi1 range(NT) loop
10:29:12
finish mi1 range(NT) loop
10:29:12
start mi1 range(n) loop
10:29:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:29:12
start mi1 range(n) 2loop
10:29:12
finish mi1 range(n) 2loop
10:29:12
[[-2.8662694]]
end mi1 loop
10:29:12
estep
10:29:12
end estep
10:29:28
end pa10:29:28
goodness of fit correlation [0.13275353]
start cluster 10:29:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38276 instead
  warnings.warn(
8
parallel submitted
10:29:46
parallel finished
10:33:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:33:54
start mi0
10:33:54
start mi0 range(p) 1 loop
10:33:54
finish mi0 range(p) 1 loop
10:33:54
start mi0 range(p) 2 loop
10:33:54
finish mi0 range(p) 2 loop
10:33:54
start mi0 range(NT) loop
10:33:54
finish mi0 range(NT) loop
10:33:54
start mi0 range(n) loop
10:33:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:33:54
start mi0 range(n) 2loop
10:33:54
finish mi0 range(n) 2loop
10:33:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:33:54
start mi1 range(p) 1 loop
10:33:54
finish mi1 range(p) 1 loop
10:33:54
start mi1 range(p) 2 loop
10:33:54
finish mi1 range(p) 2 loop
10:33:54
start mi1 range(NT) loop
10:33:54
finish mi1 range(NT) loop
10:33:54
start mi1 range(n) loop
10:33:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:33:54
start mi1 range(n) 2loop
10:33:54
finish mi1 range(n) 2loop
10:33:54
start mi2
10:33:54
start mi2 range(p) 1 loop
10:33:54
finish mi2 range(p) 1 loop
10:33:54
start mi2 range(p) 2 loop
10:33:54
finish mi2 range(p) 2 loop
10:33:54
start mi2 range(NT) loop
10:33:54
finish mi2 range(NT) loop
10:33:54
start mi2 range(n) loop
10:33:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:33:54
start mi2 range(n) 2loop
10:33:54
finish mi2 range(n) 2loop
10:33:55
[[-2.84575671]]
end mi2 loop
10:33:55
estep
10:33:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:34:11
start ppi1
10:34:11
start mi0
10:34:11
start mi0 range(p) 1 loop
10:34:11
finish mi0 range(p) 1 loop
10:34:11
start mi0 range(p) 2 loop
10:34:11
finish mi0 range(p) 2 loop
10:34:11
start mi0 range(NT) loop
10:34:11
finish mi0 range(NT) loop
10:34:11
start mi0 range(n) loop
10:34:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:34:11
start mi0 range(n) 2loop
10:34:11
finish mi0 range(n) 2loop
10:34:11
start mi1
10:34:11
start mi1 range(p) 1 loop
10:34:11
finish mi1 range(p) 1 loop
10:34:11
start mi1 range(p) 2 loop
10:34:11
finish mi1 range(p) 2 loop
10:34:11
start mi1 range(NT) loop
10:34:11
finish mi1 range(NT) loop
10:34:11
start mi1 range(n) loop
10:34:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:34:11
start mi1 range(n) 2loop
10:34:11
finish mi1 range(n) 2loop
10:34:11
[[-2.90823934]]
end mi1 loop
10:34:11
estep
10:34:11
end estep
10:34:27
end pa10:34:27
goodness of fit correlation [0.18303332]
start cluster 10:34:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37858 instead
  warnings.warn(
9
parallel submitted
10:34:46
parallel finished
10:37:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:37:54
start mi0
10:37:54
start mi0 range(p) 1 loop
10:37:54
finish mi0 range(p) 1 loop
10:37:54
start mi0 range(p) 2 loop
10:37:54
finish mi0 range(p) 2 loop
10:37:54
start mi0 range(NT) loop
10:37:54
finish mi0 range(NT) loop
10:37:54
start mi0 range(n) loop
10:37:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:37:55
start mi0 range(n) 2loop
10:37:55
finish mi0 range(n) 2loop
10:37:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:37:55
start mi1 range(p) 1 loop
10:37:55
finish mi1 range(p) 1 loop
10:37:55
start mi1 range(p) 2 loop
10:37:55
finish mi1 range(p) 2 loop
10:37:55
start mi1 range(NT) loop
10:37:55
finish mi1 range(NT) loop
10:37:55
start mi1 range(n) loop
10:37:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:37:55
start mi1 range(n) 2loop
10:37:55
finish mi1 range(n) 2loop
10:37:55
start mi2
10:37:55
start mi2 range(p) 1 loop
10:37:55
finish mi2 range(p) 1 loop
10:37:55
start mi2 range(p) 2 loop
10:37:55
finish mi2 range(p) 2 loop
10:37:55
start mi2 range(NT) loop
10:37:55
finish mi2 range(NT) loop
10:37:55
start mi2 range(n) loop
10:37:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:37:55
start mi2 range(n) 2loop
10:37:55
finish mi2 range(n) 2loop
10:37:55
[[-2.82815744]]
end mi2 loop
10:37:55
estep
10:37:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:38:11
start ppi1
10:38:11
start mi0
10:38:11
start mi0 range(p) 1 loop
10:38:11
finish mi0 range(p) 1 loop
10:38:11
start mi0 range(p) 2 loop
10:38:11
finish mi0 range(p) 2 loop
10:38:11
start mi0 range(NT) loop
10:38:11
finish mi0 range(NT) loop
10:38:11
start mi0 range(n) loop
10:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:38:12
start mi0 range(n) 2loop
10:38:12
finish mi0 range(n) 2loop
10:38:12
start mi1
10:38:12
start mi1 range(p) 1 loop
10:38:12
finish mi1 range(p) 1 loop
10:38:12
start mi1 range(p) 2 loop
10:38:12
finish mi1 range(p) 2 loop
10:38:12
start mi1 range(NT) loop
10:38:12
finish mi1 range(NT) loop
10:38:12
start mi1 range(n) loop
10:38:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:38:12
start mi1 range(n) 2loop
10:38:12
finish mi1 range(n) 2loop
10:38:12
[[-2.89063029]]
end mi1 loop
10:38:12
estep
10:38:12
end estep
10:38:27
end pa10:38:27
goodness of fit correlation [0.16291903]
start cluster 10:38:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38544 instead
  warnings.warn(
10
parallel submitted
10:38:45
parallel finished
10:43:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:43:56
start mi0
10:43:56
start mi0 range(p) 1 loop
10:43:56
finish mi0 range(p) 1 loop
10:43:56
start mi0 range(p) 2 loop
10:43:56
finish mi0 range(p) 2 loop
10:43:56
start mi0 range(NT) loop
10:43:56
finish mi0 range(NT) loop
10:43:56
start mi0 range(n) loop
10:43:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:43:56
start mi0 range(n) 2loop
10:43:56
finish mi0 range(n) 2loop
10:43:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:43:56
start mi1 range(p) 1 loop
10:43:56
finish mi1 range(p) 1 loop
10:43:56
start mi1 range(p) 2 loop
10:43:56
finish mi1 range(p) 2 loop
10:43:56
start mi1 range(NT) loop
10:43:56
finish mi1 range(NT) loop
10:43:56
start mi1 range(n) loop
10:43:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:43:56
start mi1 range(n) 2loop
10:43:56
finish mi1 range(n) 2loop
10:43:56
start mi2
10:43:56
start mi2 range(p) 1 loop
10:43:56
finish mi2 range(p) 1 loop
10:43:56
start mi2 range(p) 2 loop
10:43:56
finish mi2 range(p) 2 loop
10:43:56
start mi2 range(NT) loop
10:43:56
finish mi2 range(NT) loop
10:43:57
start mi2 range(n) loop
10:43:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:43:57
start mi2 range(n) 2loop
10:43:57
finish mi2 range(n) 2loop
10:43:57
[[-2.84703918]]
end mi2 loop
10:43:57
estep
10:43:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:44:13
start ppi1
10:44:13
start mi0
10:44:13
start mi0 range(p) 1 loop
10:44:13
finish mi0 range(p) 1 loop
10:44:13
start mi0 range(p) 2 loop
10:44:13
finish mi0 range(p) 2 loop
10:44:13
start mi0 range(NT) loop
10:44:13
finish mi0 range(NT) loop
10:44:13
start mi0 range(n) loop
10:44:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:44:13
start mi0 range(n) 2loop
10:44:13
finish mi0 range(n) 2loop
10:44:13
start mi1
10:44:13
start mi1 range(p) 1 loop
10:44:13
finish mi1 range(p) 1 loop
10:44:13
start mi1 range(p) 2 loop
10:44:13
finish mi1 range(p) 2 loop
10:44:13
start mi1 range(NT) loop
10:44:13
finish mi1 range(NT) loop
10:44:13
start mi1 range(n) loop
10:44:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:44:13
start mi1 range(n) 2loop
10:44:13
finish mi1 range(n) 2loop
10:44:13
[[-2.90952233]]
end mi1 loop
10:44:13
estep
10:44:13
end estep
10:44:28
end pa10:44:28
goodness of fit correlation [0.17691565]
start cluster 10:44:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37956 instead
  warnings.warn(
11
parallel submitted
10:44:44
parallel finished
10:48:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:48:53
start mi0
10:48:53
start mi0 range(p) 1 loop
10:48:53
finish mi0 range(p) 1 loop
10:48:53
start mi0 range(p) 2 loop
10:48:53
finish mi0 range(p) 2 loop
10:48:53
start mi0 range(NT) loop
10:48:53
finish mi0 range(NT) loop
10:48:53
start mi0 range(n) loop
10:48:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:48:54
start mi0 range(n) 2loop
10:48:54
finish mi0 range(n) 2loop
10:48:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:48:54
start mi1 range(p) 1 loop
10:48:54
finish mi1 range(p) 1 loop
10:48:54
start mi1 range(p) 2 loop
10:48:54
finish mi1 range(p) 2 loop
10:48:54
start mi1 range(NT) loop
10:48:54
finish mi1 range(NT) loop
10:48:54
start mi1 range(n) loop
10:48:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:48:54
start mi1 range(n) 2loop
10:48:54
finish mi1 range(n) 2loop
10:48:54
start mi2
10:48:54
start mi2 range(p) 1 loop
10:48:54
finish mi2 range(p) 1 loop
10:48:54
start mi2 range(p) 2 loop
10:48:54
finish mi2 range(p) 2 loop
10:48:54
start mi2 range(NT) loop
10:48:54
finish mi2 range(NT) loop
10:48:54
start mi2 range(n) loop
10:48:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:48:54
start mi2 range(n) 2loop
10:48:54
finish mi2 range(n) 2loop
10:48:54
[[-2.84869958]]
end mi2 loop
10:48:54
estep
10:48:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:09
start ppi1
10:49:09
start mi0
10:49:09
start mi0 range(p) 1 loop
10:49:09
finish mi0 range(p) 1 loop
10:49:09
start mi0 range(p) 2 loop
10:49:09
finish mi0 range(p) 2 loop
10:49:09
start mi0 range(NT) loop
10:49:09
finish mi0 range(NT) loop
10:49:09
start mi0 range(n) loop
10:49:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:09
start mi0 range(n) 2loop
10:49:09
finish mi0 range(n) 2loop
10:49:09
start mi1
10:49:09
start mi1 range(p) 1 loop
10:49:09
finish mi1 range(p) 1 loop
10:49:09
start mi1 range(p) 2 loop
10:49:09
finish mi1 range(p) 2 loop
10:49:09
start mi1 range(NT) loop
10:49:09
finish mi1 range(NT) loop
10:49:09
start mi1 range(n) loop
10:49:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:09
start mi1 range(n) 2loop
10:49:09
finish mi1 range(n) 2loop
10:49:09
[[-2.91118338]]
end mi1 loop
10:49:09
estep
10:49:09
end estep
10:49:24
end pa10:49:24
goodness of fit correlation [0.16037337]
start cluster 10:49:24
12
parallel submitted
10:49:41
parallel finished
10:51:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:51:50
start mi0
10:51:50
start mi0 range(p) 1 loop
10:51:50
finish mi0 range(p) 1 loop
10:51:50
start mi0 range(p) 2 loop
10:51:50
finish mi0 range(p) 2 loop
10:51:50
start mi0 range(NT) loop
10:51:50
finish mi0 range(NT) loop
10:51:50
start mi0 range(n) loop
10:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:51:50
start mi0 range(n) 2loop
10:51:50
finish mi0 range(n) 2loop
10:51:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:51:50
start mi1 range(p) 1 loop
10:51:50
finish mi1 range(p) 1 loop
10:51:50
start mi1 range(p) 2 loop
10:51:50
finish mi1 range(p) 2 loop
10:51:50
start mi1 range(NT) loop
10:51:50
finish mi1 range(NT) loop
10:51:50
start mi1 range(n) loop
10:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:51:50
start mi1 range(n) 2loop
10:51:50
finish mi1 range(n) 2loop
10:51:50
[[-2.86606501]]
end mi1 loop
10:51:50
estep
10:51:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:52:05
start ppi1
10:52:05
start mi0
10:52:05
start mi0 range(p) 1 loop
10:52:05
finish mi0 range(p) 1 loop
10:52:05
start mi0 range(p) 2 loop
10:52:05
finish mi0 range(p) 2 loop
10:52:05
start mi0 range(NT) loop
10:52:05
finish mi0 range(NT) loop
10:52:05
start mi0 range(n) loop
10:52:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:52:05
start mi0 range(n) 2loop
10:52:05
finish mi0 range(n) 2loop
10:52:05
start mi1
10:52:05
start mi1 range(p) 1 loop
10:52:05
finish mi1 range(p) 1 loop
10:52:05
start mi1 range(p) 2 loop
10:52:05
finish mi1 range(p) 2 loop
10:52:05
start mi1 range(NT) loop
10:52:05
finish mi1 range(NT) loop
10:52:05
start mi1 range(n) loop
10:52:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:52:05
start mi1 range(n) 2loop
10:52:05
finish mi1 range(n) 2loop
10:52:05
[[-2.92859747]]
end mi1 loop
10:52:05
estep
10:52:05
end estep
10:52:21
end pa10:52:21
goodness of fit correlation [0.18400439]
start cluster 10:52:21
13
parallel submitted
10:52:40
parallel finished
10:54:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:54:43
start mi0
10:54:43
start mi0 range(p) 1 loop
10:54:43
finish mi0 range(p) 1 loop
10:54:43
start mi0 range(p) 2 loop
10:54:43
finish mi0 range(p) 2 loop
10:54:43
start mi0 range(NT) loop
10:54:43
finish mi0 range(NT) loop
10:54:43
start mi0 range(n) loop
10:54:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:54:43
start mi0 range(n) 2loop
10:54:43
finish mi0 range(n) 2loop
10:54:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:54:44
start mi1 range(p) 1 loop
10:54:44
finish mi1 range(p) 1 loop
10:54:44
start mi1 range(p) 2 loop
10:54:44
finish mi1 range(p) 2 loop
10:54:44
start mi1 range(NT) loop
10:54:44
finish mi1 range(NT) loop
10:54:44
start mi1 range(n) loop
10:54:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:54:44
start mi1 range(n) 2loop
10:54:44
finish mi1 range(n) 2loop
10:54:44
[[-2.90190107]]
end mi1 loop
10:54:44
estep
10:54:44
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:54:59
start ppi1
10:54:59
start mi0
10:54:59
start mi0 range(p) 1 loop
10:54:59
finish mi0 range(p) 1 loop
10:54:59
start mi0 range(p) 2 loop
10:54:59
finish mi0 range(p) 2 loop
10:54:59
start mi0 range(NT) loop
10:54:59
finish mi0 range(NT) loop
10:54:59
start mi0 range(n) loop
10:54:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:54:59
start mi0 range(n) 2loop
10:54:59
finish mi0 range(n) 2loop
10:54:59
start mi1
10:54:59
start mi1 range(p) 1 loop
10:54:59
finish mi1 range(p) 1 loop
10:54:59
start mi1 range(p) 2 loop
10:54:59
finish mi1 range(p) 2 loop
10:54:59
start mi1 range(NT) loop
10:54:59
finish mi1 range(NT) loop
10:54:59
start mi1 range(n) loop
10:54:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:54:59
start mi1 range(n) 2loop
10:54:59
finish mi1 range(n) 2loop
10:54:59
[[-2.96440524]]
end mi1 loop
10:54:59
estep
10:54:59
end estep
10:55:14
end pa10:55:14
goodness of fit correlation [0.22022714]
start cluster 10:55:14
14
parallel submitted
10:55:31
parallel finished
10:59:28
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:59:36
start mi0
10:59:36
start mi0 range(p) 1 loop
10:59:36
finish mi0 range(p) 1 loop
10:59:36
start mi0 range(p) 2 loop
10:59:36
finish mi0 range(p) 2 loop
10:59:36
start mi0 range(NT) loop
10:59:36
finish mi0 range(NT) loop
10:59:36
start mi0 range(n) loop
10:59:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:59:36
start mi0 range(n) 2loop
10:59:36
finish mi0 range(n) 2loop
10:59:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:59:36
start mi1 range(p) 1 loop
10:59:36
finish mi1 range(p) 1 loop
10:59:36
start mi1 range(p) 2 loop
10:59:36
finish mi1 range(p) 2 loop
10:59:36
start mi1 range(NT) loop
10:59:36
finish mi1 range(NT) loop
10:59:36
start mi1 range(n) loop
10:59:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:59:37
start mi1 range(n) 2loop
10:59:37
finish mi1 range(n) 2loop
10:59:37
[[-2.90108179]]
end mi1 loop
10:59:37
estep
10:59:37
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:59:52
start ppi1
10:59:52
start mi0
10:59:52
start mi0 range(p) 1 loop
10:59:52
finish mi0 range(p) 1 loop
10:59:52
start mi0 range(p) 2 loop
10:59:52
finish mi0 range(p) 2 loop
10:59:52
start mi0 range(NT) loop
10:59:52
finish mi0 range(NT) loop
10:59:52
start mi0 range(n) loop
10:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:59:52
start mi0 range(n) 2loop
10:59:52
finish mi0 range(n) 2loop
10:59:53
start mi1
10:59:53
start mi1 range(p) 1 loop
10:59:53
finish mi1 range(p) 1 loop
10:59:53
start mi1 range(p) 2 loop
10:59:53
finish mi1 range(p) 2 loop
10:59:53
start mi1 range(NT) loop
10:59:53
finish mi1 range(NT) loop
10:59:53
start mi1 range(n) loop
10:59:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:59:53
start mi1 range(n) 2loop
10:59:53
finish mi1 range(n) 2loop
10:59:53
[[-2.96358637]]
end mi1 loop
10:59:53
estep
10:59:53
end estep
11:00:08
end pa11:00:08
goodness of fit correlation [0.2061004]
start cluster 11:00:08
15
parallel submitted
11:00:26
parallel finished
11:02:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:02:25
start mi0
11:02:25
start mi0 range(p) 1 loop
11:02:25
finish mi0 range(p) 1 loop
11:02:25
start mi0 range(p) 2 loop
11:02:25
finish mi0 range(p) 2 loop
11:02:25
start mi0 range(NT) loop
11:02:25
finish mi0 range(NT) loop
11:02:25
start mi0 range(n) loop
11:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:02:25
start mi0 range(n) 2loop
11:02:25
finish mi0 range(n) 2loop
11:02:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:02:25
start mi1 range(p) 1 loop
11:02:25
finish mi1 range(p) 1 loop
11:02:25
start mi1 range(p) 2 loop
11:02:25
finish mi1 range(p) 2 loop
11:02:25
start mi1 range(NT) loop
11:02:25
finish mi1 range(NT) loop
11:02:25
start mi1 range(n) loop
11:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:02:25
start mi1 range(n) 2loop
11:02:25
finish mi1 range(n) 2loop
11:02:26
[[-2.89735079]]
end mi1 loop
11:02:26
estep
11:02:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:02:42
start ppi1
11:02:42
start mi0
11:02:42
start mi0 range(p) 1 loop
11:02:42
finish mi0 range(p) 1 loop
11:02:42
start mi0 range(p) 2 loop
11:02:42
finish mi0 range(p) 2 loop
11:02:42
start mi0 range(NT) loop
11:02:42
finish mi0 range(NT) loop
11:02:42
start mi0 range(n) loop
11:02:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:02:42
start mi0 range(n) 2loop
11:02:42
finish mi0 range(n) 2loop
11:02:42
start mi1
11:02:42
start mi1 range(p) 1 loop
11:02:42
finish mi1 range(p) 1 loop
11:02:42
start mi1 range(p) 2 loop
11:02:42
finish mi1 range(p) 2 loop
11:02:42
start mi1 range(NT) loop
11:02:42
finish mi1 range(NT) loop
11:02:42
start mi1 range(n) loop
11:02:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:02:42
start mi1 range(n) 2loop
11:02:42
finish mi1 range(n) 2loop
11:02:43
[[-2.95985733]]
end mi1 loop
11:02:43
estep
11:02:43
end estep
11:02:59
end pa11:02:59
goodness of fit correlation [0.17869425]
start cluster 11:02:59
16
parallel submitted
11:03:19
parallel finished
11:06:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:06:08
start mi0
11:06:08
start mi0 range(p) 1 loop
11:06:08
finish mi0 range(p) 1 loop
11:06:08
start mi0 range(p) 2 loop
11:06:08
finish mi0 range(p) 2 loop
11:06:08
start mi0 range(NT) loop
11:06:08
finish mi0 range(NT) loop
11:06:08
start mi0 range(n) loop
11:06:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:06:08
start mi0 range(n) 2loop
11:06:08
finish mi0 range(n) 2loop
11:06:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:06:08
start mi1 range(p) 1 loop
11:06:08
finish mi1 range(p) 1 loop
11:06:08
start mi1 range(p) 2 loop
11:06:08
finish mi1 range(p) 2 loop
11:06:08
start mi1 range(NT) loop
11:06:08
finish mi1 range(NT) loop
11:06:08
start mi1 range(n) loop
11:06:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:06:08
start mi1 range(n) 2loop
11:06:08
finish mi1 range(n) 2loop
11:06:08
[[-2.90458685]]
end mi1 loop
11:06:08
estep
11:06:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:06:25
start ppi1
11:06:25
start mi0
11:06:25
start mi0 range(p) 1 loop
11:06:25
finish mi0 range(p) 1 loop
11:06:25
start mi0 range(p) 2 loop
11:06:25
finish mi0 range(p) 2 loop
11:06:25
start mi0 range(NT) loop
11:06:25
finish mi0 range(NT) loop
11:06:25
start mi0 range(n) loop
11:06:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:06:25
start mi0 range(n) 2loop
11:06:25
finish mi0 range(n) 2loop
11:06:25
start mi1
11:06:25
start mi1 range(p) 1 loop
11:06:25
finish mi1 range(p) 1 loop
11:06:25
start mi1 range(p) 2 loop
11:06:25
finish mi1 range(p) 2 loop
11:06:25
start mi1 range(NT) loop
11:06:25
finish mi1 range(NT) loop
11:06:25
start mi1 range(n) loop
11:06:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:06:25
start mi1 range(n) 2loop
11:06:25
finish mi1 range(n) 2loop
11:06:25
[[-2.96708976]]
end mi1 loop
11:06:25
estep
11:06:25
end estep
11:06:42
end pa11:06:42
goodness of fit correlation [0.22273382]
start cluster 11:06:42
17
parallel submitted
11:07:01
parallel finished
11:09:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:09:59
start mi0
11:09:59
start mi0 range(p) 1 loop
11:09:59
finish mi0 range(p) 1 loop
11:09:59
start mi0 range(p) 2 loop
11:09:59
finish mi0 range(p) 2 loop
11:09:59
start mi0 range(NT) loop
11:09:59
finish mi0 range(NT) loop
11:09:59
start mi0 range(n) loop
11:09:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:09:59
start mi0 range(n) 2loop
11:09:59
finish mi0 range(n) 2loop
11:09:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:09:59
start mi1 range(p) 1 loop
11:09:59
finish mi1 range(p) 1 loop
11:09:59
start mi1 range(p) 2 loop
11:09:59
finish mi1 range(p) 2 loop
11:09:59
start mi1 range(NT) loop
11:09:59
finish mi1 range(NT) loop
11:09:59
start mi1 range(n) loop
11:09:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:09:59
start mi1 range(n) 2loop
11:09:59
finish mi1 range(n) 2loop
11:09:59
[[-2.93116265]]
end mi1 loop
11:09:59
estep
11:09:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:10:14
start ppi1
11:10:14
start mi0
11:10:14
start mi0 range(p) 1 loop
11:10:14
finish mi0 range(p) 1 loop
11:10:14
start mi0 range(p) 2 loop
11:10:14
finish mi0 range(p) 2 loop
11:10:14
start mi0 range(NT) loop
11:10:14
finish mi0 range(NT) loop
11:10:14
start mi0 range(n) loop
11:10:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:10:14
start mi0 range(n) 2loop
11:10:14
finish mi0 range(n) 2loop
11:10:15
[[-2.99363746]]
end mi0 loop
11:10:15
estep
11:10:15
end estep
11:10:30
end pa11:10:30
goodness of fit correlation [0.19480136]
start cluster 11:10:30
18
parallel submitted
11:10:50
parallel finished
11:13:11
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:13:22
start mi0
11:13:22
start mi0 range(p) 1 loop
11:13:22
finish mi0 range(p) 1 loop
11:13:22
start mi0 range(p) 2 loop
11:13:22
finish mi0 range(p) 2 loop
11:13:22
start mi0 range(NT) loop
11:13:22
finish mi0 range(NT) loop
11:13:22
start mi0 range(n) loop
11:13:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:13:22
start mi0 range(n) 2loop
11:13:22
finish mi0 range(n) 2loop
11:13:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:13:22
start mi1 range(p) 1 loop
11:13:22
finish mi1 range(p) 1 loop
11:13:22
start mi1 range(p) 2 loop
11:13:22
finish mi1 range(p) 2 loop
11:13:22
start mi1 range(NT) loop
11:13:22
finish mi1 range(NT) loop
11:13:22
start mi1 range(n) loop
11:13:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:13:23
start mi1 range(n) 2loop
11:13:23
finish mi1 range(n) 2loop
11:13:23
[[-2.89192007]]
end mi1 loop
11:13:23
estep
11:13:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:13:39
start ppi1
11:13:39
start mi0
11:13:39
start mi0 range(p) 1 loop
11:13:39
finish mi0 range(p) 1 loop
11:13:39
start mi0 range(p) 2 loop
11:13:39
finish mi0 range(p) 2 loop
11:13:39
start mi0 range(NT) loop
11:13:39
finish mi0 range(NT) loop
11:13:39
start mi0 range(n) loop
11:13:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:13:39
start mi0 range(n) 2loop
11:13:39
finish mi0 range(n) 2loop
11:13:40
start mi1
11:13:40
start mi1 range(p) 1 loop
11:13:40
finish mi1 range(p) 1 loop
11:13:40
start mi1 range(p) 2 loop
11:13:40
finish mi1 range(p) 2 loop
11:13:40
start mi1 range(NT) loop
11:13:40
finish mi1 range(NT) loop
11:13:40
start mi1 range(n) loop
11:13:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:13:40
start mi1 range(n) 2loop
11:13:40
finish mi1 range(n) 2loop
11:13:40
[[-2.95442985]]
end mi1 loop
11:13:40
estep
11:13:40
end estep
11:13:56
end pa11:13:56
goodness of fit correlation [0.21056945]
start cluster 11:13:56
19
parallel submitted
11:14:18
parallel finished
11:17:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:17:27
start mi0
11:17:27
start mi0 range(p) 1 loop
11:17:27
finish mi0 range(p) 1 loop
11:17:27
start mi0 range(p) 2 loop
11:17:27
finish mi0 range(p) 2 loop
11:17:27
start mi0 range(NT) loop
11:17:27
finish mi0 range(NT) loop
11:17:27
start mi0 range(n) loop
11:17:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:17:27
start mi0 range(n) 2loop
11:17:27
finish mi0 range(n) 2loop
11:17:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:17:27
start mi1 range(p) 1 loop
11:17:27
finish mi1 range(p) 1 loop
11:17:27
start mi1 range(p) 2 loop
11:17:27
finish mi1 range(p) 2 loop
11:17:27
start mi1 range(NT) loop
11:17:27
finish mi1 range(NT) loop
11:17:27
start mi1 range(n) loop
11:17:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:17:27
start mi1 range(n) 2loop
11:17:27
finish mi1 range(n) 2loop
11:17:27
[[-2.90696749]]
end mi1 loop
11:17:27
estep
11:17:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:17:42
start ppi1
11:17:42
start mi0
11:17:42
start mi0 range(p) 1 loop
11:17:42
finish mi0 range(p) 1 loop
11:17:42
start mi0 range(p) 2 loop
11:17:42
finish mi0 range(p) 2 loop
11:17:42
start mi0 range(NT) loop
11:17:42
finish mi0 range(NT) loop
11:17:42
start mi0 range(n) loop
11:17:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:17:42
start mi0 range(n) 2loop
11:17:42
finish mi0 range(n) 2loop
11:17:43
start mi1
11:17:43
start mi1 range(p) 1 loop
11:17:43
finish mi1 range(p) 1 loop
11:17:43
start mi1 range(p) 2 loop
11:17:43
finish mi1 range(p) 2 loop
11:17:43
start mi1 range(NT) loop
11:17:43
finish mi1 range(NT) loop
11:17:43
start mi1 range(n) loop
11:17:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:17:43
start mi1 range(n) 2loop
11:17:43
finish mi1 range(n) 2loop
11:17:43
[[-2.96946936]]
end mi1 loop
11:17:43
estep
11:17:43
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
end estep
11:17:58
end pa11:17:58
goodness of fit correlation [0.17108442]
start cluster 11:17:58
20
parallel submitted
11:18:19
parallel finished
11:21:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:21:56
start mi0
11:21:56
start mi0 range(p) 1 loop
11:21:56
finish mi0 range(p) 1 loop
11:21:56
start mi0 range(p) 2 loop
11:21:56
finish mi0 range(p) 2 loop
11:21:56
start mi0 range(NT) loop
11:21:56
finish mi0 range(NT) loop
11:21:56
start mi0 range(n) loop
11:21:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:21:56
start mi0 range(n) 2loop
11:21:56
finish mi0 range(n) 2loop
11:21:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:21:56
start mi1 range(p) 1 loop
11:21:56
finish mi1 range(p) 1 loop
11:21:56
start mi1 range(p) 2 loop
11:21:56
finish mi1 range(p) 2 loop
11:21:56
start mi1 range(NT) loop
11:21:57
finish mi1 range(NT) loop
11:21:57
start mi1 range(n) loop
11:21:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:21:57
start mi1 range(n) 2loop
11:21:57
finish mi1 range(n) 2loop
11:21:57
start mi2
11:21:57
start mi2 range(p) 1 loop
11:21:57
finish mi2 range(p) 1 loop
11:21:57
start mi2 range(p) 2 loop
11:21:57
finish mi2 range(p) 2 loop
11:21:57
start mi2 range(NT) loop
11:21:57
finish mi2 range(NT) loop
11:21:57
start mi2 range(n) loop
11:21:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:21:57
start mi2 range(n) 2loop
11:21:57
finish mi2 range(n) 2loop
11:21:57
[[-2.85070345]]
end mi2 loop
11:21:57
estep
11:21:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:22:12
start ppi1
11:22:12
start mi0
11:22:12
start mi0 range(p) 1 loop
11:22:12
finish mi0 range(p) 1 loop
11:22:12
start mi0 range(p) 2 loop
11:22:12
finish mi0 range(p) 2 loop
11:22:12
start mi0 range(NT) loop
11:22:12
finish mi0 range(NT) loop
11:22:12
start mi0 range(n) loop
11:22:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:22:12
start mi0 range(n) 2loop
11:22:12
finish mi0 range(n) 2loop
11:22:13
start mi1
11:22:13
start mi1 range(p) 1 loop
11:22:13
finish mi1 range(p) 1 loop
11:22:13
start mi1 range(p) 2 loop
11:22:13
finish mi1 range(p) 2 loop
11:22:13
start mi1 range(NT) loop
11:22:13
finish mi1 range(NT) loop
11:22:13
start mi1 range(n) loop
11:22:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:22:13
start mi1 range(n) 2loop
11:22:13
finish mi1 range(n) 2loop
11:22:13
[[-2.91318798]]
end mi1 loop
11:22:13
estep
11:22:13
end estep
11:22:28
end pa11:22:28
goodness of fit correlation [0.19538301]
start cluster 11:22:28
21
parallel submitted
11:22:49
parallel finished
11:26:20
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:26:29
start mi0
11:26:29
start mi0 range(p) 1 loop
11:26:29
finish mi0 range(p) 1 loop
11:26:29
start mi0 range(p) 2 loop
11:26:29
finish mi0 range(p) 2 loop
11:26:29
start mi0 range(NT) loop
11:26:29
finish mi0 range(NT) loop
11:26:29
start mi0 range(n) loop
11:26:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:26:29
start mi0 range(n) 2loop
11:26:29
finish mi0 range(n) 2loop
11:26:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:26:30
start mi1 range(p) 1 loop
11:26:30
finish mi1 range(p) 1 loop
11:26:30
start mi1 range(p) 2 loop
11:26:30
finish mi1 range(p) 2 loop
11:26:30
start mi1 range(NT) loop
11:26:30
finish mi1 range(NT) loop
11:26:30
start mi1 range(n) loop
11:26:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:26:30
start mi1 range(n) 2loop
11:26:30
finish mi1 range(n) 2loop
11:26:30
[[-2.93015485]]
end mi1 loop
11:26:30
estep
11:26:30
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:26:45
start ppi1
11:26:45
start mi0
11:26:45
start mi0 range(p) 1 loop
11:26:45
finish mi0 range(p) 1 loop
11:26:45
start mi0 range(p) 2 loop
11:26:45
finish mi0 range(p) 2 loop
11:26:45
start mi0 range(NT) loop
11:26:45
finish mi0 range(NT) loop
11:26:45
start mi0 range(n) loop
11:26:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:26:45
start mi0 range(n) 2loop
11:26:45
finish mi0 range(n) 2loop
11:26:45
[[-2.99262292]]
end mi0 loop
11:26:45
estep
11:26:45
end estep
11:27:01
end pa11:27:01
goodness of fit correlation [0.23430032]
start cluster 11:27:01
22
parallel submitted
11:27:21
parallel finished
11:30:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:30:22
start mi0
11:30:22
start mi0 range(p) 1 loop
11:30:22
finish mi0 range(p) 1 loop
11:30:22
start mi0 range(p) 2 loop
11:30:22
finish mi0 range(p) 2 loop
11:30:22
start mi0 range(NT) loop
11:30:22
finish mi0 range(NT) loop
11:30:22
start mi0 range(n) loop
11:30:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:30:22
start mi0 range(n) 2loop
11:30:22
finish mi0 range(n) 2loop
11:30:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:30:22
start mi1 range(p) 1 loop
11:30:22
finish mi1 range(p) 1 loop
11:30:22
start mi1 range(p) 2 loop
11:30:22
finish mi1 range(p) 2 loop
11:30:22
start mi1 range(NT) loop
11:30:23
finish mi1 range(NT) loop
11:30:23
start mi1 range(n) loop
11:30:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:30:23
start mi1 range(n) 2loop
11:30:23
finish mi1 range(n) 2loop
11:30:23
[[-2.8944358]]
end mi1 loop
11:30:23
estep
11:30:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:30:39
start ppi1
11:30:39
start mi0
11:30:39
start mi0 range(p) 1 loop
11:30:39
finish mi0 range(p) 1 loop
11:30:39
start mi0 range(p) 2 loop
11:30:39
finish mi0 range(p) 2 loop
11:30:39
start mi0 range(NT) loop
11:30:40
finish mi0 range(NT) loop
11:30:40
start mi0 range(n) loop
11:30:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:30:40
start mi0 range(n) 2loop
11:30:40
finish mi0 range(n) 2loop
11:30:40
start mi1
11:30:40
start mi1 range(p) 1 loop
11:30:40
finish mi1 range(p) 1 loop
11:30:40
start mi1 range(p) 2 loop
11:30:40
finish mi1 range(p) 2 loop
11:30:40
start mi1 range(NT) loop
11:30:40
finish mi1 range(NT) loop
11:30:40
start mi1 range(n) loop
11:30:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:30:40
start mi1 range(n) 2loop
11:30:40
finish mi1 range(n) 2loop
11:30:40
[[-2.95694401]]
end mi1 loop
11:30:40
estep
11:30:40
end estep
11:30:55
end pa11:30:55
goodness of fit correlation [0.18631463]
start cluster 11:30:55
23
parallel submitted
11:31:14
parallel finished
11:34:21
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:34:30
start mi0
11:34:30
start mi0 range(p) 1 loop
11:34:30
finish mi0 range(p) 1 loop
11:34:30
start mi0 range(p) 2 loop
11:34:30
finish mi0 range(p) 2 loop
11:34:30
start mi0 range(NT) loop
11:34:30
finish mi0 range(NT) loop
11:34:30
start mi0 range(n) loop
11:34:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:34:30
start mi0 range(n) 2loop
11:34:30
finish mi0 range(n) 2loop
11:34:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:34:30
start mi1 range(p) 1 loop
11:34:30
finish mi1 range(p) 1 loop
11:34:30
start mi1 range(p) 2 loop
11:34:30
finish mi1 range(p) 2 loop
11:34:30
start mi1 range(NT) loop
11:34:30
finish mi1 range(NT) loop
11:34:30
start mi1 range(n) loop
11:34:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:34:30
start mi1 range(n) 2loop
11:34:30
finish mi1 range(n) 2loop
11:34:30
[[-2.92422847]]
end mi1 loop
11:34:30
estep
11:34:30
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:34:47
start ppi1
11:34:47
start mi0
11:34:47
start mi0 range(p) 1 loop
11:34:47
finish mi0 range(p) 1 loop
11:34:47
start mi0 range(p) 2 loop
11:34:47
finish mi0 range(p) 2 loop
11:34:47
start mi0 range(NT) loop
11:34:47
finish mi0 range(NT) loop
11:34:47
start mi0 range(n) loop
11:34:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:34:47
start mi0 range(n) 2loop
11:34:47
finish mi0 range(n) 2loop
11:34:48
start mi1
11:34:48
start mi1 range(p) 1 loop
11:34:48
finish mi1 range(p) 1 loop
11:34:48
start mi1 range(p) 2 loop
11:34:48
finish mi1 range(p) 2 loop
11:34:48
start mi1 range(NT) loop
11:34:48
finish mi1 range(NT) loop
11:34:48
start mi1 range(n) loop
11:34:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:34:48
start mi1 range(n) 2loop
11:34:48
finish mi1 range(n) 2loop
11:34:48
[[-2.98672483]]
end mi1 loop
11:34:48
estep
11:34:48
end estep
11:35:05
end pa11:35:05
goodness of fit correlation [0.2073849]
start cluster 11:35:05
24
parallel submitted
11:35:25
parallel finished
11:37:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:37:53
start mi0
11:37:53
start mi0 range(p) 1 loop
11:37:53
finish mi0 range(p) 1 loop
11:37:53
start mi0 range(p) 2 loop
11:37:53
finish mi0 range(p) 2 loop
11:37:53
start mi0 range(NT) loop
11:37:54
finish mi0 range(NT) loop
11:37:54
start mi0 range(n) loop
11:37:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:37:54
start mi0 range(n) 2loop
11:37:54
finish mi0 range(n) 2loop
11:37:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:37:54
start mi1 range(p) 1 loop
11:37:54
finish mi1 range(p) 1 loop
11:37:54
start mi1 range(p) 2 loop
11:37:54
finish mi1 range(p) 2 loop
11:37:54
start mi1 range(NT) loop
11:37:54
finish mi1 range(NT) loop
11:37:54
start mi1 range(n) loop
11:37:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:37:54
start mi1 range(n) 2loop
11:37:54
finish mi1 range(n) 2loop
11:37:54
[[-2.92440121]]
end mi1 loop
11:37:54
estep
11:37:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:38:10
start ppi1
11:38:10
start mi0
11:38:10
start mi0 range(p) 1 loop
11:38:10
finish mi0 range(p) 1 loop
11:38:10
start mi0 range(p) 2 loop
11:38:10
finish mi0 range(p) 2 loop
11:38:10
start mi0 range(NT) loop
11:38:10
finish mi0 range(NT) loop
11:38:10
start mi0 range(n) loop
11:38:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:38:10
start mi0 range(n) 2loop
11:38:10
finish mi0 range(n) 2loop
11:38:11
start mi1
11:38:11
start mi1 range(p) 1 loop
11:38:11
finish mi1 range(p) 1 loop
11:38:11
start mi1 range(p) 2 loop
11:38:11
finish mi1 range(p) 2 loop
11:38:11
start mi1 range(NT) loop
11:38:11
finish mi1 range(NT) loop
11:38:11
start mi1 range(n) loop
11:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:38:11
start mi1 range(n) 2loop
11:38:11
finish mi1 range(n) 2loop
11:38:11
[[-2.98689754]]
end mi1 loop
11:38:11
estep
11:38:11
end estep
11:38:28
end pa11:38:28
goodness of fit correlation [0.22462821]
start cluster 11:38:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39731 instead
  warnings.warn(
25
parallel submitted
11:38:49
parallel finished
11:42:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:42:18
start mi0
11:42:18
start mi0 range(p) 1 loop
11:42:18
finish mi0 range(p) 1 loop
11:42:18
start mi0 range(p) 2 loop
11:42:18
finish mi0 range(p) 2 loop
11:42:18
start mi0 range(NT) loop
11:42:18
finish mi0 range(NT) loop
11:42:18
start mi0 range(n) loop
11:42:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:42:18
start mi0 range(n) 2loop
11:42:18
finish mi0 range(n) 2loop
11:42:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:42:18
start mi1 range(p) 1 loop
11:42:18
finish mi1 range(p) 1 loop
11:42:18
start mi1 range(p) 2 loop
11:42:18
finish mi1 range(p) 2 loop
11:42:18
start mi1 range(NT) loop
11:42:18
finish mi1 range(NT) loop
11:42:18
start mi1 range(n) loop
11:42:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:42:18
start mi1 range(n) 2loop
11:42:18
finish mi1 range(n) 2loop
11:42:18
[[-2.93474521]]
end mi1 loop
11:42:18
estep
11:42:18
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:42:35
start ppi1
11:42:35
start mi0
11:42:35
start mi0 range(p) 1 loop
11:42:35
finish mi0 range(p) 1 loop
11:42:35
start mi0 range(p) 2 loop
11:42:35
finish mi0 range(p) 2 loop
11:42:35
start mi0 range(NT) loop
11:42:35
finish mi0 range(NT) loop
11:42:35
start mi0 range(n) loop
11:42:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:42:35
start mi0 range(n) 2loop
11:42:35
finish mi0 range(n) 2loop
11:42:36
[[-2.9972358]]
end mi0 loop
11:42:36
estep
11:42:36
end estep
11:42:52
end pa11:42:52
goodness of fit correlation [0.18980439]
start cluster 11:42:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34886 instead
  warnings.warn(
26
parallel submitted
11:43:15
parallel finished
11:47:36
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:47:47
start mi0
11:47:47
start mi0 range(p) 1 loop
11:47:47
finish mi0 range(p) 1 loop
11:47:47
start mi0 range(p) 2 loop
11:47:47
finish mi0 range(p) 2 loop
11:47:47
start mi0 range(NT) loop
11:47:47
finish mi0 range(NT) loop
11:47:47
start mi0 range(n) loop
11:47:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:47:48
start mi0 range(n) 2loop
11:47:48
finish mi0 range(n) 2loop
11:47:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:47:48
start mi1 range(p) 1 loop
11:47:48
finish mi1 range(p) 1 loop
11:47:48
start mi1 range(p) 2 loop
11:47:48
finish mi1 range(p) 2 loop
11:47:48
start mi1 range(NT) loop
11:47:48
finish mi1 range(NT) loop
11:47:48
start mi1 range(n) loop
11:47:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:47:48
start mi1 range(n) 2loop
11:47:48
finish mi1 range(n) 2loop
11:47:48
[[-2.90712571]]
end mi1 loop
11:47:48
estep
11:47:48
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:48:03
start ppi1
11:48:03
start mi0
11:48:03
start mi0 range(p) 1 loop
11:48:03
finish mi0 range(p) 1 loop
11:48:03
start mi0 range(p) 2 loop
11:48:03
finish mi0 range(p) 2 loop
11:48:03
start mi0 range(NT) loop
11:48:03
finish mi0 range(NT) loop
11:48:03
start mi0 range(n) loop
11:48:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:48:03
start mi0 range(n) 2loop
11:48:03
finish mi0 range(n) 2loop
11:48:03
start mi1
11:48:03
start mi1 range(p) 1 loop
11:48:03
finish mi1 range(p) 1 loop
11:48:03
start mi1 range(p) 2 loop
11:48:03
finish mi1 range(p) 2 loop
11:48:03
start mi1 range(NT) loop
11:48:03
finish mi1 range(NT) loop
11:48:03
start mi1 range(n) loop
11:48:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:48:03
start mi1 range(n) 2loop
11:48:03
finish mi1 range(n) 2loop
11:48:04
[[-2.96962752]]
end mi1 loop
11:48:04
estep
11:48:04
end estep
11:48:19
end pa11:48:19
goodness of fit correlation [0.23132385]
start cluster 11:48:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40023 instead
  warnings.warn(
27
parallel submitted
11:48:38
parallel finished
11:51:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:51:48
start mi0
11:51:48
start mi0 range(p) 1 loop
11:51:48
finish mi0 range(p) 1 loop
11:51:48
start mi0 range(p) 2 loop
11:51:48
finish mi0 range(p) 2 loop
11:51:48
start mi0 range(NT) loop
11:51:48
finish mi0 range(NT) loop
11:51:48
start mi0 range(n) loop
11:51:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:51:48
start mi0 range(n) 2loop
11:51:48
finish mi0 range(n) 2loop
11:51:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:51:49
start mi1 range(p) 1 loop
11:51:49
finish mi1 range(p) 1 loop
11:51:49
start mi1 range(p) 2 loop
11:51:49
finish mi1 range(p) 2 loop
11:51:49
start mi1 range(NT) loop
11:51:49
finish mi1 range(NT) loop
11:51:49
start mi1 range(n) loop
11:51:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:51:49
start mi1 range(n) 2loop
11:51:49
finish mi1 range(n) 2loop
11:51:49
[[-2.93120236]]
end mi1 loop
11:51:49
estep
11:51:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:52:06
start ppi1
11:52:06
start mi0
11:52:06
start mi0 range(p) 1 loop
11:52:06
finish mi0 range(p) 1 loop
11:52:06
start mi0 range(p) 2 loop
11:52:06
finish mi0 range(p) 2 loop
11:52:06
start mi0 range(NT) loop
11:52:06
finish mi0 range(NT) loop
11:52:06
start mi0 range(n) loop
11:52:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:52:06
start mi0 range(n) 2loop
11:52:06
finish mi0 range(n) 2loop
11:52:06
[[-2.99367742]]
end mi0 loop
11:52:06
estep
11:52:06
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
end estep
11:52:23
end pa11:52:23
goodness of fit correlation [0.18468861]
start cluster 11:52:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43039 instead
  warnings.warn(
28
parallel submitted
11:52:45
parallel finished
11:55:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:55:40
start mi0
11:55:40
start mi0 range(p) 1 loop
11:55:40
finish mi0 range(p) 1 loop
11:55:40
start mi0 range(p) 2 loop
11:55:40
finish mi0 range(p) 2 loop
11:55:40
start mi0 range(NT) loop
11:55:40
finish mi0 range(NT) loop
11:55:40
start mi0 range(n) loop
11:55:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:55:40
start mi0 range(n) 2loop
11:55:40
finish mi0 range(n) 2loop
11:55:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:55:40
start mi1 range(p) 1 loop
11:55:40
finish mi1 range(p) 1 loop
11:55:40
start mi1 range(p) 2 loop
11:55:40
finish mi1 range(p) 2 loop
11:55:40
start mi1 range(NT) loop
11:55:40
finish mi1 range(NT) loop
11:55:41
start mi1 range(n) loop
11:55:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:55:41
start mi1 range(n) 2loop
11:55:41
finish mi1 range(n) 2loop
11:55:41
[[-2.87904329]]
end mi1 loop
11:55:41
estep
11:55:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:55:57
start ppi1
11:55:57
start mi0
11:55:57
start mi0 range(p) 1 loop
11:55:57
finish mi0 range(p) 1 loop
11:55:57
start mi0 range(p) 2 loop
11:55:57
finish mi0 range(p) 2 loop
11:55:57
start mi0 range(NT) loop
11:55:57
finish mi0 range(NT) loop
11:55:57
start mi0 range(n) loop
11:55:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:55:57
start mi0 range(n) 2loop
11:55:57
finish mi0 range(n) 2loop
11:55:57
start mi1
11:55:57
start mi1 range(p) 1 loop
11:55:57
finish mi1 range(p) 1 loop
11:55:57
start mi1 range(p) 2 loop
11:55:57
finish mi1 range(p) 2 loop
11:55:57
start mi1 range(NT) loop
11:55:57
finish mi1 range(NT) loop
11:55:57
start mi1 range(n) loop
11:55:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:55:58
start mi1 range(n) 2loop
11:55:58
finish mi1 range(n) 2loop
11:55:58
[[-2.94156274]]
end mi1 loop
11:55:58
estep
11:55:58
end estep
11:56:14
end pa11:56:14
goodness of fit correlation [0.22750491]
start cluster 11:56:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36798 instead
  warnings.warn(
29
parallel submitted
11:56:38
parallel finished
11:59:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:59:51
start mi0
11:59:51
start mi0 range(p) 1 loop
11:59:51
finish mi0 range(p) 1 loop
11:59:51
start mi0 range(p) 2 loop
11:59:51
finish mi0 range(p) 2 loop
11:59:51
start mi0 range(NT) loop
11:59:51
finish mi0 range(NT) loop
11:59:51
start mi0 range(n) loop
11:59:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:59:51
start mi0 range(n) 2loop
11:59:51
finish mi0 range(n) 2loop
11:59:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:59:52
start mi1 range(p) 1 loop
11:59:52
finish mi1 range(p) 1 loop
11:59:52
start mi1 range(p) 2 loop
11:59:52
finish mi1 range(p) 2 loop
11:59:52
start mi1 range(NT) loop
11:59:52
finish mi1 range(NT) loop
11:59:52
start mi1 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:59:52
start mi1 range(n) 2loop
11:59:52
finish mi1 range(n) 2loop
11:59:52
[[-2.89976931]]
end mi1 loop
11:59:52
estep
11:59:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:00:07
start ppi1
12:00:07
start mi0
12:00:07
start mi0 range(p) 1 loop
12:00:07
finish mi0 range(p) 1 loop
12:00:07
start mi0 range(p) 2 loop
12:00:07
finish mi0 range(p) 2 loop
12:00:07
start mi0 range(NT) loop
12:00:07
finish mi0 range(NT) loop
12:00:07
start mi0 range(n) loop
12:00:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:00:07
start mi0 range(n) 2loop
12:00:07
finish mi0 range(n) 2loop
12:00:08
start mi1
12:00:08
start mi1 range(p) 1 loop
12:00:08
finish mi1 range(p) 1 loop
12:00:08
start mi1 range(p) 2 loop
12:00:08
finish mi1 range(p) 2 loop
12:00:08
start mi1 range(NT) loop
12:00:08
finish mi1 range(NT) loop
12:00:08
start mi1 range(n) loop
12:00:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:00:08
start mi1 range(n) 2loop
12:00:08
finish mi1 range(n) 2loop
12:00:08
[[-2.96227455]]
end mi1 loop
12:00:08
estep
12:00:08
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
end estep
12:00:24
end pa12:00:24
goodness of fit correlation [0.18507583]
start cluster 12:00:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44110 instead
  warnings.warn(
30
parallel submitted
12:00:46
parallel finished
12:03:52
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:04:02
start mi0
12:04:02
start mi0 range(p) 1 loop
12:04:02
finish mi0 range(p) 1 loop
12:04:02
start mi0 range(p) 2 loop
12:04:02
finish mi0 range(p) 2 loop
12:04:02
start mi0 range(NT) loop
12:04:02
finish mi0 range(NT) loop
12:04:02
start mi0 range(n) loop
12:04:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:04:02
start mi0 range(n) 2loop
12:04:02
finish mi0 range(n) 2loop
12:04:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:04:02
start mi1 range(p) 1 loop
12:04:02
finish mi1 range(p) 1 loop
12:04:02
start mi1 range(p) 2 loop
12:04:02
finish mi1 range(p) 2 loop
12:04:02
start mi1 range(NT) loop
12:04:02
finish mi1 range(NT) loop
12:04:02
start mi1 range(n) loop
12:04:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:04:03
start mi1 range(n) 2loop
12:04:03
finish mi1 range(n) 2loop
12:04:03
start mi2
12:04:03
start mi2 range(p) 1 loop
12:04:03
finish mi2 range(p) 1 loop
12:04:03
start mi2 range(p) 2 loop
12:04:03
finish mi2 range(p) 2 loop
12:04:03
start mi2 range(NT) loop
12:04:03
finish mi2 range(NT) loop
12:04:03
start mi2 range(n) loop
12:04:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:04:03
start mi2 range(n) 2loop
12:04:03
finish mi2 range(n) 2loop
12:04:03
[[-2.83431989]]
end mi2 loop
12:04:03
estep
12:04:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:04:19
start ppi1
12:04:19
start mi0
12:04:19
start mi0 range(p) 1 loop
12:04:19
finish mi0 range(p) 1 loop
12:04:19
start mi0 range(p) 2 loop
12:04:19
finish mi0 range(p) 2 loop
12:04:19
start mi0 range(NT) loop
12:04:19
finish mi0 range(NT) loop
12:04:19
start mi0 range(n) loop
12:04:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:04:19
start mi0 range(n) 2loop
12:04:19
finish mi0 range(n) 2loop
12:04:19
start mi1
12:04:19
start mi1 range(p) 1 loop
12:04:19
finish mi1 range(p) 1 loop
12:04:19
start mi1 range(p) 2 loop
12:04:19
finish mi1 range(p) 2 loop
12:04:19
start mi1 range(NT) loop
12:04:19
finish mi1 range(NT) loop
12:04:19
start mi1 range(n) loop
12:04:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:04:19
start mi1 range(n) 2loop
12:04:19
finish mi1 range(n) 2loop
12:04:19
[[-2.89679676]]
end mi1 loop
12:04:19
estep
12:04:19
end estep
12:04:35
end pa12:04:35
goodness of fit correlation [0.18214854]
start cluster 12:04:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39888 instead
  warnings.warn(
31
parallel submitted
12:04:55
parallel finished
12:07:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:08:04
start mi0
12:08:04
start mi0 range(p) 1 loop
12:08:04
finish mi0 range(p) 1 loop
12:08:04
start mi0 range(p) 2 loop
12:08:04
finish mi0 range(p) 2 loop
12:08:04
start mi0 range(NT) loop
12:08:04
finish mi0 range(NT) loop
12:08:04
start mi0 range(n) loop
12:08:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:08:04
start mi0 range(n) 2loop
12:08:04
finish mi0 range(n) 2loop
12:08:04
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:08:04
start mi1 range(p) 1 loop
12:08:04
finish mi1 range(p) 1 loop
12:08:04
start mi1 range(p) 2 loop
12:08:04
finish mi1 range(p) 2 loop
12:08:04
start mi1 range(NT) loop
12:08:04
finish mi1 range(NT) loop
12:08:04
start mi1 range(n) loop
12:08:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:08:05
start mi1 range(n) 2loop
12:08:05
finish mi1 range(n) 2loop
12:08:05
[[-2.90174675]]
end mi1 loop
12:08:05
estep
12:08:05
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:08:22
start ppi1
12:08:22
start mi0
12:08:22
start mi0 range(p) 1 loop
12:08:22
finish mi0 range(p) 1 loop
12:08:22
start mi0 range(p) 2 loop
12:08:22
finish mi0 range(p) 2 loop
12:08:22
start mi0 range(NT) loop
12:08:22
finish mi0 range(NT) loop
12:08:22
start mi0 range(n) loop
12:08:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:08:22
start mi0 range(n) 2loop
12:08:22
finish mi0 range(n) 2loop
12:08:22
start mi1
12:08:22
start mi1 range(p) 1 loop
12:08:22
finish mi1 range(p) 1 loop
12:08:22
start mi1 range(p) 2 loop
12:08:22
finish mi1 range(p) 2 loop
12:08:22
start mi1 range(NT) loop
12:08:22
finish mi1 range(NT) loop
12:08:22
start mi1 range(n) loop
12:08:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:08:22
start mi1 range(n) 2loop
12:08:22
finish mi1 range(n) 2loop
12:08:23
[[-2.96425099]]
end mi1 loop
12:08:23
estep
12:08:23
end estep
12:08:40
end pa12:08:40
goodness of fit correlation [0.22929145]
start cluster 12:08:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35511 instead
  warnings.warn(
32
parallel submitted
12:09:01
parallel finished
12:11:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:11:14
start mi0
12:11:14
start mi0 range(p) 1 loop
12:11:14
finish mi0 range(p) 1 loop
12:11:15
start mi0 range(p) 2 loop
12:11:15
finish mi0 range(p) 2 loop
12:11:15
start mi0 range(NT) loop
12:11:15
finish mi0 range(NT) loop
12:11:15
start mi0 range(n) loop
12:11:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:11:15
start mi0 range(n) 2loop
12:11:15
finish mi0 range(n) 2loop
12:11:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:11:15
start mi1 range(p) 1 loop
12:11:15
finish mi1 range(p) 1 loop
12:11:15
start mi1 range(p) 2 loop
12:11:15
finish mi1 range(p) 2 loop
12:11:15
start mi1 range(NT) loop
12:11:15
finish mi1 range(NT) loop
12:11:15
start mi1 range(n) loop
12:11:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:11:15
start mi1 range(n) 2loop
12:11:15
finish mi1 range(n) 2loop
12:11:15
[[-2.94076729]]
end mi1 loop
12:11:15
estep
12:11:15
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:11:31
start ppi1
12:11:31
start mi0
12:11:31
start mi0 range(p) 1 loop
12:11:31
finish mi0 range(p) 1 loop
12:11:31
start mi0 range(p) 2 loop
12:11:31
finish mi0 range(p) 2 loop
12:11:31
start mi0 range(NT) loop
12:11:31
finish mi0 range(NT) loop
12:11:31
start mi0 range(n) loop
12:11:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:11:31
start mi0 range(n) 2loop
12:11:31
finish mi0 range(n) 2loop
12:11:31
[[-3.00325562]]
end mi0 loop
12:11:31
estep
12:11:31
end estep
12:11:48
end pa12:11:48
goodness of fit correlation [0.2308968]
start cluster 12:11:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37571 instead
  warnings.warn(
33
parallel submitted
12:12:11
parallel finished
12:16:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:16:55
start mi0
12:16:55
start mi0 range(p) 1 loop
12:16:55
finish mi0 range(p) 1 loop
12:16:55
start mi0 range(p) 2 loop
12:16:55
finish mi0 range(p) 2 loop
12:16:55
start mi0 range(NT) loop
12:16:55
finish mi0 range(NT) loop
12:16:55
start mi0 range(n) loop
12:16:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:16:55
start mi0 range(n) 2loop
12:16:55
finish mi0 range(n) 2loop
12:16:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:16:55
start mi1 range(p) 1 loop
12:16:55
finish mi1 range(p) 1 loop
12:16:55
start mi1 range(p) 2 loop
12:16:55
finish mi1 range(p) 2 loop
12:16:55
start mi1 range(NT) loop
12:16:55
finish mi1 range(NT) loop
12:16:55
start mi1 range(n) loop
12:16:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:16:55
start mi1 range(n) 2loop
12:16:55
finish mi1 range(n) 2loop
12:16:55
[[-2.95287645]]
end mi1 loop
12:16:55
estep
12:16:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:17:11
start ppi1
12:17:11
start mi0
12:17:11
start mi0 range(p) 1 loop
12:17:11
finish mi0 range(p) 1 loop
12:17:11
start mi0 range(p) 2 loop
12:17:11
finish mi0 range(p) 2 loop
12:17:11
start mi0 range(NT) loop
12:17:11
finish mi0 range(NT) loop
12:17:11
start mi0 range(n) loop
12:17:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:17:11
start mi0 range(n) 2loop
12:17:11
finish mi0 range(n) 2loop
12:17:11
start mi1
12:17:11
start mi1 range(p) 1 loop
12:17:11
finish mi1 range(p) 1 loop
12:17:11
start mi1 range(p) 2 loop
12:17:11
finish mi1 range(p) 2 loop
12:17:11
start mi1 range(NT) loop
12:17:11
finish mi1 range(NT) loop
12:17:11
start mi1 range(n) loop
12:17:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:17:11
start mi1 range(n) 2loop
12:17:11
finish mi1 range(n) 2loop
12:17:11
[[-3.01536911]]
end mi1 loop
12:17:11
estep
12:17:11
end estep
12:17:27
end pa12:17:27
goodness of fit correlation [0.24163652]
start cluster 12:17:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42850 instead
  warnings.warn(
34
parallel submitted
12:17:50
parallel finished
12:22:20
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:22:33
start mi0
12:22:33
start mi0 range(p) 1 loop
12:22:33
finish mi0 range(p) 1 loop
12:22:33
start mi0 range(p) 2 loop
12:22:33
finish mi0 range(p) 2 loop
12:22:33
start mi0 range(NT) loop
12:22:33
finish mi0 range(NT) loop
12:22:33
start mi0 range(n) loop
12:22:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:22:33
start mi0 range(n) 2loop
12:22:33
finish mi0 range(n) 2loop
12:22:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:22:34
start mi1 range(p) 1 loop
12:22:34
finish mi1 range(p) 1 loop
12:22:34
start mi1 range(p) 2 loop
12:22:34
finish mi1 range(p) 2 loop
12:22:34
start mi1 range(NT) loop
12:22:34
finish mi1 range(NT) loop
12:22:34
start mi1 range(n) loop
12:22:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:22:34
start mi1 range(n) 2loop
12:22:34
finish mi1 range(n) 2loop
12:22:34
[[-2.97961865]]
end mi1 loop
12:22:34
estep
12:22:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:22:49
start ppi1
12:22:49
start mi0
12:22:49
start mi0 range(p) 1 loop
12:22:49
finish mi0 range(p) 1 loop
12:22:49
start mi0 range(p) 2 loop
12:22:49
finish mi0 range(p) 2 loop
12:22:49
start mi0 range(NT) loop
12:22:49
finish mi0 range(NT) loop
12:22:49
start mi0 range(n) loop
12:22:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:22:49
start mi0 range(n) 2loop
12:22:49
finish mi0 range(n) 2loop
12:22:49
start mi1
12:22:49
start mi1 range(p) 1 loop
12:22:49
finish mi1 range(p) 1 loop
12:22:49
start mi1 range(p) 2 loop
12:22:49
finish mi1 range(p) 2 loop
12:22:49
start mi1 range(NT) loop
12:22:50
finish mi1 range(NT) loop
12:22:50
start mi1 range(n) loop
12:22:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:22:50
start mi1 range(n) 2loop
12:22:50
finish mi1 range(n) 2loop
12:22:50
[[-3.04211033]]
end mi1 loop
12:22:50
estep
12:22:50
end estep
12:23:07
end pa12:23:07
goodness of fit correlation [0.24665052]
start cluster 12:23:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35166 instead
  warnings.warn(
35
parallel submitted
12:23:31
parallel finished
12:26:07
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:26:18
start mi0
12:26:18
start mi0 range(p) 1 loop
12:26:18
finish mi0 range(p) 1 loop
12:26:18
start mi0 range(p) 2 loop
12:26:18
finish mi0 range(p) 2 loop
12:26:18
start mi0 range(NT) loop
12:26:19
finish mi0 range(NT) loop
12:26:19
start mi0 range(n) loop
12:26:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:26:19
start mi0 range(n) 2loop
12:26:19
finish mi0 range(n) 2loop
12:26:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:26:19
start mi1 range(p) 1 loop
12:26:19
finish mi1 range(p) 1 loop
12:26:19
start mi1 range(p) 2 loop
12:26:19
finish mi1 range(p) 2 loop
12:26:19
start mi1 range(NT) loop
12:26:19
finish mi1 range(NT) loop
12:26:19
start mi1 range(n) loop
12:26:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:26:19
start mi1 range(n) 2loop
12:26:19
finish mi1 range(n) 2loop
12:26:19
[[-2.97261191]]
end mi1 loop
12:26:19
estep
12:26:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:26:36
start ppi1
12:26:36
start mi0
12:26:36
start mi0 range(p) 1 loop
12:26:36
finish mi0 range(p) 1 loop
12:26:36
start mi0 range(p) 2 loop
12:26:36
finish mi0 range(p) 2 loop
12:26:36
start mi0 range(NT) loop
12:26:37
finish mi0 range(NT) loop
12:26:37
start mi0 range(n) loop
12:26:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:26:37
start mi0 range(n) 2loop
12:26:37
finish mi0 range(n) 2loop
12:26:37
start mi1
12:26:37
start mi1 range(p) 1 loop
12:26:37
finish mi1 range(p) 1 loop
12:26:37
start mi1 range(p) 2 loop
12:26:37
finish mi1 range(p) 2 loop
12:26:37
start mi1 range(NT) loop
12:26:37
finish mi1 range(NT) loop
12:26:37
start mi1 range(n) loop
12:26:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:26:37
start mi1 range(n) 2loop
12:26:37
finish mi1 range(n) 2loop
12:26:37
[[-3.03510383]]
end mi1 loop
12:26:37
estep
12:26:37
end estep
12:26:54
end pa12:26:54
goodness of fit correlation [0.2315807]
start cluster 12:26:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42648 instead
  warnings.warn(
36
parallel submitted
12:27:17
parallel finished
12:30:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:31:12
start mi0
12:31:12
start mi0 range(p) 1 loop
12:31:12
finish mi0 range(p) 1 loop
12:31:12
start mi0 range(p) 2 loop
12:31:12
finish mi0 range(p) 2 loop
12:31:12
start mi0 range(NT) loop
12:31:12
finish mi0 range(NT) loop
12:31:12
start mi0 range(n) loop
12:31:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:31:13
start mi0 range(n) 2loop
12:31:13
finish mi0 range(n) 2loop
12:31:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:31:13
start mi1 range(p) 1 loop
12:31:13
finish mi1 range(p) 1 loop
12:31:13
start mi1 range(p) 2 loop
12:31:13
finish mi1 range(p) 2 loop
12:31:13
start mi1 range(NT) loop
12:31:13
finish mi1 range(NT) loop
12:31:13
start mi1 range(n) loop
12:31:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:31:13
start mi1 range(n) 2loop
12:31:13
finish mi1 range(n) 2loop
12:31:13
[[-2.96235119]]
end mi1 loop
12:31:13
estep
12:31:13
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:31:30
start ppi1
12:31:30
start mi0
12:31:30
start mi0 range(p) 1 loop
12:31:30
finish mi0 range(p) 1 loop
12:31:30
start mi0 range(p) 2 loop
12:31:30
finish mi0 range(p) 2 loop
12:31:30
start mi0 range(NT) loop
12:31:30
finish mi0 range(NT) loop
12:31:31
start mi0 range(n) loop
12:31:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:31:31
start mi0 range(n) 2loop
12:31:31
finish mi0 range(n) 2loop
12:31:31
start mi1
12:31:31
start mi1 range(p) 1 loop
12:31:31
finish mi1 range(p) 1 loop
12:31:31
start mi1 range(p) 2 loop
12:31:31
finish mi1 range(p) 2 loop
12:31:31
start mi1 range(NT) loop
12:31:31
finish mi1 range(NT) loop
12:31:31
start mi1 range(n) loop
12:31:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:31:31
start mi1 range(n) 2loop
12:31:31
finish mi1 range(n) 2loop
12:31:31
[[-3.02484344]]
end mi1 loop
12:31:31
estep
12:31:31
end estep
12:31:47
end pa12:31:47
goodness of fit correlation [0.24844646]
start cluster 12:31:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42902 instead
  warnings.warn(
37
parallel submitted
12:32:09
parallel finished
12:35:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:36:07
start mi0
12:36:07
start mi0 range(p) 1 loop
12:36:07
finish mi0 range(p) 1 loop
12:36:07
start mi0 range(p) 2 loop
12:36:07
finish mi0 range(p) 2 loop
12:36:07
start mi0 range(NT) loop
12:36:07
finish mi0 range(NT) loop
12:36:07
start mi0 range(n) loop
12:36:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:36:07
start mi0 range(n) 2loop
12:36:07
finish mi0 range(n) 2loop
12:36:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:36:07
start mi1 range(p) 1 loop
12:36:07
finish mi1 range(p) 1 loop
12:36:07
start mi1 range(p) 2 loop
12:36:07
finish mi1 range(p) 2 loop
12:36:07
start mi1 range(NT) loop
12:36:07
finish mi1 range(NT) loop
12:36:07
start mi1 range(n) loop
12:36:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:36:07
start mi1 range(n) 2loop
12:36:07
finish mi1 range(n) 2loop
12:36:08
[[-2.97053655]]
end mi1 loop
12:36:08
estep
12:36:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:36:23
start ppi1
12:36:23
start mi0
12:36:23
start mi0 range(p) 1 loop
12:36:23
finish mi0 range(p) 1 loop
12:36:23
start mi0 range(p) 2 loop
12:36:23
finish mi0 range(p) 2 loop
12:36:23
start mi0 range(NT) loop
12:36:23
finish mi0 range(NT) loop
12:36:23
start mi0 range(n) loop
12:36:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:36:23
start mi0 range(n) 2loop
12:36:23
finish mi0 range(n) 2loop
12:36:23
start mi1
12:36:23
start mi1 range(p) 1 loop
12:36:23
finish mi1 range(p) 1 loop
12:36:23
start mi1 range(p) 2 loop
12:36:23
finish mi1 range(p) 2 loop
12:36:23
start mi1 range(NT) loop
12:36:23
finish mi1 range(NT) loop
12:36:23
start mi1 range(n) loop
12:36:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:36:24
start mi1 range(n) 2loop
12:36:24
finish mi1 range(n) 2loop
12:36:24
[[-3.03302854]]
end mi1 loop
12:36:24
estep
12:36:24
end estep
12:36:41
end pa12:36:41
goodness of fit correlation [0.2412293]
start cluster 12:36:41
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33661 instead
  warnings.warn(
38
parallel submitted
12:37:04
parallel finished
12:39:33
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:39:45
start mi0
12:39:45
start mi0 range(p) 1 loop
12:39:45
finish mi0 range(p) 1 loop
12:39:45
start mi0 range(p) 2 loop
12:39:45
finish mi0 range(p) 2 loop
12:39:45
start mi0 range(NT) loop
12:39:45
finish mi0 range(NT) loop
12:39:45
start mi0 range(n) loop
12:39:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:39:46
start mi0 range(n) 2loop
12:39:46
finish mi0 range(n) 2loop
12:39:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:39:46
start mi1 range(p) 1 loop
12:39:46
finish mi1 range(p) 1 loop
12:39:46
start mi1 range(p) 2 loop
12:39:46
finish mi1 range(p) 2 loop
12:39:46
start mi1 range(NT) loop
12:39:46
finish mi1 range(NT) loop
12:39:46
start mi1 range(n) loop
12:39:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:39:46
start mi1 range(n) 2loop
12:39:46
finish mi1 range(n) 2loop
12:39:46
[[-2.95886639]]
end mi1 loop
12:39:46
estep
12:39:46
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:40:04
start ppi1
12:40:04
start mi0
12:40:04
start mi0 range(p) 1 loop
12:40:04
finish mi0 range(p) 1 loop
12:40:04
start mi0 range(p) 2 loop
12:40:04
finish mi0 range(p) 2 loop
12:40:04
start mi0 range(NT) loop
12:40:04
finish mi0 range(NT) loop
12:40:04
start mi0 range(n) loop
12:40:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:40:04
start mi0 range(n) 2loop
12:40:04
finish mi0 range(n) 2loop
12:40:04
start mi1
12:40:04
start mi1 range(p) 1 loop
12:40:04
finish mi1 range(p) 1 loop
12:40:04
start mi1 range(p) 2 loop
12:40:04
finish mi1 range(p) 2 loop
12:40:04
start mi1 range(NT) loop
12:40:04
finish mi1 range(NT) loop
12:40:04
start mi1 range(n) loop
12:40:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:40:04
start mi1 range(n) 2loop
12:40:04
finish mi1 range(n) 2loop
12:40:04
[[-3.02135877]]
end mi1 loop
12:40:04
estep
12:40:04
end estep
12:40:21
end pa12:40:21
goodness of fit correlation [0.24028811]
start cluster 12:40:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46375 instead
  warnings.warn(
39
parallel submitted
12:40:43
parallel finished
12:42:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:43:08
start mi0
12:43:08
start mi0 range(p) 1 loop
12:43:08
finish mi0 range(p) 1 loop
12:43:08
start mi0 range(p) 2 loop
12:43:08
finish mi0 range(p) 2 loop
12:43:08
start mi0 range(NT) loop
12:43:08
finish mi0 range(NT) loop
12:43:08
start mi0 range(n) loop
12:43:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:43:08
start mi0 range(n) 2loop
12:43:08
finish mi0 range(n) 2loop
12:43:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:43:08
start mi1 range(p) 1 loop
12:43:08
finish mi1 range(p) 1 loop
12:43:08
start mi1 range(p) 2 loop
12:43:08
finish mi1 range(p) 2 loop
12:43:08
start mi1 range(NT) loop
12:43:08
finish mi1 range(NT) loop
12:43:08
start mi1 range(n) loop
12:43:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:43:08
start mi1 range(n) 2loop
12:43:08
finish mi1 range(n) 2loop
12:43:08
[[-2.95298383]]
end mi1 loop
12:43:08
estep
12:43:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:43:24
start ppi1
12:43:24
start mi0
12:43:24
start mi0 range(p) 1 loop
12:43:24
finish mi0 range(p) 1 loop
12:43:24
start mi0 range(p) 2 loop
12:43:24
finish mi0 range(p) 2 loop
12:43:24
start mi0 range(NT) loop
12:43:24
finish mi0 range(NT) loop
12:43:24
start mi0 range(n) loop
12:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:43:24
start mi0 range(n) 2loop
12:43:24
finish mi0 range(n) 2loop
12:43:24
start mi1
12:43:24
start mi1 range(p) 1 loop
12:43:24
finish mi1 range(p) 1 loop
12:43:24
start mi1 range(p) 2 loop
12:43:24
finish mi1 range(p) 2 loop
12:43:24
start mi1 range(NT) loop
12:43:24
finish mi1 range(NT) loop
12:43:24
start mi1 range(n) loop
12:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:43:24
start mi1 range(n) 2loop
12:43:24
finish mi1 range(n) 2loop
12:43:25
[[-3.01547649]]
end mi1 loop
12:43:25
estep
12:43:25
end estep
12:43:42
end pa12:43:42
goodness of fit correlation [0.20181927]
start cluster 12:43:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39384 instead
  warnings.warn(
40
parallel submitted
12:44:07
parallel finished
12:47:54
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:48:07
start mi0
12:48:07
start mi0 range(p) 1 loop
12:48:07
finish mi0 range(p) 1 loop
12:48:07
start mi0 range(p) 2 loop
12:48:07
finish mi0 range(p) 2 loop
12:48:07
start mi0 range(NT) loop
12:48:07
finish mi0 range(NT) loop
12:48:07
start mi0 range(n) loop
12:48:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:48:07
start mi0 range(n) 2loop
12:48:07
finish mi0 range(n) 2loop
12:48:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:48:07
start mi1 range(p) 1 loop
12:48:07
finish mi1 range(p) 1 loop
12:48:07
start mi1 range(p) 2 loop
12:48:07
finish mi1 range(p) 2 loop
12:48:07
start mi1 range(NT) loop
12:48:07
finish mi1 range(NT) loop
12:48:07
start mi1 range(n) loop
12:48:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:48:07
start mi1 range(n) 2loop
12:48:07
finish mi1 range(n) 2loop
12:48:08
[[-2.9495398]]
end mi1 loop
12:48:08
estep
12:48:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:48:25
start ppi1
12:48:25
start mi0
12:48:25
start mi0 range(p) 1 loop
12:48:25
finish mi0 range(p) 1 loop
12:48:25
start mi0 range(p) 2 loop
12:48:25
finish mi0 range(p) 2 loop
12:48:25
start mi0 range(NT) loop
12:48:25
finish mi0 range(NT) loop
12:48:25
start mi0 range(n) loop
12:48:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:48:26
start mi0 range(n) 2loop
12:48:26
finish mi0 range(n) 2loop
12:48:26
start mi1
12:48:26
start mi1 range(p) 1 loop
12:48:26
finish mi1 range(p) 1 loop
12:48:26
start mi1 range(p) 2 loop
12:48:26
finish mi1 range(p) 2 loop
12:48:26
start mi1 range(NT) loop
12:48:26
finish mi1 range(NT) loop
12:48:26
start mi1 range(n) loop
12:48:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:48:26
start mi1 range(n) 2loop
12:48:26
finish mi1 range(n) 2loop
12:48:26
[[-3.01203267]]
end mi1 loop
12:48:26
estep
12:48:26
end estep
12:48:44
end pa12:48:44
goodness of fit correlation [0.25557621]
start cluster 12:48:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44076 instead
  warnings.warn(
41
parallel submitted
12:49:09
parallel finished
12:52:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:52:17
start mi0
12:52:17
start mi0 range(p) 1 loop
12:52:17
finish mi0 range(p) 1 loop
12:52:17
start mi0 range(p) 2 loop
12:52:17
finish mi0 range(p) 2 loop
12:52:17
start mi0 range(NT) loop
12:52:17
finish mi0 range(NT) loop
12:52:17
start mi0 range(n) loop
12:52:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:52:17
start mi0 range(n) 2loop
12:52:17
finish mi0 range(n) 2loop
12:52:17
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:52:17
start mi1 range(p) 1 loop
12:52:17
finish mi1 range(p) 1 loop
12:52:17
start mi1 range(p) 2 loop
12:52:17
finish mi1 range(p) 2 loop
12:52:17
start mi1 range(NT) loop
12:52:17
finish mi1 range(NT) loop
12:52:17
start mi1 range(n) loop
12:52:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:52:17
start mi1 range(n) 2loop
12:52:17
finish mi1 range(n) 2loop
12:52:17
[[-2.9526564]]
end mi1 loop
12:52:17
estep
12:52:17
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:52:33
start ppi1
12:52:33
start mi0
12:52:33
start mi0 range(p) 1 loop
12:52:33
finish mi0 range(p) 1 loop
12:52:33
start mi0 range(p) 2 loop
12:52:33
finish mi0 range(p) 2 loop
12:52:33
start mi0 range(NT) loop
12:52:33
finish mi0 range(NT) loop
12:52:33
start mi0 range(n) loop
12:52:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:52:33
start mi0 range(n) 2loop
12:52:33
finish mi0 range(n) 2loop
12:52:34
start mi1
12:52:34
start mi1 range(p) 1 loop
12:52:34
finish mi1 range(p) 1 loop
12:52:34
start mi1 range(p) 2 loop
12:52:34
finish mi1 range(p) 2 loop
12:52:34
start mi1 range(NT) loop
12:52:34
finish mi1 range(NT) loop
12:52:34
start mi1 range(n) loop
12:52:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:52:34
start mi1 range(n) 2loop
12:52:34
finish mi1 range(n) 2loop
12:52:34
[[-3.01514908]]
end mi1 loop
12:52:34
estep
12:52:34
end estep
12:52:52
end pa12:52:52
goodness of fit correlation [0.19945083]
start cluster 12:52:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44324 instead
  warnings.warn(
42
parallel submitted
12:53:16
parallel finished
12:56:35
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:56:48
start mi0
12:56:48
start mi0 range(p) 1 loop
12:56:48
finish mi0 range(p) 1 loop
12:56:48
start mi0 range(p) 2 loop
12:56:48
finish mi0 range(p) 2 loop
12:56:48
start mi0 range(NT) loop
12:56:48
finish mi0 range(NT) loop
12:56:48
start mi0 range(n) loop
12:56:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:56:48
start mi0 range(n) 2loop
12:56:48
finish mi0 range(n) 2loop
12:56:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:56:48
start mi1 range(p) 1 loop
12:56:48
finish mi1 range(p) 1 loop
12:56:48
start mi1 range(p) 2 loop
12:56:48
finish mi1 range(p) 2 loop
12:56:48
start mi1 range(NT) loop
12:56:49
finish mi1 range(NT) loop
12:56:49
start mi1 range(n) loop
12:56:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:56:49
start mi1 range(n) 2loop
12:56:49
finish mi1 range(n) 2loop
12:56:49
[[-2.90779731]]
end mi1 loop
12:56:49
estep
12:56:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:57:05
start ppi1
12:57:05
start mi0
12:57:05
start mi0 range(p) 1 loop
12:57:05
finish mi0 range(p) 1 loop
12:57:05
start mi0 range(p) 2 loop
12:57:05
finish mi0 range(p) 2 loop
12:57:05
start mi0 range(NT) loop
12:57:05
finish mi0 range(NT) loop
12:57:05
start mi0 range(n) loop
12:57:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:57:05
start mi0 range(n) 2loop
12:57:05
finish mi0 range(n) 2loop
12:57:05
start mi1
12:57:05
start mi1 range(p) 1 loop
12:57:05
finish mi1 range(p) 1 loop
12:57:05
start mi1 range(p) 2 loop
12:57:05
finish mi1 range(p) 2 loop
12:57:05
start mi1 range(NT) loop
12:57:05
finish mi1 range(NT) loop
12:57:05
start mi1 range(n) loop
12:57:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:57:05
start mi1 range(n) 2loop
12:57:05
finish mi1 range(n) 2loop
12:57:05
[[-2.97029884]]
end mi1 loop
12:57:05
estep
12:57:05
end estep
12:57:23
end pa12:57:23
goodness of fit correlation [0.24579198]
start cluster 12:57:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42243 instead
  warnings.warn(
43
parallel submitted
12:57:48
parallel finished
13:00:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:01:01
start mi0
13:01:01
start mi0 range(p) 1 loop
13:01:01
finish mi0 range(p) 1 loop
13:01:01
start mi0 range(p) 2 loop
13:01:01
finish mi0 range(p) 2 loop
13:01:01
start mi0 range(NT) loop
13:01:02
finish mi0 range(NT) loop
13:01:02
start mi0 range(n) loop
13:01:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:01:02
start mi0 range(n) 2loop
13:01:02
finish mi0 range(n) 2loop
13:01:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:01:02
start mi1 range(p) 1 loop
13:01:02
finish mi1 range(p) 1 loop
13:01:02
start mi1 range(p) 2 loop
13:01:02
finish mi1 range(p) 2 loop
13:01:02
start mi1 range(NT) loop
13:01:02
finish mi1 range(NT) loop
13:01:02
start mi1 range(n) loop
13:01:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:01:02
start mi1 range(n) 2loop
13:01:02
finish mi1 range(n) 2loop
13:01:02
[[-2.9232166]]
end mi1 loop
13:01:02
estep
13:01:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:01:18
start ppi1
13:01:18
start mi0
13:01:18
start mi0 range(p) 1 loop
13:01:18
finish mi0 range(p) 1 loop
13:01:18
start mi0 range(p) 2 loop
13:01:18
finish mi0 range(p) 2 loop
13:01:18
start mi0 range(NT) loop
13:01:18
finish mi0 range(NT) loop
13:01:18
start mi0 range(n) loop
13:01:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:01:18
start mi0 range(n) 2loop
13:01:18
finish mi0 range(n) 2loop
13:01:19
start mi1
13:01:19
start mi1 range(p) 1 loop
13:01:19
finish mi1 range(p) 1 loop
13:01:19
start mi1 range(p) 2 loop
13:01:19
finish mi1 range(p) 2 loop
13:01:19
start mi1 range(NT) loop
13:01:19
finish mi1 range(NT) loop
13:01:19
start mi1 range(n) loop
13:01:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:01:19
start mi1 range(n) 2loop
13:01:19
finish mi1 range(n) 2loop
13:01:19
[[-2.9857132]]
end mi1 loop
13:01:19
estep
13:01:19
end estep
13:01:37
end pa13:01:37
goodness of fit correlation [0.21408554]
start cluster 13:01:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46113 instead
  warnings.warn(
44
parallel submitted
13:02:02
parallel finished
13:05:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:05:32
start mi0
13:05:32
start mi0 range(p) 1 loop
13:05:32
finish mi0 range(p) 1 loop
13:05:32
start mi0 range(p) 2 loop
13:05:32
finish mi0 range(p) 2 loop
13:05:32
start mi0 range(NT) loop
13:05:32
finish mi0 range(NT) loop
13:05:32
start mi0 range(n) loop
13:05:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:05:32
start mi0 range(n) 2loop
13:05:32
finish mi0 range(n) 2loop
13:05:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:05:33
start mi1 range(p) 1 loop
13:05:33
finish mi1 range(p) 1 loop
13:05:33
start mi1 range(p) 2 loop
13:05:33
finish mi1 range(p) 2 loop
13:05:33
start mi1 range(NT) loop
13:05:33
finish mi1 range(NT) loop
13:05:33
start mi1 range(n) loop
13:05:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:05:33
start mi1 range(n) 2loop
13:05:33
finish mi1 range(n) 2loop
13:05:33
[[-2.96608124]]
end mi1 loop
13:05:33
estep
13:05:33
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:05:49
start ppi1
13:05:49
start mi0
13:05:49
start mi0 range(p) 1 loop
13:05:49
finish mi0 range(p) 1 loop
13:05:49
start mi0 range(p) 2 loop
13:05:49
finish mi0 range(p) 2 loop
13:05:49
start mi0 range(NT) loop
13:05:49
finish mi0 range(NT) loop
13:05:49
start mi0 range(n) loop
13:05:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:05:49
start mi0 range(n) 2loop
13:05:49
finish mi0 range(n) 2loop
13:05:49
start mi1
13:05:49
start mi1 range(p) 1 loop
13:05:49
finish mi1 range(p) 1 loop
13:05:49
start mi1 range(p) 2 loop
13:05:49
finish mi1 range(p) 2 loop
13:05:49
start mi1 range(NT) loop
13:05:49
finish mi1 range(NT) loop
13:05:49
start mi1 range(n) loop
13:05:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:05:49
start mi1 range(n) 2loop
13:05:49
finish mi1 range(n) 2loop
13:05:50
[[-3.02857336]]
end mi1 loop
13:05:50
estep
13:05:50
end estep
13:06:06
end pa13:06:06
goodness of fit correlation [0.2587523]
start cluster 13:06:06
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37840 instead
  warnings.warn(
45
parallel submitted
13:06:32
parallel finished
13:09:25
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:09:41
start mi0
13:09:41
start mi0 range(p) 1 loop
13:09:41
finish mi0 range(p) 1 loop
13:09:41
start mi0 range(p) 2 loop
13:09:41
finish mi0 range(p) 2 loop
13:09:41
start mi0 range(NT) loop
13:09:41
finish mi0 range(NT) loop
13:09:41
start mi0 range(n) loop
13:09:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:09:42
start mi0 range(n) 2loop
13:09:42
finish mi0 range(n) 2loop
13:09:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
[[-2.99904409]]
end mi0 loop
13:09:42
estep
13:09:42
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:09:59
start ppi1
13:09:59
start mi0
13:09:59
start mi0 range(p) 1 loop
13:09:59
finish mi0 range(p) 1 loop
13:09:59
start mi0 range(p) 2 loop
13:09:59
finish mi0 range(p) 2 loop
13:09:59
start mi0 range(NT) loop
13:09:59
finish mi0 range(NT) loop
13:10:00
start mi0 range(n) loop
13:10:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:10:00
start mi0 range(n) 2loop
13:10:00
finish mi0 range(n) 2loop
13:10:00
start mi1
13:10:00
start mi1 range(p) 1 loop
13:10:00
finish mi1 range(p) 1 loop
13:10:00
start mi1 range(p) 2 loop
13:10:00
finish mi1 range(p) 2 loop
13:10:00
start mi1 range(NT) loop
13:10:00
finish mi1 range(NT) loop
13:10:00
start mi1 range(n) loop
13:10:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:10:00
start mi1 range(n) 2loop
13:10:00
finish mi1 range(n) 2loop
13:10:00
[[-3.06153486]]
end mi1 loop
13:10:00
estep
13:10:00
end estep
13:10:17
end pa13:10:17
goodness of fit correlation [0.22712585]
start cluster 13:10:17
46
parallel submitted
13:10:43
parallel finished
13:13:32
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:13:48
start mi0
13:13:48
start mi0 range(p) 1 loop
13:13:48
finish mi0 range(p) 1 loop
13:13:48
start mi0 range(p) 2 loop
13:13:48
finish mi0 range(p) 2 loop
13:13:48
start mi0 range(NT) loop
13:13:48
finish mi0 range(NT) loop
13:13:48
start mi0 range(n) loop
13:13:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:13:48
start mi0 range(n) 2loop
13:13:48
finish mi0 range(n) 2loop
13:13:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:13:49
start mi1 range(p) 1 loop
13:13:49
finish mi1 range(p) 1 loop
13:13:49
start mi1 range(p) 2 loop
13:13:49
finish mi1 range(p) 2 loop
13:13:49
start mi1 range(NT) loop
13:13:49
finish mi1 range(NT) loop
13:13:49
start mi1 range(n) loop
13:13:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:13:49
start mi1 range(n) 2loop
13:13:49
finish mi1 range(n) 2loop
13:13:49
[[-2.88118688]]
end mi1 loop
13:13:49
estep
13:13:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:14:05
start ppi1
13:14:05
start mi0
13:14:05
start mi0 range(p) 1 loop
13:14:05
finish mi0 range(p) 1 loop
13:14:06
start mi0 range(p) 2 loop
13:14:06
finish mi0 range(p) 2 loop
13:14:06
start mi0 range(NT) loop
13:14:06
finish mi0 range(NT) loop
13:14:06
start mi0 range(n) loop
13:14:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:14:06
start mi0 range(n) 2loop
13:14:06
finish mi0 range(n) 2loop
13:14:06
start mi1
13:14:06
start mi1 range(p) 1 loop
13:14:06
finish mi1 range(p) 1 loop
13:14:06
start mi1 range(p) 2 loop
13:14:06
finish mi1 range(p) 2 loop
13:14:06
start mi1 range(NT) loop
13:14:06
finish mi1 range(NT) loop
13:14:06
start mi1 range(n) loop
13:14:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:14:06
start mi1 range(n) 2loop
13:14:06
finish mi1 range(n) 2loop
13:14:06
[[-2.9437045]]
end mi1 loop
13:14:06
estep
13:14:06
end estep
13:14:22
end pa13:14:22
goodness of fit correlation [0.21179029]
start cluster 13:14:22
47
parallel submitted
13:14:47
parallel finished
13:20:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:21:04
start mi0
13:21:04
start mi0 range(p) 1 loop
13:21:04
finish mi0 range(p) 1 loop
13:21:04
start mi0 range(p) 2 loop
13:21:04
finish mi0 range(p) 2 loop
13:21:04
start mi0 range(NT) loop
13:21:04
finish mi0 range(NT) loop
13:21:04
start mi0 range(n) loop
13:21:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:21:04
start mi0 range(n) 2loop
13:21:04
finish mi0 range(n) 2loop
13:21:04
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:21:04
start mi1 range(p) 1 loop
13:21:04
finish mi1 range(p) 1 loop
13:21:04
start mi1 range(p) 2 loop
13:21:04
finish mi1 range(p) 2 loop
13:21:04
start mi1 range(NT) loop
13:21:04
finish mi1 range(NT) loop
13:21:04
start mi1 range(n) loop
13:21:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:21:04
start mi1 range(n) 2loop
13:21:04
finish mi1 range(n) 2loop
13:21:04
[[-2.93013601]]
end mi1 loop
13:21:04
estep
13:21:04
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:21:21
start ppi1
13:21:21
start mi0
13:21:21
start mi0 range(p) 1 loop
13:21:21
finish mi0 range(p) 1 loop
13:21:21
start mi0 range(p) 2 loop
13:21:21
finish mi0 range(p) 2 loop
13:21:21
start mi0 range(NT) loop
13:21:21
finish mi0 range(NT) loop
13:21:21
start mi0 range(n) loop
13:21:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:21:21
start mi0 range(n) 2loop
13:21:21
finish mi0 range(n) 2loop
13:21:21
[[-2.99260395]]
end mi0 loop
13:21:21
estep
13:21:21
end estep
13:21:38
end pa13:21:38
goodness of fit correlation [0.21102304]
start cluster 13:21:38
48
parallel submitted
13:22:01
parallel finished
13:27:06
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:27:21
start mi0
13:27:21
start mi0 range(p) 1 loop
13:27:21
finish mi0 range(p) 1 loop
13:27:21
start mi0 range(p) 2 loop
13:27:21
finish mi0 range(p) 2 loop
13:27:21
start mi0 range(NT) loop
13:27:21
finish mi0 range(NT) loop
13:27:21
start mi0 range(n) loop
13:27:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:27:21
start mi0 range(n) 2loop
13:27:21
finish mi0 range(n) 2loop
13:27:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:27:21
start mi1 range(p) 1 loop
13:27:21
finish mi1 range(p) 1 loop
13:27:21
start mi1 range(p) 2 loop
13:27:21
finish mi1 range(p) 2 loop
13:27:21
start mi1 range(NT) loop
13:27:22
finish mi1 range(NT) loop
13:27:22
start mi1 range(n) loop
13:27:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:27:22
start mi1 range(n) 2loop
13:27:22
finish mi1 range(n) 2loop
13:27:22
[[-2.92937803]]
end mi1 loop
13:27:22
estep
13:27:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:27:39
start ppi1
13:27:39
start mi0
13:27:39
start mi0 range(p) 1 loop
13:27:39
finish mi0 range(p) 1 loop
13:27:39
start mi0 range(p) 2 loop
13:27:39
finish mi0 range(p) 2 loop
13:27:39
start mi0 range(NT) loop
13:27:39
finish mi0 range(NT) loop
13:27:39
start mi0 range(n) loop
13:27:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:27:39
start mi0 range(n) 2loop
13:27:39
finish mi0 range(n) 2loop
13:27:39
[[-2.99184021]]
end mi0 loop
13:27:39
estep
13:27:39
end estep
13:27:55
end pa13:27:55
goodness of fit correlation [0.25017127]
start cluster 13:27:55
49
parallel submitted
13:28:19
parallel finished
13:34:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:34:39
start mi0
13:34:39
start mi0 range(p) 1 loop
13:34:39
finish mi0 range(p) 1 loop
13:34:39
start mi0 range(p) 2 loop
13:34:39
finish mi0 range(p) 2 loop
13:34:39
start mi0 range(NT) loop
13:34:39
finish mi0 range(NT) loop
13:34:39
start mi0 range(n) loop
13:34:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:34:39
start mi0 range(n) 2loop
13:34:39
finish mi0 range(n) 2loop
13:34:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:34:39
start mi1 range(p) 1 loop
13:34:39
finish mi1 range(p) 1 loop
13:34:39
start mi1 range(p) 2 loop
13:34:39
finish mi1 range(p) 2 loop
13:34:39
start mi1 range(NT) loop
13:34:39
finish mi1 range(NT) loop
13:34:39
start mi1 range(n) loop
13:34:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:34:39
start mi1 range(n) 2loop
13:34:39
finish mi1 range(n) 2loop
13:34:40
[[-2.9278357]]
end mi1 loop
13:34:40
estep
13:34:40
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:34:56
start ppi1
13:34:56
start mi0
13:34:56
start mi0 range(p) 1 loop
13:34:56
finish mi0 range(p) 1 loop
13:34:56
start mi0 range(p) 2 loop
13:34:56
finish mi0 range(p) 2 loop
13:34:56
start mi0 range(NT) loop
13:34:56
finish mi0 range(NT) loop
13:34:56
start mi0 range(n) loop
13:34:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:34:56
start mi0 range(n) 2loop
13:34:56
finish mi0 range(n) 2loop
13:34:57
[[-2.99028439]]
end mi0 loop
13:34:57
estep
13:34:57
end estep
13:35:13
end pa13:35:13
goodness of fit correlation [0.18034894]
start cluster 13:35:13
50
parallel submitted
13:35:40
parallel finished
13:40:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:41:15
start mi0
13:41:15
start mi0 range(p) 1 loop
13:41:15
finish mi0 range(p) 1 loop
13:41:15
start mi0 range(p) 2 loop
13:41:15
finish mi0 range(p) 2 loop
13:41:15
start mi0 range(NT) loop
13:41:15
finish mi0 range(NT) loop
13:41:15
start mi0 range(n) loop
13:41:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:41:15
start mi0 range(n) 2loop
13:41:15
finish mi0 range(n) 2loop
13:41:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:41:15
start mi1 range(p) 1 loop
13:41:15
finish mi1 range(p) 1 loop
13:41:15
start mi1 range(p) 2 loop
13:41:15
finish mi1 range(p) 2 loop
13:41:15
start mi1 range(NT) loop
13:41:15
finish mi1 range(NT) loop
13:41:15
start mi1 range(n) loop
13:41:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:41:15
start mi1 range(n) 2loop
13:41:15
finish mi1 range(n) 2loop
13:41:15
[[-2.89888791]]
end mi1 loop
13:41:15
estep
13:41:15
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:41:32
start ppi1
13:41:32
start mi0
13:41:32
start mi0 range(p) 1 loop
13:41:32
finish mi0 range(p) 1 loop
13:41:32
start mi0 range(p) 2 loop
13:41:32
finish mi0 range(p) 2 loop
13:41:32
start mi0 range(NT) loop
13:41:32
finish mi0 range(NT) loop
13:41:32
start mi0 range(n) loop
13:41:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:41:32
start mi0 range(n) 2loop
13:41:32
finish mi0 range(n) 2loop
13:41:32
start mi1
13:41:32
start mi1 range(p) 1 loop
13:41:32
finish mi1 range(p) 1 loop
13:41:32
start mi1 range(p) 2 loop
13:41:32
finish mi1 range(p) 2 loop
13:41:32
start mi1 range(NT) loop
13:41:32
finish mi1 range(NT) loop
13:41:32
start mi1 range(n) loop
13:41:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:41:33
start mi1 range(n) 2loop
13:41:33
finish mi1 range(n) 2loop
13:41:33
[[-2.96139361]]
end mi1 loop
13:41:33
estep
13:41:33
end estep
13:41:49
end pa13:41:49
goodness of fit correlation [0.21271888]
start cluster 13:41:49
51
parallel submitted
13:42:13
parallel finished
13:46:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:47:15
start mi0
13:47:15
start mi0 range(p) 1 loop
13:47:15
finish mi0 range(p) 1 loop
13:47:15
start mi0 range(p) 2 loop
13:47:15
finish mi0 range(p) 2 loop
13:47:15
start mi0 range(NT) loop
13:47:15
finish mi0 range(NT) loop
13:47:16
start mi0 range(n) loop
13:47:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:47:16
start mi0 range(n) 2loop
13:47:16
finish mi0 range(n) 2loop
13:47:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:47:16
start mi1 range(p) 1 loop
13:47:16
finish mi1 range(p) 1 loop
13:47:16
start mi1 range(p) 2 loop
13:47:16
finish mi1 range(p) 2 loop
13:47:16
start mi1 range(NT) loop
13:47:16
finish mi1 range(NT) loop
13:47:16
start mi1 range(n) loop
13:47:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:47:16
start mi1 range(n) 2loop
13:47:16
finish mi1 range(n) 2loop
13:47:16
[[-2.93899971]]
end mi1 loop
13:47:16
estep
13:47:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:47:34
start ppi1
13:47:34
start mi0
13:47:34
start mi0 range(p) 1 loop
13:47:34
finish mi0 range(p) 1 loop
13:47:34
start mi0 range(p) 2 loop
13:47:34
finish mi0 range(p) 2 loop
13:47:34
start mi0 range(NT) loop
13:47:34
finish mi0 range(NT) loop
13:47:34
start mi0 range(n) loop
13:47:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:47:34
start mi0 range(n) 2loop
13:47:34
finish mi0 range(n) 2loop
13:47:34
[[-3.00149243]]
end mi0 loop
13:47:34
estep
13:47:34
end estep
13:47:51
end pa13:47:51
goodness of fit correlation [0.2340773]
start cluster 13:47:51
52
parallel submitted
13:48:15
parallel finished
13:53:10
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
slurmstepd: error: *** JOB 1825835 ON nodeb24 CANCELLED AT 2020-11-06T13:53:19 ***
