8
subject 1010_01_MR
start cluster 09:36:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34821 instead
  warnings.warn(
0
parallel submitted
09:36:33
parallel finished
09:39:33
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:39:36
start mi0
09:39:36
start mi0 range(p) 1 loop
09:39:36
finish mi0 range(p) 1 loop
09:39:36
start mi0 range(p) 2 loop
09:39:36
finish mi0 range(p) 2 loop
09:39:36
start mi0 range(NT) loop
09:39:36
finish mi0 range(NT) loop
09:39:36
start mi0 range(n) loop
09:39:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:39:36
start mi0 range(n) 2loop
09:39:36
finish mi0 range(n) 2loop
09:39:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:39:37
start mi1 range(p) 1 loop
09:39:37
finish mi1 range(p) 1 loop
09:39:37
start mi1 range(p) 2 loop
09:39:37
finish mi1 range(p) 2 loop
09:39:37
start mi1 range(NT) loop
09:39:37
finish mi1 range(NT) loop
09:39:37
start mi1 range(n) loop
09:39:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:39:37
start mi1 range(n) 2loop
09:39:37
finish mi1 range(n) 2loop
09:39:37
start mi2
09:39:37
start mi2 range(p) 1 loop
09:39:37
finish mi2 range(p) 1 loop
09:39:37
start mi2 range(p) 2 loop
09:39:37
finish mi2 range(p) 2 loop
09:39:37
start mi2 range(NT) loop
09:39:37
finish mi2 range(NT) loop
09:39:37
start mi2 range(n) loop
09:39:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:39:37
start mi2 range(n) 2loop
09:39:37
finish mi2 range(n) 2loop
09:39:37
start mi3
09:39:37
start mi3 range(p) 1 loop
09:39:37
finish mi3 range(p) 1 loop
09:39:37
start mi3 range(p) 2 loop
09:39:37
finish mi3 range(p) 2 loop
09:39:37
start mi3 range(NT) loop
09:39:37
finish mi3 range(NT) loop
09:39:37
start mi3 range(n) loop
09:39:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:39:37
start mi3 range(n) 2loop
09:39:37
finish mi3 range(n) 2loop
09:39:37
[[-2.47811158]]
end mi3 loop
09:39:37
estep
09:39:37
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:39:52
start ppi1
09:39:52
start mi0
09:39:52
start mi0 range(p) 1 loop
09:39:52
finish mi0 range(p) 1 loop
09:39:52
start mi0 range(p) 2 loop
09:39:52
finish mi0 range(p) 2 loop
09:39:52
start mi0 range(NT) loop
09:39:52
finish mi0 range(NT) loop
09:39:52
start mi0 range(n) loop
09:39:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:39:52
start mi0 range(n) 2loop
09:39:52
finish mi0 range(n) 2loop
09:39:52
start mi1
09:39:52
start mi1 range(p) 1 loop
09:39:52
finish mi1 range(p) 1 loop
09:39:52
start mi1 range(p) 2 loop
09:39:52
finish mi1 range(p) 2 loop
09:39:52
start mi1 range(NT) loop
09:39:52
finish mi1 range(NT) loop
09:39:52
start mi1 range(n) loop
09:39:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:39:52
start mi1 range(n) 2loop
09:39:52
finish mi1 range(n) 2loop
09:39:52
start mi2
09:39:52
start mi2 range(p) 1 loop
09:39:52
finish mi2 range(p) 1 loop
09:39:52
start mi2 range(p) 2 loop
09:39:52
finish mi2 range(p) 2 loop
09:39:52
start mi2 range(NT) loop
09:39:52
finish mi2 range(NT) loop
09:39:52
start mi2 range(n) loop
09:39:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:39:53
start mi2 range(n) 2loop
09:39:53
finish mi2 range(n) 2loop
09:39:53
start mi3
09:39:53
start mi3 range(p) 1 loop
09:39:53
finish mi3 range(p) 1 loop
09:39:53
start mi3 range(p) 2 loop
09:39:53
finish mi3 range(p) 2 loop
09:39:53
start mi3 range(NT) loop
09:39:53
finish mi3 range(NT) loop
09:39:53
start mi3 range(n) loop
09:39:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:39:53
start mi3 range(n) 2loop
09:39:53
finish mi3 range(n) 2loop
09:39:53
[[-2.47811158]]
end mi3 loop
09:39:53
estep
09:39:53
end estep
09:40:08
end pa09:40:08
goodness of fit correlation [0.04679433]
start cluster 09:40:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 32984 instead
  warnings.warn(
1
parallel submitted
09:40:25
parallel finished
09:45:54
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:45:56
start mi0
09:45:56
start mi0 range(p) 1 loop
09:45:56
finish mi0 range(p) 1 loop
09:45:56
start mi0 range(p) 2 loop
09:45:56
finish mi0 range(p) 2 loop
09:45:56
start mi0 range(NT) loop
09:45:56
finish mi0 range(NT) loop
09:45:56
start mi0 range(n) loop
09:45:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:45:56
start mi0 range(n) 2loop
09:45:56
finish mi0 range(n) 2loop
09:45:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:45:57
start mi1 range(p) 1 loop
09:45:57
finish mi1 range(p) 1 loop
09:45:57
start mi1 range(p) 2 loop
09:45:57
finish mi1 range(p) 2 loop
09:45:57
start mi1 range(NT) loop
09:45:57
finish mi1 range(NT) loop
09:45:57
start mi1 range(n) loop
09:45:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:45:57
start mi1 range(n) 2loop
09:45:57
finish mi1 range(n) 2loop
09:45:57
start mi2
09:45:57
start mi2 range(p) 1 loop
09:45:57
finish mi2 range(p) 1 loop
09:45:57
start mi2 range(p) 2 loop
09:45:57
finish mi2 range(p) 2 loop
09:45:57
start mi2 range(NT) loop
09:45:57
finish mi2 range(NT) loop
09:45:57
start mi2 range(n) loop
09:45:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:45:57
start mi2 range(n) 2loop
09:45:57
finish mi2 range(n) 2loop
09:45:57
start mi3
09:45:57
start mi3 range(p) 1 loop
09:45:57
finish mi3 range(p) 1 loop
09:45:57
start mi3 range(p) 2 loop
09:45:57
finish mi3 range(p) 2 loop
09:45:57
start mi3 range(NT) loop
09:45:57
finish mi3 range(NT) loop
09:45:57
start mi3 range(n) loop
09:45:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:45:57
start mi3 range(n) 2loop
09:45:57
finish mi3 range(n) 2loop
09:45:57
[[-2.48520277]]
end mi3 loop
09:45:57
estep
09:45:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:46:11
start ppi1
09:46:12
start mi0
09:46:12
start mi0 range(p) 1 loop
09:46:12
finish mi0 range(p) 1 loop
09:46:12
start mi0 range(p) 2 loop
09:46:12
finish mi0 range(p) 2 loop
09:46:12
start mi0 range(NT) loop
09:46:12
finish mi0 range(NT) loop
09:46:12
start mi0 range(n) loop
09:46:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:46:12
start mi0 range(n) 2loop
09:46:12
finish mi0 range(n) 2loop
09:46:12
start mi1
09:46:12
start mi1 range(p) 1 loop
09:46:12
finish mi1 range(p) 1 loop
09:46:12
start mi1 range(p) 2 loop
09:46:12
finish mi1 range(p) 2 loop
09:46:12
start mi1 range(NT) loop
09:46:12
finish mi1 range(NT) loop
09:46:12
start mi1 range(n) loop
09:46:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:46:12
start mi1 range(n) 2loop
09:46:12
finish mi1 range(n) 2loop
09:46:12
start mi2
09:46:12
start mi2 range(p) 1 loop
09:46:12
finish mi2 range(p) 1 loop
09:46:12
start mi2 range(p) 2 loop
09:46:12
finish mi2 range(p) 2 loop
09:46:12
start mi2 range(NT) loop
09:46:12
finish mi2 range(NT) loop
09:46:12
start mi2 range(n) loop
09:46:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:46:12
start mi2 range(n) 2loop
09:46:12
finish mi2 range(n) 2loop
09:46:12
[[-2.54767121]]
end mi2 loop
09:46:12
estep
09:46:12
end estep
09:46:26
end pa09:46:26
goodness of fit correlation [0.06207772]
start cluster 09:46:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45589 instead
  warnings.warn(
2
parallel submitted
09:46:42
parallel finished
09:53:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:53:48
start mi0
09:53:48
start mi0 range(p) 1 loop
09:53:48
finish mi0 range(p) 1 loop
09:53:48
start mi0 range(p) 2 loop
09:53:48
finish mi0 range(p) 2 loop
09:53:48
start mi0 range(NT) loop
09:53:48
finish mi0 range(NT) loop
09:53:48
start mi0 range(n) loop
09:53:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:53:48
start mi0 range(n) 2loop
09:53:48
finish mi0 range(n) 2loop
09:53:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:53:48
start mi1 range(p) 1 loop
09:53:48
finish mi1 range(p) 1 loop
09:53:48
start mi1 range(p) 2 loop
09:53:48
finish mi1 range(p) 2 loop
09:53:48
start mi1 range(NT) loop
09:53:48
finish mi1 range(NT) loop
09:53:48
start mi1 range(n) loop
09:53:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:53:48
start mi1 range(n) 2loop
09:53:48
finish mi1 range(n) 2loop
09:53:48
start mi2
09:53:48
start mi2 range(p) 1 loop
09:53:48
finish mi2 range(p) 1 loop
09:53:48
start mi2 range(p) 2 loop
09:53:48
finish mi2 range(p) 2 loop
09:53:48
start mi2 range(NT) loop
09:53:48
finish mi2 range(NT) loop
09:53:48
start mi2 range(n) loop
09:53:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:53:48
start mi2 range(n) 2loop
09:53:48
finish mi2 range(n) 2loop
09:53:48
[[-2.52782063]]
end mi2 loop
09:53:48
estep
09:53:48
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:54:04
start ppi1
09:54:04
start mi0
09:54:04
start mi0 range(p) 1 loop
09:54:04
finish mi0 range(p) 1 loop
09:54:04
start mi0 range(p) 2 loop
09:54:04
finish mi0 range(p) 2 loop
09:54:04
start mi0 range(NT) loop
09:54:04
finish mi0 range(NT) loop
09:54:04
start mi0 range(n) loop
09:54:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:54:04
start mi0 range(n) 2loop
09:54:04
finish mi0 range(n) 2loop
09:54:04
start mi1
09:54:04
start mi1 range(p) 1 loop
09:54:04
finish mi1 range(p) 1 loop
09:54:04
start mi1 range(p) 2 loop
09:54:04
finish mi1 range(p) 2 loop
09:54:04
start mi1 range(NT) loop
09:54:04
finish mi1 range(NT) loop
09:54:04
start mi1 range(n) loop
09:54:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:54:04
start mi1 range(n) 2loop
09:54:04
finish mi1 range(n) 2loop
09:54:04
start mi2
09:54:05
start mi2 range(p) 1 loop
09:54:05
finish mi2 range(p) 1 loop
09:54:05
start mi2 range(p) 2 loop
09:54:05
finish mi2 range(p) 2 loop
09:54:05
start mi2 range(NT) loop
09:54:05
finish mi2 range(NT) loop
09:54:05
start mi2 range(n) loop
09:54:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:54:05
start mi2 range(n) 2loop
09:54:05
finish mi2 range(n) 2loop
09:54:05
[[-2.59033641]]
end mi2 loop
09:54:05
estep
09:54:05
end estep
09:54:20
end pa09:54:20
goodness of fit correlation [0.11410001]
start cluster 09:54:20
3
parallel submitted
09:54:36
parallel finished
10:00:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:00:52
start mi0
10:00:52
start mi0 range(p) 1 loop
10:00:52
finish mi0 range(p) 1 loop
10:00:52
start mi0 range(p) 2 loop
10:00:52
finish mi0 range(p) 2 loop
10:00:52
start mi0 range(NT) loop
10:00:52
finish mi0 range(NT) loop
10:00:52
start mi0 range(n) loop
10:00:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:00:52
start mi0 range(n) 2loop
10:00:52
finish mi0 range(n) 2loop
10:00:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:00:52
start mi1 range(p) 1 loop
10:00:52
finish mi1 range(p) 1 loop
10:00:52
start mi1 range(p) 2 loop
10:00:52
finish mi1 range(p) 2 loop
10:00:52
start mi1 range(NT) loop
10:00:52
finish mi1 range(NT) loop
10:00:52
start mi1 range(n) loop
10:00:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:00:53
start mi1 range(n) 2loop
10:00:53
finish mi1 range(n) 2loop
10:00:53
start mi2
10:00:53
start mi2 range(p) 1 loop
10:00:53
finish mi2 range(p) 1 loop
10:00:53
start mi2 range(p) 2 loop
10:00:53
finish mi2 range(p) 2 loop
10:00:53
start mi2 range(NT) loop
10:00:53
finish mi2 range(NT) loop
10:00:53
start mi2 range(n) loop
10:00:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:00:53
start mi2 range(n) 2loop
10:00:53
finish mi2 range(n) 2loop
10:00:53
[[-2.54043871]]
end mi2 loop
10:00:53
estep
10:00:53
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:01:08
start ppi1
10:01:08
start mi0
10:01:08
start mi0 range(p) 1 loop
10:01:08
finish mi0 range(p) 1 loop
10:01:08
start mi0 range(p) 2 loop
10:01:08
finish mi0 range(p) 2 loop
10:01:08
start mi0 range(NT) loop
10:01:09
finish mi0 range(NT) loop
10:01:09
start mi0 range(n) loop
10:01:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:01:09
start mi0 range(n) 2loop
10:01:09
finish mi0 range(n) 2loop
10:01:09
start mi1
10:01:09
start mi1 range(p) 1 loop
10:01:09
finish mi1 range(p) 1 loop
10:01:09
start mi1 range(p) 2 loop
10:01:09
finish mi1 range(p) 2 loop
10:01:09
start mi1 range(NT) loop
10:01:09
finish mi1 range(NT) loop
10:01:09
start mi1 range(n) loop
10:01:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:01:09
start mi1 range(n) 2loop
10:01:09
finish mi1 range(n) 2loop
10:01:09
start mi2
10:01:09
start mi2 range(p) 1 loop
10:01:09
finish mi2 range(p) 1 loop
10:01:09
start mi2 range(p) 2 loop
10:01:09
finish mi2 range(p) 2 loop
10:01:09
start mi2 range(NT) loop
10:01:09
finish mi2 range(NT) loop
10:01:09
start mi2 range(n) loop
10:01:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:01:09
start mi2 range(n) 2loop
10:01:09
finish mi2 range(n) 2loop
10:01:09
[[-2.60294989]]
end mi2 loop
10:01:09
estep
10:01:09
end estep
10:01:25
end pa10:01:25
goodness of fit correlation [0.16142742]
start cluster 10:01:25
4
parallel submitted
10:01:42
parallel finished
10:05:30
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:05:33
start mi0
10:05:33
start mi0 range(p) 1 loop
10:05:33
finish mi0 range(p) 1 loop
10:05:33
start mi0 range(p) 2 loop
10:05:33
finish mi0 range(p) 2 loop
10:05:33
start mi0 range(NT) loop
10:05:34
finish mi0 range(NT) loop
10:05:34
start mi0 range(n) loop
10:05:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:05:34
start mi0 range(n) 2loop
10:05:34
finish mi0 range(n) 2loop
10:05:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:05:34
start mi1 range(p) 1 loop
10:05:34
finish mi1 range(p) 1 loop
10:05:34
start mi1 range(p) 2 loop
10:05:34
finish mi1 range(p) 2 loop
10:05:34
start mi1 range(NT) loop
10:05:34
finish mi1 range(NT) loop
10:05:34
start mi1 range(n) loop
10:05:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:05:34
start mi1 range(n) 2loop
10:05:34
finish mi1 range(n) 2loop
10:05:34
start mi2
10:05:34
start mi2 range(p) 1 loop
10:05:34
finish mi2 range(p) 1 loop
10:05:34
start mi2 range(p) 2 loop
10:05:34
finish mi2 range(p) 2 loop
10:05:34
start mi2 range(NT) loop
10:05:34
finish mi2 range(NT) loop
10:05:34
start mi2 range(n) loop
10:05:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:05:34
start mi2 range(n) 2loop
10:05:34
finish mi2 range(n) 2loop
10:05:34
[[-2.54514295]]
end mi2 loop
10:05:34
estep
10:05:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:05:50
start ppi1
10:05:50
start mi0
10:05:50
start mi0 range(p) 1 loop
10:05:50
finish mi0 range(p) 1 loop
10:05:50
start mi0 range(p) 2 loop
10:05:50
finish mi0 range(p) 2 loop
10:05:50
start mi0 range(NT) loop
10:05:50
finish mi0 range(NT) loop
10:05:50
start mi0 range(n) loop
10:05:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:05:50
start mi0 range(n) 2loop
10:05:50
finish mi0 range(n) 2loop
10:05:50
start mi1
10:05:50
start mi1 range(p) 1 loop
10:05:50
finish mi1 range(p) 1 loop
10:05:50
start mi1 range(p) 2 loop
10:05:50
finish mi1 range(p) 2 loop
10:05:50
start mi1 range(NT) loop
10:05:50
finish mi1 range(NT) loop
10:05:50
start mi1 range(n) loop
10:05:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:05:50
start mi1 range(n) 2loop
10:05:50
finish mi1 range(n) 2loop
10:05:50
start mi2
10:05:50
start mi2 range(p) 1 loop
10:05:50
finish mi2 range(p) 1 loop
10:05:50
start mi2 range(p) 2 loop
10:05:50
finish mi2 range(p) 2 loop
10:05:50
start mi2 range(NT) loop
10:05:50
finish mi2 range(NT) loop
10:05:50
start mi2 range(n) loop
10:05:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:05:50
start mi2 range(n) 2loop
10:05:50
finish mi2 range(n) 2loop
10:05:51
[[-2.60765263]]
end mi2 loop
10:05:51
estep
10:05:51
end estep
10:06:06
end pa10:06:06
goodness of fit correlation [0.17799096]
start cluster 10:06:06
5
parallel submitted
10:06:23
parallel finished
10:13:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:14:01
start mi0
10:14:01
start mi0 range(p) 1 loop
10:14:01
finish mi0 range(p) 1 loop
10:14:01
start mi0 range(p) 2 loop
10:14:01
finish mi0 range(p) 2 loop
10:14:01
start mi0 range(NT) loop
10:14:01
finish mi0 range(NT) loop
10:14:01
start mi0 range(n) loop
10:14:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:14:01
start mi0 range(n) 2loop
10:14:01
finish mi0 range(n) 2loop
10:14:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:14:01
start mi1 range(p) 1 loop
10:14:01
finish mi1 range(p) 1 loop
10:14:01
start mi1 range(p) 2 loop
10:14:01
finish mi1 range(p) 2 loop
10:14:01
start mi1 range(NT) loop
10:14:01
finish mi1 range(NT) loop
10:14:01
start mi1 range(n) loop
10:14:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:14:01
start mi1 range(n) 2loop
10:14:01
finish mi1 range(n) 2loop
10:14:01
start mi2
10:14:01
start mi2 range(p) 1 loop
10:14:01
finish mi2 range(p) 1 loop
10:14:01
start mi2 range(p) 2 loop
10:14:01
finish mi2 range(p) 2 loop
10:14:01
start mi2 range(NT) loop
10:14:01
finish mi2 range(NT) loop
10:14:01
start mi2 range(n) loop
10:14:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:14:01
start mi2 range(n) 2loop
10:14:01
finish mi2 range(n) 2loop
10:14:01
[[-2.55510619]]
end mi2 loop
10:14:01
estep
10:14:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:14:16
start ppi1
10:14:16
start mi0
10:14:16
start mi0 range(p) 1 loop
10:14:16
finish mi0 range(p) 1 loop
10:14:16
start mi0 range(p) 2 loop
10:14:16
finish mi0 range(p) 2 loop
10:14:16
start mi0 range(NT) loop
10:14:16
finish mi0 range(NT) loop
10:14:16
start mi0 range(n) loop
10:14:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:14:16
start mi0 range(n) 2loop
10:14:16
finish mi0 range(n) 2loop
10:14:16
start mi1
10:14:16
start mi1 range(p) 1 loop
10:14:16
finish mi1 range(p) 1 loop
10:14:16
start mi1 range(p) 2 loop
10:14:16
finish mi1 range(p) 2 loop
10:14:16
start mi1 range(NT) loop
10:14:16
finish mi1 range(NT) loop
10:14:16
start mi1 range(n) loop
10:14:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:14:17
start mi1 range(n) 2loop
10:14:17
finish mi1 range(n) 2loop
10:14:17
start mi2
10:14:17
start mi2 range(p) 1 loop
10:14:17
finish mi2 range(p) 1 loop
10:14:17
start mi2 range(p) 2 loop
10:14:17
finish mi2 range(p) 2 loop
10:14:17
start mi2 range(NT) loop
10:14:17
finish mi2 range(NT) loop
10:14:17
start mi2 range(n) loop
10:14:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:14:17
start mi2 range(n) 2loop
10:14:17
finish mi2 range(n) 2loop
10:14:17
[[-2.61761303]]
end mi2 loop
10:14:17
estep
10:14:17
end estep
10:14:33
end pa10:14:33
goodness of fit correlation [0.17253645]
start cluster 10:14:33
6
parallel submitted
10:14:50
parallel finished
10:21:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:21:56
start mi0
10:21:56
start mi0 range(p) 1 loop
10:21:56
finish mi0 range(p) 1 loop
10:21:56
start mi0 range(p) 2 loop
10:21:56
finish mi0 range(p) 2 loop
10:21:56
start mi0 range(NT) loop
10:21:56
finish mi0 range(NT) loop
10:21:56
start mi0 range(n) loop
10:21:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:21:56
start mi0 range(n) 2loop
10:21:56
finish mi0 range(n) 2loop
10:21:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:21:56
start mi1 range(p) 1 loop
10:21:56
finish mi1 range(p) 1 loop
10:21:56
start mi1 range(p) 2 loop
10:21:56
finish mi1 range(p) 2 loop
10:21:56
start mi1 range(NT) loop
10:21:56
finish mi1 range(NT) loop
10:21:56
start mi1 range(n) loop
10:21:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:21:56
start mi1 range(n) 2loop
10:21:56
finish mi1 range(n) 2loop
10:21:56
start mi2
10:21:56
start mi2 range(p) 1 loop
10:21:56
finish mi2 range(p) 1 loop
10:21:56
start mi2 range(p) 2 loop
10:21:56
finish mi2 range(p) 2 loop
10:21:56
start mi2 range(NT) loop
10:21:56
finish mi2 range(NT) loop
10:21:56
start mi2 range(n) loop
10:21:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:21:57
start mi2 range(n) 2loop
10:21:57
finish mi2 range(n) 2loop
10:21:57
[[-2.59454197]]
end mi2 loop
10:21:57
estep
10:21:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:22:12
start ppi1
10:22:12
start mi0
10:22:12
start mi0 range(p) 1 loop
10:22:12
finish mi0 range(p) 1 loop
10:22:12
start mi0 range(p) 2 loop
10:22:12
finish mi0 range(p) 2 loop
10:22:12
start mi0 range(NT) loop
10:22:12
finish mi0 range(NT) loop
10:22:12
start mi0 range(n) loop
10:22:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:22:12
start mi0 range(n) 2loop
10:22:12
finish mi0 range(n) 2loop
10:22:12
start mi1
10:22:12
start mi1 range(p) 1 loop
10:22:12
finish mi1 range(p) 1 loop
10:22:12
start mi1 range(p) 2 loop
10:22:12
finish mi1 range(p) 2 loop
10:22:12
start mi1 range(NT) loop
10:22:12
finish mi1 range(NT) loop
10:22:12
start mi1 range(n) loop
10:22:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:22:12
start mi1 range(n) 2loop
10:22:12
finish mi1 range(n) 2loop
10:22:13
start mi2
10:22:13
start mi2 range(p) 1 loop
10:22:13
finish mi2 range(p) 1 loop
10:22:13
start mi2 range(p) 2 loop
10:22:13
finish mi2 range(p) 2 loop
10:22:13
start mi2 range(NT) loop
10:22:13
finish mi2 range(NT) loop
10:22:13
start mi2 range(n) loop
10:22:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:22:13
start mi2 range(n) 2loop
10:22:13
finish mi2 range(n) 2loop
10:22:13
[[-2.65704108]]
end mi2 loop
10:22:13
estep
10:22:13
end estep
10:22:29
end pa10:22:29
goodness of fit correlation [0.17002733]
start cluster 10:22:29
7
parallel submitted
10:22:46
parallel finished
10:26:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:26:46
start mi0
10:26:46
start mi0 range(p) 1 loop
10:26:46
finish mi0 range(p) 1 loop
10:26:46
start mi0 range(p) 2 loop
10:26:46
finish mi0 range(p) 2 loop
10:26:46
start mi0 range(NT) loop
10:26:46
finish mi0 range(NT) loop
10:26:46
start mi0 range(n) loop
10:26:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:26:46
start mi0 range(n) 2loop
10:26:46
finish mi0 range(n) 2loop
10:26:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:26:47
start mi1 range(p) 1 loop
10:26:47
finish mi1 range(p) 1 loop
10:26:47
start mi1 range(p) 2 loop
10:26:47
finish mi1 range(p) 2 loop
10:26:47
start mi1 range(NT) loop
10:26:47
finish mi1 range(NT) loop
10:26:47
start mi1 range(n) loop
10:26:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:26:47
start mi1 range(n) 2loop
10:26:47
finish mi1 range(n) 2loop
10:26:47
start mi2
10:26:47
start mi2 range(p) 1 loop
10:26:47
finish mi2 range(p) 1 loop
10:26:47
start mi2 range(p) 2 loop
10:26:47
finish mi2 range(p) 2 loop
10:26:47
start mi2 range(NT) loop
10:26:47
finish mi2 range(NT) loop
10:26:47
start mi2 range(n) loop
10:26:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:26:47
start mi2 range(n) 2loop
10:26:47
finish mi2 range(n) 2loop
10:26:47
[[-2.60112908]]
end mi2 loop
10:26:47
estep
10:26:47
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:27:03
start ppi1
10:27:03
start mi0
10:27:03
start mi0 range(p) 1 loop
10:27:03
finish mi0 range(p) 1 loop
10:27:03
start mi0 range(p) 2 loop
10:27:03
finish mi0 range(p) 2 loop
10:27:03
start mi0 range(NT) loop
10:27:03
finish mi0 range(NT) loop
10:27:03
start mi0 range(n) loop
10:27:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:27:03
start mi0 range(n) 2loop
10:27:03
finish mi0 range(n) 2loop
10:27:03
start mi1
10:27:03
start mi1 range(p) 1 loop
10:27:03
finish mi1 range(p) 1 loop
10:27:03
start mi1 range(p) 2 loop
10:27:03
finish mi1 range(p) 2 loop
10:27:03
start mi1 range(NT) loop
10:27:03
finish mi1 range(NT) loop
10:27:03
start mi1 range(n) loop
10:27:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:27:03
start mi1 range(n) 2loop
10:27:03
finish mi1 range(n) 2loop
10:27:03
start mi2
10:27:03
start mi2 range(p) 1 loop
10:27:03
finish mi2 range(p) 1 loop
10:27:03
start mi2 range(p) 2 loop
10:27:03
finish mi2 range(p) 2 loop
10:27:03
start mi2 range(NT) loop
10:27:03
finish mi2 range(NT) loop
10:27:03
start mi2 range(n) loop
10:27:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:27:03
start mi2 range(n) 2loop
10:27:03
finish mi2 range(n) 2loop
10:27:04
[[-2.66362732]]
end mi2 loop
10:27:04
estep
10:27:04
end estep
10:27:19
end pa10:27:19
goodness of fit correlation [0.18892958]
start cluster 10:27:19
8
parallel submitted
10:27:37
parallel finished
10:30:54
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:31:00
start mi0
10:31:00
start mi0 range(p) 1 loop
10:31:00
finish mi0 range(p) 1 loop
10:31:00
start mi0 range(p) 2 loop
10:31:00
finish mi0 range(p) 2 loop
10:31:00
start mi0 range(NT) loop
10:31:00
finish mi0 range(NT) loop
10:31:00
start mi0 range(n) loop
10:31:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:31:00
start mi0 range(n) 2loop
10:31:00
finish mi0 range(n) 2loop
10:31:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:31:00
start mi1 range(p) 1 loop
10:31:00
finish mi1 range(p) 1 loop
10:31:00
start mi1 range(p) 2 loop
10:31:00
finish mi1 range(p) 2 loop
10:31:00
start mi1 range(NT) loop
10:31:00
finish mi1 range(NT) loop
10:31:00
start mi1 range(n) loop
10:31:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:31:00
start mi1 range(n) 2loop
10:31:00
finish mi1 range(n) 2loop
10:31:00
start mi2
10:31:00
start mi2 range(p) 1 loop
10:31:00
finish mi2 range(p) 1 loop
10:31:00
start mi2 range(p) 2 loop
10:31:00
finish mi2 range(p) 2 loop
10:31:00
start mi2 range(NT) loop
10:31:00
finish mi2 range(NT) loop
10:31:00
start mi2 range(n) loop
10:31:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:31:01
start mi2 range(n) 2loop
10:31:01
finish mi2 range(n) 2loop
10:31:01
[[-2.61907293]]
end mi2 loop
10:31:01
estep
10:31:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:31:16
start ppi1
10:31:16
start mi0
10:31:16
start mi0 range(p) 1 loop
10:31:16
finish mi0 range(p) 1 loop
10:31:16
start mi0 range(p) 2 loop
10:31:16
finish mi0 range(p) 2 loop
10:31:16
start mi0 range(NT) loop
10:31:17
finish mi0 range(NT) loop
10:31:17
start mi0 range(n) loop
10:31:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:31:17
start mi0 range(n) 2loop
10:31:17
finish mi0 range(n) 2loop
10:31:17
start mi1
10:31:17
start mi1 range(p) 1 loop
10:31:17
finish mi1 range(p) 1 loop
10:31:17
start mi1 range(p) 2 loop
10:31:17
finish mi1 range(p) 2 loop
10:31:17
start mi1 range(NT) loop
10:31:17
finish mi1 range(NT) loop
10:31:17
start mi1 range(n) loop
10:31:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:31:17
start mi1 range(n) 2loop
10:31:17
finish mi1 range(n) 2loop
10:31:17
start mi2
10:31:17
start mi2 range(p) 1 loop
10:31:17
finish mi2 range(p) 1 loop
10:31:17
start mi2 range(p) 2 loop
10:31:17
finish mi2 range(p) 2 loop
10:31:17
start mi2 range(NT) loop
10:31:17
finish mi2 range(NT) loop
10:31:17
start mi2 range(n) loop
10:31:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:31:17
start mi2 range(n) 2loop
10:31:17
finish mi2 range(n) 2loop
10:31:17
[[-2.68156927]]
end mi2 loop
10:31:17
estep
10:31:17
end estep
10:31:33
end pa10:31:33
goodness of fit correlation [0.24757395]
start cluster 10:31:33
9
parallel submitted
10:31:50
parallel finished
10:35:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:35:50
start mi0
10:35:50
start mi0 range(p) 1 loop
10:35:50
finish mi0 range(p) 1 loop
10:35:50
start mi0 range(p) 2 loop
10:35:50
finish mi0 range(p) 2 loop
10:35:50
start mi0 range(NT) loop
10:35:50
finish mi0 range(NT) loop
10:35:50
start mi0 range(n) loop
10:35:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:35:50
start mi0 range(n) 2loop
10:35:50
finish mi0 range(n) 2loop
10:35:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:35:50
start mi1 range(p) 1 loop
10:35:50
finish mi1 range(p) 1 loop
10:35:50
start mi1 range(p) 2 loop
10:35:50
finish mi1 range(p) 2 loop
10:35:50
start mi1 range(NT) loop
10:35:50
finish mi1 range(NT) loop
10:35:50
start mi1 range(n) loop
10:35:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:35:50
start mi1 range(n) 2loop
10:35:50
finish mi1 range(n) 2loop
10:35:50
start mi2
10:35:50
start mi2 range(p) 1 loop
10:35:50
finish mi2 range(p) 1 loop
10:35:50
start mi2 range(p) 2 loop
10:35:50
finish mi2 range(p) 2 loop
10:35:50
start mi2 range(NT) loop
10:35:50
finish mi2 range(NT) loop
10:35:50
start mi2 range(n) loop
10:35:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:35:50
start mi2 range(n) 2loop
10:35:50
finish mi2 range(n) 2loop
10:35:51
[[-2.63875059]]
end mi2 loop
10:35:51
estep
10:35:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:36:06
start ppi1
10:36:06
start mi0
10:36:06
start mi0 range(p) 1 loop
10:36:06
finish mi0 range(p) 1 loop
10:36:06
start mi0 range(p) 2 loop
10:36:06
finish mi0 range(p) 2 loop
10:36:06
start mi0 range(NT) loop
10:36:06
finish mi0 range(NT) loop
10:36:06
start mi0 range(n) loop
10:36:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:36:06
start mi0 range(n) 2loop
10:36:06
finish mi0 range(n) 2loop
10:36:07
start mi1
10:36:07
start mi1 range(p) 1 loop
10:36:07
finish mi1 range(p) 1 loop
10:36:07
start mi1 range(p) 2 loop
10:36:07
finish mi1 range(p) 2 loop
10:36:07
start mi1 range(NT) loop
10:36:07
finish mi1 range(NT) loop
10:36:07
start mi1 range(n) loop
10:36:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:36:07
start mi1 range(n) 2loop
10:36:07
finish mi1 range(n) 2loop
10:36:07
start mi2
10:36:07
start mi2 range(p) 1 loop
10:36:07
finish mi2 range(p) 1 loop
10:36:07
start mi2 range(p) 2 loop
10:36:07
finish mi2 range(p) 2 loop
10:36:07
start mi2 range(NT) loop
10:36:07
finish mi2 range(NT) loop
10:36:07
start mi2 range(n) loop
10:36:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:36:07
start mi2 range(n) 2loop
10:36:07
finish mi2 range(n) 2loop
10:36:07
[[-2.70124545]]
end mi2 loop
10:36:07
estep
10:36:07
end estep
10:36:22
end pa10:36:22
goodness of fit correlation [0.22598979]
start cluster 10:36:22
10
parallel submitted
10:36:38
parallel finished
10:40:43
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:40:49
start mi0
10:40:49
start mi0 range(p) 1 loop
10:40:49
finish mi0 range(p) 1 loop
10:40:49
start mi0 range(p) 2 loop
10:40:49
finish mi0 range(p) 2 loop
10:40:49
start mi0 range(NT) loop
10:40:49
finish mi0 range(NT) loop
10:40:49
start mi0 range(n) loop
10:40:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:40:49
start mi0 range(n) 2loop
10:40:49
finish mi0 range(n) 2loop
10:40:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:40:49
start mi1 range(p) 1 loop
10:40:49
finish mi1 range(p) 1 loop
10:40:49
start mi1 range(p) 2 loop
10:40:49
finish mi1 range(p) 2 loop
10:40:49
start mi1 range(NT) loop
10:40:49
finish mi1 range(NT) loop
10:40:49
start mi1 range(n) loop
10:40:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:40:49
start mi1 range(n) 2loop
10:40:49
finish mi1 range(n) 2loop
10:40:50
start mi2
10:40:50
start mi2 range(p) 1 loop
10:40:50
finish mi2 range(p) 1 loop
10:40:50
start mi2 range(p) 2 loop
10:40:50
finish mi2 range(p) 2 loop
10:40:50
start mi2 range(NT) loop
10:40:50
finish mi2 range(NT) loop
10:40:50
start mi2 range(n) loop
10:40:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:40:50
start mi2 range(n) 2loop
10:40:50
finish mi2 range(n) 2loop
10:40:50
[[-2.66531379]]
end mi2 loop
10:40:50
estep
10:40:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:41:06
start ppi1
10:41:06
start mi0
10:41:06
start mi0 range(p) 1 loop
10:41:06
finish mi0 range(p) 1 loop
10:41:06
start mi0 range(p) 2 loop
10:41:06
finish mi0 range(p) 2 loop
10:41:06
start mi0 range(NT) loop
10:41:06
finish mi0 range(NT) loop
10:41:06
start mi0 range(n) loop
10:41:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:41:06
start mi0 range(n) 2loop
10:41:06
finish mi0 range(n) 2loop
10:41:06
start mi1
10:41:06
start mi1 range(p) 1 loop
10:41:06
finish mi1 range(p) 1 loop
10:41:06
start mi1 range(p) 2 loop
10:41:06
finish mi1 range(p) 2 loop
10:41:06
start mi1 range(NT) loop
10:41:06
finish mi1 range(NT) loop
10:41:06
start mi1 range(n) loop
10:41:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:41:06
start mi1 range(n) 2loop
10:41:06
finish mi1 range(n) 2loop
10:41:06
start mi2
10:41:06
start mi2 range(p) 1 loop
10:41:06
finish mi2 range(p) 1 loop
10:41:06
start mi2 range(p) 2 loop
10:41:06
finish mi2 range(p) 2 loop
10:41:06
start mi2 range(NT) loop
10:41:06
finish mi2 range(NT) loop
10:41:06
start mi2 range(n) loop
10:41:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:41:06
start mi2 range(n) 2loop
10:41:06
finish mi2 range(n) 2loop
10:41:06
[[-2.72780736]]
end mi2 loop
10:41:07
estep
10:41:07
end estep
10:41:22
end pa10:41:22
goodness of fit correlation [0.23863334]
start cluster 10:41:22
11
parallel submitted
10:41:40
parallel finished
10:45:52
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:45:58
start mi0
10:45:58
start mi0 range(p) 1 loop
10:45:58
finish mi0 range(p) 1 loop
10:45:58
start mi0 range(p) 2 loop
10:45:58
finish mi0 range(p) 2 loop
10:45:58
start mi0 range(NT) loop
10:45:58
finish mi0 range(NT) loop
10:45:58
start mi0 range(n) loop
10:45:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:45:58
start mi0 range(n) 2loop
10:45:58
finish mi0 range(n) 2loop
10:45:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:45:58
start mi1 range(p) 1 loop
10:45:58
finish mi1 range(p) 1 loop
10:45:58
start mi1 range(p) 2 loop
10:45:58
finish mi1 range(p) 2 loop
10:45:58
start mi1 range(NT) loop
10:45:58
finish mi1 range(NT) loop
10:45:58
start mi1 range(n) loop
10:45:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:45:58
start mi1 range(n) 2loop
10:45:58
finish mi1 range(n) 2loop
10:45:58
start mi2
10:45:58
start mi2 range(p) 1 loop
10:45:58
finish mi2 range(p) 1 loop
10:45:58
start mi2 range(p) 2 loop
10:45:58
finish mi2 range(p) 2 loop
10:45:58
start mi2 range(NT) loop
10:45:58
finish mi2 range(NT) loop
10:45:58
start mi2 range(n) loop
10:45:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:45:58
start mi2 range(n) 2loop
10:45:58
finish mi2 range(n) 2loop
10:45:59
[[-2.67536207]]
end mi2 loop
10:45:59
estep
10:45:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:46:14
start ppi1
10:46:14
start mi0
10:46:14
start mi0 range(p) 1 loop
10:46:14
finish mi0 range(p) 1 loop
10:46:14
start mi0 range(p) 2 loop
10:46:14
finish mi0 range(p) 2 loop
10:46:14
start mi0 range(NT) loop
10:46:15
finish mi0 range(NT) loop
10:46:15
start mi0 range(n) loop
10:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:46:15
start mi0 range(n) 2loop
10:46:15
finish mi0 range(n) 2loop
10:46:15
start mi1
10:46:15
start mi1 range(p) 1 loop
10:46:15
finish mi1 range(p) 1 loop
10:46:15
start mi1 range(p) 2 loop
10:46:15
finish mi1 range(p) 2 loop
10:46:15
start mi1 range(NT) loop
10:46:15
finish mi1 range(NT) loop
10:46:15
start mi1 range(n) loop
10:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:46:15
start mi1 range(n) 2loop
10:46:15
finish mi1 range(n) 2loop
10:46:15
start mi2
10:46:15
start mi2 range(p) 1 loop
10:46:15
finish mi2 range(p) 1 loop
10:46:15
start mi2 range(p) 2 loop
10:46:15
finish mi2 range(p) 2 loop
10:46:15
start mi2 range(NT) loop
10:46:15
finish mi2 range(NT) loop
10:46:15
start mi2 range(n) loop
10:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:46:15
start mi2 range(n) 2loop
10:46:15
finish mi2 range(n) 2loop
10:46:15
[[-2.73785531]]
end mi2 loop
10:46:15
estep
10:46:15
end estep
10:46:31
end pa10:46:31
goodness of fit correlation [0.23334467]
start cluster 10:46:31
12
parallel submitted
10:46:47
parallel finished
10:48:52
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:48:57
start mi0
10:48:57
start mi0 range(p) 1 loop
10:48:57
finish mi0 range(p) 1 loop
10:48:57
start mi0 range(p) 2 loop
10:48:57
finish mi0 range(p) 2 loop
10:48:57
start mi0 range(NT) loop
10:48:57
finish mi0 range(NT) loop
10:48:57
start mi0 range(n) loop
10:48:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:48:57
start mi0 range(n) 2loop
10:48:57
finish mi0 range(n) 2loop
10:48:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:48:57
start mi1 range(p) 1 loop
10:48:57
finish mi1 range(p) 1 loop
10:48:57
start mi1 range(p) 2 loop
10:48:57
finish mi1 range(p) 2 loop
10:48:57
start mi1 range(NT) loop
10:48:58
finish mi1 range(NT) loop
10:48:58
start mi1 range(n) loop
10:48:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:48:58
start mi1 range(n) 2loop
10:48:58
finish mi1 range(n) 2loop
10:48:58
start mi2
10:48:58
start mi2 range(p) 1 loop
10:48:58
finish mi2 range(p) 1 loop
10:48:58
start mi2 range(p) 2 loop
10:48:58
finish mi2 range(p) 2 loop
10:48:58
start mi2 range(NT) loop
10:48:58
finish mi2 range(NT) loop
10:48:58
start mi2 range(n) loop
10:48:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:48:58
start mi2 range(n) 2loop
10:48:58
finish mi2 range(n) 2loop
10:48:58
[[-2.65496005]]
end mi2 loop
10:48:58
estep
10:48:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:12
start ppi1
10:49:12
start mi0
10:49:12
start mi0 range(p) 1 loop
10:49:12
finish mi0 range(p) 1 loop
10:49:12
start mi0 range(p) 2 loop
10:49:12
finish mi0 range(p) 2 loop
10:49:12
start mi0 range(NT) loop
10:49:13
finish mi0 range(NT) loop
10:49:13
start mi0 range(n) loop
10:49:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:13
start mi0 range(n) 2loop
10:49:13
finish mi0 range(n) 2loop
10:49:13
start mi1
10:49:13
start mi1 range(p) 1 loop
10:49:13
finish mi1 range(p) 1 loop
10:49:13
start mi1 range(p) 2 loop
10:49:13
finish mi1 range(p) 2 loop
10:49:13
start mi1 range(NT) loop
10:49:13
finish mi1 range(NT) loop
10:49:13
start mi1 range(n) loop
10:49:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:13
start mi1 range(n) 2loop
10:49:13
finish mi1 range(n) 2loop
10:49:13
start mi2
10:49:13
start mi2 range(p) 1 loop
10:49:13
finish mi2 range(p) 1 loop
10:49:13
start mi2 range(p) 2 loop
10:49:13
finish mi2 range(p) 2 loop
10:49:13
start mi2 range(NT) loop
10:49:13
finish mi2 range(NT) loop
10:49:13
start mi2 range(n) loop
10:49:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:49:13
start mi2 range(n) 2loop
10:49:13
finish mi2 range(n) 2loop
10:49:13
[[-2.71745404]]
end mi2 loop
10:49:13
estep
10:49:13
end estep
10:49:28
end pa10:49:28
goodness of fit correlation [0.20094136]
start cluster 10:49:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36994 instead
  warnings.warn(
13
parallel submitted
10:49:45
parallel finished
10:51:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:51:50
start mi0
10:51:50
start mi0 range(p) 1 loop
10:51:50
finish mi0 range(p) 1 loop
10:51:50
start mi0 range(p) 2 loop
10:51:50
finish mi0 range(p) 2 loop
10:51:50
start mi0 range(NT) loop
10:51:50
finish mi0 range(NT) loop
10:51:50
start mi0 range(n) loop
10:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:51:50
start mi0 range(n) 2loop
10:51:50
finish mi0 range(n) 2loop
10:51:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:51:50
start mi1 range(p) 1 loop
10:51:50
finish mi1 range(p) 1 loop
10:51:50
start mi1 range(p) 2 loop
10:51:50
finish mi1 range(p) 2 loop
10:51:50
start mi1 range(NT) loop
10:51:50
finish mi1 range(NT) loop
10:51:50
start mi1 range(n) loop
10:51:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:51:50
start mi1 range(n) 2loop
10:51:50
finish mi1 range(n) 2loop
10:51:51
start mi2
10:51:51
start mi2 range(p) 1 loop
10:51:51
finish mi2 range(p) 1 loop
10:51:51
start mi2 range(p) 2 loop
10:51:51
finish mi2 range(p) 2 loop
10:51:51
start mi2 range(NT) loop
10:51:51
finish mi2 range(NT) loop
10:51:51
start mi2 range(n) loop
10:51:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:51:51
start mi2 range(n) 2loop
10:51:51
finish mi2 range(n) 2loop
10:51:51
[[-2.65684768]]
end mi2 loop
10:51:51
estep
10:51:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:52:06
start ppi1
10:52:06
start mi0
10:52:06
start mi0 range(p) 1 loop
10:52:06
finish mi0 range(p) 1 loop
10:52:06
start mi0 range(p) 2 loop
10:52:06
finish mi0 range(p) 2 loop
10:52:06
start mi0 range(NT) loop
10:52:06
finish mi0 range(NT) loop
10:52:06
start mi0 range(n) loop
10:52:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:52:06
start mi0 range(n) 2loop
10:52:06
finish mi0 range(n) 2loop
10:52:06
start mi1
10:52:06
start mi1 range(p) 1 loop
10:52:06
finish mi1 range(p) 1 loop
10:52:06
start mi1 range(p) 2 loop
10:52:06
finish mi1 range(p) 2 loop
10:52:06
start mi1 range(NT) loop
10:52:06
finish mi1 range(NT) loop
10:52:06
start mi1 range(n) loop
10:52:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:52:06
start mi1 range(n) 2loop
10:52:06
finish mi1 range(n) 2loop
10:52:06
start mi2
10:52:06
start mi2 range(p) 1 loop
10:52:06
finish mi2 range(p) 1 loop
10:52:06
start mi2 range(p) 2 loop
10:52:06
finish mi2 range(p) 2 loop
10:52:06
start mi2 range(NT) loop
10:52:06
finish mi2 range(NT) loop
10:52:06
start mi2 range(n) loop
10:52:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:52:06
start mi2 range(n) 2loop
10:52:06
finish mi2 range(n) 2loop
10:52:06
[[-2.71934159]]
end mi2 loop
10:52:06
estep
10:52:06
end estep
10:52:22
end pa10:52:22
goodness of fit correlation [0.24447793]
start cluster 10:52:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37332 instead
  warnings.warn(
14
parallel submitted
10:52:41
parallel finished
10:55:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:55:55
start mi0
10:55:55
start mi0 range(p) 1 loop
10:55:55
finish mi0 range(p) 1 loop
10:55:55
start mi0 range(p) 2 loop
10:55:55
finish mi0 range(p) 2 loop
10:55:55
start mi0 range(NT) loop
10:55:55
finish mi0 range(NT) loop
10:55:55
start mi0 range(n) loop
10:55:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:55:55
start mi0 range(n) 2loop
10:55:55
finish mi0 range(n) 2loop
10:55:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:55:55
start mi1 range(p) 1 loop
10:55:55
finish mi1 range(p) 1 loop
10:55:55
start mi1 range(p) 2 loop
10:55:55
finish mi1 range(p) 2 loop
10:55:55
start mi1 range(NT) loop
10:55:55
finish mi1 range(NT) loop
10:55:55
start mi1 range(n) loop
10:55:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:55:55
start mi1 range(n) 2loop
10:55:55
finish mi1 range(n) 2loop
10:55:55
start mi2
10:55:55
start mi2 range(p) 1 loop
10:55:55
finish mi2 range(p) 1 loop
10:55:55
start mi2 range(p) 2 loop
10:55:55
finish mi2 range(p) 2 loop
10:55:55
start mi2 range(NT) loop
10:55:55
finish mi2 range(NT) loop
10:55:56
start mi2 range(n) loop
10:55:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:55:56
start mi2 range(n) 2loop
10:55:56
finish mi2 range(n) 2loop
10:55:56
[[-2.65770226]]
end mi2 loop
10:55:56
estep
10:55:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:56:12
start ppi1
10:56:12
start mi0
10:56:12
start mi0 range(p) 1 loop
10:56:12
finish mi0 range(p) 1 loop
10:56:12
start mi0 range(p) 2 loop
10:56:12
finish mi0 range(p) 2 loop
10:56:12
start mi0 range(NT) loop
10:56:12
finish mi0 range(NT) loop
10:56:12
start mi0 range(n) loop
10:56:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:56:12
start mi0 range(n) 2loop
10:56:12
finish mi0 range(n) 2loop
10:56:12
start mi1
10:56:12
start mi1 range(p) 1 loop
10:56:12
finish mi1 range(p) 1 loop
10:56:12
start mi1 range(p) 2 loop
10:56:12
finish mi1 range(p) 2 loop
10:56:12
start mi1 range(NT) loop
10:56:12
finish mi1 range(NT) loop
10:56:12
start mi1 range(n) loop
10:56:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:56:12
start mi1 range(n) 2loop
10:56:12
finish mi1 range(n) 2loop
10:56:12
start mi2
10:56:12
start mi2 range(p) 1 loop
10:56:12
finish mi2 range(p) 1 loop
10:56:12
start mi2 range(p) 2 loop
10:56:12
finish mi2 range(p) 2 loop
10:56:12
start mi2 range(NT) loop
10:56:12
finish mi2 range(NT) loop
10:56:12
start mi2 range(n) loop
10:56:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:56:13
start mi2 range(n) 2loop
10:56:13
finish mi2 range(n) 2loop
10:56:13
[[-2.72019613]]
end mi2 loop
10:56:13
estep
10:56:13
end estep
10:56:29
end pa10:56:29
goodness of fit correlation [0.24137678]
start cluster 10:56:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46861 instead
  warnings.warn(
15
parallel submitted
10:56:49
parallel finished
11:00:07
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:00:14
start mi0
11:00:14
start mi0 range(p) 1 loop
11:00:14
finish mi0 range(p) 1 loop
11:00:14
start mi0 range(p) 2 loop
11:00:14
finish mi0 range(p) 2 loop
11:00:14
start mi0 range(NT) loop
11:00:14
finish mi0 range(NT) loop
11:00:14
start mi0 range(n) loop
11:00:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:00:14
start mi0 range(n) 2loop
11:00:14
finish mi0 range(n) 2loop
11:00:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:00:14
start mi1 range(p) 1 loop
11:00:14
finish mi1 range(p) 1 loop
11:00:14
start mi1 range(p) 2 loop
11:00:14
finish mi1 range(p) 2 loop
11:00:14
start mi1 range(NT) loop
11:00:14
finish mi1 range(NT) loop
11:00:14
start mi1 range(n) loop
11:00:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:00:14
start mi1 range(n) 2loop
11:00:14
finish mi1 range(n) 2loop
11:00:14
start mi2
11:00:14
start mi2 range(p) 1 loop
11:00:14
finish mi2 range(p) 1 loop
11:00:14
start mi2 range(p) 2 loop
11:00:14
finish mi2 range(p) 2 loop
11:00:14
start mi2 range(NT) loop
11:00:14
finish mi2 range(NT) loop
11:00:14
start mi2 range(n) loop
11:00:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:00:14
start mi2 range(n) 2loop
11:00:14
finish mi2 range(n) 2loop
11:00:15
[[-2.68086833]]
end mi2 loop
11:00:15
estep
11:00:15
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:00:29
start ppi1
11:00:29
start mi0
11:00:29
start mi0 range(p) 1 loop
11:00:29
finish mi0 range(p) 1 loop
11:00:29
start mi0 range(p) 2 loop
11:00:29
finish mi0 range(p) 2 loop
11:00:29
start mi0 range(NT) loop
11:00:29
finish mi0 range(NT) loop
11:00:29
start mi0 range(n) loop
11:00:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:00:29
start mi0 range(n) 2loop
11:00:29
finish mi0 range(n) 2loop
11:00:29
start mi1
11:00:29
start mi1 range(p) 1 loop
11:00:29
finish mi1 range(p) 1 loop
11:00:29
start mi1 range(p) 2 loop
11:00:29
finish mi1 range(p) 2 loop
11:00:29
start mi1 range(NT) loop
11:00:30
finish mi1 range(NT) loop
11:00:30
start mi1 range(n) loop
11:00:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:00:30
start mi1 range(n) 2loop
11:00:30
finish mi1 range(n) 2loop
11:00:30
start mi2
11:00:30
start mi2 range(p) 1 loop
11:00:30
finish mi2 range(p) 1 loop
11:00:30
start mi2 range(p) 2 loop
11:00:30
finish mi2 range(p) 2 loop
11:00:30
start mi2 range(NT) loop
11:00:30
finish mi2 range(NT) loop
11:00:30
start mi2 range(n) loop
11:00:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:00:30
start mi2 range(n) 2loop
11:00:30
finish mi2 range(n) 2loop
11:00:30
[[-2.74336141]]
end mi2 loop
11:00:30
estep
11:00:30
end estep
11:00:46
end pa11:00:46
goodness of fit correlation [0.23086439]
start cluster 11:00:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34102 instead
  warnings.warn(
16
parallel submitted
11:01:05
parallel finished
11:03:37
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:03:44
start mi0
11:03:44
start mi0 range(p) 1 loop
11:03:44
finish mi0 range(p) 1 loop
11:03:44
start mi0 range(p) 2 loop
11:03:44
finish mi0 range(p) 2 loop
11:03:44
start mi0 range(NT) loop
11:03:44
finish mi0 range(NT) loop
11:03:44
start mi0 range(n) loop
11:03:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:03:44
start mi0 range(n) 2loop
11:03:44
finish mi0 range(n) 2loop
11:03:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:03:45
start mi1 range(p) 1 loop
11:03:45
finish mi1 range(p) 1 loop
11:03:45
start mi1 range(p) 2 loop
11:03:45
finish mi1 range(p) 2 loop
11:03:45
start mi1 range(NT) loop
11:03:45
finish mi1 range(NT) loop
11:03:45
start mi1 range(n) loop
11:03:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:03:45
start mi1 range(n) 2loop
11:03:45
finish mi1 range(n) 2loop
11:03:45
start mi2
11:03:45
start mi2 range(p) 1 loop
11:03:45
finish mi2 range(p) 1 loop
11:03:45
start mi2 range(p) 2 loop
11:03:45
finish mi2 range(p) 2 loop
11:03:45
start mi2 range(NT) loop
11:03:45
finish mi2 range(NT) loop
11:03:45
start mi2 range(n) loop
11:03:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:03:45
start mi2 range(n) 2loop
11:03:45
finish mi2 range(n) 2loop
11:03:45
[[-2.68262735]]
end mi2 loop
11:03:45
estep
11:03:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:04:01
start ppi1
11:04:01
start mi0
11:04:01
start mi0 range(p) 1 loop
11:04:01
finish mi0 range(p) 1 loop
11:04:01
start mi0 range(p) 2 loop
11:04:01
finish mi0 range(p) 2 loop
11:04:01
start mi0 range(NT) loop
11:04:01
finish mi0 range(NT) loop
11:04:01
start mi0 range(n) loop
11:04:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:04:01
start mi0 range(n) 2loop
11:04:01
finish mi0 range(n) 2loop
11:04:01
start mi1
11:04:01
start mi1 range(p) 1 loop
11:04:01
finish mi1 range(p) 1 loop
11:04:01
start mi1 range(p) 2 loop
11:04:01
finish mi1 range(p) 2 loop
11:04:01
start mi1 range(NT) loop
11:04:01
finish mi1 range(NT) loop
11:04:02
start mi1 range(n) loop
11:04:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:04:02
start mi1 range(n) 2loop
11:04:02
finish mi1 range(n) 2loop
11:04:02
start mi2
11:04:02
start mi2 range(p) 1 loop
11:04:02
finish mi2 range(p) 1 loop
11:04:02
start mi2 range(p) 2 loop
11:04:02
finish mi2 range(p) 2 loop
11:04:02
start mi2 range(NT) loop
11:04:02
finish mi2 range(NT) loop
11:04:02
start mi2 range(n) loop
11:04:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:04:02
start mi2 range(n) 2loop
11:04:02
finish mi2 range(n) 2loop
11:04:02
[[-2.74512039]]
end mi2 loop
11:04:02
estep
11:04:02
end estep
11:04:18
end pa11:04:18
goodness of fit correlation [0.26221312]
start cluster 11:04:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38907 instead
  warnings.warn(
17
parallel submitted
11:04:36
parallel finished
11:08:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:08:07
start mi0
11:08:07
start mi0 range(p) 1 loop
11:08:07
finish mi0 range(p) 1 loop
11:08:07
start mi0 range(p) 2 loop
11:08:07
finish mi0 range(p) 2 loop
11:08:07
start mi0 range(NT) loop
11:08:07
finish mi0 range(NT) loop
11:08:07
start mi0 range(n) loop
11:08:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:08:07
start mi0 range(n) 2loop
11:08:07
finish mi0 range(n) 2loop
11:08:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:08:07
start mi1 range(p) 1 loop
11:08:07
finish mi1 range(p) 1 loop
11:08:07
start mi1 range(p) 2 loop
11:08:07
finish mi1 range(p) 2 loop
11:08:07
start mi1 range(NT) loop
11:08:07
finish mi1 range(NT) loop
11:08:07
start mi1 range(n) loop
11:08:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:08:07
start mi1 range(n) 2loop
11:08:07
finish mi1 range(n) 2loop
11:08:07
start mi2
11:08:07
start mi2 range(p) 1 loop
11:08:07
finish mi2 range(p) 1 loop
11:08:08
start mi2 range(p) 2 loop
11:08:08
finish mi2 range(p) 2 loop
11:08:08
start mi2 range(NT) loop
11:08:08
finish mi2 range(NT) loop
11:08:08
start mi2 range(n) loop
11:08:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:08:08
start mi2 range(n) 2loop
11:08:08
finish mi2 range(n) 2loop
11:08:08
[[-2.68947184]]
end mi2 loop
11:08:08
estep
11:08:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:08:23
start ppi1
11:08:23
start mi0
11:08:23
start mi0 range(p) 1 loop
11:08:23
finish mi0 range(p) 1 loop
11:08:23
start mi0 range(p) 2 loop
11:08:23
finish mi0 range(p) 2 loop
11:08:23
start mi0 range(NT) loop
11:08:24
finish mi0 range(NT) loop
11:08:24
start mi0 range(n) loop
11:08:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:08:24
start mi0 range(n) 2loop
11:08:24
finish mi0 range(n) 2loop
11:08:24
start mi1
11:08:24
start mi1 range(p) 1 loop
11:08:24
finish mi1 range(p) 1 loop
11:08:24
start mi1 range(p) 2 loop
11:08:24
finish mi1 range(p) 2 loop
11:08:24
start mi1 range(NT) loop
11:08:24
finish mi1 range(NT) loop
11:08:24
start mi1 range(n) loop
11:08:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:08:24
start mi1 range(n) 2loop
11:08:24
finish mi1 range(n) 2loop
11:08:24
start mi2
11:08:24
start mi2 range(p) 1 loop
11:08:24
finish mi2 range(p) 1 loop
11:08:24
start mi2 range(p) 2 loop
11:08:24
finish mi2 range(p) 2 loop
11:08:24
start mi2 range(NT) loop
11:08:24
finish mi2 range(NT) loop
11:08:24
start mi2 range(n) loop
11:08:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:08:24
start mi2 range(n) 2loop
11:08:24
finish mi2 range(n) 2loop
11:08:24
[[-2.75196472]]
end mi2 loop
11:08:24
estep
11:08:24
end estep
11:08:40
end pa11:08:40
goodness of fit correlation [0.21875909]
start cluster 11:08:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35944 instead
  warnings.warn(
18
parallel submitted
11:09:04
parallel finished
11:11:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:11:09
start mi0
11:11:09
start mi0 range(p) 1 loop
11:11:09
finish mi0 range(p) 1 loop
11:11:09
start mi0 range(p) 2 loop
11:11:09
finish mi0 range(p) 2 loop
11:11:09
start mi0 range(NT) loop
11:11:09
finish mi0 range(NT) loop
11:11:09
start mi0 range(n) loop
11:11:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:11:09
start mi0 range(n) 2loop
11:11:09
finish mi0 range(n) 2loop
11:11:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:11:09
start mi1 range(p) 1 loop
11:11:09
finish mi1 range(p) 1 loop
11:11:09
start mi1 range(p) 2 loop
11:11:09
finish mi1 range(p) 2 loop
11:11:09
start mi1 range(NT) loop
11:11:09
finish mi1 range(NT) loop
11:11:09
start mi1 range(n) loop
11:11:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:11:09
start mi1 range(n) 2loop
11:11:09
finish mi1 range(n) 2loop
11:11:09
start mi2
11:11:09
start mi2 range(p) 1 loop
11:11:09
finish mi2 range(p) 1 loop
11:11:09
start mi2 range(p) 2 loop
11:11:09
finish mi2 range(p) 2 loop
11:11:09
start mi2 range(NT) loop
11:11:10
finish mi2 range(NT) loop
11:11:10
start mi2 range(n) loop
11:11:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:11:10
start mi2 range(n) 2loop
11:11:10
finish mi2 range(n) 2loop
11:11:10
[[-2.64861428]]
end mi2 loop
11:11:10
estep
11:11:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:11:26
start ppi1
11:11:26
start mi0
11:11:26
start mi0 range(p) 1 loop
11:11:26
finish mi0 range(p) 1 loop
11:11:26
start mi0 range(p) 2 loop
11:11:26
finish mi0 range(p) 2 loop
11:11:26
start mi0 range(NT) loop
11:11:26
finish mi0 range(NT) loop
11:11:26
start mi0 range(n) loop
11:11:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:11:26
start mi0 range(n) 2loop
11:11:26
finish mi0 range(n) 2loop
11:11:26
start mi1
11:11:26
start mi1 range(p) 1 loop
11:11:26
finish mi1 range(p) 1 loop
11:11:26
start mi1 range(p) 2 loop
11:11:26
finish mi1 range(p) 2 loop
11:11:26
start mi1 range(NT) loop
11:11:26
finish mi1 range(NT) loop
11:11:26
start mi1 range(n) loop
11:11:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:11:26
start mi1 range(n) 2loop
11:11:26
finish mi1 range(n) 2loop
11:11:27
start mi2
11:11:27
start mi2 range(p) 1 loop
11:11:27
finish mi2 range(p) 1 loop
11:11:27
start mi2 range(p) 2 loop
11:11:27
finish mi2 range(p) 2 loop
11:11:27
start mi2 range(NT) loop
11:11:27
finish mi2 range(NT) loop
11:11:27
start mi2 range(n) loop
11:11:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:11:27
start mi2 range(n) 2loop
11:11:27
finish mi2 range(n) 2loop
11:11:27
[[-2.71110858]]
end mi2 loop
11:11:27
estep
11:11:27
end estep
11:11:43
end pa11:11:43
goodness of fit correlation [0.21219641]
start cluster 11:11:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33951 instead
  warnings.warn(
19
parallel submitted
11:12:03
parallel finished
11:15:28
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:15:37
start mi0
11:15:37
start mi0 range(p) 1 loop
11:15:37
finish mi0 range(p) 1 loop
11:15:37
start mi0 range(p) 2 loop
11:15:37
finish mi0 range(p) 2 loop
11:15:37
start mi0 range(NT) loop
11:15:38
finish mi0 range(NT) loop
11:15:38
start mi0 range(n) loop
11:15:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:15:38
start mi0 range(n) 2loop
11:15:38
finish mi0 range(n) 2loop
11:15:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:15:38
start mi1 range(p) 1 loop
11:15:38
finish mi1 range(p) 1 loop
11:15:38
start mi1 range(p) 2 loop
11:15:38
finish mi1 range(p) 2 loop
11:15:38
start mi1 range(NT) loop
11:15:38
finish mi1 range(NT) loop
11:15:38
start mi1 range(n) loop
11:15:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:15:38
start mi1 range(n) 2loop
11:15:38
finish mi1 range(n) 2loop
11:15:38
start mi2
11:15:38
start mi2 range(p) 1 loop
11:15:38
finish mi2 range(p) 1 loop
11:15:38
start mi2 range(p) 2 loop
11:15:38
finish mi2 range(p) 2 loop
11:15:38
start mi2 range(NT) loop
11:15:38
finish mi2 range(NT) loop
11:15:38
start mi2 range(n) loop
11:15:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:15:38
start mi2 range(n) 2loop
11:15:38
finish mi2 range(n) 2loop
11:15:38
[[-2.6479715]]
end mi2 loop
11:15:38
estep
11:15:38
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:15:55
start ppi1
11:15:55
start mi0
11:15:55
start mi0 range(p) 1 loop
11:15:55
finish mi0 range(p) 1 loop
11:15:55
start mi0 range(p) 2 loop
11:15:55
finish mi0 range(p) 2 loop
11:15:55
start mi0 range(NT) loop
11:15:55
finish mi0 range(NT) loop
11:15:55
start mi0 range(n) loop
11:15:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:15:55
start mi0 range(n) 2loop
11:15:55
finish mi0 range(n) 2loop
11:15:55
start mi1
11:15:55
start mi1 range(p) 1 loop
11:15:55
finish mi1 range(p) 1 loop
11:15:55
start mi1 range(p) 2 loop
11:15:55
finish mi1 range(p) 2 loop
11:15:55
start mi1 range(NT) loop
11:15:55
finish mi1 range(NT) loop
11:15:55
start mi1 range(n) loop
11:15:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:15:55
start mi1 range(n) 2loop
11:15:55
finish mi1 range(n) 2loop
11:15:55
start mi2
11:15:55
start mi2 range(p) 1 loop
11:15:55
finish mi2 range(p) 1 loop
11:15:55
start mi2 range(p) 2 loop
11:15:55
finish mi2 range(p) 2 loop
11:15:55
start mi2 range(NT) loop
11:15:55
finish mi2 range(NT) loop
11:15:55
start mi2 range(n) loop
11:15:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:15:55
start mi2 range(n) 2loop
11:15:55
finish mi2 range(n) 2loop
11:15:55
[[-2.71046583]]
end mi2 loop
11:15:55
estep
11:15:55
end estep
11:16:11
end pa11:16:11
goodness of fit correlation [0.22790127]
start cluster 11:16:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37387 instead
  warnings.warn(
20
parallel submitted
11:16:31
parallel finished
11:19:35
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:19:46
start mi0
11:19:46
start mi0 range(p) 1 loop
11:19:46
finish mi0 range(p) 1 loop
11:19:46
start mi0 range(p) 2 loop
11:19:46
finish mi0 range(p) 2 loop
11:19:46
start mi0 range(NT) loop
11:19:46
finish mi0 range(NT) loop
11:19:46
start mi0 range(n) loop
11:19:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:19:46
start mi0 range(n) 2loop
11:19:46
finish mi0 range(n) 2loop
11:19:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:19:46
start mi1 range(p) 1 loop
11:19:46
finish mi1 range(p) 1 loop
11:19:46
start mi1 range(p) 2 loop
11:19:46
finish mi1 range(p) 2 loop
11:19:46
start mi1 range(NT) loop
11:19:46
finish mi1 range(NT) loop
11:19:46
start mi1 range(n) loop
11:19:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:19:46
start mi1 range(n) 2loop
11:19:46
finish mi1 range(n) 2loop
11:19:46
start mi2
11:19:46
start mi2 range(p) 1 loop
11:19:46
finish mi2 range(p) 1 loop
11:19:46
start mi2 range(p) 2 loop
11:19:46
finish mi2 range(p) 2 loop
11:19:46
start mi2 range(NT) loop
11:19:46
finish mi2 range(NT) loop
11:19:46
start mi2 range(n) loop
11:19:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:19:46
start mi2 range(n) 2loop
11:19:46
finish mi2 range(n) 2loop
11:19:47
[[-2.60798342]]
end mi2 loop
11:19:47
estep
11:19:47
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:20:01
start ppi1
11:20:01
start mi0
11:20:01
start mi0 range(p) 1 loop
11:20:01
finish mi0 range(p) 1 loop
11:20:01
start mi0 range(p) 2 loop
11:20:01
finish mi0 range(p) 2 loop
11:20:01
start mi0 range(NT) loop
11:20:02
finish mi0 range(NT) loop
11:20:02
start mi0 range(n) loop
11:20:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:20:02
start mi0 range(n) 2loop
11:20:02
finish mi0 range(n) 2loop
11:20:02
start mi1
11:20:02
start mi1 range(p) 1 loop
11:20:02
finish mi1 range(p) 1 loop
11:20:02
start mi1 range(p) 2 loop
11:20:02
finish mi1 range(p) 2 loop
11:20:02
start mi1 range(NT) loop
11:20:02
finish mi1 range(NT) loop
11:20:02
start mi1 range(n) loop
11:20:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:20:02
start mi1 range(n) 2loop
11:20:02
finish mi1 range(n) 2loop
11:20:02
start mi2
11:20:02
start mi2 range(p) 1 loop
11:20:02
finish mi2 range(p) 1 loop
11:20:02
start mi2 range(p) 2 loop
11:20:02
finish mi2 range(p) 2 loop
11:20:02
start mi2 range(NT) loop
11:20:02
finish mi2 range(NT) loop
11:20:02
start mi2 range(n) loop
11:20:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:20:02
start mi2 range(n) 2loop
11:20:02
finish mi2 range(n) 2loop
11:20:02
[[-2.67048086]]
end mi2 loop
11:20:02
estep
11:20:02
end estep
11:20:18
end pa11:20:18
goodness of fit correlation [0.18700049]
start cluster 11:20:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46833 instead
  warnings.warn(
21
parallel submitted
11:20:38
parallel finished
11:24:05
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:24:15
start mi0
11:24:15
start mi0 range(p) 1 loop
11:24:15
finish mi0 range(p) 1 loop
11:24:15
start mi0 range(p) 2 loop
11:24:15
finish mi0 range(p) 2 loop
11:24:15
start mi0 range(NT) loop
11:24:15
finish mi0 range(NT) loop
11:24:16
start mi0 range(n) loop
11:24:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:24:16
start mi0 range(n) 2loop
11:24:16
finish mi0 range(n) 2loop
11:24:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:24:16
start mi1 range(p) 1 loop
11:24:16
finish mi1 range(p) 1 loop
11:24:16
start mi1 range(p) 2 loop
11:24:16
finish mi1 range(p) 2 loop
11:24:16
start mi1 range(NT) loop
11:24:16
finish mi1 range(NT) loop
11:24:16
start mi1 range(n) loop
11:24:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:24:16
start mi1 range(n) 2loop
11:24:16
finish mi1 range(n) 2loop
11:24:16
start mi2
11:24:16
start mi2 range(p) 1 loop
11:24:16
finish mi2 range(p) 1 loop
11:24:16
start mi2 range(p) 2 loop
11:24:16
finish mi2 range(p) 2 loop
11:24:16
start mi2 range(NT) loop
11:24:16
finish mi2 range(NT) loop
11:24:16
start mi2 range(n) loop
11:24:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:24:16
start mi2 range(n) 2loop
11:24:16
finish mi2 range(n) 2loop
11:24:16
[[-2.6392527]]
end mi2 loop
11:24:16
estep
11:24:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:24:31
start ppi1
11:24:31
start mi0
11:24:31
start mi0 range(p) 1 loop
11:24:31
finish mi0 range(p) 1 loop
11:24:31
start mi0 range(p) 2 loop
11:24:31
finish mi0 range(p) 2 loop
11:24:31
start mi0 range(NT) loop
11:24:31
finish mi0 range(NT) loop
11:24:31
start mi0 range(n) loop
11:24:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:24:31
start mi0 range(n) 2loop
11:24:31
finish mi0 range(n) 2loop
11:24:31
start mi1
11:24:31
start mi1 range(p) 1 loop
11:24:31
finish mi1 range(p) 1 loop
11:24:31
start mi1 range(p) 2 loop
11:24:31
finish mi1 range(p) 2 loop
11:24:32
start mi1 range(NT) loop
11:24:32
finish mi1 range(NT) loop
11:24:32
start mi1 range(n) loop
11:24:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:24:32
start mi1 range(n) 2loop
11:24:32
finish mi1 range(n) 2loop
11:24:32
start mi2
11:24:32
start mi2 range(p) 1 loop
11:24:32
finish mi2 range(p) 1 loop
11:24:32
start mi2 range(p) 2 loop
11:24:32
finish mi2 range(p) 2 loop
11:24:32
start mi2 range(NT) loop
11:24:32
finish mi2 range(NT) loop
11:24:32
start mi2 range(n) loop
11:24:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:24:32
start mi2 range(n) 2loop
11:24:32
finish mi2 range(n) 2loop
11:24:32
[[-2.70174752]]
end mi2 loop
11:24:32
estep
11:24:32
end estep
11:24:47
end pa11:24:47
goodness of fit correlation [0.2241817]
start cluster 11:24:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44486 instead
  warnings.warn(
22
parallel submitted
11:25:07
parallel finished
11:28:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:28:26
start mi0
11:28:26
start mi0 range(p) 1 loop
11:28:26
finish mi0 range(p) 1 loop
11:28:26
start mi0 range(p) 2 loop
11:28:26
finish mi0 range(p) 2 loop
11:28:26
start mi0 range(NT) loop
11:28:26
finish mi0 range(NT) loop
11:28:26
start mi0 range(n) loop
11:28:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:28:27
start mi0 range(n) 2loop
11:28:27
finish mi0 range(n) 2loop
11:28:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:28:27
start mi1 range(p) 1 loop
11:28:27
finish mi1 range(p) 1 loop
11:28:27
start mi1 range(p) 2 loop
11:28:27
finish mi1 range(p) 2 loop
11:28:27
start mi1 range(NT) loop
11:28:27
finish mi1 range(NT) loop
11:28:27
start mi1 range(n) loop
11:28:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:28:27
start mi1 range(n) 2loop
11:28:27
finish mi1 range(n) 2loop
11:28:27
start mi2
11:28:27
start mi2 range(p) 1 loop
11:28:27
finish mi2 range(p) 1 loop
11:28:27
start mi2 range(p) 2 loop
11:28:27
finish mi2 range(p) 2 loop
11:28:27
start mi2 range(NT) loop
11:28:27
finish mi2 range(NT) loop
11:28:27
start mi2 range(n) loop
11:28:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:28:27
start mi2 range(n) 2loop
11:28:27
finish mi2 range(n) 2loop
11:28:27
[[-2.57990952]]
end mi2 loop
11:28:27
estep
11:28:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:28:42
start ppi1
11:28:42
start mi0
11:28:42
start mi0 range(p) 1 loop
11:28:42
finish mi0 range(p) 1 loop
11:28:42
start mi0 range(p) 2 loop
11:28:42
finish mi0 range(p) 2 loop
11:28:42
start mi0 range(NT) loop
11:28:42
finish mi0 range(NT) loop
11:28:42
start mi0 range(n) loop
11:28:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:28:43
start mi0 range(n) 2loop
11:28:43
finish mi0 range(n) 2loop
11:28:43
start mi1
11:28:43
start mi1 range(p) 1 loop
11:28:43
finish mi1 range(p) 1 loop
11:28:43
start mi1 range(p) 2 loop
11:28:43
finish mi1 range(p) 2 loop
11:28:43
start mi1 range(NT) loop
11:28:43
finish mi1 range(NT) loop
11:28:43
start mi1 range(n) loop
11:28:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:28:43
start mi1 range(n) 2loop
11:28:43
finish mi1 range(n) 2loop
11:28:43
start mi2
11:28:43
start mi2 range(p) 1 loop
11:28:43
finish mi2 range(p) 1 loop
11:28:43
start mi2 range(p) 2 loop
11:28:43
finish mi2 range(p) 2 loop
11:28:43
start mi2 range(NT) loop
11:28:43
finish mi2 range(NT) loop
11:28:43
start mi2 range(n) loop
11:28:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:28:43
start mi2 range(n) 2loop
11:28:43
finish mi2 range(n) 2loop
11:28:43
[[-2.64241093]]
end mi2 loop
11:28:43
estep
11:28:43
end estep
11:28:58
end pa11:28:58
goodness of fit correlation [0.21910164]
start cluster 11:28:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34672 instead
  warnings.warn(
23
parallel submitted
11:29:18
parallel finished
11:32:07
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:32:15
start mi0
11:32:15
start mi0 range(p) 1 loop
11:32:15
finish mi0 range(p) 1 loop
11:32:15
start mi0 range(p) 2 loop
11:32:15
finish mi0 range(p) 2 loop
11:32:15
start mi0 range(NT) loop
11:32:15
finish mi0 range(NT) loop
11:32:15
start mi0 range(n) loop
11:32:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:32:16
start mi0 range(n) 2loop
11:32:16
finish mi0 range(n) 2loop
11:32:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:32:16
start mi1 range(p) 1 loop
11:32:16
finish mi1 range(p) 1 loop
11:32:16
start mi1 range(p) 2 loop
11:32:16
finish mi1 range(p) 2 loop
11:32:16
start mi1 range(NT) loop
11:32:16
finish mi1 range(NT) loop
11:32:16
start mi1 range(n) loop
11:32:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:32:16
start mi1 range(n) 2loop
11:32:16
finish mi1 range(n) 2loop
11:32:16
start mi2
11:32:16
start mi2 range(p) 1 loop
11:32:16
finish mi2 range(p) 1 loop
11:32:16
start mi2 range(p) 2 loop
11:32:16
finish mi2 range(p) 2 loop
11:32:16
start mi2 range(NT) loop
11:32:16
finish mi2 range(NT) loop
11:32:16
start mi2 range(n) loop
11:32:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:32:16
start mi2 range(n) 2loop
11:32:16
finish mi2 range(n) 2loop
11:32:16
[[-2.73129355]]
end mi2 loop
11:32:16
estep
11:32:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:32:32
start ppi1
11:32:32
start mi0
11:32:32
start mi0 range(p) 1 loop
11:32:32
finish mi0 range(p) 1 loop
11:32:32
start mi0 range(p) 2 loop
11:32:32
finish mi0 range(p) 2 loop
11:32:32
start mi0 range(NT) loop
11:32:33
finish mi0 range(NT) loop
11:32:33
start mi0 range(n) loop
11:32:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:32:33
start mi0 range(n) 2loop
11:32:33
finish mi0 range(n) 2loop
11:32:33
start mi1
11:32:33
start mi1 range(p) 1 loop
11:32:33
finish mi1 range(p) 1 loop
11:32:33
start mi1 range(p) 2 loop
11:32:33
finish mi1 range(p) 2 loop
11:32:33
start mi1 range(NT) loop
11:32:33
finish mi1 range(NT) loop
11:32:33
start mi1 range(n) loop
11:32:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:32:33
start mi1 range(n) 2loop
11:32:33
finish mi1 range(n) 2loop
11:32:33
start mi2
11:32:33
start mi2 range(p) 1 loop
11:32:33
finish mi2 range(p) 1 loop
11:32:33
start mi2 range(p) 2 loop
11:32:33
finish mi2 range(p) 2 loop
11:32:33
start mi2 range(NT) loop
11:32:33
finish mi2 range(NT) loop
11:32:33
start mi2 range(n) loop
11:32:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:32:33
start mi2 range(n) 2loop
11:32:33
finish mi2 range(n) 2loop
11:32:33
[[-2.79378585]]
end mi2 loop
11:32:33
estep
11:32:33
end estep
11:32:49
end pa11:32:49
goodness of fit correlation [0.25389321]
start cluster 11:32:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33200 instead
  warnings.warn(
24
parallel submitted
11:33:09
parallel finished
11:35:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:35:28
start mi0
11:35:28
start mi0 range(p) 1 loop
11:35:28
finish mi0 range(p) 1 loop
11:35:28
start mi0 range(p) 2 loop
11:35:28
finish mi0 range(p) 2 loop
11:35:28
start mi0 range(NT) loop
11:35:28
finish mi0 range(NT) loop
11:35:28
start mi0 range(n) loop
11:35:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:35:28
start mi0 range(n) 2loop
11:35:28
finish mi0 range(n) 2loop
11:35:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:35:28
start mi1 range(p) 1 loop
11:35:28
finish mi1 range(p) 1 loop
11:35:28
start mi1 range(p) 2 loop
11:35:28
finish mi1 range(p) 2 loop
11:35:28
start mi1 range(NT) loop
11:35:28
finish mi1 range(NT) loop
11:35:28
start mi1 range(n) loop
11:35:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:35:28
start mi1 range(n) 2loop
11:35:28
finish mi1 range(n) 2loop
11:35:28
start mi2
11:35:28
start mi2 range(p) 1 loop
11:35:28
finish mi2 range(p) 1 loop
11:35:28
start mi2 range(p) 2 loop
11:35:28
finish mi2 range(p) 2 loop
11:35:28
start mi2 range(NT) loop
11:35:28
finish mi2 range(NT) loop
11:35:28
start mi2 range(n) loop
11:35:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:35:28
start mi2 range(n) 2loop
11:35:28
finish mi2 range(n) 2loop
11:35:29
[[-2.77304535]]
end mi2 loop
11:35:29
estep
11:35:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:35:43
start ppi1
11:35:43
start mi0
11:35:43
start mi0 range(p) 1 loop
11:35:43
finish mi0 range(p) 1 loop
11:35:43
start mi0 range(p) 2 loop
11:35:43
finish mi0 range(p) 2 loop
11:35:43
start mi0 range(NT) loop
11:35:43
finish mi0 range(NT) loop
11:35:43
start mi0 range(n) loop
11:35:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:35:43
start mi0 range(n) 2loop
11:35:43
finish mi0 range(n) 2loop
11:35:44
start mi1
11:35:44
start mi1 range(p) 1 loop
11:35:44
finish mi1 range(p) 1 loop
11:35:44
start mi1 range(p) 2 loop
11:35:44
finish mi1 range(p) 2 loop
11:35:44
start mi1 range(NT) loop
11:35:44
finish mi1 range(NT) loop
11:35:44
start mi1 range(n) loop
11:35:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:35:44
start mi1 range(n) 2loop
11:35:44
finish mi1 range(n) 2loop
11:35:44
start mi2
11:35:44
start mi2 range(p) 1 loop
11:35:44
finish mi2 range(p) 1 loop
11:35:44
start mi2 range(p) 2 loop
11:35:44
finish mi2 range(p) 2 loop
11:35:44
start mi2 range(NT) loop
11:35:44
finish mi2 range(NT) loop
11:35:44
start mi2 range(n) loop
11:35:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:35:44
start mi2 range(n) 2loop
11:35:44
finish mi2 range(n) 2loop
11:35:44
[[-2.83553746]]
end mi2 loop
11:35:44
estep
11:35:44
end estep
11:36:00
end pa11:36:00
goodness of fit correlation [0.25825851]
start cluster 11:36:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45036 instead
  warnings.warn(
25
parallel submitted
11:36:20
parallel finished
11:39:43
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:39:54
start mi0
11:39:54
start mi0 range(p) 1 loop
11:39:54
finish mi0 range(p) 1 loop
11:39:54
start mi0 range(p) 2 loop
11:39:54
finish mi0 range(p) 2 loop
11:39:54
start mi0 range(NT) loop
11:39:55
finish mi0 range(NT) loop
11:39:55
start mi0 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:39:55
start mi0 range(n) 2loop
11:39:55
finish mi0 range(n) 2loop
11:39:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:39:55
start mi1 range(p) 1 loop
11:39:55
finish mi1 range(p) 1 loop
11:39:55
start mi1 range(p) 2 loop
11:39:55
finish mi1 range(p) 2 loop
11:39:55
start mi1 range(NT) loop
11:39:55
finish mi1 range(NT) loop
11:39:55
start mi1 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:39:55
start mi1 range(n) 2loop
11:39:55
finish mi1 range(n) 2loop
11:39:55
start mi2
11:39:55
start mi2 range(p) 1 loop
11:39:55
finish mi2 range(p) 1 loop
11:39:55
start mi2 range(p) 2 loop
11:39:55
finish mi2 range(p) 2 loop
11:39:55
start mi2 range(NT) loop
11:39:55
finish mi2 range(NT) loop
11:39:55
start mi2 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:39:55
start mi2 range(n) 2loop
11:39:55
finish mi2 range(n) 2loop
11:39:55
[[-2.73421947]]
end mi2 loop
11:39:55
estep
11:39:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:40:10
start ppi1
11:40:10
start mi0
11:40:10
start mi0 range(p) 1 loop
11:40:10
finish mi0 range(p) 1 loop
11:40:10
start mi0 range(p) 2 loop
11:40:10
finish mi0 range(p) 2 loop
11:40:10
start mi0 range(NT) loop
11:40:10
finish mi0 range(NT) loop
11:40:10
start mi0 range(n) loop
11:40:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:40:10
start mi0 range(n) 2loop
11:40:10
finish mi0 range(n) 2loop
11:40:11
start mi1
11:40:11
start mi1 range(p) 1 loop
11:40:11
finish mi1 range(p) 1 loop
11:40:11
start mi1 range(p) 2 loop
11:40:11
finish mi1 range(p) 2 loop
11:40:11
start mi1 range(NT) loop
11:40:11
finish mi1 range(NT) loop
11:40:11
start mi1 range(n) loop
11:40:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:40:11
start mi1 range(n) 2loop
11:40:11
finish mi1 range(n) 2loop
11:40:11
start mi2
11:40:11
start mi2 range(p) 1 loop
11:40:11
finish mi2 range(p) 1 loop
11:40:11
start mi2 range(p) 2 loop
11:40:11
finish mi2 range(p) 2 loop
11:40:11
start mi2 range(NT) loop
11:40:11
finish mi2 range(NT) loop
11:40:11
start mi2 range(n) loop
11:40:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:40:11
start mi2 range(n) 2loop
11:40:11
finish mi2 range(n) 2loop
11:40:11
[[-2.79671175]]
end mi2 loop
11:40:11
estep
11:40:11
end estep
11:40:26
end pa11:40:26
goodness of fit correlation [0.08414019]
0.26221312257690343
[5.33696038e-01 5.17516595e-01 5.01608366e-01 5.30240740e-01
 4.97451310e-01 5.70953424e-01 6.01006287e-01 6.69914675e-01
 5.70067534e-01 5.54446676e-01 5.15951688e-01 5.13230114e-01
 4.94299720e-01 6.18735640e-01 4.94120024e-01 6.16330074e-01
 5.96244553e-01 5.01402863e-01 5.40743011e-01 4.99979449e-01
 6.16446098e-01 5.80293089e-01 5.65968845e-01 5.92429979e-01
 5.07898394e-01 6.27032700e-01 4.86828948e-01 5.89306687e-01
 5.93715212e-01 5.98364365e-01 4.98546663e-01 5.03427539e-01
 5.10552551e-01 4.98301371e-01 5.47349442e-01 5.74394709e-01
 5.27421746e-01 5.91540799e-01 4.97279011e-01 6.06128356e-01
 5.46299887e-01 6.21668531e-01 6.02771771e-01 6.23789385e-01
 5.60006515e-01 5.58867462e-01 5.32661889e-01 6.44560584e-01
 5.53125734e-01 5.88518845e-01 6.17504518e-01 5.24211976e-01
 6.16441498e-01 5.70743661e-01 5.84450053e-01 6.07192314e-01
 6.32482011e-01 6.02403895e-01 5.27422344e-01 6.47690980e-01
 5.08492422e-01 5.73584553e-01 6.32682572e-01 6.24952074e-01
 5.55893118e-01 5.38647638e-01 5.24656547e-01 7.07045874e-01
 3.50235569e-01 3.72672356e-01 3.38558537e-01 3.54632850e-01
 2.95911517e-01 3.80456654e-01 3.40739519e-01 3.41125360e-01
 3.67348611e-01 3.41028320e-01 3.83015103e-01 3.53459477e-01
 3.09616260e-01 3.40366134e-01 2.94453745e-01 3.40399677e-01
 3.52283396e-01 3.54540590e-01 3.87694925e-01 3.42840675e-01
 3.39507706e-01 3.58566246e-01 3.25807237e-01 3.30449714e-01
 3.09755799e-01 3.35833365e-01 3.38878669e-01 3.23300493e-01
 3.39366227e-01 3.30344898e-01 3.38989272e-01 3.37477724e-01
 3.52742501e-01 3.23825682e-01 3.43279731e-01 3.57547562e-01
 3.50683917e-01 3.60414658e-01 3.27343963e-01 3.62805618e-01
 3.40849873e-01 3.55833214e-01 3.54767456e-01 3.36648453e-01
 3.46874065e-01 3.54056927e-01 3.62667607e-01 3.35054931e-01
 3.54992443e-01 3.35001400e-01 3.54316138e-01 3.56949510e-01
 3.53589089e-01 3.76435227e-01 3.40013135e-01 3.54032554e-01
 3.12856969e-01 3.29884845e-01 3.56618007e-01 3.28271695e-01
 2.95457354e-01 3.21005827e-01 3.52733378e-01 3.41346939e-01
 3.59110999e-01 3.45793636e-01 3.65325131e-01 3.35975218e-01
 1.47130860e+00 9.78341729e-04]
start cluster 11:40:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41129 instead
  warnings.warn(
0
parallel submitted
11:40:51
parallel finished
11:43:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:44:07
start mi0
11:44:07
start mi0 range(p) 1 loop
11:44:07
finish mi0 range(p) 1 loop
11:44:07
start mi0 range(p) 2 loop
11:44:07
finish mi0 range(p) 2 loop
11:44:07
start mi0 range(NT) loop
11:44:07
finish mi0 range(NT) loop
11:44:07
start mi0 range(n) loop
11:44:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:44:07
start mi0 range(n) 2loop
11:44:07
finish mi0 range(n) 2loop
11:44:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:44:07
start mi1 range(p) 1 loop
11:44:07
finish mi1 range(p) 1 loop
11:44:07
start mi1 range(p) 2 loop
11:44:07
finish mi1 range(p) 2 loop
11:44:07
start mi1 range(NT) loop
11:44:07
finish mi1 range(NT) loop
11:44:07
start mi1 range(n) loop
11:44:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:44:07
start mi1 range(n) 2loop
11:44:07
finish mi1 range(n) 2loop
11:44:07
start mi2
11:44:07
start mi2 range(p) 1 loop
11:44:07
finish mi2 range(p) 1 loop
11:44:07
start mi2 range(p) 2 loop
11:44:07
finish mi2 range(p) 2 loop
11:44:07
start mi2 range(NT) loop
11:44:07
finish mi2 range(NT) loop
11:44:07
start mi2 range(n) loop
11:44:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:44:07
start mi2 range(n) 2loop
11:44:07
finish mi2 range(n) 2loop
11:44:07
start mi3
11:44:07
start mi3 range(p) 1 loop
11:44:07
finish mi3 range(p) 1 loop
11:44:07
start mi3 range(p) 2 loop
11:44:07
finish mi3 range(p) 2 loop
11:44:07
start mi3 range(NT) loop
11:44:07
finish mi3 range(NT) loop
11:44:08
start mi3 range(n) loop
11:44:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:44:08
start mi3 range(n) 2loop
11:44:08
finish mi3 range(n) 2loop
11:44:08
[[-2.47351155]]
end mi3 loop
11:44:08
estep
11:44:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:44:24
start ppi1
11:44:24
start mi0
11:44:24
start mi0 range(p) 1 loop
11:44:24
finish mi0 range(p) 1 loop
11:44:24
start mi0 range(p) 2 loop
11:44:24
finish mi0 range(p) 2 loop
11:44:24
start mi0 range(NT) loop
11:44:24
finish mi0 range(NT) loop
11:44:24
start mi0 range(n) loop
11:44:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:44:24
start mi0 range(n) 2loop
11:44:24
finish mi0 range(n) 2loop
11:44:24
start mi1
11:44:24
start mi1 range(p) 1 loop
11:44:24
finish mi1 range(p) 1 loop
11:44:24
start mi1 range(p) 2 loop
11:44:24
finish mi1 range(p) 2 loop
11:44:24
start mi1 range(NT) loop
11:44:24
finish mi1 range(NT) loop
11:44:24
start mi1 range(n) loop
11:44:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:44:25
start mi1 range(n) 2loop
11:44:25
finish mi1 range(n) 2loop
11:44:25
start mi2
11:44:25
start mi2 range(p) 1 loop
11:44:25
finish mi2 range(p) 1 loop
11:44:25
start mi2 range(p) 2 loop
11:44:25
finish mi2 range(p) 2 loop
11:44:25
start mi2 range(NT) loop
11:44:25
finish mi2 range(NT) loop
11:44:25
start mi2 range(n) loop
11:44:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:44:25
start mi2 range(n) 2loop
11:44:25
finish mi2 range(n) 2loop
11:44:25
start mi3
11:44:25
start mi3 range(p) 1 loop
11:44:25
finish mi3 range(p) 1 loop
11:44:25
start mi3 range(p) 2 loop
11:44:25
finish mi3 range(p) 2 loop
11:44:25
start mi3 range(NT) loop
11:44:25
finish mi3 range(NT) loop
11:44:25
start mi3 range(n) loop
11:44:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:44:25
start mi3 range(n) 2loop
11:44:25
finish mi3 range(n) 2loop
11:44:25
[[-2.47351155]]
end mi3 loop
11:44:25
estep
11:44:25
end estep
11:44:40
end pa11:44:40
goodness of fit correlation [0.02114572]
start cluster 11:44:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39033 instead
  warnings.warn(
1
parallel submitted
11:45:00
parallel finished
11:48:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:48:58
start mi0
11:48:58
start mi0 range(p) 1 loop
11:48:58
finish mi0 range(p) 1 loop
11:48:58
start mi0 range(p) 2 loop
11:48:58
finish mi0 range(p) 2 loop
11:48:58
start mi0 range(NT) loop
11:48:58
finish mi0 range(NT) loop
11:48:58
start mi0 range(n) loop
11:48:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:48:58
start mi0 range(n) 2loop
11:48:58
finish mi0 range(n) 2loop
11:48:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:48:59
start mi1 range(p) 1 loop
11:48:59
finish mi1 range(p) 1 loop
11:48:59
start mi1 range(p) 2 loop
11:48:59
finish mi1 range(p) 2 loop
11:48:59
start mi1 range(NT) loop
11:48:59
finish mi1 range(NT) loop
11:48:59
start mi1 range(n) loop
11:48:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:48:59
start mi1 range(n) 2loop
11:48:59
finish mi1 range(n) 2loop
11:48:59
start mi2
11:48:59
start mi2 range(p) 1 loop
11:48:59
finish mi2 range(p) 1 loop
11:48:59
start mi2 range(p) 2 loop
11:48:59
finish mi2 range(p) 2 loop
11:48:59
start mi2 range(NT) loop
11:48:59
finish mi2 range(NT) loop
11:48:59
start mi2 range(n) loop
11:48:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:48:59
start mi2 range(n) 2loop
11:48:59
finish mi2 range(n) 2loop
11:48:59
start mi3
11:48:59
start mi3 range(p) 1 loop
11:48:59
finish mi3 range(p) 1 loop
11:48:59
start mi3 range(p) 2 loop
11:48:59
finish mi3 range(p) 2 loop
11:48:59
start mi3 range(NT) loop
11:48:59
finish mi3 range(NT) loop
11:48:59
start mi3 range(n) loop
11:48:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:48:59
start mi3 range(n) 2loop
11:48:59
finish mi3 range(n) 2loop
11:48:59
[[-2.5052697]]
end mi3 loop
11:48:59
estep
11:48:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:49:15
start ppi1
11:49:15
start mi0
11:49:15
start mi0 range(p) 1 loop
11:49:15
finish mi0 range(p) 1 loop
11:49:15
start mi0 range(p) 2 loop
11:49:15
finish mi0 range(p) 2 loop
11:49:15
start mi0 range(NT) loop
11:49:15
finish mi0 range(NT) loop
11:49:15
start mi0 range(n) loop
11:49:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:49:15
start mi0 range(n) 2loop
11:49:15
finish mi0 range(n) 2loop
11:49:15
start mi1
11:49:15
start mi1 range(p) 1 loop
11:49:15
finish mi1 range(p) 1 loop
11:49:15
start mi1 range(p) 2 loop
11:49:15
finish mi1 range(p) 2 loop
11:49:15
start mi1 range(NT) loop
11:49:15
finish mi1 range(NT) loop
11:49:15
start mi1 range(n) loop
11:49:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:49:15
start mi1 range(n) 2loop
11:49:15
finish mi1 range(n) 2loop
11:49:15
start mi2
11:49:15
start mi2 range(p) 1 loop
11:49:15
finish mi2 range(p) 1 loop
11:49:15
start mi2 range(p) 2 loop
11:49:15
finish mi2 range(p) 2 loop
11:49:15
start mi2 range(NT) loop
11:49:15
finish mi2 range(NT) loop
11:49:15
start mi2 range(n) loop
11:49:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:49:15
start mi2 range(n) 2loop
11:49:15
finish mi2 range(n) 2loop
11:49:15
[[-2.56774566]]
end mi2 loop
11:49:15
estep
11:49:15
end estep
11:49:31
end pa11:49:31
goodness of fit correlation [0.17705453]
start cluster 11:49:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38926 instead
  warnings.warn(
2
parallel submitted
11:49:52
parallel finished
11:53:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:53:26
start mi0
11:53:26
start mi0 range(p) 1 loop
11:53:26
finish mi0 range(p) 1 loop
11:53:26
start mi0 range(p) 2 loop
11:53:26
finish mi0 range(p) 2 loop
11:53:26
start mi0 range(NT) loop
11:53:26
finish mi0 range(NT) loop
11:53:26
start mi0 range(n) loop
11:53:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:53:26
start mi0 range(n) 2loop
11:53:26
finish mi0 range(n) 2loop
11:53:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:53:26
start mi1 range(p) 1 loop
11:53:26
finish mi1 range(p) 1 loop
11:53:26
start mi1 range(p) 2 loop
11:53:26
finish mi1 range(p) 2 loop
11:53:26
start mi1 range(NT) loop
11:53:26
finish mi1 range(NT) loop
11:53:26
start mi1 range(n) loop
11:53:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:53:26
start mi1 range(n) 2loop
11:53:26
finish mi1 range(n) 2loop
11:53:26
start mi2
11:53:26
start mi2 range(p) 1 loop
11:53:26
finish mi2 range(p) 1 loop
11:53:26
start mi2 range(p) 2 loop
11:53:26
finish mi2 range(p) 2 loop
11:53:26
start mi2 range(NT) loop
11:53:27
finish mi2 range(NT) loop
11:53:27
start mi2 range(n) loop
11:53:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:53:27
start mi2 range(n) 2loop
11:53:27
finish mi2 range(n) 2loop
11:53:27
[[-2.58808573]]
end mi2 loop
11:53:27
estep
11:53:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:53:42
start ppi1
11:53:42
start mi0
11:53:42
start mi0 range(p) 1 loop
11:53:42
finish mi0 range(p) 1 loop
11:53:42
start mi0 range(p) 2 loop
11:53:42
finish mi0 range(p) 2 loop
11:53:42
start mi0 range(NT) loop
11:53:42
finish mi0 range(NT) loop
11:53:42
start mi0 range(n) loop
11:53:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:53:42
start mi0 range(n) 2loop
11:53:42
finish mi0 range(n) 2loop
11:53:42
start mi1
11:53:42
start mi1 range(p) 1 loop
11:53:42
finish mi1 range(p) 1 loop
11:53:42
start mi1 range(p) 2 loop
11:53:42
finish mi1 range(p) 2 loop
11:53:42
start mi1 range(NT) loop
11:53:42
finish mi1 range(NT) loop
11:53:42
start mi1 range(n) loop
11:53:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:53:42
start mi1 range(n) 2loop
11:53:42
finish mi1 range(n) 2loop
11:53:42
start mi2
11:53:42
start mi2 range(p) 1 loop
11:53:42
finish mi2 range(p) 1 loop
11:53:42
start mi2 range(p) 2 loop
11:53:42
finish mi2 range(p) 2 loop
11:53:42
start mi2 range(NT) loop
11:53:42
finish mi2 range(NT) loop
11:53:42
start mi2 range(n) loop
11:53:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:53:42
start mi2 range(n) 2loop
11:53:42
finish mi2 range(n) 2loop
11:53:42
[[-2.65058579]]
end mi2 loop
11:53:42
estep
11:53:42
end estep
11:53:58
end pa11:53:58
goodness of fit correlation [0.22605199]
start cluster 11:53:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37194 instead
  warnings.warn(
3
parallel submitted
11:54:20
parallel finished
11:57:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:57:19
start mi0
11:57:19
start mi0 range(p) 1 loop
11:57:19
finish mi0 range(p) 1 loop
11:57:19
start mi0 range(p) 2 loop
11:57:19
finish mi0 range(p) 2 loop
11:57:19
start mi0 range(NT) loop
11:57:19
finish mi0 range(NT) loop
11:57:19
start mi0 range(n) loop
11:57:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:57:19
start mi0 range(n) 2loop
11:57:19
finish mi0 range(n) 2loop
11:57:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:57:19
start mi1 range(p) 1 loop
11:57:19
finish mi1 range(p) 1 loop
11:57:19
start mi1 range(p) 2 loop
11:57:19
finish mi1 range(p) 2 loop
11:57:19
start mi1 range(NT) loop
11:57:19
finish mi1 range(NT) loop
11:57:19
start mi1 range(n) loop
11:57:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:57:19
start mi1 range(n) 2loop
11:57:19
finish mi1 range(n) 2loop
11:57:20
start mi2
11:57:20
start mi2 range(p) 1 loop
11:57:20
finish mi2 range(p) 1 loop
11:57:20
start mi2 range(p) 2 loop
11:57:20
finish mi2 range(p) 2 loop
11:57:20
start mi2 range(NT) loop
11:57:20
finish mi2 range(NT) loop
11:57:20
start mi2 range(n) loop
11:57:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:57:20
start mi2 range(n) 2loop
11:57:20
finish mi2 range(n) 2loop
11:57:20
[[-2.63518482]]
end mi2 loop
11:57:20
estep
11:57:20
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:57:35
start ppi1
11:57:35
start mi0
11:57:35
start mi0 range(p) 1 loop
11:57:35
finish mi0 range(p) 1 loop
11:57:35
start mi0 range(p) 2 loop
11:57:35
finish mi0 range(p) 2 loop
11:57:35
start mi0 range(NT) loop
11:57:35
finish mi0 range(NT) loop
11:57:35
start mi0 range(n) loop
11:57:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:57:35
start mi0 range(n) 2loop
11:57:35
finish mi0 range(n) 2loop
11:57:36
start mi1
11:57:36
start mi1 range(p) 1 loop
11:57:36
finish mi1 range(p) 1 loop
11:57:36
start mi1 range(p) 2 loop
11:57:36
finish mi1 range(p) 2 loop
11:57:36
start mi1 range(NT) loop
11:57:36
finish mi1 range(NT) loop
11:57:36
start mi1 range(n) loop
11:57:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:57:36
start mi1 range(n) 2loop
11:57:36
finish mi1 range(n) 2loop
11:57:36
start mi2
11:57:36
start mi2 range(p) 1 loop
11:57:36
finish mi2 range(p) 1 loop
11:57:36
start mi2 range(p) 2 loop
11:57:36
finish mi2 range(p) 2 loop
11:57:36
start mi2 range(NT) loop
11:57:36
finish mi2 range(NT) loop
11:57:36
start mi2 range(n) loop
11:57:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:57:36
start mi2 range(n) 2loop
11:57:36
finish mi2 range(n) 2loop
11:57:36
[[-2.69767991]]
end mi2 loop
11:57:36
estep
11:57:36
end estep
11:57:51
end pa11:57:51
goodness of fit correlation [0.22875695]
start cluster 11:57:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34492 instead
  warnings.warn(
4
parallel submitted
11:58:14
parallel finished
12:01:11
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:01:27
start mi0
12:01:27
start mi0 range(p) 1 loop
12:01:27
finish mi0 range(p) 1 loop
12:01:27
start mi0 range(p) 2 loop
12:01:27
finish mi0 range(p) 2 loop
12:01:27
start mi0 range(NT) loop
12:01:27
finish mi0 range(NT) loop
12:01:27
start mi0 range(n) loop
12:01:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:01:27
start mi0 range(n) 2loop
12:01:27
finish mi0 range(n) 2loop
12:01:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:01:27
start mi1 range(p) 1 loop
12:01:27
finish mi1 range(p) 1 loop
12:01:27
start mi1 range(p) 2 loop
12:01:27
finish mi1 range(p) 2 loop
12:01:27
start mi1 range(NT) loop
12:01:27
finish mi1 range(NT) loop
12:01:27
start mi1 range(n) loop
12:01:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:01:27
start mi1 range(n) 2loop
12:01:27
finish mi1 range(n) 2loop
12:01:27
start mi2
12:01:27
start mi2 range(p) 1 loop
12:01:27
finish mi2 range(p) 1 loop
12:01:27
start mi2 range(p) 2 loop
12:01:27
finish mi2 range(p) 2 loop
12:01:27
start mi2 range(NT) loop
12:01:27
finish mi2 range(NT) loop
12:01:27
start mi2 range(n) loop
12:01:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:01:27
start mi2 range(n) 2loop
12:01:27
finish mi2 range(n) 2loop
12:01:28
[[-2.62310964]]
end mi2 loop
12:01:28
estep
12:01:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:01:44
start ppi1
12:01:44
start mi0
12:01:44
start mi0 range(p) 1 loop
12:01:44
finish mi0 range(p) 1 loop
12:01:44
start mi0 range(p) 2 loop
12:01:44
finish mi0 range(p) 2 loop
12:01:44
start mi0 range(NT) loop
12:01:44
finish mi0 range(NT) loop
12:01:44
start mi0 range(n) loop
12:01:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:01:44
start mi0 range(n) 2loop
12:01:44
finish mi0 range(n) 2loop
12:01:44
start mi1
12:01:44
start mi1 range(p) 1 loop
12:01:44
finish mi1 range(p) 1 loop
12:01:44
start mi1 range(p) 2 loop
12:01:44
finish mi1 range(p) 2 loop
12:01:44
start mi1 range(NT) loop
12:01:45
finish mi1 range(NT) loop
12:01:45
start mi1 range(n) loop
12:01:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:01:45
start mi1 range(n) 2loop
12:01:45
finish mi1 range(n) 2loop
12:01:45
start mi2
12:01:45
start mi2 range(p) 1 loop
12:01:45
finish mi2 range(p) 1 loop
12:01:45
start mi2 range(p) 2 loop
12:01:45
finish mi2 range(p) 2 loop
12:01:45
start mi2 range(NT) loop
12:01:45
finish mi2 range(NT) loop
12:01:45
start mi2 range(n) loop
12:01:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:01:45
start mi2 range(n) 2loop
12:01:45
finish mi2 range(n) 2loop
12:01:45
[[-2.68560563]]
end mi2 loop
12:01:45
estep
12:01:45
end estep
12:02:01
end pa12:02:01
goodness of fit correlation [0.22194187]
start cluster 12:02:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39977 instead
  warnings.warn(
5
parallel submitted
12:02:21
parallel finished
12:04:27
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:04:37
start mi0
12:04:37
start mi0 range(p) 1 loop
12:04:37
finish mi0 range(p) 1 loop
12:04:37
start mi0 range(p) 2 loop
12:04:37
finish mi0 range(p) 2 loop
12:04:37
start mi0 range(NT) loop
12:04:37
finish mi0 range(NT) loop
12:04:37
start mi0 range(n) loop
12:04:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:04:38
start mi0 range(n) 2loop
12:04:38
finish mi0 range(n) 2loop
12:04:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:04:38
start mi1 range(p) 1 loop
12:04:38
finish mi1 range(p) 1 loop
12:04:38
start mi1 range(p) 2 loop
12:04:38
finish mi1 range(p) 2 loop
12:04:38
start mi1 range(NT) loop
12:04:38
finish mi1 range(NT) loop
12:04:38
start mi1 range(n) loop
12:04:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:04:38
start mi1 range(n) 2loop
12:04:38
finish mi1 range(n) 2loop
12:04:38
start mi2
12:04:38
start mi2 range(p) 1 loop
12:04:38
finish mi2 range(p) 1 loop
12:04:38
start mi2 range(p) 2 loop
12:04:38
finish mi2 range(p) 2 loop
12:04:38
start mi2 range(NT) loop
12:04:38
finish mi2 range(NT) loop
12:04:38
start mi2 range(n) loop
12:04:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:04:38
start mi2 range(n) 2loop
12:04:38
finish mi2 range(n) 2loop
12:04:38
[[-2.64151265]]
end mi2 loop
12:04:38
estep
12:04:38
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:04:54
start ppi1
12:04:54
start mi0
12:04:54
start mi0 range(p) 1 loop
12:04:54
finish mi0 range(p) 1 loop
12:04:54
start mi0 range(p) 2 loop
12:04:54
finish mi0 range(p) 2 loop
12:04:54
start mi0 range(NT) loop
12:04:54
finish mi0 range(NT) loop
12:04:54
start mi0 range(n) loop
12:04:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:04:54
start mi0 range(n) 2loop
12:04:54
finish mi0 range(n) 2loop
12:04:54
start mi1
12:04:54
start mi1 range(p) 1 loop
12:04:54
finish mi1 range(p) 1 loop
12:04:54
start mi1 range(p) 2 loop
12:04:54
finish mi1 range(p) 2 loop
12:04:54
start mi1 range(NT) loop
12:04:54
finish mi1 range(NT) loop
12:04:54
start mi1 range(n) loop
12:04:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:04:54
start mi1 range(n) 2loop
12:04:54
finish mi1 range(n) 2loop
12:04:54
start mi2
12:04:54
start mi2 range(p) 1 loop
12:04:54
finish mi2 range(p) 1 loop
12:04:54
start mi2 range(p) 2 loop
12:04:54
finish mi2 range(p) 2 loop
12:04:54
start mi2 range(NT) loop
12:04:54
finish mi2 range(NT) loop
12:04:54
start mi2 range(n) loop
12:04:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:04:54
start mi2 range(n) 2loop
12:04:54
finish mi2 range(n) 2loop
12:04:55
[[-2.70400734]]
end mi2 loop
12:04:55
estep
12:04:55
end estep
12:05:11
end pa12:05:11
goodness of fit correlation [0.20539261]
start cluster 12:05:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37072 instead
  warnings.warn(
6
parallel submitted
12:05:33
parallel finished
12:08:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:08:53
start mi0
12:08:53
start mi0 range(p) 1 loop
12:08:53
finish mi0 range(p) 1 loop
12:08:53
start mi0 range(p) 2 loop
12:08:53
finish mi0 range(p) 2 loop
12:08:53
start mi0 range(NT) loop
12:08:54
finish mi0 range(NT) loop
12:08:54
start mi0 range(n) loop
12:08:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:08:54
start mi0 range(n) 2loop
12:08:54
finish mi0 range(n) 2loop
12:08:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:08:54
start mi1 range(p) 1 loop
12:08:54
finish mi1 range(p) 1 loop
12:08:54
start mi1 range(p) 2 loop
12:08:54
finish mi1 range(p) 2 loop
12:08:54
start mi1 range(NT) loop
12:08:54
finish mi1 range(NT) loop
12:08:54
start mi1 range(n) loop
12:08:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:08:54
start mi1 range(n) 2loop
12:08:54
finish mi1 range(n) 2loop
12:08:54
start mi2
12:08:54
start mi2 range(p) 1 loop
12:08:54
finish mi2 range(p) 1 loop
12:08:54
start mi2 range(p) 2 loop
12:08:54
finish mi2 range(p) 2 loop
12:08:54
start mi2 range(NT) loop
12:08:54
finish mi2 range(NT) loop
12:08:54
start mi2 range(n) loop
12:08:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:08:54
start mi2 range(n) 2loop
12:08:54
finish mi2 range(n) 2loop
12:08:54
[[-2.66082503]]
end mi2 loop
12:08:54
estep
12:08:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:09:11
start ppi1
12:09:11
start mi0
12:09:11
start mi0 range(p) 1 loop
12:09:11
finish mi0 range(p) 1 loop
12:09:11
start mi0 range(p) 2 loop
12:09:11
finish mi0 range(p) 2 loop
12:09:11
start mi0 range(NT) loop
12:09:11
finish mi0 range(NT) loop
12:09:11
start mi0 range(n) loop
12:09:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:09:11
start mi0 range(n) 2loop
12:09:11
finish mi0 range(n) 2loop
12:09:11
start mi1
12:09:11
start mi1 range(p) 1 loop
12:09:11
finish mi1 range(p) 1 loop
12:09:11
start mi1 range(p) 2 loop
12:09:11
finish mi1 range(p) 2 loop
12:09:11
start mi1 range(NT) loop
12:09:11
finish mi1 range(NT) loop
12:09:11
start mi1 range(n) loop
12:09:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:09:11
start mi1 range(n) 2loop
12:09:11
finish mi1 range(n) 2loop
12:09:12
start mi2
12:09:12
start mi2 range(p) 1 loop
12:09:12
finish mi2 range(p) 1 loop
12:09:12
start mi2 range(p) 2 loop
12:09:12
finish mi2 range(p) 2 loop
12:09:12
start mi2 range(NT) loop
12:09:12
finish mi2 range(NT) loop
12:09:12
start mi2 range(n) loop
12:09:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:09:12
start mi2 range(n) 2loop
12:09:12
finish mi2 range(n) 2loop
12:09:12
[[-2.72331877]]
end mi2 loop
12:09:12
estep
12:09:12
end estep
12:09:29
end pa12:09:29
goodness of fit correlation [0.2336983]
start cluster 12:09:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40300 instead
  warnings.warn(
7
parallel submitted
12:09:51
parallel finished
12:13:28
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:13:39
start mi0
12:13:39
start mi0 range(p) 1 loop
12:13:39
finish mi0 range(p) 1 loop
12:13:39
start mi0 range(p) 2 loop
12:13:39
finish mi0 range(p) 2 loop
12:13:39
start mi0 range(NT) loop
12:13:39
finish mi0 range(NT) loop
12:13:39
start mi0 range(n) loop
12:13:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:13:39
start mi0 range(n) 2loop
12:13:39
finish mi0 range(n) 2loop
12:13:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:13:39
start mi1 range(p) 1 loop
12:13:39
finish mi1 range(p) 1 loop
12:13:39
start mi1 range(p) 2 loop
12:13:39
finish mi1 range(p) 2 loop
12:13:39
start mi1 range(NT) loop
12:13:39
finish mi1 range(NT) loop
12:13:39
start mi1 range(n) loop
12:13:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:13:39
start mi1 range(n) 2loop
12:13:39
finish mi1 range(n) 2loop
12:13:40
start mi2
12:13:40
start mi2 range(p) 1 loop
12:13:40
finish mi2 range(p) 1 loop
12:13:40
start mi2 range(p) 2 loop
12:13:40
finish mi2 range(p) 2 loop
12:13:40
start mi2 range(NT) loop
12:13:40
finish mi2 range(NT) loop
12:13:40
start mi2 range(n) loop
12:13:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:13:40
start mi2 range(n) 2loop
12:13:40
finish mi2 range(n) 2loop
12:13:40
[[-2.70341384]]
end mi2 loop
12:13:40
estep
12:13:40
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:13:55
start ppi1
12:13:55
start mi0
12:13:55
start mi0 range(p) 1 loop
12:13:55
finish mi0 range(p) 1 loop
12:13:55
start mi0 range(p) 2 loop
12:13:55
finish mi0 range(p) 2 loop
12:13:55
start mi0 range(NT) loop
12:13:55
finish mi0 range(NT) loop
12:13:55
start mi0 range(n) loop
12:13:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:13:55
start mi0 range(n) 2loop
12:13:55
finish mi0 range(n) 2loop
12:13:55
start mi1
12:13:55
start mi1 range(p) 1 loop
12:13:55
finish mi1 range(p) 1 loop
12:13:55
start mi1 range(p) 2 loop
12:13:55
finish mi1 range(p) 2 loop
12:13:55
start mi1 range(NT) loop
12:13:55
finish mi1 range(NT) loop
12:13:55
start mi1 range(n) loop
12:13:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:13:55
start mi1 range(n) 2loop
12:13:55
finish mi1 range(n) 2loop
12:13:55
start mi2
12:13:55
start mi2 range(p) 1 loop
12:13:55
finish mi2 range(p) 1 loop
12:13:56
start mi2 range(p) 2 loop
12:13:56
finish mi2 range(p) 2 loop
12:13:56
start mi2 range(NT) loop
12:13:56
finish mi2 range(NT) loop
12:13:56
start mi2 range(n) loop
12:13:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:13:56
start mi2 range(n) 2loop
12:13:56
finish mi2 range(n) 2loop
12:13:56
[[-2.76590646]]
end mi2 loop
12:13:56
estep
12:13:56
end estep
12:14:11
end pa12:14:11
goodness of fit correlation [0.27733407]
start cluster 12:14:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41272 instead
  warnings.warn(
8
parallel submitted
12:14:31
parallel finished
12:19:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:19:15
start mi0
12:19:15
start mi0 range(p) 1 loop
12:19:15
finish mi0 range(p) 1 loop
12:19:15
start mi0 range(p) 2 loop
12:19:15
finish mi0 range(p) 2 loop
12:19:15
start mi0 range(NT) loop
12:19:15
finish mi0 range(NT) loop
12:19:15
start mi0 range(n) loop
12:19:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:19:15
start mi0 range(n) 2loop
12:19:15
finish mi0 range(n) 2loop
12:19:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:19:15
start mi1 range(p) 1 loop
12:19:15
finish mi1 range(p) 1 loop
12:19:15
start mi1 range(p) 2 loop
12:19:15
finish mi1 range(p) 2 loop
12:19:15
start mi1 range(NT) loop
12:19:15
finish mi1 range(NT) loop
12:19:15
start mi1 range(n) loop
12:19:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:19:15
start mi1 range(n) 2loop
12:19:15
finish mi1 range(n) 2loop
12:19:15
start mi2
12:19:15
start mi2 range(p) 1 loop
12:19:15
finish mi2 range(p) 1 loop
12:19:15
start mi2 range(p) 2 loop
12:19:15
finish mi2 range(p) 2 loop
12:19:15
start mi2 range(NT) loop
12:19:15
finish mi2 range(NT) loop
12:19:15
start mi2 range(n) loop
12:19:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:19:15
start mi2 range(n) 2loop
12:19:15
finish mi2 range(n) 2loop
12:19:16
[[-2.7006789]]
end mi2 loop
12:19:16
estep
12:19:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:19:32
start ppi1
12:19:32
start mi0
12:19:32
start mi0 range(p) 1 loop
12:19:32
finish mi0 range(p) 1 loop
12:19:32
start mi0 range(p) 2 loop
12:19:32
finish mi0 range(p) 2 loop
12:19:32
start mi0 range(NT) loop
12:19:32
finish mi0 range(NT) loop
12:19:32
start mi0 range(n) loop
12:19:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:19:32
start mi0 range(n) 2loop
12:19:32
finish mi0 range(n) 2loop
12:19:32
start mi1
12:19:32
start mi1 range(p) 1 loop
12:19:32
finish mi1 range(p) 1 loop
12:19:32
start mi1 range(p) 2 loop
12:19:32
finish mi1 range(p) 2 loop
12:19:32
start mi1 range(NT) loop
12:19:32
finish mi1 range(NT) loop
12:19:32
start mi1 range(n) loop
12:19:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:19:33
start mi1 range(n) 2loop
12:19:33
finish mi1 range(n) 2loop
12:19:33
start mi2
12:19:33
start mi2 range(p) 1 loop
12:19:33
finish mi2 range(p) 1 loop
12:19:33
start mi2 range(p) 2 loop
12:19:33
finish mi2 range(p) 2 loop
12:19:33
start mi2 range(NT) loop
12:19:33
finish mi2 range(NT) loop
12:19:33
start mi2 range(n) loop
12:19:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:19:33
start mi2 range(n) 2loop
12:19:33
finish mi2 range(n) 2loop
12:19:33
[[-2.76317157]]
end mi2 loop
12:19:33
estep
12:19:33
end estep
12:19:50
end pa12:19:50
goodness of fit correlation [0.25100978]
start cluster 12:19:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33237 instead
  warnings.warn(
9
parallel submitted
12:20:12
parallel finished
12:23:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:23:50
start mi0
12:23:50
start mi0 range(p) 1 loop
12:23:50
finish mi0 range(p) 1 loop
12:23:50
start mi0 range(p) 2 loop
12:23:50
finish mi0 range(p) 2 loop
12:23:50
start mi0 range(NT) loop
12:23:50
finish mi0 range(NT) loop
12:23:50
start mi0 range(n) loop
12:23:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:23:50
start mi0 range(n) 2loop
12:23:50
finish mi0 range(n) 2loop
12:23:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:23:50
start mi1 range(p) 1 loop
12:23:50
finish mi1 range(p) 1 loop
12:23:50
start mi1 range(p) 2 loop
12:23:51
finish mi1 range(p) 2 loop
12:23:51
start mi1 range(NT) loop
12:23:51
finish mi1 range(NT) loop
12:23:51
start mi1 range(n) loop
12:23:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:23:51
start mi1 range(n) 2loop
12:23:51
finish mi1 range(n) 2loop
12:23:51
start mi2
12:23:51
start mi2 range(p) 1 loop
12:23:51
finish mi2 range(p) 1 loop
12:23:51
start mi2 range(p) 2 loop
12:23:51
finish mi2 range(p) 2 loop
12:23:51
start mi2 range(NT) loop
12:23:51
finish mi2 range(NT) loop
12:23:51
start mi2 range(n) loop
12:23:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:23:51
start mi2 range(n) 2loop
12:23:51
finish mi2 range(n) 2loop
12:23:51
[[-2.70907477]]
end mi2 loop
12:23:51
estep
12:23:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:24:08
start ppi1
12:24:08
start mi0
12:24:08
start mi0 range(p) 1 loop
12:24:08
finish mi0 range(p) 1 loop
12:24:08
start mi0 range(p) 2 loop
12:24:08
finish mi0 range(p) 2 loop
12:24:08
start mi0 range(NT) loop
12:24:08
finish mi0 range(NT) loop
12:24:08
start mi0 range(n) loop
12:24:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:24:08
start mi0 range(n) 2loop
12:24:08
finish mi0 range(n) 2loop
12:24:08
start mi1
12:24:08
start mi1 range(p) 1 loop
12:24:08
finish mi1 range(p) 1 loop
12:24:08
start mi1 range(p) 2 loop
12:24:08
finish mi1 range(p) 2 loop
12:24:08
start mi1 range(NT) loop
12:24:08
finish mi1 range(NT) loop
12:24:08
start mi1 range(n) loop
12:24:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:24:08
start mi1 range(n) 2loop
12:24:08
finish mi1 range(n) 2loop
12:24:09
start mi2
12:24:09
start mi2 range(p) 1 loop
12:24:09
finish mi2 range(p) 1 loop
12:24:09
start mi2 range(p) 2 loop
12:24:09
finish mi2 range(p) 2 loop
12:24:09
start mi2 range(NT) loop
12:24:09
finish mi2 range(NT) loop
12:24:09
start mi2 range(n) loop
12:24:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:24:09
start mi2 range(n) 2loop
12:24:09
finish mi2 range(n) 2loop
12:24:09
[[-2.77156731]]
end mi2 loop
12:24:09
estep
12:24:09
end estep
12:24:27
end pa12:24:27
goodness of fit correlation [0.24201766]
start cluster 12:24:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40460 instead
  warnings.warn(
10
parallel submitted
12:24:50
parallel finished
12:26:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:27:10
start mi0
12:27:10
start mi0 range(p) 1 loop
12:27:10
finish mi0 range(p) 1 loop
12:27:10
start mi0 range(p) 2 loop
12:27:10
finish mi0 range(p) 2 loop
12:27:10
start mi0 range(NT) loop
12:27:10
finish mi0 range(NT) loop
12:27:10
start mi0 range(n) loop
12:27:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:27:10
start mi0 range(n) 2loop
12:27:10
finish mi0 range(n) 2loop
12:27:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:27:10
start mi1 range(p) 1 loop
12:27:10
finish mi1 range(p) 1 loop
12:27:10
start mi1 range(p) 2 loop
12:27:10
finish mi1 range(p) 2 loop
12:27:10
start mi1 range(NT) loop
12:27:10
finish mi1 range(NT) loop
12:27:10
start mi1 range(n) loop
12:27:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:27:10
start mi1 range(n) 2loop
12:27:10
finish mi1 range(n) 2loop
12:27:10
start mi2
12:27:10
start mi2 range(p) 1 loop
12:27:10
finish mi2 range(p) 1 loop
12:27:10
start mi2 range(p) 2 loop
12:27:10
finish mi2 range(p) 2 loop
12:27:10
start mi2 range(NT) loop
12:27:10
finish mi2 range(NT) loop
12:27:10
start mi2 range(n) loop
12:27:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:27:10
start mi2 range(n) 2loop
12:27:10
finish mi2 range(n) 2loop
12:27:10
[[-2.71115494]]
end mi2 loop
12:27:10
estep
12:27:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:27:26
start ppi1
12:27:26
start mi0
12:27:26
start mi0 range(p) 1 loop
12:27:26
finish mi0 range(p) 1 loop
12:27:26
start mi0 range(p) 2 loop
12:27:26
finish mi0 range(p) 2 loop
12:27:26
start mi0 range(NT) loop
12:27:26
finish mi0 range(NT) loop
12:27:26
start mi0 range(n) loop
12:27:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:27:26
start mi0 range(n) 2loop
12:27:26
finish mi0 range(n) 2loop
12:27:26
start mi1
12:27:26
start mi1 range(p) 1 loop
12:27:26
finish mi1 range(p) 1 loop
12:27:26
start mi1 range(p) 2 loop
12:27:26
finish mi1 range(p) 2 loop
12:27:26
start mi1 range(NT) loop
12:27:26
finish mi1 range(NT) loop
12:27:26
start mi1 range(n) loop
12:27:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:27:26
start mi1 range(n) 2loop
12:27:26
finish mi1 range(n) 2loop
12:27:26
start mi2
12:27:26
start mi2 range(p) 1 loop
12:27:26
finish mi2 range(p) 1 loop
12:27:26
start mi2 range(p) 2 loop
12:27:26
finish mi2 range(p) 2 loop
12:27:26
start mi2 range(NT) loop
12:27:26
finish mi2 range(NT) loop
12:27:26
start mi2 range(n) loop
12:27:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:27:26
start mi2 range(n) 2loop
12:27:26
finish mi2 range(n) 2loop
12:27:26
[[-2.77364745]]
end mi2 loop
12:27:26
estep
12:27:26
end estep
12:27:43
end pa12:27:43
goodness of fit correlation [0.24347321]
start cluster 12:27:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41476 instead
  warnings.warn(
11
parallel submitted
12:28:05
parallel finished
12:31:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:31:45
start mi0
12:31:45
start mi0 range(p) 1 loop
12:31:45
finish mi0 range(p) 1 loop
12:31:45
start mi0 range(p) 2 loop
12:31:45
finish mi0 range(p) 2 loop
12:31:45
start mi0 range(NT) loop
12:31:45
finish mi0 range(NT) loop
12:31:45
start mi0 range(n) loop
12:31:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:31:45
start mi0 range(n) 2loop
12:31:45
finish mi0 range(n) 2loop
12:31:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:31:45
start mi1 range(p) 1 loop
12:31:45
finish mi1 range(p) 1 loop
12:31:45
start mi1 range(p) 2 loop
12:31:45
finish mi1 range(p) 2 loop
12:31:45
start mi1 range(NT) loop
12:31:45
finish mi1 range(NT) loop
12:31:45
start mi1 range(n) loop
12:31:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:31:45
start mi1 range(n) 2loop
12:31:45
finish mi1 range(n) 2loop
12:31:45
start mi2
12:31:45
start mi2 range(p) 1 loop
12:31:45
finish mi2 range(p) 1 loop
12:31:45
start mi2 range(p) 2 loop
12:31:45
finish mi2 range(p) 2 loop
12:31:45
start mi2 range(NT) loop
12:31:45
finish mi2 range(NT) loop
12:31:45
start mi2 range(n) loop
12:31:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:31:45
start mi2 range(n) 2loop
12:31:45
finish mi2 range(n) 2loop
12:31:45
[[-2.67537336]]
end mi2 loop
12:31:45
estep
12:31:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:32:01
start ppi1
12:32:01
start mi0
12:32:01
start mi0 range(p) 1 loop
12:32:01
finish mi0 range(p) 1 loop
12:32:01
start mi0 range(p) 2 loop
12:32:01
finish mi0 range(p) 2 loop
12:32:01
start mi0 range(NT) loop
12:32:01
finish mi0 range(NT) loop
12:32:01
start mi0 range(n) loop
12:32:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:32:01
start mi0 range(n) 2loop
12:32:01
finish mi0 range(n) 2loop
12:32:01
start mi1
12:32:01
start mi1 range(p) 1 loop
12:32:01
finish mi1 range(p) 1 loop
12:32:01
start mi1 range(p) 2 loop
12:32:01
finish mi1 range(p) 2 loop
12:32:01
start mi1 range(NT) loop
12:32:01
finish mi1 range(NT) loop
12:32:01
start mi1 range(n) loop
12:32:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:32:01
start mi1 range(n) 2loop
12:32:01
finish mi1 range(n) 2loop
12:32:01
start mi2
12:32:01
start mi2 range(p) 1 loop
12:32:01
finish mi2 range(p) 1 loop
12:32:01
start mi2 range(p) 2 loop
12:32:01
finish mi2 range(p) 2 loop
12:32:01
start mi2 range(NT) loop
12:32:01
finish mi2 range(NT) loop
12:32:02
start mi2 range(n) loop
12:32:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:32:02
start mi2 range(n) 2loop
12:32:02
finish mi2 range(n) 2loop
12:32:02
[[-2.7378666]]
end mi2 loop
12:32:02
estep
12:32:02
end estep
12:32:18
end pa12:32:18
goodness of fit correlation [0.21088552]
start cluster 12:32:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41261 instead
  warnings.warn(
12
parallel submitted
12:32:41
parallel finished
12:35:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:36:11
start mi0
12:36:11
start mi0 range(p) 1 loop
12:36:11
finish mi0 range(p) 1 loop
12:36:11
start mi0 range(p) 2 loop
12:36:11
finish mi0 range(p) 2 loop
12:36:11
start mi0 range(NT) loop
12:36:11
finish mi0 range(NT) loop
12:36:12
start mi0 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:36:12
start mi0 range(n) 2loop
12:36:12
finish mi0 range(n) 2loop
12:36:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:36:12
start mi1 range(p) 1 loop
12:36:12
finish mi1 range(p) 1 loop
12:36:12
start mi1 range(p) 2 loop
12:36:12
finish mi1 range(p) 2 loop
12:36:12
start mi1 range(NT) loop
12:36:12
finish mi1 range(NT) loop
12:36:12
start mi1 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:36:12
start mi1 range(n) 2loop
12:36:12
finish mi1 range(n) 2loop
12:36:12
start mi2
12:36:12
start mi2 range(p) 1 loop
12:36:12
finish mi2 range(p) 1 loop
12:36:12
start mi2 range(p) 2 loop
12:36:12
finish mi2 range(p) 2 loop
12:36:12
start mi2 range(NT) loop
12:36:12
finish mi2 range(NT) loop
12:36:12
start mi2 range(n) loop
12:36:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:36:12
start mi2 range(n) 2loop
12:36:12
finish mi2 range(n) 2loop
12:36:12
[[-2.72958315]]
end mi2 loop
12:36:12
estep
12:36:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:36:28
start ppi1
12:36:28
start mi0
12:36:28
start mi0 range(p) 1 loop
12:36:28
finish mi0 range(p) 1 loop
12:36:28
start mi0 range(p) 2 loop
12:36:28
finish mi0 range(p) 2 loop
12:36:28
start mi0 range(NT) loop
12:36:28
finish mi0 range(NT) loop
12:36:28
start mi0 range(n) loop
12:36:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:36:28
start mi0 range(n) 2loop
12:36:28
finish mi0 range(n) 2loop
12:36:28
start mi1
12:36:28
start mi1 range(p) 1 loop
12:36:28
finish mi1 range(p) 1 loop
12:36:28
start mi1 range(p) 2 loop
12:36:28
finish mi1 range(p) 2 loop
12:36:28
start mi1 range(NT) loop
12:36:28
finish mi1 range(NT) loop
12:36:28
start mi1 range(n) loop
12:36:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:36:28
start mi1 range(n) 2loop
12:36:28
finish mi1 range(n) 2loop
12:36:28
start mi2
12:36:28
start mi2 range(p) 1 loop
12:36:28
finish mi2 range(p) 1 loop
12:36:28
start mi2 range(p) 2 loop
12:36:28
finish mi2 range(p) 2 loop
12:36:28
start mi2 range(NT) loop
12:36:28
finish mi2 range(NT) loop
12:36:28
start mi2 range(n) loop
12:36:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:36:28
start mi2 range(n) 2loop
12:36:28
finish mi2 range(n) 2loop
12:36:29
[[-2.79207546]]
end mi2 loop
12:36:29
estep
12:36:29
end estep
12:36:45
end pa12:36:45
goodness of fit correlation [0.25306413]
start cluster 12:36:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46636 instead
  warnings.warn(
13
parallel submitted
12:37:08
parallel finished
12:40:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:40:39
start mi0
12:40:39
start mi0 range(p) 1 loop
12:40:39
finish mi0 range(p) 1 loop
12:40:39
start mi0 range(p) 2 loop
12:40:39
finish mi0 range(p) 2 loop
12:40:39
start mi0 range(NT) loop
12:40:39
finish mi0 range(NT) loop
12:40:39
start mi0 range(n) loop
12:40:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:40:39
start mi0 range(n) 2loop
12:40:39
finish mi0 range(n) 2loop
12:40:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:40:39
start mi1 range(p) 1 loop
12:40:39
finish mi1 range(p) 1 loop
12:40:39
start mi1 range(p) 2 loop
12:40:39
finish mi1 range(p) 2 loop
12:40:39
start mi1 range(NT) loop
12:40:39
finish mi1 range(NT) loop
12:40:39
start mi1 range(n) loop
12:40:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:40:39
start mi1 range(n) 2loop
12:40:39
finish mi1 range(n) 2loop
12:40:39
start mi2
12:40:39
start mi2 range(p) 1 loop
12:40:39
finish mi2 range(p) 1 loop
12:40:39
start mi2 range(p) 2 loop
12:40:39
finish mi2 range(p) 2 loop
12:40:39
start mi2 range(NT) loop
12:40:39
finish mi2 range(NT) loop
12:40:39
start mi2 range(n) loop
12:40:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:40:39
start mi2 range(n) 2loop
12:40:39
finish mi2 range(n) 2loop
12:40:39
[[-2.71706594]]
end mi2 loop
12:40:39
estep
12:40:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:40:55
start ppi1
12:40:55
start mi0
12:40:55
start mi0 range(p) 1 loop
12:40:55
finish mi0 range(p) 1 loop
12:40:55
start mi0 range(p) 2 loop
12:40:55
finish mi0 range(p) 2 loop
12:40:55
start mi0 range(NT) loop
12:40:55
finish mi0 range(NT) loop
12:40:55
start mi0 range(n) loop
12:40:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:40:55
start mi0 range(n) 2loop
12:40:55
finish mi0 range(n) 2loop
12:40:55
start mi1
12:40:55
start mi1 range(p) 1 loop
12:40:55
finish mi1 range(p) 1 loop
12:40:55
start mi1 range(p) 2 loop
12:40:55
finish mi1 range(p) 2 loop
12:40:55
start mi1 range(NT) loop
12:40:55
finish mi1 range(NT) loop
12:40:55
start mi1 range(n) loop
12:40:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:40:55
start mi1 range(n) 2loop
12:40:55
finish mi1 range(n) 2loop
12:40:56
start mi2
12:40:56
start mi2 range(p) 1 loop
12:40:56
finish mi2 range(p) 1 loop
12:40:56
start mi2 range(p) 2 loop
12:40:56
finish mi2 range(p) 2 loop
12:40:56
start mi2 range(NT) loop
12:40:56
finish mi2 range(NT) loop
12:40:56
start mi2 range(n) loop
12:40:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:40:56
start mi2 range(n) 2loop
12:40:56
finish mi2 range(n) 2loop
12:40:56
[[-2.77955838]]
end mi2 loop
12:40:56
estep
12:40:56
end estep
12:41:11
end pa12:41:11
goodness of fit correlation [0.24899005]
start cluster 12:41:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38296 instead
  warnings.warn(
14
parallel submitted
12:41:35
parallel finished
12:44:35
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:44:50
start mi0
12:44:50
start mi0 range(p) 1 loop
12:44:50
finish mi0 range(p) 1 loop
12:44:50
start mi0 range(p) 2 loop
12:44:50
finish mi0 range(p) 2 loop
12:44:50
start mi0 range(NT) loop
12:44:50
finish mi0 range(NT) loop
12:44:50
start mi0 range(n) loop
12:44:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:44:50
start mi0 range(n) 2loop
12:44:50
finish mi0 range(n) 2loop
12:44:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:44:50
start mi1 range(p) 1 loop
12:44:50
finish mi1 range(p) 1 loop
12:44:50
start mi1 range(p) 2 loop
12:44:50
finish mi1 range(p) 2 loop
12:44:50
start mi1 range(NT) loop
12:44:50
finish mi1 range(NT) loop
12:44:50
start mi1 range(n) loop
12:44:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:44:50
start mi1 range(n) 2loop
12:44:50
finish mi1 range(n) 2loop
12:44:50
start mi2
12:44:50
start mi2 range(p) 1 loop
12:44:50
finish mi2 range(p) 1 loop
12:44:50
start mi2 range(p) 2 loop
12:44:50
finish mi2 range(p) 2 loop
12:44:50
start mi2 range(NT) loop
12:44:50
finish mi2 range(NT) loop
12:44:50
start mi2 range(n) loop
12:44:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:44:50
start mi2 range(n) 2loop
12:44:50
finish mi2 range(n) 2loop
12:44:51
[[-2.71193443]]
end mi2 loop
12:44:51
estep
12:44:51
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:45:07
start ppi1
12:45:07
start mi0
12:45:07
start mi0 range(p) 1 loop
12:45:07
finish mi0 range(p) 1 loop
12:45:07
start mi0 range(p) 2 loop
12:45:07
finish mi0 range(p) 2 loop
12:45:07
start mi0 range(NT) loop
12:45:07
finish mi0 range(NT) loop
12:45:07
start mi0 range(n) loop
12:45:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:45:07
start mi0 range(n) 2loop
12:45:07
finish mi0 range(n) 2loop
12:45:07
start mi1
12:45:07
start mi1 range(p) 1 loop
12:45:07
finish mi1 range(p) 1 loop
12:45:07
start mi1 range(p) 2 loop
12:45:07
finish mi1 range(p) 2 loop
12:45:07
start mi1 range(NT) loop
12:45:07
finish mi1 range(NT) loop
12:45:07
start mi1 range(n) loop
12:45:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:45:07
start mi1 range(n) 2loop
12:45:07
finish mi1 range(n) 2loop
12:45:07
start mi2
12:45:07
start mi2 range(p) 1 loop
12:45:07
finish mi2 range(p) 1 loop
12:45:07
start mi2 range(p) 2 loop
12:45:07
finish mi2 range(p) 2 loop
12:45:07
start mi2 range(NT) loop
12:45:08
finish mi2 range(NT) loop
12:45:08
start mi2 range(n) loop
12:45:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:45:08
start mi2 range(n) 2loop
12:45:08
finish mi2 range(n) 2loop
12:45:08
[[-2.77442693]]
end mi2 loop
12:45:08
estep
12:45:08
end estep
12:45:24
end pa12:45:24
goodness of fit correlation [0.21210457]
start cluster 12:45:24
15
parallel submitted
12:45:47
parallel finished
12:48:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:49:10
start mi0
12:49:10
start mi0 range(p) 1 loop
12:49:10
finish mi0 range(p) 1 loop
12:49:10
start mi0 range(p) 2 loop
12:49:10
finish mi0 range(p) 2 loop
12:49:10
start mi0 range(NT) loop
12:49:10
finish mi0 range(NT) loop
12:49:10
start mi0 range(n) loop
12:49:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:49:10
start mi0 range(n) 2loop
12:49:10
finish mi0 range(n) 2loop
12:49:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:49:10
start mi1 range(p) 1 loop
12:49:10
finish mi1 range(p) 1 loop
12:49:10
start mi1 range(p) 2 loop
12:49:10
finish mi1 range(p) 2 loop
12:49:10
start mi1 range(NT) loop
12:49:10
finish mi1 range(NT) loop
12:49:10
start mi1 range(n) loop
12:49:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:49:10
start mi1 range(n) 2loop
12:49:10
finish mi1 range(n) 2loop
12:49:10
start mi2
12:49:10
start mi2 range(p) 1 loop
12:49:10
finish mi2 range(p) 1 loop
12:49:10
start mi2 range(p) 2 loop
12:49:10
finish mi2 range(p) 2 loop
12:49:10
start mi2 range(NT) loop
12:49:10
finish mi2 range(NT) loop
12:49:10
start mi2 range(n) loop
12:49:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:49:10
start mi2 range(n) 2loop
12:49:10
finish mi2 range(n) 2loop
12:49:10
[[-2.64367565]]
end mi2 loop
12:49:10
estep
12:49:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:49:28
start ppi1
12:49:28
start mi0
12:49:28
start mi0 range(p) 1 loop
12:49:28
finish mi0 range(p) 1 loop
12:49:28
start mi0 range(p) 2 loop
12:49:28
finish mi0 range(p) 2 loop
12:49:28
start mi0 range(NT) loop
12:49:28
finish mi0 range(NT) loop
12:49:28
start mi0 range(n) loop
12:49:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:49:28
start mi0 range(n) 2loop
12:49:28
finish mi0 range(n) 2loop
12:49:28
start mi1
12:49:28
start mi1 range(p) 1 loop
12:49:28
finish mi1 range(p) 1 loop
12:49:28
start mi1 range(p) 2 loop
12:49:28
finish mi1 range(p) 2 loop
12:49:28
start mi1 range(NT) loop
12:49:28
finish mi1 range(NT) loop
12:49:28
start mi1 range(n) loop
12:49:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:49:28
start mi1 range(n) 2loop
12:49:28
finish mi1 range(n) 2loop
12:49:28
start mi2
12:49:28
start mi2 range(p) 1 loop
12:49:28
finish mi2 range(p) 1 loop
12:49:28
start mi2 range(p) 2 loop
12:49:28
finish mi2 range(p) 2 loop
12:49:28
start mi2 range(NT) loop
12:49:28
finish mi2 range(NT) loop
12:49:28
start mi2 range(n) loop
12:49:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:49:29
start mi2 range(n) 2loop
12:49:29
finish mi2 range(n) 2loop
12:49:29
[[-2.70617021]]
end mi2 loop
12:49:29
estep
12:49:29
end estep
12:49:46
end pa12:49:46
goodness of fit correlation [0.22066049]
start cluster 12:49:46
16
parallel submitted
12:50:14
parallel finished
12:54:11
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:54:27
start mi0
12:54:27
start mi0 range(p) 1 loop
12:54:27
finish mi0 range(p) 1 loop
12:54:27
start mi0 range(p) 2 loop
12:54:27
finish mi0 range(p) 2 loop
12:54:27
start mi0 range(NT) loop
12:54:27
finish mi0 range(NT) loop
12:54:27
start mi0 range(n) loop
12:54:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:54:27
start mi0 range(n) 2loop
12:54:27
finish mi0 range(n) 2loop
12:54:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:54:27
start mi1 range(p) 1 loop
12:54:27
finish mi1 range(p) 1 loop
12:54:27
start mi1 range(p) 2 loop
12:54:27
finish mi1 range(p) 2 loop
12:54:27
start mi1 range(NT) loop
12:54:27
finish mi1 range(NT) loop
12:54:27
start mi1 range(n) loop
12:54:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:54:27
start mi1 range(n) 2loop
12:54:27
finish mi1 range(n) 2loop
12:54:28
start mi2
12:54:28
start mi2 range(p) 1 loop
12:54:28
finish mi2 range(p) 1 loop
12:54:28
start mi2 range(p) 2 loop
12:54:28
finish mi2 range(p) 2 loop
12:54:28
start mi2 range(NT) loop
12:54:28
finish mi2 range(NT) loop
12:54:28
start mi2 range(n) loop
12:54:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:54:28
start mi2 range(n) 2loop
12:54:28
finish mi2 range(n) 2loop
12:54:28
[[-2.60616033]]
end mi2 loop
12:54:28
estep
12:54:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:54:44
start ppi1
12:54:44
start mi0
12:54:44
start mi0 range(p) 1 loop
12:54:44
finish mi0 range(p) 1 loop
12:54:44
start mi0 range(p) 2 loop
12:54:44
finish mi0 range(p) 2 loop
12:54:44
start mi0 range(NT) loop
12:54:44
finish mi0 range(NT) loop
12:54:44
start mi0 range(n) loop
12:54:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:54:44
start mi0 range(n) 2loop
12:54:44
finish mi0 range(n) 2loop
12:54:44
start mi1
12:54:44
start mi1 range(p) 1 loop
12:54:44
finish mi1 range(p) 1 loop
12:54:44
start mi1 range(p) 2 loop
12:54:44
finish mi1 range(p) 2 loop
12:54:44
start mi1 range(NT) loop
12:54:44
finish mi1 range(NT) loop
12:54:44
start mi1 range(n) loop
12:54:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:54:44
start mi1 range(n) 2loop
12:54:44
finish mi1 range(n) 2loop
12:54:44
start mi2
12:54:44
start mi2 range(p) 1 loop
12:54:44
finish mi2 range(p) 1 loop
12:54:44
start mi2 range(p) 2 loop
12:54:44
finish mi2 range(p) 2 loop
12:54:44
start mi2 range(NT) loop
12:54:45
finish mi2 range(NT) loop
12:54:45
start mi2 range(n) loop
12:54:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:54:45
start mi2 range(n) 2loop
12:54:45
finish mi2 range(n) 2loop
12:54:45
[[-2.66865798]]
end mi2 loop
12:54:45
estep
12:54:45
end estep
12:55:01
end pa12:55:01
goodness of fit correlation [0.25336166]
start cluster 12:55:01
17
parallel submitted
12:55:26
parallel finished
12:58:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:58:59
start mi0
12:58:59
start mi0 range(p) 1 loop
12:58:59
finish mi0 range(p) 1 loop
12:58:59
start mi0 range(p) 2 loop
12:58:59
finish mi0 range(p) 2 loop
12:58:59
start mi0 range(NT) loop
12:58:59
finish mi0 range(NT) loop
12:58:59
start mi0 range(n) loop
12:58:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:58:59
start mi0 range(n) 2loop
12:58:59
finish mi0 range(n) 2loop
12:58:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:58:59
start mi1 range(p) 1 loop
12:58:59
finish mi1 range(p) 1 loop
12:58:59
start mi1 range(p) 2 loop
12:58:59
finish mi1 range(p) 2 loop
12:58:59
start mi1 range(NT) loop
12:58:59
finish mi1 range(NT) loop
12:58:59
start mi1 range(n) loop
12:58:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:59:00
start mi1 range(n) 2loop
12:59:00
finish mi1 range(n) 2loop
12:59:00
start mi2
12:59:00
start mi2 range(p) 1 loop
12:59:00
finish mi2 range(p) 1 loop
12:59:00
start mi2 range(p) 2 loop
12:59:00
finish mi2 range(p) 2 loop
12:59:00
start mi2 range(NT) loop
12:59:00
finish mi2 range(NT) loop
12:59:00
start mi2 range(n) loop
12:59:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:59:00
start mi2 range(n) 2loop
12:59:00
finish mi2 range(n) 2loop
12:59:00
[[-2.76823902]]
end mi2 loop
12:59:00
estep
12:59:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:59:17
start ppi1
12:59:17
start mi0
12:59:17
start mi0 range(p) 1 loop
12:59:17
finish mi0 range(p) 1 loop
12:59:17
start mi0 range(p) 2 loop
12:59:17
finish mi0 range(p) 2 loop
12:59:17
start mi0 range(NT) loop
12:59:17
finish mi0 range(NT) loop
12:59:17
start mi0 range(n) loop
12:59:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:59:18
start mi0 range(n) 2loop
12:59:18
finish mi0 range(n) 2loop
12:59:18
start mi1
12:59:18
start mi1 range(p) 1 loop
12:59:18
finish mi1 range(p) 1 loop
12:59:18
start mi1 range(p) 2 loop
12:59:18
finish mi1 range(p) 2 loop
12:59:18
start mi1 range(NT) loop
12:59:18
finish mi1 range(NT) loop
12:59:18
start mi1 range(n) loop
12:59:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:59:18
start mi1 range(n) 2loop
12:59:18
finish mi1 range(n) 2loop
12:59:18
start mi2
12:59:18
start mi2 range(p) 1 loop
12:59:18
finish mi2 range(p) 1 loop
12:59:18
start mi2 range(p) 2 loop
12:59:18
finish mi2 range(p) 2 loop
12:59:18
start mi2 range(NT) loop
12:59:18
finish mi2 range(NT) loop
12:59:18
start mi2 range(n) loop
12:59:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:59:18
start mi2 range(n) 2loop
12:59:18
finish mi2 range(n) 2loop
12:59:18
[[-2.83073114]]
end mi2 loop
12:59:18
estep
12:59:18
end estep
12:59:36
end pa12:59:36
goodness of fit correlation [0.27439447]
start cluster 12:59:36
18
parallel submitted
13:00:02
parallel finished
13:03:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:03:18
start mi0
13:03:18
start mi0 range(p) 1 loop
13:03:18
finish mi0 range(p) 1 loop
13:03:18
start mi0 range(p) 2 loop
13:03:18
finish mi0 range(p) 2 loop
13:03:18
start mi0 range(NT) loop
13:03:19
finish mi0 range(NT) loop
13:03:19
start mi0 range(n) loop
13:03:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:03:19
start mi0 range(n) 2loop
13:03:19
finish mi0 range(n) 2loop
13:03:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:03:19
start mi1 range(p) 1 loop
13:03:19
finish mi1 range(p) 1 loop
13:03:19
start mi1 range(p) 2 loop
13:03:19
finish mi1 range(p) 2 loop
13:03:19
start mi1 range(NT) loop
13:03:19
finish mi1 range(NT) loop
13:03:19
start mi1 range(n) loop
13:03:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:03:19
start mi1 range(n) 2loop
13:03:19
finish mi1 range(n) 2loop
13:03:19
start mi2
13:03:19
start mi2 range(p) 1 loop
13:03:19
finish mi2 range(p) 1 loop
13:03:19
start mi2 range(p) 2 loop
13:03:19
finish mi2 range(p) 2 loop
13:03:19
start mi2 range(NT) loop
13:03:19
finish mi2 range(NT) loop
13:03:19
start mi2 range(n) loop
13:03:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:03:19
start mi2 range(n) 2loop
13:03:19
finish mi2 range(n) 2loop
13:03:19
[[-2.78426665]]
end mi2 loop
13:03:19
estep
13:03:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:03:35
start ppi1
13:03:35
start mi0
13:03:35
start mi0 range(p) 1 loop
13:03:35
finish mi0 range(p) 1 loop
13:03:35
start mi0 range(p) 2 loop
13:03:35
finish mi0 range(p) 2 loop
13:03:35
start mi0 range(NT) loop
13:03:35
finish mi0 range(NT) loop
13:03:35
start mi0 range(n) loop
13:03:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:03:36
start mi0 range(n) 2loop
13:03:36
finish mi0 range(n) 2loop
13:03:36
start mi1
13:03:36
start mi1 range(p) 1 loop
13:03:36
finish mi1 range(p) 1 loop
13:03:36
start mi1 range(p) 2 loop
13:03:36
finish mi1 range(p) 2 loop
13:03:36
start mi1 range(NT) loop
13:03:36
finish mi1 range(NT) loop
13:03:36
start mi1 range(n) loop
13:03:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:03:36
start mi1 range(n) 2loop
13:03:36
finish mi1 range(n) 2loop
13:03:36
start mi2
13:03:36
start mi2 range(p) 1 loop
13:03:36
finish mi2 range(p) 1 loop
13:03:36
start mi2 range(p) 2 loop
13:03:36
finish mi2 range(p) 2 loop
13:03:36
start mi2 range(NT) loop
13:03:36
finish mi2 range(NT) loop
13:03:36
start mi2 range(n) loop
13:03:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:03:36
start mi2 range(n) 2loop
13:03:36
finish mi2 range(n) 2loop
13:03:36
[[-2.84675873]]
end mi2 loop
13:03:36
estep
13:03:36
end estep
13:03:53
end pa13:03:53
goodness of fit correlation [0.29451069]
start cluster 13:03:53
19
parallel submitted
13:04:18
parallel finished
13:06:52
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:07:06
start mi0
13:07:06
start mi0 range(p) 1 loop
13:07:06
finish mi0 range(p) 1 loop
13:07:07
start mi0 range(p) 2 loop
13:07:07
finish mi0 range(p) 2 loop
13:07:07
start mi0 range(NT) loop
13:07:07
finish mi0 range(NT) loop
13:07:07
start mi0 range(n) loop
13:07:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:07:07
start mi0 range(n) 2loop
13:07:07
finish mi0 range(n) 2loop
13:07:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:07:07
start mi1 range(p) 1 loop
13:07:07
finish mi1 range(p) 1 loop
13:07:07
start mi1 range(p) 2 loop
13:07:07
finish mi1 range(p) 2 loop
13:07:07
start mi1 range(NT) loop
13:07:07
finish mi1 range(NT) loop
13:07:07
start mi1 range(n) loop
13:07:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:07:07
start mi1 range(n) 2loop
13:07:07
finish mi1 range(n) 2loop
13:07:07
start mi2
13:07:07
start mi2 range(p) 1 loop
13:07:07
finish mi2 range(p) 1 loop
13:07:07
start mi2 range(p) 2 loop
13:07:07
finish mi2 range(p) 2 loop
13:07:07
start mi2 range(NT) loop
13:07:07
finish mi2 range(NT) loop
13:07:07
start mi2 range(n) loop
13:07:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:07:07
start mi2 range(n) 2loop
13:07:07
finish mi2 range(n) 2loop
13:07:07
[[-2.78319488]]
end mi2 loop
13:07:07
estep
13:07:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:07:25
start ppi1
13:07:25
start mi0
13:07:25
start mi0 range(p) 1 loop
13:07:25
finish mi0 range(p) 1 loop
13:07:25
start mi0 range(p) 2 loop
13:07:25
finish mi0 range(p) 2 loop
13:07:25
start mi0 range(NT) loop
13:07:25
finish mi0 range(NT) loop
13:07:25
start mi0 range(n) loop
13:07:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:07:25
start mi0 range(n) 2loop
13:07:25
finish mi0 range(n) 2loop
13:07:25
start mi1
13:07:25
start mi1 range(p) 1 loop
13:07:25
finish mi1 range(p) 1 loop
13:07:25
start mi1 range(p) 2 loop
13:07:25
finish mi1 range(p) 2 loop
13:07:25
start mi1 range(NT) loop
13:07:25
finish mi1 range(NT) loop
13:07:25
start mi1 range(n) loop
13:07:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:07:25
start mi1 range(n) 2loop
13:07:25
finish mi1 range(n) 2loop
13:07:26
start mi2
13:07:26
start mi2 range(p) 1 loop
13:07:26
finish mi2 range(p) 1 loop
13:07:26
start mi2 range(p) 2 loop
13:07:26
finish mi2 range(p) 2 loop
13:07:26
start mi2 range(NT) loop
13:07:26
finish mi2 range(NT) loop
13:07:26
start mi2 range(n) loop
13:07:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:07:26
start mi2 range(n) 2loop
13:07:26
finish mi2 range(n) 2loop
13:07:26
[[-2.84568696]]
end mi2 loop
13:07:26
estep
13:07:26
end estep
13:07:43
end pa13:07:43
goodness of fit correlation [0.26593518]
start cluster 13:07:43
20
parallel submitted
13:08:09
parallel finished
13:10:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:10:16
start mi0
13:10:16
start mi0 range(p) 1 loop
13:10:16
finish mi0 range(p) 1 loop
13:10:16
start mi0 range(p) 2 loop
13:10:16
finish mi0 range(p) 2 loop
13:10:16
start mi0 range(NT) loop
13:10:16
finish mi0 range(NT) loop
13:10:16
start mi0 range(n) loop
13:10:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:10:16
start mi0 range(n) 2loop
13:10:16
finish mi0 range(n) 2loop
13:10:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:10:16
start mi1 range(p) 1 loop
13:10:16
finish mi1 range(p) 1 loop
13:10:16
start mi1 range(p) 2 loop
13:10:16
finish mi1 range(p) 2 loop
13:10:16
start mi1 range(NT) loop
13:10:16
finish mi1 range(NT) loop
13:10:16
start mi1 range(n) loop
13:10:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:10:17
start mi1 range(n) 2loop
13:10:17
finish mi1 range(n) 2loop
13:10:17
start mi2
13:10:17
start mi2 range(p) 1 loop
13:10:17
finish mi2 range(p) 1 loop
13:10:17
start mi2 range(p) 2 loop
13:10:17
finish mi2 range(p) 2 loop
13:10:17
start mi2 range(NT) loop
13:10:17
finish mi2 range(NT) loop
13:10:17
start mi2 range(n) loop
13:10:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:10:17
start mi2 range(n) 2loop
13:10:17
finish mi2 range(n) 2loop
13:10:17
[[-2.84567851]]
end mi2 loop
13:10:17
estep
13:10:17
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:10:33
start ppi1
13:10:33
start mi0
13:10:33
start mi0 range(p) 1 loop
13:10:33
finish mi0 range(p) 1 loop
13:10:33
start mi0 range(p) 2 loop
13:10:33
finish mi0 range(p) 2 loop
13:10:33
start mi0 range(NT) loop
13:10:33
finish mi0 range(NT) loop
13:10:33
start mi0 range(n) loop
13:10:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:10:33
start mi0 range(n) 2loop
13:10:33
finish mi0 range(n) 2loop
13:10:34
start mi1
13:10:34
start mi1 range(p) 1 loop
13:10:34
finish mi1 range(p) 1 loop
13:10:34
start mi1 range(p) 2 loop
13:10:34
finish mi1 range(p) 2 loop
13:10:34
start mi1 range(NT) loop
13:10:34
finish mi1 range(NT) loop
13:10:34
start mi1 range(n) loop
13:10:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:10:34
start mi1 range(n) 2loop
13:10:34
finish mi1 range(n) 2loop
13:10:34
[[-2.90816111]]
end mi1 loop
13:10:34
estep
13:10:34
end estep
13:10:50
end pa13:10:50
goodness of fit correlation [0.29753222]
start cluster 13:10:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38851 instead
  warnings.warn(
21
parallel submitted
13:11:14
parallel finished
13:15:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:16:08
start mi0
13:16:08
start mi0 range(p) 1 loop
13:16:08
finish mi0 range(p) 1 loop
13:16:08
start mi0 range(p) 2 loop
13:16:08
finish mi0 range(p) 2 loop
13:16:08
start mi0 range(NT) loop
13:16:09
finish mi0 range(NT) loop
13:16:09
start mi0 range(n) loop
13:16:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:16:09
start mi0 range(n) 2loop
13:16:09
finish mi0 range(n) 2loop
13:16:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:16:09
start mi1 range(p) 1 loop
13:16:09
finish mi1 range(p) 1 loop
13:16:09
start mi1 range(p) 2 loop
13:16:09
finish mi1 range(p) 2 loop
13:16:09
start mi1 range(NT) loop
13:16:09
finish mi1 range(NT) loop
13:16:09
start mi1 range(n) loop
13:16:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:16:09
start mi1 range(n) 2loop
13:16:09
finish mi1 range(n) 2loop
13:16:09
start mi2
13:16:09
start mi2 range(p) 1 loop
13:16:09
finish mi2 range(p) 1 loop
13:16:09
start mi2 range(p) 2 loop
13:16:09
finish mi2 range(p) 2 loop
13:16:09
start mi2 range(NT) loop
13:16:09
finish mi2 range(NT) loop
13:16:09
start mi2 range(n) loop
13:16:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:16:09
start mi2 range(n) 2loop
13:16:09
finish mi2 range(n) 2loop
13:16:09
[[-2.78670271]]
end mi2 loop
13:16:09
estep
13:16:09
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:16:27
start ppi1
13:16:27
start mi0
13:16:27
start mi0 range(p) 1 loop
13:16:27
finish mi0 range(p) 1 loop
13:16:27
start mi0 range(p) 2 loop
13:16:27
finish mi0 range(p) 2 loop
13:16:27
start mi0 range(NT) loop
13:16:27
finish mi0 range(NT) loop
13:16:27
start mi0 range(n) loop
13:16:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:16:27
start mi0 range(n) 2loop
13:16:27
finish mi0 range(n) 2loop
13:16:27
start mi1
13:16:27
start mi1 range(p) 1 loop
13:16:27
finish mi1 range(p) 1 loop
13:16:27
start mi1 range(p) 2 loop
13:16:27
finish mi1 range(p) 2 loop
13:16:27
start mi1 range(NT) loop
13:16:27
finish mi1 range(NT) loop
13:16:28
start mi1 range(n) loop
13:16:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:16:28
start mi1 range(n) 2loop
13:16:28
finish mi1 range(n) 2loop
13:16:28
start mi2
13:16:28
start mi2 range(p) 1 loop
13:16:28
finish mi2 range(p) 1 loop
13:16:28
start mi2 range(p) 2 loop
13:16:28
finish mi2 range(p) 2 loop
13:16:28
start mi2 range(NT) loop
13:16:28
finish mi2 range(NT) loop
13:16:28
start mi2 range(n) loop
13:16:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:16:28
start mi2 range(n) 2loop
13:16:28
finish mi2 range(n) 2loop
13:16:28
[[-2.84919479]]
end mi2 loop
13:16:28
estep
13:16:28
end estep
13:16:46
end pa13:16:46
goodness of fit correlation [0.07553213]
0.29753221585815937
[6.08447518e-01 5.78324786e-01 5.05297805e-01 6.39845518e-01
 5.17572073e-01 6.01787154e-01 6.11203147e-01 6.52973806e-01
 6.41041553e-01 7.06362798e-01 5.75329864e-01 5.75530209e-01
 6.07088981e-01 6.03532836e-01 5.37993733e-01 6.54688857e-01
 6.88409722e-01 5.89396317e-01 5.97754583e-01 5.26177441e-01
 6.80778511e-01 6.17129527e-01 5.11294940e-01 6.08770022e-01
 5.48770793e-01 6.50088476e-01 5.11598282e-01 6.36339160e-01
 6.45199909e-01 6.50339274e-01 5.19317889e-01 5.46577818e-01
 5.31419920e-01 7.00186553e-01 5.94297964e-01 6.05119024e-01
 5.52239517e-01 6.56591866e-01 5.03100436e-01 6.24135095e-01
 6.10519290e-01 6.40035101e-01 6.22258530e-01 6.93665702e-01
 6.63427765e-01 5.84167445e-01 6.51623674e-01 6.34001333e-01
 5.03606579e-01 6.06690275e-01 6.69009498e-01 5.73565953e-01
 6.51493481e-01 5.52389450e-01 7.28293716e-01 6.54214867e-01
 4.88771392e-01 6.25047915e-01 5.46035134e-01 6.85757972e-01
 5.06876128e-01 5.61403780e-01 6.34495042e-01 5.77026995e-01
 5.23288103e-01 5.38301958e-01 5.45945893e-01 7.18702636e-01
 3.66342994e-01 3.62133738e-01 3.30195459e-01 3.48682713e-01
 3.61203961e-01 3.59131813e-01 3.29228133e-01 3.45986457e-01
 3.47533660e-01 3.38000573e-01 3.58821547e-01 3.62240798e-01
 3.50441963e-01 3.44054810e-01 3.72054971e-01 3.38796259e-01
 3.36772013e-01 3.59403082e-01 3.56993058e-01 3.69630237e-01
 3.32085097e-01 3.53262178e-01 3.35616188e-01 3.33833115e-01
 3.59912635e-01 3.35770642e-01 3.21110746e-01 3.22565279e-01
 3.42458020e-01 3.39409419e-01 3.34130394e-01 3.55322497e-01
 3.81350798e-01 3.36089939e-01 3.61864380e-01 3.47286983e-01
 3.30702554e-01 3.49617230e-01 3.41036541e-01 3.49298871e-01
 3.33943599e-01 3.52279866e-01 3.49267188e-01 3.40359698e-01
 3.46760307e-01 3.64338676e-01 3.44371407e-01 3.42476601e-01
 3.72246065e-01 3.36837322e-01 3.45371653e-01 3.60973819e-01
 3.49222741e-01 3.71298849e-01 3.31149487e-01 3.42800212e-01
 3.36193722e-01 3.31397366e-01 3.63064301e-01 3.30239262e-01
 3.19200915e-01 3.27525653e-01 3.49071473e-01 3.50726990e-01
 3.42835131e-01 3.47523392e-01 3.73703601e-01 3.32088958e-01
 1.46260629e+00 9.37783463e-04]
start cluster 13:16:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34319 instead
  warnings.warn(
0
parallel submitted
13:17:13
parallel finished
13:21:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:21:35
start mi0
13:21:35
start mi0 range(p) 1 loop
13:21:35
finish mi0 range(p) 1 loop
13:21:35
start mi0 range(p) 2 loop
13:21:35
finish mi0 range(p) 2 loop
13:21:35
start mi0 range(NT) loop
13:21:36
finish mi0 range(NT) loop
13:21:36
start mi0 range(n) loop
13:21:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:21:36
start mi0 range(n) 2loop
13:21:36
finish mi0 range(n) 2loop
13:21:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:21:36
start mi1 range(p) 1 loop
13:21:36
finish mi1 range(p) 1 loop
13:21:36
start mi1 range(p) 2 loop
13:21:36
finish mi1 range(p) 2 loop
13:21:36
start mi1 range(NT) loop
13:21:36
finish mi1 range(NT) loop
13:21:36
start mi1 range(n) loop
13:21:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:21:36
start mi1 range(n) 2loop
13:21:36
finish mi1 range(n) 2loop
13:21:36
start mi2
13:21:36
start mi2 range(p) 1 loop
13:21:36
finish mi2 range(p) 1 loop
13:21:36
start mi2 range(p) 2 loop
13:21:36
finish mi2 range(p) 2 loop
13:21:36
start mi2 range(NT) loop
13:21:36
finish mi2 range(NT) loop
13:21:36
start mi2 range(n) loop
13:21:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:21:36
start mi2 range(n) 2loop
13:21:36
finish mi2 range(n) 2loop
13:21:36
start mi3
13:21:36
start mi3 range(p) 1 loop
13:21:36
finish mi3 range(p) 1 loop
13:21:36
start mi3 range(p) 2 loop
13:21:36
finish mi3 range(p) 2 loop
13:21:36
start mi3 range(NT) loop
13:21:36
finish mi3 range(NT) loop
13:21:36
start mi3 range(n) loop
13:21:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:21:37
start mi3 range(n) 2loop
13:21:37
finish mi3 range(n) 2loop
13:21:37
[[-2.4951255]]
end mi3 loop
13:21:37
estep
13:21:37
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:21:53
start ppi1
13:21:53
start mi0
13:21:53
start mi0 range(p) 1 loop
13:21:53
finish mi0 range(p) 1 loop
13:21:53
start mi0 range(p) 2 loop
13:21:53
finish mi0 range(p) 2 loop
13:21:53
start mi0 range(NT) loop
13:21:53
finish mi0 range(NT) loop
13:21:53
start mi0 range(n) loop
13:21:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:21:53
start mi0 range(n) 2loop
13:21:53
finish mi0 range(n) 2loop
13:21:53
start mi1
13:21:53
start mi1 range(p) 1 loop
13:21:53
finish mi1 range(p) 1 loop
13:21:53
start mi1 range(p) 2 loop
13:21:53
finish mi1 range(p) 2 loop
13:21:53
start mi1 range(NT) loop
13:21:53
finish mi1 range(NT) loop
13:21:53
start mi1 range(n) loop
13:21:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:21:53
start mi1 range(n) 2loop
13:21:53
finish mi1 range(n) 2loop
13:21:53
start mi2
13:21:53
start mi2 range(p) 1 loop
13:21:53
finish mi2 range(p) 1 loop
13:21:53
start mi2 range(p) 2 loop
13:21:53
finish mi2 range(p) 2 loop
13:21:53
start mi2 range(NT) loop
13:21:53
finish mi2 range(NT) loop
13:21:53
start mi2 range(n) loop
13:21:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:21:53
start mi2 range(n) 2loop
13:21:53
finish mi2 range(n) 2loop
13:21:54
start mi3
13:21:54
start mi3 range(p) 1 loop
13:21:54
finish mi3 range(p) 1 loop
13:21:54
start mi3 range(p) 2 loop
13:21:54
finish mi3 range(p) 2 loop
13:21:54
start mi3 range(NT) loop
13:21:54
finish mi3 range(NT) loop
13:21:54
start mi3 range(n) loop
13:21:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:21:54
start mi3 range(n) 2loop
13:21:54
finish mi3 range(n) 2loop
13:21:54
[[-2.4951255]]
end mi3 loop
13:21:54
estep
13:21:54
end estep
13:22:10
end pa13:22:10
goodness of fit correlation [0.06013981]
start cluster 13:22:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42866 instead
  warnings.warn(
1
parallel submitted
13:22:34
parallel finished
13:27:37
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:27:52
start mi0
13:27:52
start mi0 range(p) 1 loop
13:27:52
finish mi0 range(p) 1 loop
13:27:52
start mi0 range(p) 2 loop
13:27:52
finish mi0 range(p) 2 loop
13:27:52
start mi0 range(NT) loop
13:27:52
finish mi0 range(NT) loop
13:27:52
start mi0 range(n) loop
13:27:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:27:52
start mi0 range(n) 2loop
13:27:52
finish mi0 range(n) 2loop
13:27:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:27:52
start mi1 range(p) 1 loop
13:27:52
finish mi1 range(p) 1 loop
13:27:52
start mi1 range(p) 2 loop
13:27:52
finish mi1 range(p) 2 loop
13:27:52
start mi1 range(NT) loop
13:27:53
finish mi1 range(NT) loop
13:27:53
start mi1 range(n) loop
13:27:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:27:53
start mi1 range(n) 2loop
13:27:53
finish mi1 range(n) 2loop
13:27:53
start mi2
13:27:53
start mi2 range(p) 1 loop
13:27:53
finish mi2 range(p) 1 loop
13:27:53
start mi2 range(p) 2 loop
13:27:53
finish mi2 range(p) 2 loop
13:27:53
start mi2 range(NT) loop
13:27:53
finish mi2 range(NT) loop
13:27:53
start mi2 range(n) loop
13:27:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:27:53
start mi2 range(n) 2loop
13:27:53
finish mi2 range(n) 2loop
13:27:53
start mi3
13:27:53
start mi3 range(p) 1 loop
13:27:53
finish mi3 range(p) 1 loop
13:27:53
start mi3 range(p) 2 loop
13:27:53
finish mi3 range(p) 2 loop
13:27:53
start mi3 range(NT) loop
13:27:53
finish mi3 range(NT) loop
13:27:53
start mi3 range(n) loop
13:27:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:27:53
start mi3 range(n) 2loop
13:27:53
finish mi3 range(n) 2loop
13:27:53
[[-2.50250282]]
end mi3 loop
13:27:53
estep
13:27:53
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:28:09
start ppi1
13:28:09
start mi0
13:28:09
start mi0 range(p) 1 loop
13:28:09
finish mi0 range(p) 1 loop
13:28:09
start mi0 range(p) 2 loop
13:28:09
finish mi0 range(p) 2 loop
13:28:09
start mi0 range(NT) loop
13:28:09
finish mi0 range(NT) loop
13:28:09
start mi0 range(n) loop
13:28:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:28:10
start mi0 range(n) 2loop
13:28:10
finish mi0 range(n) 2loop
13:28:10
start mi1
13:28:10
start mi1 range(p) 1 loop
13:28:10
finish mi1 range(p) 1 loop
13:28:10
start mi1 range(p) 2 loop
13:28:10
finish mi1 range(p) 2 loop
13:28:10
start mi1 range(NT) loop
13:28:10
finish mi1 range(NT) loop
13:28:10
start mi1 range(n) loop
13:28:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:28:10
start mi1 range(n) 2loop
13:28:10
finish mi1 range(n) 2loop
13:28:10
start mi2
13:28:10
start mi2 range(p) 1 loop
13:28:10
finish mi2 range(p) 1 loop
13:28:10
start mi2 range(p) 2 loop
13:28:10
finish mi2 range(p) 2 loop
13:28:10
start mi2 range(NT) loop
13:28:10
finish mi2 range(NT) loop
13:28:10
start mi2 range(n) loop
13:28:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:28:10
start mi2 range(n) 2loop
13:28:10
finish mi2 range(n) 2loop
13:28:10
[[-2.56497789]]
end mi2 loop
13:28:10
estep
13:28:10
end estep
13:28:26
end pa13:28:26
goodness of fit correlation [0.17348375]
start cluster 13:28:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37006 instead
  warnings.warn(
2
parallel submitted
13:28:50
parallel finished
13:34:28
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:34:46
start mi0
13:34:46
start mi0 range(p) 1 loop
13:34:46
finish mi0 range(p) 1 loop
13:34:46
start mi0 range(p) 2 loop
13:34:46
finish mi0 range(p) 2 loop
13:34:46
start mi0 range(NT) loop
13:34:46
finish mi0 range(NT) loop
13:34:46
start mi0 range(n) loop
13:34:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:34:46
start mi0 range(n) 2loop
13:34:46
finish mi0 range(n) 2loop
13:34:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:34:46
start mi1 range(p) 1 loop
13:34:46
finish mi1 range(p) 1 loop
13:34:46
start mi1 range(p) 2 loop
13:34:46
finish mi1 range(p) 2 loop
13:34:46
start mi1 range(NT) loop
13:34:46
finish mi1 range(NT) loop
13:34:46
start mi1 range(n) loop
13:34:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:34:46
start mi1 range(n) 2loop
13:34:46
finish mi1 range(n) 2loop
13:34:46
start mi2
13:34:46
start mi2 range(p) 1 loop
13:34:46
finish mi2 range(p) 1 loop
13:34:46
start mi2 range(p) 2 loop
13:34:46
finish mi2 range(p) 2 loop
13:34:46
start mi2 range(NT) loop
13:34:47
finish mi2 range(NT) loop
13:34:47
start mi2 range(n) loop
13:34:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:34:47
start mi2 range(n) 2loop
13:34:47
finish mi2 range(n) 2loop
13:34:47
[[-2.57480422]]
end mi2 loop
13:34:47
estep
13:34:47
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:35:03
start ppi1
13:35:03
start mi0
13:35:03
start mi0 range(p) 1 loop
13:35:03
finish mi0 range(p) 1 loop
13:35:03
start mi0 range(p) 2 loop
13:35:03
finish mi0 range(p) 2 loop
13:35:03
start mi0 range(NT) loop
13:35:03
finish mi0 range(NT) loop
13:35:03
start mi0 range(n) loop
13:35:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:35:03
start mi0 range(n) 2loop
13:35:03
finish mi0 range(n) 2loop
13:35:03
start mi1
13:35:03
start mi1 range(p) 1 loop
13:35:03
finish mi1 range(p) 1 loop
13:35:03
start mi1 range(p) 2 loop
13:35:03
finish mi1 range(p) 2 loop
13:35:03
start mi1 range(NT) loop
13:35:03
finish mi1 range(NT) loop
13:35:03
start mi1 range(n) loop
13:35:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:35:03
start mi1 range(n) 2loop
13:35:03
finish mi1 range(n) 2loop
13:35:03
start mi2
13:35:03
start mi2 range(p) 1 loop
13:35:03
finish mi2 range(p) 1 loop
13:35:03
start mi2 range(p) 2 loop
13:35:03
finish mi2 range(p) 2 loop
13:35:03
start mi2 range(NT) loop
13:35:03
finish mi2 range(NT) loop
13:35:04
start mi2 range(n) loop
13:35:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:35:04
start mi2 range(n) 2loop
13:35:04
finish mi2 range(n) 2loop
13:35:04
[[-2.63730658]]
end mi2 loop
13:35:04
estep
13:35:04
end estep
13:35:20
end pa13:35:20
goodness of fit correlation [0.21432196]
start cluster 13:35:20
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39657 instead
  warnings.warn(
3
parallel submitted
13:35:44
parallel finished
13:40:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:41:17
start mi0
13:41:17
start mi0 range(p) 1 loop
13:41:17
finish mi0 range(p) 1 loop
13:41:17
start mi0 range(p) 2 loop
13:41:17
finish mi0 range(p) 2 loop
13:41:17
start mi0 range(NT) loop
13:41:17
finish mi0 range(NT) loop
13:41:17
start mi0 range(n) loop
13:41:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:41:17
start mi0 range(n) 2loop
13:41:17
finish mi0 range(n) 2loop
13:41:17
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:41:17
start mi1 range(p) 1 loop
13:41:17
finish mi1 range(p) 1 loop
13:41:17
start mi1 range(p) 2 loop
13:41:17
finish mi1 range(p) 2 loop
13:41:17
start mi1 range(NT) loop
13:41:17
finish mi1 range(NT) loop
13:41:17
start mi1 range(n) loop
13:41:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:41:17
start mi1 range(n) 2loop
13:41:17
finish mi1 range(n) 2loop
13:41:18
start mi2
13:41:18
start mi2 range(p) 1 loop
13:41:18
finish mi2 range(p) 1 loop
13:41:18
start mi2 range(p) 2 loop
13:41:18
finish mi2 range(p) 2 loop
13:41:18
start mi2 range(NT) loop
13:41:18
finish mi2 range(NT) loop
13:41:18
start mi2 range(n) loop
13:41:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:41:18
start mi2 range(n) 2loop
13:41:18
finish mi2 range(n) 2loop
13:41:18
[[-2.59691706]]
end mi2 loop
13:41:18
estep
13:41:18
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:41:34
start ppi1
13:41:34
start mi0
13:41:34
start mi0 range(p) 1 loop
13:41:34
finish mi0 range(p) 1 loop
13:41:34
start mi0 range(p) 2 loop
13:41:34
finish mi0 range(p) 2 loop
13:41:34
start mi0 range(NT) loop
13:41:34
finish mi0 range(NT) loop
13:41:34
start mi0 range(n) loop
13:41:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:41:34
start mi0 range(n) 2loop
13:41:34
finish mi0 range(n) 2loop
13:41:34
start mi1
13:41:34
start mi1 range(p) 1 loop
13:41:34
finish mi1 range(p) 1 loop
13:41:34
start mi1 range(p) 2 loop
13:41:34
finish mi1 range(p) 2 loop
13:41:34
start mi1 range(NT) loop
13:41:35
finish mi1 range(NT) loop
13:41:35
start mi1 range(n) loop
13:41:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:41:35
start mi1 range(n) 2loop
13:41:35
finish mi1 range(n) 2loop
13:41:35
start mi2
13:41:35
start mi2 range(p) 1 loop
13:41:35
finish mi2 range(p) 1 loop
13:41:35
start mi2 range(p) 2 loop
13:41:35
finish mi2 range(p) 2 loop
13:41:35
start mi2 range(NT) loop
13:41:35
finish mi2 range(NT) loop
13:41:35
start mi2 range(n) loop
13:41:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:41:35
start mi2 range(n) 2loop
13:41:35
finish mi2 range(n) 2loop
13:41:35
[[-2.65941585]]
end mi2 loop
13:41:35
estep
13:41:35
end estep
13:41:51
end pa13:41:51
goodness of fit correlation [0.15937485]
start cluster 13:41:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33681 instead
  warnings.warn(
4
parallel submitted
13:42:16
parallel finished
13:47:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:47:36
start mi0
13:47:36
start mi0 range(p) 1 loop
13:47:36
finish mi0 range(p) 1 loop
13:47:36
start mi0 range(p) 2 loop
13:47:36
finish mi0 range(p) 2 loop
13:47:36
start mi0 range(NT) loop
13:47:36
finish mi0 range(NT) loop
13:47:36
start mi0 range(n) loop
13:47:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:47:36
start mi0 range(n) 2loop
13:47:36
finish mi0 range(n) 2loop
13:47:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:47:36
start mi1 range(p) 1 loop
13:47:36
finish mi1 range(p) 1 loop
13:47:36
start mi1 range(p) 2 loop
13:47:36
finish mi1 range(p) 2 loop
13:47:36
start mi1 range(NT) loop
13:47:36
finish mi1 range(NT) loop
13:47:36
start mi1 range(n) loop
13:47:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:47:36
start mi1 range(n) 2loop
13:47:36
finish mi1 range(n) 2loop
13:47:36
start mi2
13:47:36
start mi2 range(p) 1 loop
13:47:36
finish mi2 range(p) 1 loop
13:47:36
start mi2 range(p) 2 loop
13:47:36
finish mi2 range(p) 2 loop
13:47:36
start mi2 range(NT) loop
13:47:36
finish mi2 range(NT) loop
13:47:36
start mi2 range(n) loop
13:47:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:47:36
start mi2 range(n) 2loop
13:47:36
finish mi2 range(n) 2loop
13:47:37
[[-2.57901396]]
end mi2 loop
13:47:37
estep
13:47:37
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:47:53
start ppi1
13:47:53
start mi0
13:47:53
start mi0 range(p) 1 loop
13:47:53
finish mi0 range(p) 1 loop
13:47:53
start mi0 range(p) 2 loop
13:47:53
finish mi0 range(p) 2 loop
13:47:53
start mi0 range(NT) loop
13:47:53
finish mi0 range(NT) loop
13:47:53
start mi0 range(n) loop
13:47:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:47:53
start mi0 range(n) 2loop
13:47:53
finish mi0 range(n) 2loop
13:47:53
start mi1
13:47:53
start mi1 range(p) 1 loop
13:47:53
finish mi1 range(p) 1 loop
13:47:53
start mi1 range(p) 2 loop
13:47:53
finish mi1 range(p) 2 loop
13:47:53
start mi1 range(NT) loop
13:47:53
finish mi1 range(NT) loop
13:47:54
start mi1 range(n) loop
13:47:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:47:54
start mi1 range(n) 2loop
13:47:54
finish mi1 range(n) 2loop
13:47:54
start mi2
13:47:54
start mi2 range(p) 1 loop
13:47:54
finish mi2 range(p) 1 loop
13:47:54
start mi2 range(p) 2 loop
13:47:54
finish mi2 range(p) 2 loop
13:47:54
start mi2 range(NT) loop
13:47:54
finish mi2 range(NT) loop
13:47:54
start mi2 range(n) loop
13:47:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:47:54
start mi2 range(n) 2loop
13:47:54
finish mi2 range(n) 2loop
13:47:54
[[-2.64151553]]
end mi2 loop
13:47:54
estep
13:47:54
end estep
13:48:10
end pa13:48:10
goodness of fit correlation [0.14521585]
start cluster 13:48:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 32799 instead
  warnings.warn(
5
parallel submitted
13:48:35
slurmstepd: error: *** JOB 1825837 ON nodeb24 CANCELLED AT 2020-11-06T13:53:19 ***
