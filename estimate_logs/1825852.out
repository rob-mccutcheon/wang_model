23
subject 1029_01_MR
start cluster 09:36:17
0
parallel submitted
09:36:33
parallel finished
09:41:32
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:41:35
start mi0
09:41:35
start mi0 range(p) 1 loop
09:41:35
finish mi0 range(p) 1 loop
09:41:35
start mi0 range(p) 2 loop
09:41:36
finish mi0 range(p) 2 loop
09:41:36
start mi0 range(NT) loop
09:41:36
finish mi0 range(NT) loop
09:41:36
start mi0 range(n) loop
09:41:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:41:36
start mi0 range(n) 2loop
09:41:36
finish mi0 range(n) 2loop
09:41:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:41:36
start mi1 range(p) 1 loop
09:41:36
finish mi1 range(p) 1 loop
09:41:36
start mi1 range(p) 2 loop
09:41:36
finish mi1 range(p) 2 loop
09:41:36
start mi1 range(NT) loop
09:41:36
finish mi1 range(NT) loop
09:41:36
start mi1 range(n) loop
09:41:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:41:36
start mi1 range(n) 2loop
09:41:36
finish mi1 range(n) 2loop
09:41:36
start mi2
09:41:36
start mi2 range(p) 1 loop
09:41:36
finish mi2 range(p) 1 loop
09:41:36
start mi2 range(p) 2 loop
09:41:36
finish mi2 range(p) 2 loop
09:41:36
start mi2 range(NT) loop
09:41:36
finish mi2 range(NT) loop
09:41:36
start mi2 range(n) loop
09:41:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:41:36
start mi2 range(n) 2loop
09:41:36
finish mi2 range(n) 2loop
09:41:36
[[-2.7486328]]
end mi2 loop
09:41:36
estep
09:41:36
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:41:53
start ppi1
09:41:53
start mi0
09:41:53
start mi0 range(p) 1 loop
09:41:53
finish mi0 range(p) 1 loop
09:41:53
start mi0 range(p) 2 loop
09:41:53
finish mi0 range(p) 2 loop
09:41:53
start mi0 range(NT) loop
09:41:53
finish mi0 range(NT) loop
09:41:53
start mi0 range(n) loop
09:41:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:41:53
start mi0 range(n) 2loop
09:41:53
finish mi0 range(n) 2loop
09:41:53
start mi1
09:41:53
start mi1 range(p) 1 loop
09:41:53
finish mi1 range(p) 1 loop
09:41:53
start mi1 range(p) 2 loop
09:41:53
finish mi1 range(p) 2 loop
09:41:53
start mi1 range(NT) loop
09:41:53
finish mi1 range(NT) loop
09:41:53
start mi1 range(n) loop
09:41:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:41:53
start mi1 range(n) 2loop
09:41:53
finish mi1 range(n) 2loop
09:41:53
start mi2
09:41:53
start mi2 range(p) 1 loop
09:41:53
finish mi2 range(p) 1 loop
09:41:53
start mi2 range(p) 2 loop
09:41:53
finish mi2 range(p) 2 loop
09:41:53
start mi2 range(NT) loop
09:41:53
finish mi2 range(NT) loop
09:41:53
start mi2 range(n) loop
09:41:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:41:53
start mi2 range(n) 2loop
09:41:53
finish mi2 range(n) 2loop
09:41:53
[[-2.7486328]]
end mi2 loop
09:41:53
estep
09:41:53
end estep
09:42:09
end pa09:42:09
goodness of fit correlation [0.03230471]
start cluster 09:42:09
1
parallel submitted
09:42:25
parallel finished
09:45:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:46:02
start mi0
09:46:02
start mi0 range(p) 1 loop
09:46:02
finish mi0 range(p) 1 loop
09:46:02
start mi0 range(p) 2 loop
09:46:02
finish mi0 range(p) 2 loop
09:46:02
start mi0 range(NT) loop
09:46:02
finish mi0 range(NT) loop
09:46:02
start mi0 range(n) loop
09:46:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:46:02
start mi0 range(n) 2loop
09:46:02
finish mi0 range(n) 2loop
09:46:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:46:02
start mi1 range(p) 1 loop
09:46:02
finish mi1 range(p) 1 loop
09:46:02
start mi1 range(p) 2 loop
09:46:02
finish mi1 range(p) 2 loop
09:46:02
start mi1 range(NT) loop
09:46:02
finish mi1 range(NT) loop
09:46:02
start mi1 range(n) loop
09:46:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:46:02
start mi1 range(n) 2loop
09:46:02
finish mi1 range(n) 2loop
09:46:02
start mi2
09:46:02
start mi2 range(p) 1 loop
09:46:02
finish mi2 range(p) 1 loop
09:46:02
start mi2 range(p) 2 loop
09:46:02
finish mi2 range(p) 2 loop
09:46:02
start mi2 range(NT) loop
09:46:02
finish mi2 range(NT) loop
09:46:02
start mi2 range(n) loop
09:46:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:46:02
start mi2 range(n) 2loop
09:46:02
finish mi2 range(n) 2loop
09:46:02
[[-2.75899522]]
end mi2 loop
09:46:02
estep
09:46:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:46:18
start ppi1
09:46:18
start mi0
09:46:18
start mi0 range(p) 1 loop
09:46:18
finish mi0 range(p) 1 loop
09:46:18
start mi0 range(p) 2 loop
09:46:18
finish mi0 range(p) 2 loop
09:46:18
start mi0 range(NT) loop
09:46:18
finish mi0 range(NT) loop
09:46:18
start mi0 range(n) loop
09:46:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:46:18
start mi0 range(n) 2loop
09:46:18
finish mi0 range(n) 2loop
09:46:18
start mi1
09:46:18
start mi1 range(p) 1 loop
09:46:18
finish mi1 range(p) 1 loop
09:46:18
start mi1 range(p) 2 loop
09:46:18
finish mi1 range(p) 2 loop
09:46:18
start mi1 range(NT) loop
09:46:18
finish mi1 range(NT) loop
09:46:18
start mi1 range(n) loop
09:46:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:46:18
start mi1 range(n) 2loop
09:46:18
finish mi1 range(n) 2loop
09:46:18
start mi2
09:46:18
start mi2 range(p) 1 loop
09:46:18
finish mi2 range(p) 1 loop
09:46:18
start mi2 range(p) 2 loop
09:46:18
finish mi2 range(p) 2 loop
09:46:18
start mi2 range(NT) loop
09:46:18
finish mi2 range(NT) loop
09:46:18
start mi2 range(n) loop
09:46:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:46:18
start mi2 range(n) 2loop
09:46:18
finish mi2 range(n) 2loop
09:46:19
[[-2.82148736]]
end mi2 loop
09:46:19
estep
09:46:19
end estep
09:46:34
end pa09:46:34
goodness of fit correlation [0.05303416]
start cluster 09:46:34
2
parallel submitted
09:46:50
parallel finished
09:53:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:53:51
start mi0
09:53:51
start mi0 range(p) 1 loop
09:53:51
finish mi0 range(p) 1 loop
09:53:51
start mi0 range(p) 2 loop
09:53:51
finish mi0 range(p) 2 loop
09:53:51
start mi0 range(NT) loop
09:53:51
finish mi0 range(NT) loop
09:53:51
start mi0 range(n) loop
09:53:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:53:51
start mi0 range(n) 2loop
09:53:51
finish mi0 range(n) 2loop
09:53:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:53:51
start mi1 range(p) 1 loop
09:53:51
finish mi1 range(p) 1 loop
09:53:51
start mi1 range(p) 2 loop
09:53:51
finish mi1 range(p) 2 loop
09:53:51
start mi1 range(NT) loop
09:53:51
finish mi1 range(NT) loop
09:53:51
start mi1 range(n) loop
09:53:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:53:51
start mi1 range(n) 2loop
09:53:51
finish mi1 range(n) 2loop
09:53:51
start mi2
09:53:51
start mi2 range(p) 1 loop
09:53:51
finish mi2 range(p) 1 loop
09:53:51
start mi2 range(p) 2 loop
09:53:51
finish mi2 range(p) 2 loop
09:53:51
start mi2 range(NT) loop
09:53:51
finish mi2 range(NT) loop
09:53:51
start mi2 range(n) loop
09:53:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:53:51
start mi2 range(n) 2loop
09:53:51
finish mi2 range(n) 2loop
09:53:52
[[-2.78605644]]
end mi2 loop
09:53:52
estep
09:53:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:54:07
start ppi1
09:54:07
start mi0
09:54:07
start mi0 range(p) 1 loop
09:54:07
finish mi0 range(p) 1 loop
09:54:07
start mi0 range(p) 2 loop
09:54:07
finish mi0 range(p) 2 loop
09:54:07
start mi0 range(NT) loop
09:54:07
finish mi0 range(NT) loop
09:54:07
start mi0 range(n) loop
09:54:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:54:07
start mi0 range(n) 2loop
09:54:07
finish mi0 range(n) 2loop
09:54:07
start mi1
09:54:07
start mi1 range(p) 1 loop
09:54:07
finish mi1 range(p) 1 loop
09:54:07
start mi1 range(p) 2 loop
09:54:07
finish mi1 range(p) 2 loop
09:54:07
start mi1 range(NT) loop
09:54:07
finish mi1 range(NT) loop
09:54:07
start mi1 range(n) loop
09:54:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:54:07
start mi1 range(n) 2loop
09:54:07
finish mi1 range(n) 2loop
09:54:07
start mi2
09:54:07
start mi2 range(p) 1 loop
09:54:07
finish mi2 range(p) 1 loop
09:54:07
start mi2 range(p) 2 loop
09:54:07
finish mi2 range(p) 2 loop
09:54:07
start mi2 range(NT) loop
09:54:08
finish mi2 range(NT) loop
09:54:08
start mi2 range(n) loop
09:54:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:54:08
start mi2 range(n) 2loop
09:54:08
finish mi2 range(n) 2loop
09:54:08
[[-2.84854851]]
end mi2 loop
09:54:08
estep
09:54:08
end estep
09:54:23
end pa09:54:23
goodness of fit correlation [0.10035795]
start cluster 09:54:23
3
parallel submitted
09:54:40
parallel finished
10:00:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:00:55
start mi0
10:00:55
start mi0 range(p) 1 loop
10:00:55
finish mi0 range(p) 1 loop
10:00:55
start mi0 range(p) 2 loop
10:00:55
finish mi0 range(p) 2 loop
10:00:55
start mi0 range(NT) loop
10:00:55
finish mi0 range(NT) loop
10:00:55
start mi0 range(n) loop
10:00:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:00:56
start mi0 range(n) 2loop
10:00:56
finish mi0 range(n) 2loop
10:00:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:00:56
start mi1 range(p) 1 loop
10:00:56
finish mi1 range(p) 1 loop
10:00:56
start mi1 range(p) 2 loop
10:00:56
finish mi1 range(p) 2 loop
10:00:56
start mi1 range(NT) loop
10:00:56
finish mi1 range(NT) loop
10:00:56
start mi1 range(n) loop
10:00:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:00:56
start mi1 range(n) 2loop
10:00:56
finish mi1 range(n) 2loop
10:00:56
start mi2
10:00:56
start mi2 range(p) 1 loop
10:00:56
finish mi2 range(p) 1 loop
10:00:56
start mi2 range(p) 2 loop
10:00:56
finish mi2 range(p) 2 loop
10:00:56
start mi2 range(NT) loop
10:00:56
finish mi2 range(NT) loop
10:00:56
start mi2 range(n) loop
10:00:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:00:56
start mi2 range(n) 2loop
10:00:56
finish mi2 range(n) 2loop
10:00:56
[[-2.79901681]]
end mi2 loop
10:00:56
estep
10:00:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:01:12
start ppi1
10:01:12
start mi0
10:01:12
start mi0 range(p) 1 loop
10:01:12
finish mi0 range(p) 1 loop
10:01:12
start mi0 range(p) 2 loop
10:01:12
finish mi0 range(p) 2 loop
10:01:12
start mi0 range(NT) loop
10:01:12
finish mi0 range(NT) loop
10:01:12
start mi0 range(n) loop
10:01:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:01:12
start mi0 range(n) 2loop
10:01:12
finish mi0 range(n) 2loop
10:01:12
start mi1
10:01:12
start mi1 range(p) 1 loop
10:01:12
finish mi1 range(p) 1 loop
10:01:12
start mi1 range(p) 2 loop
10:01:12
finish mi1 range(p) 2 loop
10:01:12
start mi1 range(NT) loop
10:01:12
finish mi1 range(NT) loop
10:01:12
start mi1 range(n) loop
10:01:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:01:12
start mi1 range(n) 2loop
10:01:12
finish mi1 range(n) 2loop
10:01:12
[[-2.86145855]]
end mi1 loop
10:01:12
estep
10:01:12
end estep
10:01:27
end pa10:01:27
goodness of fit correlation [0.13268329]
start cluster 10:01:27
4
parallel submitted
10:01:45
parallel finished
10:07:55
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:07:59
start mi0
10:07:59
start mi0 range(p) 1 loop
10:07:59
finish mi0 range(p) 1 loop
10:07:59
start mi0 range(p) 2 loop
10:07:59
finish mi0 range(p) 2 loop
10:07:59
start mi0 range(NT) loop
10:07:59
finish mi0 range(NT) loop
10:07:59
start mi0 range(n) loop
10:07:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:07:59
start mi0 range(n) 2loop
10:07:59
finish mi0 range(n) 2loop
10:07:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:07:59
start mi1 range(p) 1 loop
10:07:59
finish mi1 range(p) 1 loop
10:07:59
start mi1 range(p) 2 loop
10:07:59
finish mi1 range(p) 2 loop
10:07:59
start mi1 range(NT) loop
10:07:59
finish mi1 range(NT) loop
10:07:59
start mi1 range(n) loop
10:07:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:07:59
start mi1 range(n) 2loop
10:07:59
finish mi1 range(n) 2loop
10:07:59
start mi2
10:07:59
start mi2 range(p) 1 loop
10:07:59
finish mi2 range(p) 1 loop
10:07:59
start mi2 range(p) 2 loop
10:07:59
finish mi2 range(p) 2 loop
10:07:59
start mi2 range(NT) loop
10:08:00
finish mi2 range(NT) loop
10:08:00
start mi2 range(n) loop
10:08:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:08:00
start mi2 range(n) 2loop
10:08:00
finish mi2 range(n) 2loop
10:08:00
[[-2.80809316]]
end mi2 loop
10:08:00
estep
10:08:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:08:15
start ppi1
10:08:15
start mi0
10:08:15
start mi0 range(p) 1 loop
10:08:15
finish mi0 range(p) 1 loop
10:08:15
start mi0 range(p) 2 loop
10:08:15
finish mi0 range(p) 2 loop
10:08:15
start mi0 range(NT) loop
10:08:15
finish mi0 range(NT) loop
10:08:15
start mi0 range(n) loop
10:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:08:15
start mi0 range(n) 2loop
10:08:15
finish mi0 range(n) 2loop
10:08:15
start mi1
10:08:15
start mi1 range(p) 1 loop
10:08:15
finish mi1 range(p) 1 loop
10:08:15
start mi1 range(p) 2 loop
10:08:15
finish mi1 range(p) 2 loop
10:08:15
start mi1 range(NT) loop
10:08:15
finish mi1 range(NT) loop
10:08:15
start mi1 range(n) loop
10:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:08:16
start mi1 range(n) 2loop
10:08:16
finish mi1 range(n) 2loop
10:08:16
[[-2.87054707]]
end mi1 loop
10:08:16
estep
10:08:16
end estep
10:08:31
end pa10:08:31
goodness of fit correlation [0.15476283]
start cluster 10:08:31
5
parallel submitted
10:08:49
parallel finished
10:14:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:14:09
start mi0
10:14:09
start mi0 range(p) 1 loop
10:14:09
finish mi0 range(p) 1 loop
10:14:09
start mi0 range(p) 2 loop
10:14:09
finish mi0 range(p) 2 loop
10:14:09
start mi0 range(NT) loop
10:14:09
finish mi0 range(NT) loop
10:14:09
start mi0 range(n) loop
10:14:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:14:09
start mi0 range(n) 2loop
10:14:09
finish mi0 range(n) 2loop
10:14:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:14:09
start mi1 range(p) 1 loop
10:14:09
finish mi1 range(p) 1 loop
10:14:09
start mi1 range(p) 2 loop
10:14:09
finish mi1 range(p) 2 loop
10:14:09
start mi1 range(NT) loop
10:14:09
finish mi1 range(NT) loop
10:14:09
start mi1 range(n) loop
10:14:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:14:09
start mi1 range(n) 2loop
10:14:09
finish mi1 range(n) 2loop
10:14:09
start mi2
10:14:09
start mi2 range(p) 1 loop
10:14:09
finish mi2 range(p) 1 loop
10:14:09
start mi2 range(p) 2 loop
10:14:09
finish mi2 range(p) 2 loop
10:14:09
start mi2 range(NT) loop
10:14:09
finish mi2 range(NT) loop
10:14:09
start mi2 range(n) loop
10:14:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:14:09
start mi2 range(n) 2loop
10:14:09
finish mi2 range(n) 2loop
10:14:10
[[-2.81879392]]
end mi2 loop
10:14:10
estep
10:14:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:14:25
start ppi1
10:14:25
start mi0
10:14:25
start mi0 range(p) 1 loop
10:14:25
finish mi0 range(p) 1 loop
10:14:25
start mi0 range(p) 2 loop
10:14:25
finish mi0 range(p) 2 loop
10:14:25
start mi0 range(NT) loop
10:14:25
finish mi0 range(NT) loop
10:14:25
start mi0 range(n) loop
10:14:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:14:25
start mi0 range(n) 2loop
10:14:25
finish mi0 range(n) 2loop
10:14:25
start mi1
10:14:25
start mi1 range(p) 1 loop
10:14:25
finish mi1 range(p) 1 loop
10:14:25
start mi1 range(p) 2 loop
10:14:25
finish mi1 range(p) 2 loop
10:14:25
start mi1 range(NT) loop
10:14:25
finish mi1 range(NT) loop
10:14:25
start mi1 range(n) loop
10:14:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:14:26
start mi1 range(n) 2loop
10:14:26
finish mi1 range(n) 2loop
10:14:26
[[-2.88125914]]
end mi1 loop
10:14:26
estep
10:14:26
end estep
10:14:41
end pa10:14:41
goodness of fit correlation [0.14644574]
start cluster 10:14:41
6
parallel submitted
10:14:58
parallel finished
10:22:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:22:11
start mi0
10:22:11
start mi0 range(p) 1 loop
10:22:11
finish mi0 range(p) 1 loop
10:22:11
start mi0 range(p) 2 loop
10:22:11
finish mi0 range(p) 2 loop
10:22:11
start mi0 range(NT) loop
10:22:11
finish mi0 range(NT) loop
10:22:11
start mi0 range(n) loop
10:22:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:22:11
start mi0 range(n) 2loop
10:22:11
finish mi0 range(n) 2loop
10:22:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:22:11
start mi1 range(p) 1 loop
10:22:11
finish mi1 range(p) 1 loop
10:22:11
start mi1 range(p) 2 loop
10:22:11
finish mi1 range(p) 2 loop
10:22:11
start mi1 range(NT) loop
10:22:11
finish mi1 range(NT) loop
10:22:11
start mi1 range(n) loop
10:22:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:22:11
start mi1 range(n) 2loop
10:22:11
finish mi1 range(n) 2loop
10:22:11
start mi2
10:22:11
start mi2 range(p) 1 loop
10:22:11
finish mi2 range(p) 1 loop
10:22:11
start mi2 range(p) 2 loop
10:22:11
finish mi2 range(p) 2 loop
10:22:11
start mi2 range(NT) loop
10:22:11
finish mi2 range(NT) loop
10:22:11
start mi2 range(n) loop
10:22:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:22:11
start mi2 range(n) 2loop
10:22:11
finish mi2 range(n) 2loop
10:22:12
[[-2.84389358]]
end mi2 loop
10:22:12
estep
10:22:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:22:27
start ppi1
10:22:27
start mi0
10:22:27
start mi0 range(p) 1 loop
10:22:27
finish mi0 range(p) 1 loop
10:22:27
start mi0 range(p) 2 loop
10:22:27
finish mi0 range(p) 2 loop
10:22:27
start mi0 range(NT) loop
10:22:27
finish mi0 range(NT) loop
10:22:27
start mi0 range(n) loop
10:22:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:22:27
start mi0 range(n) 2loop
10:22:27
finish mi0 range(n) 2loop
10:22:27
start mi1
10:22:27
start mi1 range(p) 1 loop
10:22:27
finish mi1 range(p) 1 loop
10:22:27
start mi1 range(p) 2 loop
10:22:27
finish mi1 range(p) 2 loop
10:22:27
start mi1 range(NT) loop
10:22:27
finish mi1 range(NT) loop
10:22:27
start mi1 range(n) loop
10:22:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:22:27
start mi1 range(n) 2loop
10:22:27
finish mi1 range(n) 2loop
10:22:28
[[-2.90637541]]
end mi1 loop
10:22:28
estep
10:22:28
end estep
10:22:43
end pa10:22:43
goodness of fit correlation [0.1704452]
start cluster 10:22:43
7
parallel submitted
10:23:01
parallel finished
10:28:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:28:54
start mi0
10:28:54
start mi0 range(p) 1 loop
10:28:54
finish mi0 range(p) 1 loop
10:28:54
start mi0 range(p) 2 loop
10:28:54
finish mi0 range(p) 2 loop
10:28:54
start mi0 range(NT) loop
10:28:54
finish mi0 range(NT) loop
10:28:54
start mi0 range(n) loop
10:28:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:28:54
start mi0 range(n) 2loop
10:28:54
finish mi0 range(n) 2loop
10:28:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:28:54
start mi1 range(p) 1 loop
10:28:54
finish mi1 range(p) 1 loop
10:28:54
start mi1 range(p) 2 loop
10:28:55
finish mi1 range(p) 2 loop
10:28:55
start mi1 range(NT) loop
10:28:55
finish mi1 range(NT) loop
10:28:55
start mi1 range(n) loop
10:28:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:28:55
start mi1 range(n) 2loop
10:28:55
finish mi1 range(n) 2loop
10:28:55
start mi2
10:28:55
start mi2 range(p) 1 loop
10:28:55
finish mi2 range(p) 1 loop
10:28:55
start mi2 range(p) 2 loop
10:28:55
finish mi2 range(p) 2 loop
10:28:55
start mi2 range(NT) loop
10:28:55
finish mi2 range(NT) loop
10:28:55
start mi2 range(n) loop
10:28:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:28:55
start mi2 range(n) 2loop
10:28:55
finish mi2 range(n) 2loop
10:28:55
[[-2.85715378]]
end mi2 loop
10:28:55
estep
10:28:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:29:11
start ppi1
10:29:11
start mi0
10:29:11
start mi0 range(p) 1 loop
10:29:11
finish mi0 range(p) 1 loop
10:29:11
start mi0 range(p) 2 loop
10:29:11
finish mi0 range(p) 2 loop
10:29:11
start mi0 range(NT) loop
10:29:11
finish mi0 range(NT) loop
10:29:11
start mi0 range(n) loop
10:29:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:29:11
start mi0 range(n) 2loop
10:29:11
finish mi0 range(n) 2loop
10:29:11
start mi1
10:29:11
start mi1 range(p) 1 loop
10:29:11
finish mi1 range(p) 1 loop
10:29:11
start mi1 range(p) 2 loop
10:29:11
finish mi1 range(p) 2 loop
10:29:11
start mi1 range(NT) loop
10:29:11
finish mi1 range(NT) loop
10:29:11
start mi1 range(n) loop
10:29:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:29:11
start mi1 range(n) 2loop
10:29:11
finish mi1 range(n) 2loop
10:29:11
[[-2.91964032]]
end mi1 loop
10:29:11
estep
10:29:11
end estep
10:29:26
end pa10:29:26
goodness of fit correlation [0.19178089]
start cluster 10:29:26
8
parallel submitted
10:29:44
parallel finished
10:33:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:33:54
start mi0
10:33:54
start mi0 range(p) 1 loop
10:33:54
finish mi0 range(p) 1 loop
10:33:54
start mi0 range(p) 2 loop
10:33:54
finish mi0 range(p) 2 loop
10:33:54
start mi0 range(NT) loop
10:33:54
finish mi0 range(NT) loop
10:33:54
start mi0 range(n) loop
10:33:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:33:54
start mi0 range(n) 2loop
10:33:54
finish mi0 range(n) 2loop
10:33:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:33:54
start mi1 range(p) 1 loop
10:33:54
finish mi1 range(p) 1 loop
10:33:54
start mi1 range(p) 2 loop
10:33:54
finish mi1 range(p) 2 loop
10:33:54
start mi1 range(NT) loop
10:33:54
finish mi1 range(NT) loop
10:33:54
start mi1 range(n) loop
10:33:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:33:54
start mi1 range(n) 2loop
10:33:54
finish mi1 range(n) 2loop
10:33:54
[[-2.8756607]]
end mi1 loop
10:33:54
estep
10:33:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:34:10
start ppi1
10:34:10
start mi0
10:34:10
start mi0 range(p) 1 loop
10:34:10
finish mi0 range(p) 1 loop
10:34:10
start mi0 range(p) 2 loop
10:34:10
finish mi0 range(p) 2 loop
10:34:10
start mi0 range(NT) loop
10:34:10
finish mi0 range(NT) loop
10:34:10
start mi0 range(n) loop
10:34:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:34:10
start mi0 range(n) 2loop
10:34:10
finish mi0 range(n) 2loop
10:34:10
start mi1
10:34:10
start mi1 range(p) 1 loop
10:34:10
finish mi1 range(p) 1 loop
10:34:10
start mi1 range(p) 2 loop
10:34:10
finish mi1 range(p) 2 loop
10:34:10
start mi1 range(NT) loop
10:34:10
finish mi1 range(NT) loop
10:34:10
start mi1 range(n) loop
10:34:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:34:10
start mi1 range(n) 2loop
10:34:10
finish mi1 range(n) 2loop
10:34:10
[[-2.9381832]]
end mi1 loop
10:34:10
estep
10:34:10
end estep
10:34:26
end pa10:34:26
goodness of fit correlation [0.22175816]
start cluster 10:34:26
9
parallel submitted
10:34:44
parallel finished
10:37:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:37:55
start mi0
10:37:55
start mi0 range(p) 1 loop
10:37:55
finish mi0 range(p) 1 loop
10:37:55
start mi0 range(p) 2 loop
10:37:55
finish mi0 range(p) 2 loop
10:37:55
start mi0 range(NT) loop
10:37:55
finish mi0 range(NT) loop
10:37:55
start mi0 range(n) loop
10:37:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:37:55
start mi0 range(n) 2loop
10:37:55
finish mi0 range(n) 2loop
10:37:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:37:55
start mi1 range(p) 1 loop
10:37:55
finish mi1 range(p) 1 loop
10:37:55
start mi1 range(p) 2 loop
10:37:55
finish mi1 range(p) 2 loop
10:37:55
start mi1 range(NT) loop
10:37:55
finish mi1 range(NT) loop
10:37:55
start mi1 range(n) loop
10:37:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:37:55
start mi1 range(n) 2loop
10:37:55
finish mi1 range(n) 2loop
10:37:55
[[-2.87261456]]
end mi1 loop
10:37:55
estep
10:37:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:38:11
start ppi1
10:38:11
start mi0
10:38:11
start mi0 range(p) 1 loop
10:38:11
finish mi0 range(p) 1 loop
10:38:11
start mi0 range(p) 2 loop
10:38:11
finish mi0 range(p) 2 loop
10:38:11
start mi0 range(NT) loop
10:38:11
finish mi0 range(NT) loop
10:38:11
start mi0 range(n) loop
10:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:38:11
start mi0 range(n) 2loop
10:38:11
finish mi0 range(n) 2loop
10:38:11
start mi1
10:38:11
start mi1 range(p) 1 loop
10:38:11
finish mi1 range(p) 1 loop
10:38:11
start mi1 range(p) 2 loop
10:38:11
finish mi1 range(p) 2 loop
10:38:11
start mi1 range(NT) loop
10:38:11
finish mi1 range(NT) loop
10:38:11
start mi1 range(n) loop
10:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:38:11
start mi1 range(n) 2loop
10:38:11
finish mi1 range(n) 2loop
10:38:11
[[-2.93514001]]
end mi1 loop
10:38:11
estep
10:38:11
end estep
10:38:27
end pa10:38:27
goodness of fit correlation [0.2039102]
start cluster 10:38:27
10
parallel submitted
10:38:45
parallel finished
10:43:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:43:57
start mi0
10:43:57
start mi0 range(p) 1 loop
10:43:57
finish mi0 range(p) 1 loop
10:43:57
start mi0 range(p) 2 loop
10:43:57
finish mi0 range(p) 2 loop
10:43:57
start mi0 range(NT) loop
10:43:57
finish mi0 range(NT) loop
10:43:57
start mi0 range(n) loop
10:43:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:43:57
start mi0 range(n) 2loop
10:43:57
finish mi0 range(n) 2loop
10:43:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:43:57
start mi1 range(p) 1 loop
10:43:57
finish mi1 range(p) 1 loop
10:43:57
start mi1 range(p) 2 loop
10:43:57
finish mi1 range(p) 2 loop
10:43:57
start mi1 range(NT) loop
10:43:57
finish mi1 range(NT) loop
10:43:57
start mi1 range(n) loop
10:43:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:43:57
start mi1 range(n) 2loop
10:43:57
finish mi1 range(n) 2loop
10:43:57
[[-2.88894087]]
end mi1 loop
10:43:57
estep
10:43:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:44:13
start ppi1
10:44:13
start mi0
10:44:13
start mi0 range(p) 1 loop
10:44:13
finish mi0 range(p) 1 loop
10:44:13
start mi0 range(p) 2 loop
10:44:13
finish mi0 range(p) 2 loop
10:44:13
start mi0 range(NT) loop
10:44:13
finish mi0 range(NT) loop
10:44:13
start mi0 range(n) loop
10:44:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:44:13
start mi0 range(n) 2loop
10:44:13
finish mi0 range(n) 2loop
10:44:13
start mi1
10:44:13
start mi1 range(p) 1 loop
10:44:13
finish mi1 range(p) 1 loop
10:44:13
start mi1 range(p) 2 loop
10:44:13
finish mi1 range(p) 2 loop
10:44:13
start mi1 range(NT) loop
10:44:13
finish mi1 range(NT) loop
10:44:13
start mi1 range(n) loop
10:44:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:44:13
start mi1 range(n) 2loop
10:44:13
finish mi1 range(n) 2loop
10:44:13
[[-2.95145262]]
end mi1 loop
10:44:13
estep
10:44:13
end estep
10:44:29
end pa10:44:29
goodness of fit correlation [0.20990001]
start cluster 10:44:29
11
parallel submitted
10:44:47
parallel finished
10:48:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:48:55
start mi0
10:48:55
start mi0 range(p) 1 loop
10:48:55
finish mi0 range(p) 1 loop
10:48:55
start mi0 range(p) 2 loop
10:48:55
finish mi0 range(p) 2 loop
10:48:55
start mi0 range(NT) loop
10:48:55
finish mi0 range(NT) loop
10:48:55
start mi0 range(n) loop
10:48:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:48:55
start mi0 range(n) 2loop
10:48:55
finish mi0 range(n) 2loop
10:48:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:48:56
start mi1 range(p) 1 loop
10:48:56
finish mi1 range(p) 1 loop
10:48:56
start mi1 range(p) 2 loop
10:48:56
finish mi1 range(p) 2 loop
10:48:56
start mi1 range(NT) loop
10:48:56
finish mi1 range(NT) loop
10:48:56
start mi1 range(n) loop
10:48:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:48:56
start mi1 range(n) 2loop
10:48:56
finish mi1 range(n) 2loop
10:48:56
[[-2.89096642]]
end mi1 loop
10:48:56
estep
10:48:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:11
start ppi1
10:49:11
start mi0
10:49:11
start mi0 range(p) 1 loop
10:49:11
finish mi0 range(p) 1 loop
10:49:11
start mi0 range(p) 2 loop
10:49:11
finish mi0 range(p) 2 loop
10:49:11
start mi0 range(NT) loop
10:49:12
finish mi0 range(NT) loop
10:49:12
start mi0 range(n) loop
10:49:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:12
start mi0 range(n) 2loop
10:49:12
finish mi0 range(n) 2loop
10:49:12
start mi1
10:49:12
start mi1 range(p) 1 loop
10:49:12
finish mi1 range(p) 1 loop
10:49:12
start mi1 range(p) 2 loop
10:49:12
finish mi1 range(p) 2 loop
10:49:12
start mi1 range(NT) loop
10:49:12
finish mi1 range(NT) loop
10:49:12
start mi1 range(n) loop
10:49:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:12
start mi1 range(n) 2loop
10:49:12
finish mi1 range(n) 2loop
10:49:12
[[-2.95347681]]
end mi1 loop
10:49:12
estep
10:49:12
end estep
10:49:28
end pa10:49:28
goodness of fit correlation [0.21238518]
start cluster 10:49:28
12
parallel submitted
10:49:46
parallel finished
10:51:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:51:59
start mi0
10:51:59
start mi0 range(p) 1 loop
10:51:59
finish mi0 range(p) 1 loop
10:51:59
start mi0 range(p) 2 loop
10:51:59
finish mi0 range(p) 2 loop
10:51:59
start mi0 range(NT) loop
10:51:59
finish mi0 range(NT) loop
10:51:59
start mi0 range(n) loop
10:51:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:51:59
start mi0 range(n) 2loop
10:51:59
finish mi0 range(n) 2loop
10:51:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:51:59
start mi1 range(p) 1 loop
10:51:59
finish mi1 range(p) 1 loop
10:51:59
start mi1 range(p) 2 loop
10:51:59
finish mi1 range(p) 2 loop
10:51:59
start mi1 range(NT) loop
10:51:59
finish mi1 range(NT) loop
10:52:00
start mi1 range(n) loop
10:52:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:52:00
start mi1 range(n) 2loop
10:52:00
finish mi1 range(n) 2loop
10:52:00
[[-2.87276325]]
end mi1 loop
10:52:00
estep
10:52:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:52:15
start ppi1
10:52:15
start mi0
10:52:15
start mi0 range(p) 1 loop
10:52:15
finish mi0 range(p) 1 loop
10:52:15
start mi0 range(p) 2 loop
10:52:15
finish mi0 range(p) 2 loop
10:52:15
start mi0 range(NT) loop
10:52:15
finish mi0 range(NT) loop
10:52:15
start mi0 range(n) loop
10:52:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:52:16
start mi0 range(n) 2loop
10:52:16
finish mi0 range(n) 2loop
10:52:16
start mi1
10:52:16
start mi1 range(p) 1 loop
10:52:16
finish mi1 range(p) 1 loop
10:52:16
start mi1 range(p) 2 loop
10:52:16
finish mi1 range(p) 2 loop
10:52:16
start mi1 range(NT) loop
10:52:16
finish mi1 range(NT) loop
10:52:16
start mi1 range(n) loop
10:52:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:52:16
start mi1 range(n) 2loop
10:52:16
finish mi1 range(n) 2loop
10:52:16
[[-2.93528855]]
end mi1 loop
10:52:16
estep
10:52:16
end estep
10:52:31
end pa10:52:31
goodness of fit correlation [0.20234538]
start cluster 10:52:31
13
parallel submitted
10:52:50
parallel finished
10:57:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:57:23
start mi0
10:57:23
start mi0 range(p) 1 loop
10:57:23
finish mi0 range(p) 1 loop
10:57:23
start mi0 range(p) 2 loop
10:57:23
finish mi0 range(p) 2 loop
10:57:23
start mi0 range(NT) loop
10:57:23
finish mi0 range(NT) loop
10:57:23
start mi0 range(n) loop
10:57:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:57:23
start mi0 range(n) 2loop
10:57:23
finish mi0 range(n) 2loop
10:57:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:57:23
start mi1 range(p) 1 loop
10:57:23
finish mi1 range(p) 1 loop
10:57:23
start mi1 range(p) 2 loop
10:57:23
finish mi1 range(p) 2 loop
10:57:23
start mi1 range(NT) loop
10:57:23
finish mi1 range(NT) loop
10:57:23
start mi1 range(n) loop
10:57:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:57:23
start mi1 range(n) 2loop
10:57:23
finish mi1 range(n) 2loop
10:57:23
[[-2.92001298]]
end mi1 loop
10:57:23
estep
10:57:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:57:39
start ppi1
10:57:39
start mi0
10:57:39
start mi0 range(p) 1 loop
10:57:39
finish mi0 range(p) 1 loop
10:57:39
start mi0 range(p) 2 loop
10:57:39
finish mi0 range(p) 2 loop
10:57:39
start mi0 range(NT) loop
10:57:39
finish mi0 range(NT) loop
10:57:39
start mi0 range(n) loop
10:57:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:57:39
start mi0 range(n) 2loop
10:57:39
finish mi0 range(n) 2loop
10:57:39
start mi1
10:57:39
start mi1 range(p) 1 loop
10:57:39
finish mi1 range(p) 1 loop
10:57:39
start mi1 range(p) 2 loop
10:57:39
finish mi1 range(p) 2 loop
10:57:39
start mi1 range(NT) loop
10:57:39
finish mi1 range(NT) loop
10:57:39
start mi1 range(n) loop
10:57:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:57:39
start mi1 range(n) 2loop
10:57:39
finish mi1 range(n) 2loop
10:57:40
[[-2.98251039]]
end mi1 loop
10:57:40
estep
10:57:40
end estep
10:57:55
end pa10:57:55
goodness of fit correlation [0.2524698]
start cluster 10:57:55
14
parallel submitted
10:58:14
parallel finished
11:00:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:01:03
start mi0
11:01:03
start mi0 range(p) 1 loop
11:01:03
finish mi0 range(p) 1 loop
11:01:03
start mi0 range(p) 2 loop
11:01:03
finish mi0 range(p) 2 loop
11:01:03
start mi0 range(NT) loop
11:01:04
finish mi0 range(NT) loop
11:01:04
start mi0 range(n) loop
11:01:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:01:04
start mi0 range(n) 2loop
11:01:04
finish mi0 range(n) 2loop
11:01:04
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:01:04
start mi1 range(p) 1 loop
11:01:04
finish mi1 range(p) 1 loop
11:01:04
start mi1 range(p) 2 loop
11:01:04
finish mi1 range(p) 2 loop
11:01:04
start mi1 range(NT) loop
11:01:04
finish mi1 range(NT) loop
11:01:04
start mi1 range(n) loop
11:01:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:01:04
start mi1 range(n) 2loop
11:01:04
finish mi1 range(n) 2loop
11:01:04
[[-2.90531741]]
end mi1 loop
11:01:04
estep
11:01:04
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:01:20
start ppi1
11:01:20
start mi0
11:01:20
start mi0 range(p) 1 loop
11:01:20
finish mi0 range(p) 1 loop
11:01:20
start mi0 range(p) 2 loop
11:01:20
finish mi0 range(p) 2 loop
11:01:20
start mi0 range(NT) loop
11:01:20
finish mi0 range(NT) loop
11:01:20
start mi0 range(n) loop
11:01:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:01:20
start mi0 range(n) 2loop
11:01:20
finish mi0 range(n) 2loop
11:01:20
start mi1
11:01:20
start mi1 range(p) 1 loop
11:01:20
finish mi1 range(p) 1 loop
11:01:20
start mi1 range(p) 2 loop
11:01:20
finish mi1 range(p) 2 loop
11:01:20
start mi1 range(NT) loop
11:01:20
finish mi1 range(NT) loop
11:01:20
start mi1 range(n) loop
11:01:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:01:20
start mi1 range(n) 2loop
11:01:20
finish mi1 range(n) 2loop
11:01:20
[[-2.96781999]]
end mi1 loop
11:01:20
estep
11:01:20
end estep
11:01:36
end pa11:01:36
goodness of fit correlation [0.22483153]
start cluster 11:01:36
15
parallel submitted
11:01:55
parallel finished
11:05:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:05:55
start mi0
11:05:55
start mi0 range(p) 1 loop
11:05:55
finish mi0 range(p) 1 loop
11:05:55
start mi0 range(p) 2 loop
11:05:55
finish mi0 range(p) 2 loop
11:05:55
start mi0 range(NT) loop
11:05:55
finish mi0 range(NT) loop
11:05:55
start mi0 range(n) loop
11:05:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:05:55
start mi0 range(n) 2loop
11:05:55
finish mi0 range(n) 2loop
11:05:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:05:55
start mi1 range(p) 1 loop
11:05:55
finish mi1 range(p) 1 loop
11:05:55
start mi1 range(p) 2 loop
11:05:55
finish mi1 range(p) 2 loop
11:05:55
start mi1 range(NT) loop
11:05:55
finish mi1 range(NT) loop
11:05:55
start mi1 range(n) loop
11:05:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:05:55
start mi1 range(n) 2loop
11:05:55
finish mi1 range(n) 2loop
11:05:55
[[-2.90938457]]
end mi1 loop
11:05:55
estep
11:05:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:06:11
start ppi1
11:06:11
start mi0
11:06:11
start mi0 range(p) 1 loop
11:06:11
finish mi0 range(p) 1 loop
11:06:11
start mi0 range(p) 2 loop
11:06:11
finish mi0 range(p) 2 loop
11:06:11
start mi0 range(NT) loop
11:06:11
finish mi0 range(NT) loop
11:06:11
start mi0 range(n) loop
11:06:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:06:11
start mi0 range(n) 2loop
11:06:11
finish mi0 range(n) 2loop
11:06:11
start mi1
11:06:11
start mi1 range(p) 1 loop
11:06:11
finish mi1 range(p) 1 loop
11:06:11
start mi1 range(p) 2 loop
11:06:11
finish mi1 range(p) 2 loop
11:06:11
start mi1 range(NT) loop
11:06:11
finish mi1 range(NT) loop
11:06:12
start mi1 range(n) loop
11:06:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:06:12
start mi1 range(n) 2loop
11:06:12
finish mi1 range(n) 2loop
11:06:12
[[-2.97188546]]
end mi1 loop
11:06:12
estep
11:06:12
end estep
11:06:27
end pa11:06:27
goodness of fit correlation [0.19947624]
start cluster 11:06:27
16
parallel submitted
11:06:47
parallel finished
11:08:34
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:08:42
start mi0
11:08:42
start mi0 range(p) 1 loop
11:08:42
finish mi0 range(p) 1 loop
11:08:42
start mi0 range(p) 2 loop
11:08:42
finish mi0 range(p) 2 loop
11:08:42
start mi0 range(NT) loop
11:08:42
finish mi0 range(NT) loop
11:08:42
start mi0 range(n) loop
11:08:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:08:42
start mi0 range(n) 2loop
11:08:42
finish mi0 range(n) 2loop
11:08:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:08:42
start mi1 range(p) 1 loop
11:08:42
finish mi1 range(p) 1 loop
11:08:42
start mi1 range(p) 2 loop
11:08:42
finish mi1 range(p) 2 loop
11:08:42
start mi1 range(NT) loop
11:08:42
finish mi1 range(NT) loop
11:08:42
start mi1 range(n) loop
11:08:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:08:43
start mi1 range(n) 2loop
11:08:43
finish mi1 range(n) 2loop
11:08:43
[[-2.90410034]]
end mi1 loop
11:08:43
estep
11:08:43
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:08:58
start ppi1
11:08:58
start mi0
11:08:58
start mi0 range(p) 1 loop
11:08:58
finish mi0 range(p) 1 loop
11:08:58
start mi0 range(p) 2 loop
11:08:58
finish mi0 range(p) 2 loop
11:08:58
start mi0 range(NT) loop
11:08:59
finish mi0 range(NT) loop
11:08:59
start mi0 range(n) loop
11:08:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:08:59
start mi0 range(n) 2loop
11:08:59
finish mi0 range(n) 2loop
11:08:59
start mi1
11:08:59
start mi1 range(p) 1 loop
11:08:59
finish mi1 range(p) 1 loop
11:08:59
start mi1 range(p) 2 loop
11:08:59
finish mi1 range(p) 2 loop
11:08:59
start mi1 range(NT) loop
11:08:59
finish mi1 range(NT) loop
11:08:59
start mi1 range(n) loop
11:08:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:08:59
start mi1 range(n) 2loop
11:08:59
finish mi1 range(n) 2loop
11:08:59
[[-2.96660347]]
end mi1 loop
11:08:59
estep
11:08:59
end estep
11:09:15
end pa11:09:15
goodness of fit correlation [0.23728848]
start cluster 11:09:15
17
parallel submitted
11:09:38
parallel finished
11:12:37
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:12:45
start mi0
11:12:45
start mi0 range(p) 1 loop
11:12:45
finish mi0 range(p) 1 loop
11:12:45
start mi0 range(p) 2 loop
11:12:45
finish mi0 range(p) 2 loop
11:12:45
start mi0 range(NT) loop
11:12:45
finish mi0 range(NT) loop
11:12:45
start mi0 range(n) loop
11:12:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:12:45
start mi0 range(n) 2loop
11:12:45
finish mi0 range(n) 2loop
11:12:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:12:45
start mi1 range(p) 1 loop
11:12:45
finish mi1 range(p) 1 loop
11:12:45
start mi1 range(p) 2 loop
11:12:45
finish mi1 range(p) 2 loop
11:12:45
start mi1 range(NT) loop
11:12:45
finish mi1 range(NT) loop
11:12:45
start mi1 range(n) loop
11:12:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:12:45
start mi1 range(n) 2loop
11:12:45
finish mi1 range(n) 2loop
11:12:45
[[-2.93904065]]
end mi1 loop
11:12:45
estep
11:12:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:13:01
start ppi1
11:13:01
start mi0
11:13:01
start mi0 range(p) 1 loop
11:13:01
finish mi0 range(p) 1 loop
11:13:01
start mi0 range(p) 2 loop
11:13:01
finish mi0 range(p) 2 loop
11:13:01
start mi0 range(NT) loop
11:13:01
finish mi0 range(NT) loop
11:13:01
start mi0 range(n) loop
11:13:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:13:01
start mi0 range(n) 2loop
11:13:01
finish mi0 range(n) 2loop
11:13:01
[[-3.0015333]]
end mi0 loop
11:13:01
estep
11:13:01
end estep
11:13:17
end pa11:13:17
goodness of fit correlation [0.234084]
start cluster 11:13:17
18
parallel submitted
11:13:38
parallel finished
11:17:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:17:23
start mi0
11:17:23
start mi0 range(p) 1 loop
11:17:23
finish mi0 range(p) 1 loop
11:17:23
start mi0 range(p) 2 loop
11:17:23
finish mi0 range(p) 2 loop
11:17:23
start mi0 range(NT) loop
11:17:23
finish mi0 range(NT) loop
11:17:23
start mi0 range(n) loop
11:17:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:17:24
start mi0 range(n) 2loop
11:17:24
finish mi0 range(n) 2loop
11:17:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:17:24
start mi1 range(p) 1 loop
11:17:24
finish mi1 range(p) 1 loop
11:17:24
start mi1 range(p) 2 loop
11:17:24
finish mi1 range(p) 2 loop
11:17:24
start mi1 range(NT) loop
11:17:24
finish mi1 range(NT) loop
11:17:24
start mi1 range(n) loop
11:17:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:17:24
start mi1 range(n) 2loop
11:17:24
finish mi1 range(n) 2loop
11:17:24
[[-2.90848497]]
end mi1 loop
11:17:24
estep
11:17:24
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:17:40
start ppi1
11:17:40
start mi0
11:17:40
start mi0 range(p) 1 loop
11:17:40
finish mi0 range(p) 1 loop
11:17:40
start mi0 range(p) 2 loop
11:17:40
finish mi0 range(p) 2 loop
11:17:40
start mi0 range(NT) loop
11:17:40
finish mi0 range(NT) loop
11:17:40
start mi0 range(n) loop
11:17:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:17:40
start mi0 range(n) 2loop
11:17:40
finish mi0 range(n) 2loop
11:17:40
start mi1
11:17:40
start mi1 range(p) 1 loop
11:17:40
finish mi1 range(p) 1 loop
11:17:40
start mi1 range(p) 2 loop
11:17:40
finish mi1 range(p) 2 loop
11:17:40
start mi1 range(NT) loop
11:17:40
finish mi1 range(NT) loop
11:17:40
start mi1 range(n) loop
11:17:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:17:40
start mi1 range(n) 2loop
11:17:40
finish mi1 range(n) 2loop
11:17:40
[[-2.97098622]]
end mi1 loop
11:17:40
estep
11:17:40
end estep
11:17:56
end pa11:17:56
goodness of fit correlation [0.23202078]
start cluster 11:17:56
19
parallel submitted
11:18:16
parallel finished
11:20:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:21:06
start mi0
11:21:06
start mi0 range(p) 1 loop
11:21:06
finish mi0 range(p) 1 loop
11:21:06
start mi0 range(p) 2 loop
11:21:06
finish mi0 range(p) 2 loop
11:21:06
start mi0 range(NT) loop
11:21:06
finish mi0 range(NT) loop
11:21:06
start mi0 range(n) loop
11:21:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:21:06
start mi0 range(n) 2loop
11:21:06
finish mi0 range(n) 2loop
11:21:06
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:21:06
start mi1 range(p) 1 loop
11:21:06
finish mi1 range(p) 1 loop
11:21:06
start mi1 range(p) 2 loop
11:21:06
finish mi1 range(p) 2 loop
11:21:06
start mi1 range(NT) loop
11:21:07
finish mi1 range(NT) loop
11:21:07
start mi1 range(n) loop
11:21:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:21:07
start mi1 range(n) 2loop
11:21:07
finish mi1 range(n) 2loop
11:21:07
[[-2.93308502]]
end mi1 loop
11:21:07
estep
11:21:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:21:23
start ppi1
11:21:23
start mi0
11:21:23
start mi0 range(p) 1 loop
11:21:23
finish mi0 range(p) 1 loop
11:21:23
start mi0 range(p) 2 loop
11:21:23
finish mi0 range(p) 2 loop
11:21:23
start mi0 range(NT) loop
11:21:23
finish mi0 range(NT) loop
11:21:23
start mi0 range(n) loop
11:21:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:21:23
start mi0 range(n) 2loop
11:21:23
finish mi0 range(n) 2loop
11:21:23
[[-2.99556989]]
end mi0 loop
11:21:23
estep
11:21:23
end estep
11:21:39
end pa11:21:39
goodness of fit correlation [0.23191105]
start cluster 11:21:39
20
parallel submitted
11:21:59
parallel finished
11:24:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:24:57
start mi0
11:24:57
start mi0 range(p) 1 loop
11:24:57
finish mi0 range(p) 1 loop
11:24:57
start mi0 range(p) 2 loop
11:24:57
finish mi0 range(p) 2 loop
11:24:57
start mi0 range(NT) loop
11:24:57
finish mi0 range(NT) loop
11:24:57
start mi0 range(n) loop
11:24:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:24:57
start mi0 range(n) 2loop
11:24:57
finish mi0 range(n) 2loop
11:24:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:24:57
start mi1 range(p) 1 loop
11:24:57
finish mi1 range(p) 1 loop
11:24:57
start mi1 range(p) 2 loop
11:24:57
finish mi1 range(p) 2 loop
11:24:57
start mi1 range(NT) loop
11:24:57
finish mi1 range(NT) loop
11:24:57
start mi1 range(n) loop
11:24:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:24:57
start mi1 range(n) 2loop
11:24:57
finish mi1 range(n) 2loop
11:24:57
[[-2.89974629]]
end mi1 loop
11:24:57
estep
11:24:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:25:13
start ppi1
11:25:13
start mi0
11:25:13
start mi0 range(p) 1 loop
11:25:13
finish mi0 range(p) 1 loop
11:25:13
start mi0 range(p) 2 loop
11:25:13
finish mi0 range(p) 2 loop
11:25:13
start mi0 range(NT) loop
11:25:13
finish mi0 range(NT) loop
11:25:13
start mi0 range(n) loop
11:25:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:25:14
start mi0 range(n) 2loop
11:25:14
finish mi0 range(n) 2loop
11:25:14
start mi1
11:25:14
start mi1 range(p) 1 loop
11:25:14
finish mi1 range(p) 1 loop
11:25:14
start mi1 range(p) 2 loop
11:25:14
finish mi1 range(p) 2 loop
11:25:14
start mi1 range(NT) loop
11:25:14
finish mi1 range(NT) loop
11:25:14
start mi1 range(n) loop
11:25:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:25:14
start mi1 range(n) 2loop
11:25:14
finish mi1 range(n) 2loop
11:25:14
[[-2.96225155]]
end mi1 loop
11:25:14
estep
11:25:14
end estep
11:25:30
end pa11:25:30
goodness of fit correlation [0.22734804]
start cluster 11:25:30
21
parallel submitted
11:25:50
parallel finished
11:28:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:28:48
start mi0
11:28:48
start mi0 range(p) 1 loop
11:28:48
finish mi0 range(p) 1 loop
11:28:48
start mi0 range(p) 2 loop
11:28:48
finish mi0 range(p) 2 loop
11:28:48
start mi0 range(NT) loop
11:28:48
finish mi0 range(NT) loop
11:28:48
start mi0 range(n) loop
11:28:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:28:48
start mi0 range(n) 2loop
11:28:48
finish mi0 range(n) 2loop
11:28:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:28:48
start mi1 range(p) 1 loop
11:28:48
finish mi1 range(p) 1 loop
11:28:48
start mi1 range(p) 2 loop
11:28:48
finish mi1 range(p) 2 loop
11:28:48
start mi1 range(NT) loop
11:28:49
finish mi1 range(NT) loop
11:28:49
start mi1 range(n) loop
11:28:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:28:49
start mi1 range(n) 2loop
11:28:49
finish mi1 range(n) 2loop
11:28:49
[[-2.95112613]]
end mi1 loop
11:28:49
estep
11:28:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:29:05
start ppi1
11:29:05
start mi0
11:29:05
start mi0 range(p) 1 loop
11:29:05
finish mi0 range(p) 1 loop
11:29:05
start mi0 range(p) 2 loop
11:29:05
finish mi0 range(p) 2 loop
11:29:05
start mi0 range(NT) loop
11:29:05
finish mi0 range(NT) loop
11:29:05
start mi0 range(n) loop
11:29:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:29:05
start mi0 range(n) 2loop
11:29:05
finish mi0 range(n) 2loop
11:29:05
start mi1
11:29:05
start mi1 range(p) 1 loop
11:29:05
finish mi1 range(p) 1 loop
11:29:05
start mi1 range(p) 2 loop
11:29:05
finish mi1 range(p) 2 loop
11:29:05
start mi1 range(NT) loop
11:29:05
finish mi1 range(NT) loop
11:29:05
start mi1 range(n) loop
11:29:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:29:05
start mi1 range(n) 2loop
11:29:05
finish mi1 range(n) 2loop
11:29:05
[[-3.0136189]]
end mi1 loop
11:29:05
estep
11:29:05
end estep
11:29:21
end pa11:29:21
goodness of fit correlation [0.26565199]
start cluster 11:29:21
22
parallel submitted
11:29:42
parallel finished
11:33:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:33:12
start mi0
11:33:12
start mi0 range(p) 1 loop
11:33:12
finish mi0 range(p) 1 loop
11:33:12
start mi0 range(p) 2 loop
11:33:12
finish mi0 range(p) 2 loop
11:33:12
start mi0 range(NT) loop
11:33:12
finish mi0 range(NT) loop
11:33:12
start mi0 range(n) loop
11:33:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:33:12
start mi0 range(n) 2loop
11:33:12
finish mi0 range(n) 2loop
11:33:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:33:12
start mi1 range(p) 1 loop
11:33:12
finish mi1 range(p) 1 loop
11:33:12
start mi1 range(p) 2 loop
11:33:12
finish mi1 range(p) 2 loop
11:33:12
start mi1 range(NT) loop
11:33:12
finish mi1 range(NT) loop
11:33:12
start mi1 range(n) loop
11:33:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:33:13
start mi1 range(n) 2loop
11:33:13
finish mi1 range(n) 2loop
11:33:13
[[-2.88040904]]
end mi1 loop
11:33:13
estep
11:33:13
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:33:29
start ppi1
11:33:29
start mi0
11:33:29
start mi0 range(p) 1 loop
11:33:29
finish mi0 range(p) 1 loop
11:33:29
start mi0 range(p) 2 loop
11:33:29
finish mi0 range(p) 2 loop
11:33:29
start mi0 range(NT) loop
11:33:29
finish mi0 range(NT) loop
11:33:29
start mi0 range(n) loop
11:33:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:33:29
start mi0 range(n) 2loop
11:33:29
finish mi0 range(n) 2loop
11:33:29
start mi1
11:33:29
start mi1 range(p) 1 loop
11:33:29
finish mi1 range(p) 1 loop
11:33:29
start mi1 range(p) 2 loop
11:33:29
finish mi1 range(p) 2 loop
11:33:29
start mi1 range(NT) loop
11:33:29
finish mi1 range(NT) loop
11:33:29
start mi1 range(n) loop
11:33:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:33:29
start mi1 range(n) 2loop
11:33:29
finish mi1 range(n) 2loop
11:33:29
[[-2.94292732]]
end mi1 loop
11:33:29
estep
11:33:29
end estep
11:33:45
end pa11:33:45
goodness of fit correlation [0.19629017]
start cluster 11:33:45
23
parallel submitted
11:34:06
parallel finished
11:37:29
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:37:40
start mi0
11:37:40
start mi0 range(p) 1 loop
11:37:40
finish mi0 range(p) 1 loop
11:37:40
start mi0 range(p) 2 loop
11:37:40
finish mi0 range(p) 2 loop
11:37:40
start mi0 range(NT) loop
11:37:40
finish mi0 range(NT) loop
11:37:40
start mi0 range(n) loop
11:37:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:37:40
start mi0 range(n) 2loop
11:37:40
finish mi0 range(n) 2loop
11:37:41
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:37:41
start mi1 range(p) 1 loop
11:37:41
finish mi1 range(p) 1 loop
11:37:41
start mi1 range(p) 2 loop
11:37:41
finish mi1 range(p) 2 loop
11:37:41
start mi1 range(NT) loop
11:37:41
finish mi1 range(NT) loop
11:37:41
start mi1 range(n) loop
11:37:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:37:41
start mi1 range(n) 2loop
11:37:41
finish mi1 range(n) 2loop
11:37:41
[[-2.91817742]]
end mi1 loop
11:37:41
estep
11:37:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:37:57
start ppi1
11:37:57
start mi0
11:37:57
start mi0 range(p) 1 loop
11:37:57
finish mi0 range(p) 1 loop
11:37:57
start mi0 range(p) 2 loop
11:37:57
finish mi0 range(p) 2 loop
11:37:57
start mi0 range(NT) loop
11:37:57
finish mi0 range(NT) loop
11:37:57
start mi0 range(n) loop
11:37:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:37:57
start mi0 range(n) 2loop
11:37:57
finish mi0 range(n) 2loop
11:37:57
start mi1
11:37:57
start mi1 range(p) 1 loop
11:37:57
finish mi1 range(p) 1 loop
11:37:57
start mi1 range(p) 2 loop
11:37:57
finish mi1 range(p) 2 loop
11:37:57
start mi1 range(NT) loop
11:37:57
finish mi1 range(NT) loop
11:37:57
start mi1 range(n) loop
11:37:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:37:57
start mi1 range(n) 2loop
11:37:57
finish mi1 range(n) 2loop
11:37:58
[[-2.98067535]]
end mi1 loop
11:37:58
estep
11:37:58
end estep
11:38:13
end pa11:38:13
goodness of fit correlation [0.22418535]
start cluster 11:38:13
24
parallel submitted
11:38:34
parallel finished
11:41:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:42:06
start mi0
11:42:06
start mi0 range(p) 1 loop
11:42:06
finish mi0 range(p) 1 loop
11:42:06
start mi0 range(p) 2 loop
11:42:06
finish mi0 range(p) 2 loop
11:42:06
start mi0 range(NT) loop
11:42:06
finish mi0 range(NT) loop
11:42:06
start mi0 range(n) loop
11:42:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:42:06
start mi0 range(n) 2loop
11:42:06
finish mi0 range(n) 2loop
11:42:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:42:07
start mi1 range(p) 1 loop
11:42:07
finish mi1 range(p) 1 loop
11:42:07
start mi1 range(p) 2 loop
11:42:07
finish mi1 range(p) 2 loop
11:42:07
start mi1 range(NT) loop
11:42:07
finish mi1 range(NT) loop
11:42:07
start mi1 range(n) loop
11:42:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:42:07
start mi1 range(n) 2loop
11:42:07
finish mi1 range(n) 2loop
11:42:07
[[-2.90619903]]
end mi1 loop
11:42:07
estep
11:42:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:42:23
start ppi1
11:42:23
start mi0
11:42:23
start mi0 range(p) 1 loop
11:42:23
finish mi0 range(p) 1 loop
11:42:23
start mi0 range(p) 2 loop
11:42:23
finish mi0 range(p) 2 loop
11:42:23
start mi0 range(NT) loop
11:42:23
finish mi0 range(NT) loop
11:42:23
start mi0 range(n) loop
11:42:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:42:23
start mi0 range(n) 2loop
11:42:23
finish mi0 range(n) 2loop
11:42:23
start mi1
11:42:23
start mi1 range(p) 1 loop
11:42:23
finish mi1 range(p) 1 loop
11:42:23
start mi1 range(p) 2 loop
11:42:23
finish mi1 range(p) 2 loop
11:42:23
start mi1 range(NT) loop
11:42:23
finish mi1 range(NT) loop
11:42:23
start mi1 range(n) loop
11:42:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:42:23
start mi1 range(n) 2loop
11:42:23
finish mi1 range(n) 2loop
11:42:24
[[-2.96870123]]
end mi1 loop
11:42:24
estep
11:42:24
end estep
11:42:42
end pa11:42:42
goodness of fit correlation [0.22626075]
start cluster 11:42:42
25
parallel submitted
11:43:04
parallel finished
11:46:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:47:02
start mi0
11:47:02
start mi0 range(p) 1 loop
11:47:02
finish mi0 range(p) 1 loop
11:47:02
start mi0 range(p) 2 loop
11:47:02
finish mi0 range(p) 2 loop
11:47:02
start mi0 range(NT) loop
11:47:02
finish mi0 range(NT) loop
11:47:02
start mi0 range(n) loop
11:47:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:47:02
start mi0 range(n) 2loop
11:47:02
finish mi0 range(n) 2loop
11:47:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:47:02
start mi1 range(p) 1 loop
11:47:02
finish mi1 range(p) 1 loop
11:47:02
start mi1 range(p) 2 loop
11:47:02
finish mi1 range(p) 2 loop
11:47:02
start mi1 range(NT) loop
11:47:02
finish mi1 range(NT) loop
11:47:02
start mi1 range(n) loop
11:47:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:47:02
start mi1 range(n) 2loop
11:47:02
finish mi1 range(n) 2loop
11:47:02
[[-2.92801439]]
end mi1 loop
11:47:02
estep
11:47:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:47:18
start ppi1
11:47:18
start mi0
11:47:18
start mi0 range(p) 1 loop
11:47:18
finish mi0 range(p) 1 loop
11:47:18
start mi0 range(p) 2 loop
11:47:18
finish mi0 range(p) 2 loop
11:47:18
start mi0 range(NT) loop
11:47:18
finish mi0 range(NT) loop
11:47:18
start mi0 range(n) loop
11:47:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:47:19
start mi0 range(n) 2loop
11:47:19
finish mi0 range(n) 2loop
11:47:19
[[-2.99046477]]
end mi0 loop
11:47:19
estep
11:47:19
end estep
11:47:35
end pa11:47:35
goodness of fit correlation [0.25110781]
start cluster 11:47:35
26
parallel submitted
11:47:56
parallel finished
11:51:52
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:52:02
start mi0
11:52:02
start mi0 range(p) 1 loop
11:52:02
finish mi0 range(p) 1 loop
11:52:02
start mi0 range(p) 2 loop
11:52:02
finish mi0 range(p) 2 loop
11:52:02
start mi0 range(NT) loop
11:52:02
finish mi0 range(NT) loop
11:52:02
start mi0 range(n) loop
11:52:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:52:02
start mi0 range(n) 2loop
11:52:02
finish mi0 range(n) 2loop
11:52:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:52:02
start mi1 range(p) 1 loop
11:52:02
finish mi1 range(p) 1 loop
11:52:02
start mi1 range(p) 2 loop
11:52:02
finish mi1 range(p) 2 loop
11:52:02
start mi1 range(NT) loop
11:52:02
finish mi1 range(NT) loop
11:52:02
start mi1 range(n) loop
11:52:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:52:02
start mi1 range(n) 2loop
11:52:02
finish mi1 range(n) 2loop
11:52:03
[[-2.93503162]]
end mi1 loop
11:52:03
estep
11:52:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:52:19
start ppi1
11:52:19
start mi0
11:52:19
start mi0 range(p) 1 loop
11:52:19
finish mi0 range(p) 1 loop
11:52:19
start mi0 range(p) 2 loop
11:52:19
finish mi0 range(p) 2 loop
11:52:19
start mi0 range(NT) loop
11:52:19
finish mi0 range(NT) loop
11:52:19
start mi0 range(n) loop
11:52:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:52:19
start mi0 range(n) 2loop
11:52:19
finish mi0 range(n) 2loop
11:52:19
[[-2.99752292]]
end mi0 loop
11:52:19
estep
11:52:19
end estep
11:52:35
end pa11:52:35
goodness of fit correlation [0.24638534]
start cluster 11:52:35
27
parallel submitted
11:52:57
parallel finished
11:56:18
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:56:31
start mi0
11:56:31
start mi0 range(p) 1 loop
11:56:31
finish mi0 range(p) 1 loop
11:56:31
start mi0 range(p) 2 loop
11:56:31
finish mi0 range(p) 2 loop
11:56:31
start mi0 range(NT) loop
11:56:31
finish mi0 range(NT) loop
11:56:31
start mi0 range(n) loop
11:56:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:56:31
start mi0 range(n) 2loop
11:56:31
finish mi0 range(n) 2loop
11:56:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:56:31
start mi1 range(p) 1 loop
11:56:31
finish mi1 range(p) 1 loop
11:56:31
start mi1 range(p) 2 loop
11:56:31
finish mi1 range(p) 2 loop
11:56:31
start mi1 range(NT) loop
11:56:31
finish mi1 range(NT) loop
11:56:31
start mi1 range(n) loop
11:56:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:56:31
start mi1 range(n) 2loop
11:56:31
finish mi1 range(n) 2loop
11:56:31
[[-2.91215585]]
end mi1 loop
11:56:31
estep
11:56:31
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:56:48
start ppi1
11:56:48
start mi0
11:56:48
start mi0 range(p) 1 loop
11:56:48
finish mi0 range(p) 1 loop
11:56:48
start mi0 range(p) 2 loop
11:56:48
finish mi0 range(p) 2 loop
11:56:48
start mi0 range(NT) loop
11:56:48
finish mi0 range(NT) loop
11:56:48
start mi0 range(n) loop
11:56:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:56:48
start mi0 range(n) 2loop
11:56:48
finish mi0 range(n) 2loop
11:56:48
start mi1
11:56:48
start mi1 range(p) 1 loop
11:56:48
finish mi1 range(p) 1 loop
11:56:48
start mi1 range(p) 2 loop
11:56:48
finish mi1 range(p) 2 loop
11:56:48
start mi1 range(NT) loop
11:56:48
finish mi1 range(NT) loop
11:56:48
start mi1 range(n) loop
11:56:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:56:48
start mi1 range(n) 2loop
11:56:48
finish mi1 range(n) 2loop
11:56:48
[[-2.97465572]]
end mi1 loop
11:56:48
estep
11:56:48
end estep
11:57:04
end pa11:57:04
goodness of fit correlation [0.07605218]
0.2656519877687593
[5.40570184e-01 5.46384524e-01 4.53081320e-01 6.00026294e-01
 4.96292839e-01 5.52567484e-01 5.36748968e-01 6.32313642e-01
 5.81686624e-01 5.87837093e-01 4.98167773e-01 5.70465230e-01
 4.94890990e-01 5.48936878e-01 4.96261889e-01 5.89328303e-01
 5.84891610e-01 4.94527038e-01 5.76324022e-01 5.13726159e-01
 5.54116083e-01 6.09411103e-01 5.41775682e-01 5.68568993e-01
 5.45912751e-01 5.69747917e-01 5.29852129e-01 5.68048611e-01
 5.81444748e-01 6.14429722e-01 5.25553698e-01 5.07555820e-01
 5.21174898e-01 5.68691382e-01 5.55337447e-01 5.61963737e-01
 5.97985489e-01 6.33912590e-01 5.04730486e-01 5.51278799e-01
 4.40639065e-01 5.57150565e-01 5.87974737e-01 5.86535047e-01
 5.50441433e-01 7.25221565e-01 4.94606964e-01 5.91088210e-01
 5.37400000e-01 6.20840168e-01 6.24899955e-01 5.49320469e-01
 5.84485983e-01 5.56071070e-01 5.54123222e-01 6.90989559e-01
 6.54547725e-01 6.25666284e-01 5.25646738e-01 6.55388012e-01
 5.45722933e-01 5.86835789e-01 5.92171425e-01 5.86833810e-01
 5.10132719e-01 5.31324715e-01 5.44753000e-01 6.39151520e-01
 3.57681000e-01 3.60205092e-01 3.17278762e-01 3.54732428e-01
 2.94528676e-01 3.55838904e-01 3.24055638e-01 3.43098344e-01
 3.54894646e-01 3.41261223e-01 3.44075774e-01 3.37761115e-01
 3.18255573e-01 3.26693399e-01 3.33058604e-01 3.38644113e-01
 3.39527406e-01 3.01321045e-01 3.56358998e-01 3.80459048e-01
 3.47272791e-01 3.50868570e-01 3.28363305e-01 3.37089679e-01
 3.62128324e-01 3.43793995e-01 3.30797931e-01 3.26917613e-01
 3.38152687e-01 3.42839025e-01 3.60594250e-01 3.10083924e-01
 3.75994297e-01 3.52937877e-01 3.52176138e-01 3.53743886e-01
 4.20847665e-01 3.48086335e-01 3.23376594e-01 3.53095274e-01
 3.28899694e-01 3.52124234e-01 3.53025353e-01 3.35994109e-01
 3.59878845e-01 3.40855905e-01 3.09135824e-01 3.34918563e-01
 3.58304969e-01 3.38332130e-01 3.52213538e-01 3.63171412e-01
 3.57034922e-01 3.66965609e-01 3.46099832e-01 3.42706684e-01
 3.14078500e-01 3.23974576e-01 3.58151092e-01 3.26568655e-01
 2.82764468e-01 3.25188778e-01 3.50500624e-01 3.54508588e-01
 3.43592000e-01 3.94897316e-01 3.52523165e-01 3.26885413e-01
 1.46512066e+00 9.73791978e-04]
start cluster 11:57:04
0
parallel submitted
11:57:26
parallel finished
12:00:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:00:26
start mi0
12:00:26
start mi0 range(p) 1 loop
12:00:26
finish mi0 range(p) 1 loop
12:00:26
start mi0 range(p) 2 loop
12:00:26
finish mi0 range(p) 2 loop
12:00:26
start mi0 range(NT) loop
12:00:26
finish mi0 range(NT) loop
12:00:26
start mi0 range(n) loop
12:00:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:00:26
start mi0 range(n) 2loop
12:00:26
finish mi0 range(n) 2loop
12:00:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:00:26
start mi1 range(p) 1 loop
12:00:26
finish mi1 range(p) 1 loop
12:00:26
start mi1 range(p) 2 loop
12:00:26
finish mi1 range(p) 2 loop
12:00:26
start mi1 range(NT) loop
12:00:26
finish mi1 range(NT) loop
12:00:26
start mi1 range(n) loop
12:00:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:00:26
start mi1 range(n) 2loop
12:00:26
finish mi1 range(n) 2loop
12:00:26
start mi2
12:00:26
start mi2 range(p) 1 loop
12:00:26
finish mi2 range(p) 1 loop
12:00:26
start mi2 range(p) 2 loop
12:00:26
finish mi2 range(p) 2 loop
12:00:26
start mi2 range(NT) loop
12:00:26
finish mi2 range(NT) loop
12:00:26
start mi2 range(n) loop
12:00:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:00:27
start mi2 range(n) 2loop
12:00:27
finish mi2 range(n) 2loop
12:00:27
[[-2.75020704]]
end mi2 loop
12:00:27
estep
12:00:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:00:43
start ppi1
12:00:43
start mi0
12:00:43
start mi0 range(p) 1 loop
12:00:43
finish mi0 range(p) 1 loop
12:00:43
start mi0 range(p) 2 loop
12:00:43
finish mi0 range(p) 2 loop
12:00:43
start mi0 range(NT) loop
12:00:43
finish mi0 range(NT) loop
12:00:43
start mi0 range(n) loop
12:00:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:00:43
start mi0 range(n) 2loop
12:00:43
finish mi0 range(n) 2loop
12:00:43
start mi1
12:00:43
start mi1 range(p) 1 loop
12:00:43
finish mi1 range(p) 1 loop
12:00:43
start mi1 range(p) 2 loop
12:00:43
finish mi1 range(p) 2 loop
12:00:43
start mi1 range(NT) loop
12:00:43
finish mi1 range(NT) loop
12:00:43
start mi1 range(n) loop
12:00:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:00:43
start mi1 range(n) 2loop
12:00:43
finish mi1 range(n) 2loop
12:00:43
start mi2
12:00:43
start mi2 range(p) 1 loop
12:00:43
finish mi2 range(p) 1 loop
12:00:43
start mi2 range(p) 2 loop
12:00:43
finish mi2 range(p) 2 loop
12:00:44
start mi2 range(NT) loop
12:00:44
finish mi2 range(NT) loop
12:00:44
start mi2 range(n) loop
12:00:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:00:44
start mi2 range(n) 2loop
12:00:44
finish mi2 range(n) 2loop
12:00:44
[[-2.75020704]]
end mi2 loop
12:00:44
estep
12:00:44
end estep
12:01:00
end pa12:01:00
goodness of fit correlation [0.03555777]
start cluster 12:01:00
1
parallel submitted
12:01:22
parallel finished
12:04:10
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:04:24
start mi0
12:04:24
start mi0 range(p) 1 loop
12:04:24
finish mi0 range(p) 1 loop
12:04:24
start mi0 range(p) 2 loop
12:04:24
finish mi0 range(p) 2 loop
12:04:24
start mi0 range(NT) loop
12:04:24
finish mi0 range(NT) loop
12:04:24
start mi0 range(n) loop
12:04:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:04:24
start mi0 range(n) 2loop
12:04:24
finish mi0 range(n) 2loop
12:04:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:04:24
start mi1 range(p) 1 loop
12:04:24
finish mi1 range(p) 1 loop
12:04:24
start mi1 range(p) 2 loop
12:04:24
finish mi1 range(p) 2 loop
12:04:24
start mi1 range(NT) loop
12:04:24
finish mi1 range(NT) loop
12:04:24
start mi1 range(n) loop
12:04:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:04:24
start mi1 range(n) 2loop
12:04:24
finish mi1 range(n) 2loop
12:04:24
start mi2
12:04:24
start mi2 range(p) 1 loop
12:04:24
finish mi2 range(p) 1 loop
12:04:24
start mi2 range(p) 2 loop
12:04:24
finish mi2 range(p) 2 loop
12:04:24
start mi2 range(NT) loop
12:04:25
finish mi2 range(NT) loop
12:04:25
start mi2 range(n) loop
12:04:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:04:25
start mi2 range(n) 2loop
12:04:25
finish mi2 range(n) 2loop
12:04:25
[[-2.77482628]]
end mi2 loop
12:04:25
estep
12:04:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:04:41
start ppi1
12:04:41
start mi0
12:04:41
start mi0 range(p) 1 loop
12:04:41
finish mi0 range(p) 1 loop
12:04:41
start mi0 range(p) 2 loop
12:04:41
finish mi0 range(p) 2 loop
12:04:41
start mi0 range(NT) loop
12:04:41
finish mi0 range(NT) loop
12:04:41
start mi0 range(n) loop
12:04:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:04:41
start mi0 range(n) 2loop
12:04:41
finish mi0 range(n) 2loop
12:04:41
start mi1
12:04:41
start mi1 range(p) 1 loop
12:04:41
finish mi1 range(p) 1 loop
12:04:41
start mi1 range(p) 2 loop
12:04:41
finish mi1 range(p) 2 loop
12:04:41
start mi1 range(NT) loop
12:04:42
finish mi1 range(NT) loop
12:04:42
start mi1 range(n) loop
12:04:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:04:42
start mi1 range(n) 2loop
12:04:42
finish mi1 range(n) 2loop
12:04:42
start mi2
12:04:42
start mi2 range(p) 1 loop
12:04:42
finish mi2 range(p) 1 loop
12:04:42
start mi2 range(p) 2 loop
12:04:42
finish mi2 range(p) 2 loop
12:04:42
start mi2 range(NT) loop
12:04:42
finish mi2 range(NT) loop
12:04:42
start mi2 range(n) loop
12:04:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:04:42
start mi2 range(n) 2loop
12:04:42
finish mi2 range(n) 2loop
12:04:42
[[-2.83731838]]
end mi2 loop
12:04:42
estep
12:04:42
end estep
12:04:58
end pa12:04:58
goodness of fit correlation [0.15744601]
start cluster 12:04:58
2
parallel submitted
12:05:20
parallel finished
12:08:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:08:49
start mi0
12:08:49
start mi0 range(p) 1 loop
12:08:49
finish mi0 range(p) 1 loop
12:08:49
start mi0 range(p) 2 loop
12:08:49
finish mi0 range(p) 2 loop
12:08:49
start mi0 range(NT) loop
12:08:49
finish mi0 range(NT) loop
12:08:49
start mi0 range(n) loop
12:08:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:08:49
start mi0 range(n) 2loop
12:08:49
finish mi0 range(n) 2loop
12:08:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:08:50
start mi1 range(p) 1 loop
12:08:50
finish mi1 range(p) 1 loop
12:08:50
start mi1 range(p) 2 loop
12:08:50
finish mi1 range(p) 2 loop
12:08:50
start mi1 range(NT) loop
12:08:50
finish mi1 range(NT) loop
12:08:50
start mi1 range(n) loop
12:08:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:08:50
start mi1 range(n) 2loop
12:08:50
finish mi1 range(n) 2loop
12:08:50
start mi2
12:08:50
start mi2 range(p) 1 loop
12:08:50
finish mi2 range(p) 1 loop
12:08:50
start mi2 range(p) 2 loop
12:08:50
finish mi2 range(p) 2 loop
12:08:50
start mi2 range(NT) loop
12:08:50
finish mi2 range(NT) loop
12:08:50
start mi2 range(n) loop
12:08:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:08:50
start mi2 range(n) 2loop
12:08:50
finish mi2 range(n) 2loop
12:08:50
[[-2.82762449]]
end mi2 loop
12:08:50
estep
12:08:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:09:07
start ppi1
12:09:07
start mi0
12:09:07
start mi0 range(p) 1 loop
12:09:07
finish mi0 range(p) 1 loop
12:09:07
start mi0 range(p) 2 loop
12:09:07
finish mi0 range(p) 2 loop
12:09:07
start mi0 range(NT) loop
12:09:07
finish mi0 range(NT) loop
12:09:07
start mi0 range(n) loop
12:09:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:09:07
start mi0 range(n) 2loop
12:09:07
finish mi0 range(n) 2loop
12:09:07
start mi1
12:09:07
start mi1 range(p) 1 loop
12:09:07
finish mi1 range(p) 1 loop
12:09:07
start mi1 range(p) 2 loop
12:09:07
finish mi1 range(p) 2 loop
12:09:07
start mi1 range(NT) loop
12:09:07
finish mi1 range(NT) loop
12:09:07
start mi1 range(n) loop
12:09:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:09:07
start mi1 range(n) 2loop
12:09:07
finish mi1 range(n) 2loop
12:09:07
[[-2.89009695]]
end mi1 loop
12:09:07
estep
12:09:07
end estep
12:09:23
end pa12:09:23
goodness of fit correlation [0.20268272]
start cluster 12:09:23
3
parallel submitted
12:09:48
parallel finished
12:13:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:13:30
start mi0
12:13:30
start mi0 range(p) 1 loop
12:13:30
finish mi0 range(p) 1 loop
12:13:30
start mi0 range(p) 2 loop
12:13:30
finish mi0 range(p) 2 loop
12:13:30
start mi0 range(NT) loop
12:13:30
finish mi0 range(NT) loop
12:13:30
start mi0 range(n) loop
12:13:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:13:30
start mi0 range(n) 2loop
12:13:30
finish mi0 range(n) 2loop
12:13:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:13:30
start mi1 range(p) 1 loop
12:13:30
finish mi1 range(p) 1 loop
12:13:30
start mi1 range(p) 2 loop
12:13:30
finish mi1 range(p) 2 loop
12:13:30
start mi1 range(NT) loop
12:13:30
finish mi1 range(NT) loop
12:13:30
start mi1 range(n) loop
12:13:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:13:31
start mi1 range(n) 2loop
12:13:31
finish mi1 range(n) 2loop
12:13:31
start mi2
12:13:31
start mi2 range(p) 1 loop
12:13:31
finish mi2 range(p) 1 loop
12:13:31
start mi2 range(p) 2 loop
12:13:31
finish mi2 range(p) 2 loop
12:13:31
start mi2 range(NT) loop
12:13:31
finish mi2 range(NT) loop
12:13:31
start mi2 range(n) loop
12:13:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:13:31
start mi2 range(n) 2loop
12:13:31
finish mi2 range(n) 2loop
12:13:31
[[-2.86040881]]
end mi2 loop
12:13:31
estep
12:13:31
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:13:47
start ppi1
12:13:47
start mi0
12:13:47
start mi0 range(p) 1 loop
12:13:47
finish mi0 range(p) 1 loop
12:13:47
start mi0 range(p) 2 loop
12:13:47
finish mi0 range(p) 2 loop
12:13:47
start mi0 range(NT) loop
12:13:47
finish mi0 range(NT) loop
12:13:47
start mi0 range(n) loop
12:13:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:13:48
start mi0 range(n) 2loop
12:13:48
finish mi0 range(n) 2loop
12:13:48
start mi1
12:13:48
start mi1 range(p) 1 loop
12:13:48
finish mi1 range(p) 1 loop
12:13:48
start mi1 range(p) 2 loop
12:13:48
finish mi1 range(p) 2 loop
12:13:48
start mi1 range(NT) loop
12:13:48
finish mi1 range(NT) loop
12:13:48
start mi1 range(n) loop
12:13:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:13:48
start mi1 range(n) 2loop
12:13:48
finish mi1 range(n) 2loop
12:13:48
[[-2.9228962]]
end mi1 loop
12:13:48
estep
12:13:48
end estep
12:14:04
end pa12:14:04
goodness of fit correlation [0.20130689]
start cluster 12:14:04
4
parallel submitted
12:14:27
parallel finished
12:18:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:19:00
start mi0
12:19:00
start mi0 range(p) 1 loop
12:19:00
finish mi0 range(p) 1 loop
12:19:00
start mi0 range(p) 2 loop
12:19:00
finish mi0 range(p) 2 loop
12:19:00
start mi0 range(NT) loop
12:19:00
finish mi0 range(NT) loop
12:19:00
start mi0 range(n) loop
12:19:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:19:00
start mi0 range(n) 2loop
12:19:00
finish mi0 range(n) 2loop
12:19:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:19:01
start mi1 range(p) 1 loop
12:19:01
finish mi1 range(p) 1 loop
12:19:01
start mi1 range(p) 2 loop
12:19:01
finish mi1 range(p) 2 loop
12:19:01
start mi1 range(NT) loop
12:19:01
finish mi1 range(NT) loop
12:19:01
start mi1 range(n) loop
12:19:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:19:01
start mi1 range(n) 2loop
12:19:01
finish mi1 range(n) 2loop
12:19:01
[[-2.88787389]]
end mi1 loop
12:19:01
estep
12:19:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:19:17
start ppi1
12:19:17
start mi0
12:19:17
start mi0 range(p) 1 loop
12:19:17
finish mi0 range(p) 1 loop
12:19:17
start mi0 range(p) 2 loop
12:19:17
finish mi0 range(p) 2 loop
12:19:17
start mi0 range(NT) loop
12:19:17
finish mi0 range(NT) loop
12:19:17
start mi0 range(n) loop
12:19:17
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:19:17
start mi0 range(n) 2loop
12:19:17
finish mi0 range(n) 2loop
12:19:18
start mi1
12:19:18
start mi1 range(p) 1 loop
12:19:18
finish mi1 range(p) 1 loop
12:19:18
start mi1 range(p) 2 loop
12:19:18
finish mi1 range(p) 2 loop
12:19:18
start mi1 range(NT) loop
12:19:18
finish mi1 range(NT) loop
12:19:18
start mi1 range(n) loop
12:19:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:19:18
start mi1 range(n) 2loop
12:19:18
finish mi1 range(n) 2loop
12:19:18
[[-2.95038639]]
end mi1 loop
12:19:18
estep
12:19:18
end estep
12:19:34
end pa12:19:34
goodness of fit correlation [0.21013068]
start cluster 12:19:34
5
parallel submitted
12:19:58
parallel finished
12:22:25
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:22:38
start mi0
12:22:38
start mi0 range(p) 1 loop
12:22:38
finish mi0 range(p) 1 loop
12:22:38
start mi0 range(p) 2 loop
12:22:38
finish mi0 range(p) 2 loop
12:22:38
start mi0 range(NT) loop
12:22:38
finish mi0 range(NT) loop
12:22:38
start mi0 range(n) loop
12:22:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:22:39
start mi0 range(n) 2loop
12:22:39
finish mi0 range(n) 2loop
12:22:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:22:39
start mi1 range(p) 1 loop
12:22:39
finish mi1 range(p) 1 loop
12:22:39
start mi1 range(p) 2 loop
12:22:39
finish mi1 range(p) 2 loop
12:22:39
start mi1 range(NT) loop
12:22:39
finish mi1 range(NT) loop
12:22:39
start mi1 range(n) loop
12:22:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:22:39
start mi1 range(n) 2loop
12:22:39
finish mi1 range(n) 2loop
12:22:39
[[-2.92021079]]
end mi1 loop
12:22:39
estep
12:22:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:22:56
start ppi1
12:22:56
start mi0
12:22:56
start mi0 range(p) 1 loop
12:22:56
finish mi0 range(p) 1 loop
12:22:56
start mi0 range(p) 2 loop
12:22:56
finish mi0 range(p) 2 loop
12:22:56
start mi0 range(NT) loop
12:22:56
finish mi0 range(NT) loop
12:22:56
start mi0 range(n) loop
12:22:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:22:56
start mi0 range(n) 2loop
12:22:56
finish mi0 range(n) 2loop
12:22:56
start mi1
12:22:56
start mi1 range(p) 1 loop
12:22:56
finish mi1 range(p) 1 loop
12:22:56
start mi1 range(p) 2 loop
12:22:56
finish mi1 range(p) 2 loop
12:22:56
start mi1 range(NT) loop
12:22:56
finish mi1 range(NT) loop
12:22:56
start mi1 range(n) loop
12:22:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:22:56
start mi1 range(n) 2loop
12:22:56
finish mi1 range(n) 2loop
12:22:56
[[-2.98270815]]
end mi1 loop
12:22:56
estep
12:22:56
end estep
12:23:13
end pa12:23:13
goodness of fit correlation [0.21544376]
start cluster 12:23:13
6
parallel submitted
12:23:36
parallel finished
12:26:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:27:11
start mi0
12:27:11
start mi0 range(p) 1 loop
12:27:11
finish mi0 range(p) 1 loop
12:27:11
start mi0 range(p) 2 loop
12:27:11
finish mi0 range(p) 2 loop
12:27:11
start mi0 range(NT) loop
12:27:11
finish mi0 range(NT) loop
12:27:11
start mi0 range(n) loop
12:27:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:27:11
start mi0 range(n) 2loop
12:27:11
finish mi0 range(n) 2loop
12:27:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:27:11
start mi1 range(p) 1 loop
12:27:11
finish mi1 range(p) 1 loop
12:27:11
start mi1 range(p) 2 loop
12:27:11
finish mi1 range(p) 2 loop
12:27:11
start mi1 range(NT) loop
12:27:11
finish mi1 range(NT) loop
12:27:11
start mi1 range(n) loop
12:27:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:27:11
start mi1 range(n) 2loop
12:27:11
finish mi1 range(n) 2loop
12:27:11
[[-2.93729705]]
end mi1 loop
12:27:11
estep
12:27:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:27:28
start ppi1
12:27:28
start mi0
12:27:28
start mi0 range(p) 1 loop
12:27:28
finish mi0 range(p) 1 loop
12:27:28
start mi0 range(p) 2 loop
12:27:28
finish mi0 range(p) 2 loop
12:27:28
start mi0 range(NT) loop
12:27:28
finish mi0 range(NT) loop
12:27:28
start mi0 range(n) loop
12:27:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:27:28
start mi0 range(n) 2loop
12:27:28
finish mi0 range(n) 2loop
12:27:28
[[-2.99979108]]
end mi0 loop
12:27:28
estep
12:27:28
end estep
12:27:45
end pa12:27:45
goodness of fit correlation [0.23336569]
start cluster 12:27:45
7
parallel submitted
12:28:08
parallel finished
12:31:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:31:46
start mi0
12:31:46
start mi0 range(p) 1 loop
12:31:46
finish mi0 range(p) 1 loop
12:31:46
start mi0 range(p) 2 loop
12:31:46
finish mi0 range(p) 2 loop
12:31:46
start mi0 range(NT) loop
12:31:46
finish mi0 range(NT) loop
12:31:46
start mi0 range(n) loop
12:31:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:31:46
start mi0 range(n) 2loop
12:31:46
finish mi0 range(n) 2loop
12:31:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:31:46
start mi1 range(p) 1 loop
12:31:46
finish mi1 range(p) 1 loop
12:31:46
start mi1 range(p) 2 loop
12:31:46
finish mi1 range(p) 2 loop
12:31:46
start mi1 range(NT) loop
12:31:46
finish mi1 range(NT) loop
12:31:46
start mi1 range(n) loop
12:31:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:31:46
start mi1 range(n) 2loop
12:31:46
finish mi1 range(n) 2loop
12:31:47
[[-2.94632554]]
end mi1 loop
12:31:47
estep
12:31:47
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:32:03
start ppi1
12:32:03
start mi0
12:32:03
start mi0 range(p) 1 loop
12:32:03
finish mi0 range(p) 1 loop
12:32:03
start mi0 range(p) 2 loop
12:32:03
finish mi0 range(p) 2 loop
12:32:03
start mi0 range(NT) loop
12:32:03
finish mi0 range(NT) loop
12:32:04
start mi0 range(n) loop
12:32:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:32:04
start mi0 range(n) 2loop
12:32:04
finish mi0 range(n) 2loop
12:32:04
[[-3.00877988]]
end mi0 loop
12:32:04
estep
12:32:04
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
end estep
12:32:20
end pa12:32:20
goodness of fit correlation [0.22735361]
start cluster 12:32:20
8
parallel submitted
12:32:44
parallel finished
12:36:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:36:16
start mi0
12:36:16
start mi0 range(p) 1 loop
12:36:16
finish mi0 range(p) 1 loop
12:36:16
start mi0 range(p) 2 loop
12:36:16
finish mi0 range(p) 2 loop
12:36:16
start mi0 range(NT) loop
12:36:16
finish mi0 range(NT) loop
12:36:16
start mi0 range(n) loop
12:36:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:36:16
start mi0 range(n) 2loop
12:36:16
finish mi0 range(n) 2loop
12:36:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:36:16
start mi1 range(p) 1 loop
12:36:16
finish mi1 range(p) 1 loop
12:36:16
start mi1 range(p) 2 loop
12:36:16
finish mi1 range(p) 2 loop
12:36:16
start mi1 range(NT) loop
12:36:16
finish mi1 range(NT) loop
12:36:16
start mi1 range(n) loop
12:36:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:36:16
start mi1 range(n) 2loop
12:36:16
finish mi1 range(n) 2loop
12:36:16
start mi2
12:36:16
start mi2 range(p) 1 loop
12:36:16
finish mi2 range(p) 1 loop
12:36:16
start mi2 range(p) 2 loop
12:36:16
finish mi2 range(p) 2 loop
12:36:16
start mi2 range(NT) loop
12:36:16
finish mi2 range(NT) loop
12:36:16
start mi2 range(n) loop
12:36:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:36:16
start mi2 range(n) 2loop
12:36:16
finish mi2 range(n) 2loop
12:36:17
[[-2.85952274]]
end mi2 loop
12:36:17
estep
12:36:17
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:36:34
start ppi1
12:36:34
start mi0
12:36:34
start mi0 range(p) 1 loop
12:36:34
finish mi0 range(p) 1 loop
12:36:34
start mi0 range(p) 2 loop
12:36:34
finish mi0 range(p) 2 loop
12:36:34
start mi0 range(NT) loop
12:36:34
finish mi0 range(NT) loop
12:36:34
start mi0 range(n) loop
12:36:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:36:34
start mi0 range(n) 2loop
12:36:34
finish mi0 range(n) 2loop
12:36:34
start mi1
12:36:34
start mi1 range(p) 1 loop
12:36:34
finish mi1 range(p) 1 loop
12:36:34
start mi1 range(p) 2 loop
12:36:34
finish mi1 range(p) 2 loop
12:36:34
start mi1 range(NT) loop
12:36:34
finish mi1 range(NT) loop
12:36:34
start mi1 range(n) loop
12:36:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:36:34
start mi1 range(n) 2loop
12:36:34
finish mi1 range(n) 2loop
12:36:34
[[-2.92200991]]
end mi1 loop
12:36:34
estep
12:36:34
end estep
12:36:51
end pa12:36:51
goodness of fit correlation [0.19231386]
start cluster 12:36:51
9
parallel submitted
12:37:15
parallel finished
12:40:29
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:40:46
start mi0
12:40:46
start mi0 range(p) 1 loop
12:40:46
finish mi0 range(p) 1 loop
12:40:46
start mi0 range(p) 2 loop
12:40:46
finish mi0 range(p) 2 loop
12:40:46
start mi0 range(NT) loop
12:40:46
finish mi0 range(NT) loop
12:40:46
start mi0 range(n) loop
12:40:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:40:46
start mi0 range(n) 2loop
12:40:46
finish mi0 range(n) 2loop
12:40:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:40:46
start mi1 range(p) 1 loop
12:40:46
finish mi1 range(p) 1 loop
12:40:46
start mi1 range(p) 2 loop
12:40:46
finish mi1 range(p) 2 loop
12:40:46
start mi1 range(NT) loop
12:40:46
finish mi1 range(NT) loop
12:40:46
start mi1 range(n) loop
12:40:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:40:46
start mi1 range(n) 2loop
12:40:46
finish mi1 range(n) 2loop
12:40:47
[[-2.88965387]]
end mi1 loop
12:40:47
estep
12:40:47
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:41:04
start ppi1
12:41:04
start mi0
12:41:04
start mi0 range(p) 1 loop
12:41:04
finish mi0 range(p) 1 loop
12:41:04
start mi0 range(p) 2 loop
12:41:04
finish mi0 range(p) 2 loop
12:41:04
start mi0 range(NT) loop
12:41:04
finish mi0 range(NT) loop
12:41:04
start mi0 range(n) loop
12:41:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:41:04
start mi0 range(n) 2loop
12:41:04
finish mi0 range(n) 2loop
12:41:04
start mi1
12:41:04
start mi1 range(p) 1 loop
12:41:04
finish mi1 range(p) 1 loop
12:41:04
start mi1 range(p) 2 loop
12:41:04
finish mi1 range(p) 2 loop
12:41:04
start mi1 range(NT) loop
12:41:04
finish mi1 range(NT) loop
12:41:04
start mi1 range(n) loop
12:41:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:41:04
start mi1 range(n) 2loop
12:41:04
finish mi1 range(n) 2loop
12:41:04
[[-2.95216513]]
end mi1 loop
12:41:04
estep
12:41:04
end estep
12:41:21
end pa12:41:21
goodness of fit correlation [0.24074579]
start cluster 12:41:21
10
parallel submitted
12:41:48
parallel finished
12:45:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:45:23
start mi0
12:45:23
start mi0 range(p) 1 loop
12:45:23
finish mi0 range(p) 1 loop
12:45:23
start mi0 range(p) 2 loop
12:45:23
finish mi0 range(p) 2 loop
12:45:23
start mi0 range(NT) loop
12:45:23
finish mi0 range(NT) loop
12:45:23
start mi0 range(n) loop
12:45:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:45:23
start mi0 range(n) 2loop
12:45:23
finish mi0 range(n) 2loop
12:45:24
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:45:24
start mi1 range(p) 1 loop
12:45:24
finish mi1 range(p) 1 loop
12:45:24
start mi1 range(p) 2 loop
12:45:24
finish mi1 range(p) 2 loop
12:45:24
start mi1 range(NT) loop
12:45:24
finish mi1 range(NT) loop
12:45:24
start mi1 range(n) loop
12:45:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:45:24
start mi1 range(n) 2loop
12:45:24
finish mi1 range(n) 2loop
12:45:24
[[-2.90463959]]
end mi1 loop
12:45:24
estep
12:45:24
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:45:41
start ppi1
12:45:41
start mi0
12:45:41
start mi0 range(p) 1 loop
12:45:41
finish mi0 range(p) 1 loop
12:45:41
start mi0 range(p) 2 loop
12:45:41
finish mi0 range(p) 2 loop
12:45:41
start mi0 range(NT) loop
12:45:41
finish mi0 range(NT) loop
12:45:41
start mi0 range(n) loop
12:45:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:45:41
start mi0 range(n) 2loop
12:45:41
finish mi0 range(n) 2loop
12:45:41
start mi1
12:45:41
start mi1 range(p) 1 loop
12:45:41
finish mi1 range(p) 1 loop
12:45:41
start mi1 range(p) 2 loop
12:45:41
finish mi1 range(p) 2 loop
12:45:41
start mi1 range(NT) loop
12:45:41
finish mi1 range(NT) loop
12:45:41
start mi1 range(n) loop
12:45:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:45:41
start mi1 range(n) 2loop
12:45:41
finish mi1 range(n) 2loop
12:45:42
[[-2.96714248]]
end mi1 loop
12:45:42
estep
12:45:42
end estep
12:45:58
end pa12:45:58
goodness of fit correlation [0.22667039]
start cluster 12:45:58
11
parallel submitted
12:46:22
parallel finished
12:49:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:50:02
start mi0
12:50:02
start mi0 range(p) 1 loop
12:50:02
finish mi0 range(p) 1 loop
12:50:02
start mi0 range(p) 2 loop
12:50:02
finish mi0 range(p) 2 loop
12:50:02
start mi0 range(NT) loop
12:50:02
finish mi0 range(NT) loop
12:50:02
start mi0 range(n) loop
12:50:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:50:02
start mi0 range(n) 2loop
12:50:02
finish mi0 range(n) 2loop
12:50:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:50:03
start mi1 range(p) 1 loop
12:50:03
finish mi1 range(p) 1 loop
12:50:03
start mi1 range(p) 2 loop
12:50:03
finish mi1 range(p) 2 loop
12:50:03
start mi1 range(NT) loop
12:50:03
finish mi1 range(NT) loop
12:50:03
start mi1 range(n) loop
12:50:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:50:03
start mi1 range(n) 2loop
12:50:03
finish mi1 range(n) 2loop
12:50:03
[[-2.91839247]]
end mi1 loop
12:50:03
estep
12:50:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:50:20
start ppi1
12:50:20
start mi0
12:50:20
start mi0 range(p) 1 loop
12:50:20
finish mi0 range(p) 1 loop
12:50:20
start mi0 range(p) 2 loop
12:50:20
finish mi0 range(p) 2 loop
12:50:20
start mi0 range(NT) loop
12:50:20
finish mi0 range(NT) loop
12:50:20
start mi0 range(n) loop
12:50:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:50:20
start mi0 range(n) 2loop
12:50:20
finish mi0 range(n) 2loop
12:50:20
start mi1
12:50:20
start mi1 range(p) 1 loop
12:50:20
finish mi1 range(p) 1 loop
12:50:20
start mi1 range(p) 2 loop
12:50:20
finish mi1 range(p) 2 loop
12:50:20
start mi1 range(NT) loop
12:50:20
finish mi1 range(NT) loop
12:50:20
start mi1 range(n) loop
12:50:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:50:21
start mi1 range(n) 2loop
12:50:21
finish mi1 range(n) 2loop
12:50:21
[[-2.98089033]]
end mi1 loop
12:50:21
estep
12:50:21
end estep
12:50:37
end pa12:50:37
goodness of fit correlation [0.21095092]
start cluster 12:50:37
12
parallel submitted
12:51:02
parallel finished
12:54:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:54:35
start mi0
12:54:35
start mi0 range(p) 1 loop
12:54:35
finish mi0 range(p) 1 loop
12:54:35
start mi0 range(p) 2 loop
12:54:35
finish mi0 range(p) 2 loop
12:54:35
start mi0 range(NT) loop
12:54:35
finish mi0 range(NT) loop
12:54:35
start mi0 range(n) loop
12:54:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:54:35
start mi0 range(n) 2loop
12:54:35
finish mi0 range(n) 2loop
12:54:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:54:35
start mi1 range(p) 1 loop
12:54:35
finish mi1 range(p) 1 loop
12:54:35
start mi1 range(p) 2 loop
12:54:35
finish mi1 range(p) 2 loop
12:54:35
start mi1 range(NT) loop
12:54:36
finish mi1 range(NT) loop
12:54:36
start mi1 range(n) loop
12:54:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:54:36
start mi1 range(n) 2loop
12:54:36
finish mi1 range(n) 2loop
12:54:36
[[-2.94398075]]
end mi1 loop
12:54:36
estep
12:54:36
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:54:53
start ppi1
12:54:53
start mi0
12:54:53
start mi0 range(p) 1 loop
12:54:53
finish mi0 range(p) 1 loop
12:54:53
start mi0 range(p) 2 loop
12:54:53
finish mi0 range(p) 2 loop
12:54:53
start mi0 range(NT) loop
12:54:53
finish mi0 range(NT) loop
12:54:53
start mi0 range(n) loop
12:54:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:54:53
start mi0 range(n) 2loop
12:54:53
finish mi0 range(n) 2loop
12:54:53
[[-3.00645315]]
end mi0 loop
12:54:53
estep
12:54:53
end estep
12:55:10
end pa12:55:10
goodness of fit correlation [0.253013]
start cluster 12:55:10
13
parallel submitted
12:55:37
parallel finished
12:58:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:59:03
start mi0
12:59:03
start mi0 range(p) 1 loop
12:59:03
finish mi0 range(p) 1 loop
12:59:03
start mi0 range(p) 2 loop
12:59:03
finish mi0 range(p) 2 loop
12:59:03
start mi0 range(NT) loop
12:59:03
finish mi0 range(NT) loop
12:59:03
start mi0 range(n) loop
12:59:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:59:03
start mi0 range(n) 2loop
12:59:03
finish mi0 range(n) 2loop
12:59:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:59:03
start mi1 range(p) 1 loop
12:59:03
finish mi1 range(p) 1 loop
12:59:03
start mi1 range(p) 2 loop
12:59:03
finish mi1 range(p) 2 loop
12:59:03
start mi1 range(NT) loop
12:59:03
finish mi1 range(NT) loop
12:59:03
start mi1 range(n) loop
12:59:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:59:04
start mi1 range(n) 2loop
12:59:04
finish mi1 range(n) 2loop
12:59:04
[[-2.9406152]]
end mi1 loop
12:59:04
estep
12:59:04
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:59:23
start ppi1
12:59:23
start mi0
12:59:23
start mi0 range(p) 1 loop
12:59:23
finish mi0 range(p) 1 loop
12:59:23
start mi0 range(p) 2 loop
12:59:23
finish mi0 range(p) 2 loop
12:59:23
start mi0 range(NT) loop
12:59:23
finish mi0 range(NT) loop
12:59:23
start mi0 range(n) loop
12:59:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:59:23
start mi0 range(n) 2loop
12:59:23
finish mi0 range(n) 2loop
12:59:23
[[-3.00310402]]
end mi0 loop
12:59:23
estep
12:59:23
end estep
12:59:40
end pa12:59:40
goodness of fit correlation [0.22661222]
start cluster 12:59:40
14
parallel submitted
13:00:07
parallel finished
13:03:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:03:22
start mi0
13:03:22
start mi0 range(p) 1 loop
13:03:22
finish mi0 range(p) 1 loop
13:03:22
start mi0 range(p) 2 loop
13:03:22
finish mi0 range(p) 2 loop
13:03:22
start mi0 range(NT) loop
13:03:22
finish mi0 range(NT) loop
13:03:22
start mi0 range(n) loop
13:03:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:03:22
start mi0 range(n) 2loop
13:03:22
finish mi0 range(n) 2loop
13:03:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:03:22
start mi1 range(p) 1 loop
13:03:22
finish mi1 range(p) 1 loop
13:03:22
start mi1 range(p) 2 loop
13:03:22
finish mi1 range(p) 2 loop
13:03:22
start mi1 range(NT) loop
13:03:22
finish mi1 range(NT) loop
13:03:22
start mi1 range(n) loop
13:03:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:03:22
start mi1 range(n) 2loop
13:03:22
finish mi1 range(n) 2loop
13:03:22
[[-2.92385897]]
end mi1 loop
13:03:22
estep
13:03:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:03:40
start ppi1
13:03:40
start mi0
13:03:40
start mi0 range(p) 1 loop
13:03:40
finish mi0 range(p) 1 loop
13:03:40
start mi0 range(p) 2 loop
13:03:40
finish mi0 range(p) 2 loop
13:03:40
start mi0 range(NT) loop
13:03:40
finish mi0 range(NT) loop
13:03:40
start mi0 range(n) loop
13:03:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:03:40
start mi0 range(n) 2loop
13:03:40
finish mi0 range(n) 2loop
13:03:40
start mi1
13:03:40
start mi1 range(p) 1 loop
13:03:40
finish mi1 range(p) 1 loop
13:03:40
start mi1 range(p) 2 loop
13:03:40
finish mi1 range(p) 2 loop
13:03:40
start mi1 range(NT) loop
13:03:40
finish mi1 range(NT) loop
13:03:40
start mi1 range(n) loop
13:03:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:03:40
start mi1 range(n) 2loop
13:03:40
finish mi1 range(n) 2loop
13:03:40
[[-2.98635542]]
end mi1 loop
13:03:40
estep
13:03:40
end estep
13:03:58
end pa13:03:58
goodness of fit correlation [0.22108663]
start cluster 13:03:58
15
parallel submitted
13:04:25
parallel finished
13:07:38
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:07:56
start mi0
13:07:56
start mi0 range(p) 1 loop
13:07:56
finish mi0 range(p) 1 loop
13:07:56
start mi0 range(p) 2 loop
13:07:56
finish mi0 range(p) 2 loop
13:07:56
start mi0 range(NT) loop
13:07:56
finish mi0 range(NT) loop
13:07:56
start mi0 range(n) loop
13:07:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:07:57
start mi0 range(n) 2loop
13:07:57
finish mi0 range(n) 2loop
13:07:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:07:57
start mi1 range(p) 1 loop
13:07:57
finish mi1 range(p) 1 loop
13:07:57
start mi1 range(p) 2 loop
13:07:57
finish mi1 range(p) 2 loop
13:07:57
start mi1 range(NT) loop
13:07:57
finish mi1 range(NT) loop
13:07:57
start mi1 range(n) loop
13:07:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:07:57
start mi1 range(n) 2loop
13:07:57
finish mi1 range(n) 2loop
13:07:57
[[-2.95660672]]
end mi1 loop
13:07:57
estep
13:07:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:08:14
start ppi1
13:08:14
start mi0
13:08:14
start mi0 range(p) 1 loop
13:08:14
finish mi0 range(p) 1 loop
13:08:14
start mi0 range(p) 2 loop
13:08:14
finish mi0 range(p) 2 loop
13:08:14
start mi0 range(NT) loop
13:08:15
finish mi0 range(NT) loop
13:08:15
start mi0 range(n) loop
13:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:08:15
start mi0 range(n) 2loop
13:08:15
finish mi0 range(n) 2loop
13:08:15
start mi1
13:08:15
start mi1 range(p) 1 loop
13:08:15
finish mi1 range(p) 1 loop
13:08:15
start mi1 range(p) 2 loop
13:08:15
finish mi1 range(p) 2 loop
13:08:15
start mi1 range(NT) loop
13:08:15
finish mi1 range(NT) loop
13:08:15
start mi1 range(n) loop
13:08:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:08:15
start mi1 range(n) 2loop
13:08:15
finish mi1 range(n) 2loop
13:08:15
[[-3.01909919]]
end mi1 loop
13:08:15
estep
13:08:15
end estep
13:08:33
end pa13:08:33
goodness of fit correlation [0.2443436]
start cluster 13:08:33
16
parallel submitted
13:08:58
parallel finished
13:12:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:12:29
start mi0
13:12:29
start mi0 range(p) 1 loop
13:12:29
finish mi0 range(p) 1 loop
13:12:29
start mi0 range(p) 2 loop
13:12:29
finish mi0 range(p) 2 loop
13:12:29
start mi0 range(NT) loop
13:12:30
finish mi0 range(NT) loop
13:12:30
start mi0 range(n) loop
13:12:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:12:30
start mi0 range(n) 2loop
13:12:30
finish mi0 range(n) 2loop
13:12:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:12:30
start mi1 range(p) 1 loop
13:12:30
finish mi1 range(p) 1 loop
13:12:30
start mi1 range(p) 2 loop
13:12:30
finish mi1 range(p) 2 loop
13:12:30
start mi1 range(NT) loop
13:12:30
finish mi1 range(NT) loop
13:12:30
start mi1 range(n) loop
13:12:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:12:30
start mi1 range(n) 2loop
13:12:30
finish mi1 range(n) 2loop
13:12:30
[[-2.94105903]]
end mi1 loop
13:12:30
estep
13:12:30
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:12:48
start ppi1
13:12:48
start mi0
13:12:48
start mi0 range(p) 1 loop
13:12:48
finish mi0 range(p) 1 loop
13:12:48
start mi0 range(p) 2 loop
13:12:48
finish mi0 range(p) 2 loop
13:12:48
start mi0 range(NT) loop
13:12:48
finish mi0 range(NT) loop
13:12:48
start mi0 range(n) loop
13:12:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:12:48
start mi0 range(n) 2loop
13:12:48
finish mi0 range(n) 2loop
13:12:48
[[-3.00354633]]
end mi0 loop
13:12:48
estep
13:12:48
end estep
13:13:06
end pa13:13:06
goodness of fit correlation [0.23985477]
start cluster 13:13:06
17
parallel submitted
13:13:32
parallel finished
13:16:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:17:00
start mi0
13:17:00
start mi0 range(p) 1 loop
13:17:00
finish mi0 range(p) 1 loop
13:17:00
start mi0 range(p) 2 loop
13:17:00
finish mi0 range(p) 2 loop
13:17:00
start mi0 range(NT) loop
13:17:00
finish mi0 range(NT) loop
13:17:00
start mi0 range(n) loop
13:17:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:17:01
start mi0 range(n) 2loop
13:17:01
finish mi0 range(n) 2loop
13:17:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:17:01
start mi1 range(p) 1 loop
13:17:01
finish mi1 range(p) 1 loop
13:17:01
start mi1 range(p) 2 loop
13:17:01
finish mi1 range(p) 2 loop
13:17:01
start mi1 range(NT) loop
13:17:01
finish mi1 range(NT) loop
13:17:01
start mi1 range(n) loop
13:17:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:17:01
start mi1 range(n) 2loop
13:17:01
finish mi1 range(n) 2loop
13:17:01
[[-2.95441104]]
end mi1 loop
13:17:01
estep
13:17:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:17:19
start ppi1
13:17:19
start mi0
13:17:19
start mi0 range(p) 1 loop
13:17:19
finish mi0 range(p) 1 loop
13:17:19
start mi0 range(p) 2 loop
13:17:19
finish mi0 range(p) 2 loop
13:17:19
start mi0 range(NT) loop
13:17:19
finish mi0 range(NT) loop
13:17:19
start mi0 range(n) loop
13:17:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:17:19
start mi0 range(n) 2loop
13:17:19
finish mi0 range(n) 2loop
13:17:19
start mi1
13:17:19
start mi1 range(p) 1 loop
13:17:19
finish mi1 range(p) 1 loop
13:17:19
start mi1 range(p) 2 loop
13:17:19
finish mi1 range(p) 2 loop
13:17:19
start mi1 range(NT) loop
13:17:19
finish mi1 range(NT) loop
13:17:19
start mi1 range(n) loop
13:17:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:17:19
start mi1 range(n) 2loop
13:17:19
finish mi1 range(n) 2loop
13:17:19
[[-3.01690363]]
end mi1 loop
13:17:19
estep
13:17:19
end estep
13:17:37
end pa13:17:37
goodness of fit correlation [0.23774444]
start cluster 13:17:37
18
parallel submitted
13:18:03
parallel finished
13:24:12
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:24:31
start mi0
13:24:31
start mi0 range(p) 1 loop
13:24:31
finish mi0 range(p) 1 loop
13:24:31
start mi0 range(p) 2 loop
13:24:31
finish mi0 range(p) 2 loop
13:24:31
start mi0 range(NT) loop
13:24:31
finish mi0 range(NT) loop
13:24:31
start mi0 range(n) loop
13:24:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:24:31
start mi0 range(n) 2loop
13:24:31
finish mi0 range(n) 2loop
13:24:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:24:31
start mi1 range(p) 1 loop
13:24:31
finish mi1 range(p) 1 loop
13:24:31
start mi1 range(p) 2 loop
13:24:31
finish mi1 range(p) 2 loop
13:24:31
start mi1 range(NT) loop
13:24:32
finish mi1 range(NT) loop
13:24:32
start mi1 range(n) loop
13:24:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:24:32
start mi1 range(n) 2loop
13:24:32
finish mi1 range(n) 2loop
13:24:32
[[-2.94084878]]
end mi1 loop
13:24:32
estep
13:24:32
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:24:50
start ppi1
13:24:50
start mi0
13:24:50
start mi0 range(p) 1 loop
13:24:50
finish mi0 range(p) 1 loop
13:24:50
start mi0 range(p) 2 loop
13:24:50
finish mi0 range(p) 2 loop
13:24:50
start mi0 range(NT) loop
13:24:50
finish mi0 range(NT) loop
13:24:50
start mi0 range(n) loop
13:24:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:24:50
start mi0 range(n) 2loop
13:24:50
finish mi0 range(n) 2loop
13:24:50
[[-3.00333682]]
end mi0 loop
13:24:50
estep
13:24:50
end estep
13:25:08
end pa13:25:08
goodness of fit correlation [0.24685386]
start cluster 13:25:08
19
parallel submitted
13:25:34
parallel finished
13:31:01
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:31:21
start mi0
13:31:21
start mi0 range(p) 1 loop
13:31:21
finish mi0 range(p) 1 loop
13:31:21
start mi0 range(p) 2 loop
13:31:21
finish mi0 range(p) 2 loop
13:31:21
start mi0 range(NT) loop
13:31:21
finish mi0 range(NT) loop
13:31:21
start mi0 range(n) loop
13:31:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:31:21
start mi0 range(n) 2loop
13:31:21
finish mi0 range(n) 2loop
13:31:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:31:21
start mi1 range(p) 1 loop
13:31:21
finish mi1 range(p) 1 loop
13:31:21
start mi1 range(p) 2 loop
13:31:21
finish mi1 range(p) 2 loop
13:31:21
start mi1 range(NT) loop
13:31:21
finish mi1 range(NT) loop
13:31:21
start mi1 range(n) loop
13:31:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:31:21
start mi1 range(n) 2loop
13:31:21
finish mi1 range(n) 2loop
13:31:22
[[-2.9535304]]
end mi1 loop
13:31:22
estep
13:31:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:31:39
start ppi1
13:31:39
start mi0
13:31:39
start mi0 range(p) 1 loop
13:31:39
finish mi0 range(p) 1 loop
13:31:39
start mi0 range(p) 2 loop
13:31:39
finish mi0 range(p) 2 loop
13:31:39
start mi0 range(NT) loop
13:31:40
finish mi0 range(NT) loop
13:31:40
start mi0 range(n) loop
13:31:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:31:40
start mi0 range(n) 2loop
13:31:40
finish mi0 range(n) 2loop
13:31:40
start mi1
13:31:40
start mi1 range(p) 1 loop
13:31:40
finish mi1 range(p) 1 loop
13:31:40
start mi1 range(p) 2 loop
13:31:40
finish mi1 range(p) 2 loop
13:31:40
start mi1 range(NT) loop
13:31:40
finish mi1 range(NT) loop
13:31:40
start mi1 range(n) loop
13:31:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:31:40
start mi1 range(n) 2loop
13:31:40
finish mi1 range(n) 2loop
13:31:40
[[-3.01602303]]
end mi1 loop
13:31:40
estep
13:31:40
end estep
13:31:58
end pa13:31:58
goodness of fit correlation [0.23469642]
start cluster 13:31:58
20
parallel submitted
13:32:24
parallel finished
13:38:41
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:39:00
start mi0
13:39:00
start mi0 range(p) 1 loop
13:39:00
finish mi0 range(p) 1 loop
13:39:00
start mi0 range(p) 2 loop
13:39:00
finish mi0 range(p) 2 loop
13:39:00
start mi0 range(NT) loop
13:39:00
finish mi0 range(NT) loop
13:39:00
start mi0 range(n) loop
13:39:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:39:00
start mi0 range(n) 2loop
13:39:00
finish mi0 range(n) 2loop
13:39:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:39:00
start mi1 range(p) 1 loop
13:39:00
finish mi1 range(p) 1 loop
13:39:00
start mi1 range(p) 2 loop
13:39:00
finish mi1 range(p) 2 loop
13:39:00
start mi1 range(NT) loop
13:39:00
finish mi1 range(NT) loop
13:39:00
start mi1 range(n) loop
13:39:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:39:00
start mi1 range(n) 2loop
13:39:00
finish mi1 range(n) 2loop
13:39:00
[[-2.9646933]]
end mi1 loop
13:39:00
estep
13:39:00
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:39:18
start ppi1
13:39:18
start mi0
13:39:18
start mi0 range(p) 1 loop
13:39:18
finish mi0 range(p) 1 loop
13:39:18
start mi0 range(p) 2 loop
13:39:18
finish mi0 range(p) 2 loop
13:39:18
start mi0 range(NT) loop
13:39:18
finish mi0 range(NT) loop
13:39:18
start mi0 range(n) loop
13:39:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:39:18
start mi0 range(n) 2loop
13:39:18
finish mi0 range(n) 2loop
13:39:19
start mi1
13:39:19
start mi1 range(p) 1 loop
13:39:19
finish mi1 range(p) 1 loop
13:39:19
start mi1 range(p) 2 loop
13:39:19
finish mi1 range(p) 2 loop
13:39:19
start mi1 range(NT) loop
13:39:19
finish mi1 range(NT) loop
13:39:19
start mi1 range(n) loop
13:39:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:39:19
start mi1 range(n) 2loop
13:39:19
finish mi1 range(n) 2loop
13:39:19
[[-3.02718547]]
end mi1 loop
13:39:19
estep
13:39:19
end estep
13:39:37
end pa13:39:37
goodness of fit correlation [0.26734386]
start cluster 13:39:37
21
parallel submitted
13:40:03
parallel finished
13:45:06
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:45:24
start mi0
13:45:24
start mi0 range(p) 1 loop
13:45:24
finish mi0 range(p) 1 loop
13:45:24
start mi0 range(p) 2 loop
13:45:24
finish mi0 range(p) 2 loop
13:45:24
start mi0 range(NT) loop
13:45:24
finish mi0 range(NT) loop
13:45:24
start mi0 range(n) loop
13:45:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:45:24
start mi0 range(n) 2loop
13:45:24
finish mi0 range(n) 2loop
13:45:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:45:25
start mi1 range(p) 1 loop
13:45:25
finish mi1 range(p) 1 loop
13:45:25
start mi1 range(p) 2 loop
13:45:25
finish mi1 range(p) 2 loop
13:45:25
start mi1 range(NT) loop
13:45:25
finish mi1 range(NT) loop
13:45:25
start mi1 range(n) loop
13:45:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:45:25
start mi1 range(n) 2loop
13:45:25
finish mi1 range(n) 2loop
13:45:25
[[-2.93312029]]
end mi1 loop
13:45:25
estep
13:45:25
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:45:43
start ppi1
13:45:43
start mi0
13:45:43
start mi0 range(p) 1 loop
13:45:43
finish mi0 range(p) 1 loop
13:45:43
start mi0 range(p) 2 loop
13:45:43
finish mi0 range(p) 2 loop
13:45:43
start mi0 range(NT) loop
13:45:43
finish mi0 range(NT) loop
13:45:43
start mi0 range(n) loop
13:45:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:45:43
start mi0 range(n) 2loop
13:45:43
finish mi0 range(n) 2loop
13:45:44
[[-2.99560531]]
end mi0 loop
13:45:44
estep
13:45:44
end estep
13:46:01
end pa13:46:01
goodness of fit correlation [0.20617661]
start cluster 13:46:01
22
parallel submitted
13:46:29
parallel finished
13:51:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:51:36
start mi0
13:51:36
start mi0 range(p) 1 loop
13:51:36
finish mi0 range(p) 1 loop
13:51:36
start mi0 range(p) 2 loop
13:51:36
finish mi0 range(p) 2 loop
13:51:36
start mi0 range(NT) loop
13:51:36
finish mi0 range(NT) loop
13:51:36
start mi0 range(n) loop
13:51:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:51:36
start mi0 range(n) 2loop
13:51:36
finish mi0 range(n) 2loop
13:51:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:51:36
start mi1 range(p) 1 loop
13:51:36
finish mi1 range(p) 1 loop
13:51:36
start mi1 range(p) 2 loop
13:51:36
finish mi1 range(p) 2 loop
13:51:36
start mi1 range(NT) loop
13:51:36
finish mi1 range(NT) loop
13:51:37
start mi1 range(n) loop
13:51:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:51:37
start mi1 range(n) 2loop
13:51:37
finish mi1 range(n) 2loop
13:51:37
[[-2.93040086]]
end mi1 loop
13:51:37
estep
13:51:37
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:51:55
start ppi1
13:51:55
start mi0
13:51:55
start mi0 range(p) 1 loop
13:51:55
finish mi0 range(p) 1 loop
13:51:55
start mi0 range(p) 2 loop
13:51:55
finish mi0 range(p) 2 loop
13:51:55
start mi0 range(NT) loop
13:51:55
finish mi0 range(NT) loop
13:51:55
start mi0 range(n) loop
13:51:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:51:55
start mi0 range(n) 2loop
13:51:55
finish mi0 range(n) 2loop
13:51:55
[[-2.99287067]]
end mi0 loop
13:51:55
estep
13:51:55
end estep
13:52:13
end pa13:52:13
goodness of fit correlation [0.23449626]
start cluster 13:52:13
23
parallel submitted
13:52:41
slurmstepd: error: *** JOB 1825852 ON nodec01 CANCELLED AT 2020-11-06T13:53:19 ***
