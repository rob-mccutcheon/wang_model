16
subject 1021_01_MR
start cluster 09:36:17
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43695 instead
  warnings.warn(
0
parallel submitted
09:36:33
parallel finished
09:43:00
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:43:03
start mi0
09:43:03
start mi0 range(p) 1 loop
09:43:03
finish mi0 range(p) 1 loop
09:43:03
start mi0 range(p) 2 loop
09:43:03
finish mi0 range(p) 2 loop
09:43:03
start mi0 range(NT) loop
09:43:03
finish mi0 range(NT) loop
09:43:03
start mi0 range(n) loop
09:43:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:43:03
start mi0 range(n) 2loop
09:43:03
finish mi0 range(n) 2loop
09:43:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:43:03
start mi1 range(p) 1 loop
09:43:03
finish mi1 range(p) 1 loop
09:43:03
start mi1 range(p) 2 loop
09:43:03
finish mi1 range(p) 2 loop
09:43:03
start mi1 range(NT) loop
09:43:03
finish mi1 range(NT) loop
09:43:03
start mi1 range(n) loop
09:43:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:43:03
start mi1 range(n) 2loop
09:43:03
finish mi1 range(n) 2loop
09:43:03
start mi2
09:43:03
start mi2 range(p) 1 loop
09:43:03
finish mi2 range(p) 1 loop
09:43:03
start mi2 range(p) 2 loop
09:43:03
finish mi2 range(p) 2 loop
09:43:03
start mi2 range(NT) loop
09:43:03
finish mi2 range(NT) loop
09:43:03
start mi2 range(n) loop
09:43:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:43:04
start mi2 range(n) 2loop
09:43:04
finish mi2 range(n) 2loop
09:43:04
start mi3
09:43:04
start mi3 range(p) 1 loop
09:43:04
finish mi3 range(p) 1 loop
09:43:04
start mi3 range(p) 2 loop
09:43:04
finish mi3 range(p) 2 loop
09:43:04
start mi3 range(NT) loop
09:43:04
finish mi3 range(NT) loop
09:43:04
start mi3 range(n) loop
09:43:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:43:04
start mi3 range(n) 2loop
09:43:04
finish mi3 range(n) 2loop
09:43:04
[[-2.443588]]
end mi3 loop
09:43:04
estep
09:43:04
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:43:20
start ppi1
09:43:20
start mi0
09:43:20
start mi0 range(p) 1 loop
09:43:20
finish mi0 range(p) 1 loop
09:43:20
start mi0 range(p) 2 loop
09:43:20
finish mi0 range(p) 2 loop
09:43:20
start mi0 range(NT) loop
09:43:20
finish mi0 range(NT) loop
09:43:20
start mi0 range(n) loop
09:43:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:43:20
start mi0 range(n) 2loop
09:43:20
finish mi0 range(n) 2loop
09:43:20
start mi1
09:43:20
start mi1 range(p) 1 loop
09:43:20
finish mi1 range(p) 1 loop
09:43:20
start mi1 range(p) 2 loop
09:43:20
finish mi1 range(p) 2 loop
09:43:20
start mi1 range(NT) loop
09:43:20
finish mi1 range(NT) loop
09:43:20
start mi1 range(n) loop
09:43:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:43:20
start mi1 range(n) 2loop
09:43:20
finish mi1 range(n) 2loop
09:43:21
start mi2
09:43:21
start mi2 range(p) 1 loop
09:43:21
finish mi2 range(p) 1 loop
09:43:21
start mi2 range(p) 2 loop
09:43:21
finish mi2 range(p) 2 loop
09:43:21
start mi2 range(NT) loop
09:43:21
finish mi2 range(NT) loop
09:43:21
start mi2 range(n) loop
09:43:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:43:21
start mi2 range(n) 2loop
09:43:21
finish mi2 range(n) 2loop
09:43:21
start mi3
09:43:21
start mi3 range(p) 1 loop
09:43:21
finish mi3 range(p) 1 loop
09:43:21
start mi3 range(p) 2 loop
09:43:21
finish mi3 range(p) 2 loop
09:43:21
start mi3 range(NT) loop
09:43:21
finish mi3 range(NT) loop
09:43:21
start mi3 range(n) loop
09:43:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:43:21
start mi3 range(n) 2loop
09:43:21
finish mi3 range(n) 2loop
09:43:21
[[-2.443588]]
end mi3 loop
09:43:21
estep
09:43:21
end estep
09:43:37
end pa09:43:37
goodness of fit correlation [0.05232858]
start cluster 09:43:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38473 instead
  warnings.warn(
1
parallel submitted
09:43:54
parallel finished
09:49:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:49:49
start mi0
09:49:49
start mi0 range(p) 1 loop
09:49:49
finish mi0 range(p) 1 loop
09:49:49
start mi0 range(p) 2 loop
09:49:49
finish mi0 range(p) 2 loop
09:49:49
start mi0 range(NT) loop
09:49:49
finish mi0 range(NT) loop
09:49:49
start mi0 range(n) loop
09:49:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:49:49
start mi0 range(n) 2loop
09:49:49
finish mi0 range(n) 2loop
09:49:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:49:49
start mi1 range(p) 1 loop
09:49:49
finish mi1 range(p) 1 loop
09:49:49
start mi1 range(p) 2 loop
09:49:49
finish mi1 range(p) 2 loop
09:49:49
start mi1 range(NT) loop
09:49:49
finish mi1 range(NT) loop
09:49:49
start mi1 range(n) loop
09:49:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:49:49
start mi1 range(n) 2loop
09:49:49
finish mi1 range(n) 2loop
09:49:49
start mi2
09:49:49
start mi2 range(p) 1 loop
09:49:49
finish mi2 range(p) 1 loop
09:49:49
start mi2 range(p) 2 loop
09:49:49
finish mi2 range(p) 2 loop
09:49:49
start mi2 range(NT) loop
09:49:49
finish mi2 range(NT) loop
09:49:49
start mi2 range(n) loop
09:49:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:49:49
start mi2 range(n) 2loop
09:49:49
finish mi2 range(n) 2loop
09:49:50
start mi3
09:49:50
start mi3 range(p) 1 loop
09:49:50
finish mi3 range(p) 1 loop
09:49:50
start mi3 range(p) 2 loop
09:49:50
finish mi3 range(p) 2 loop
09:49:50
start mi3 range(NT) loop
09:49:50
finish mi3 range(NT) loop
09:49:50
start mi3 range(n) loop
09:49:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:49:50
start mi3 range(n) 2loop
09:49:50
finish mi3 range(n) 2loop
09:49:50
[[-2.45670821]]
end mi3 loop
09:49:50
estep
09:49:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:50:08
start ppi1
09:50:08
start mi0
09:50:08
start mi0 range(p) 1 loop
09:50:08
finish mi0 range(p) 1 loop
09:50:08
start mi0 range(p) 2 loop
09:50:08
finish mi0 range(p) 2 loop
09:50:08
start mi0 range(NT) loop
09:50:08
finish mi0 range(NT) loop
09:50:08
start mi0 range(n) loop
09:50:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:50:08
start mi0 range(n) 2loop
09:50:08
finish mi0 range(n) 2loop
09:50:08
start mi1
09:50:08
start mi1 range(p) 1 loop
09:50:08
finish mi1 range(p) 1 loop
09:50:08
start mi1 range(p) 2 loop
09:50:08
finish mi1 range(p) 2 loop
09:50:08
start mi1 range(NT) loop
09:50:08
finish mi1 range(NT) loop
09:50:08
start mi1 range(n) loop
09:50:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:50:09
start mi1 range(n) 2loop
09:50:09
finish mi1 range(n) 2loop
09:50:09
start mi2
09:50:09
start mi2 range(p) 1 loop
09:50:09
finish mi2 range(p) 1 loop
09:50:09
start mi2 range(p) 2 loop
09:50:09
finish mi2 range(p) 2 loop
09:50:09
start mi2 range(NT) loop
09:50:09
finish mi2 range(NT) loop
09:50:09
start mi2 range(n) loop
09:50:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:50:09
start mi2 range(n) 2loop
09:50:09
finish mi2 range(n) 2loop
09:50:09
[[-2.51916063]]
end mi2 loop
09:50:09
estep
09:50:09
end estep
09:50:25
end pa09:50:25
goodness of fit correlation [0.07171128]
start cluster 09:50:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36864 instead
  warnings.warn(
2
parallel submitted
09:50:42
parallel finished
09:57:25
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:57:30
start mi0
09:57:30
start mi0 range(p) 1 loop
09:57:30
finish mi0 range(p) 1 loop
09:57:30
start mi0 range(p) 2 loop
09:57:30
finish mi0 range(p) 2 loop
09:57:30
start mi0 range(NT) loop
09:57:30
finish mi0 range(NT) loop
09:57:31
start mi0 range(n) loop
09:57:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:57:31
start mi0 range(n) 2loop
09:57:31
finish mi0 range(n) 2loop
09:57:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:57:31
start mi1 range(p) 1 loop
09:57:31
finish mi1 range(p) 1 loop
09:57:31
start mi1 range(p) 2 loop
09:57:31
finish mi1 range(p) 2 loop
09:57:31
start mi1 range(NT) loop
09:57:31
finish mi1 range(NT) loop
09:57:31
start mi1 range(n) loop
09:57:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:57:31
start mi1 range(n) 2loop
09:57:31
finish mi1 range(n) 2loop
09:57:31
start mi2
09:57:31
start mi2 range(p) 1 loop
09:57:31
finish mi2 range(p) 1 loop
09:57:31
start mi2 range(p) 2 loop
09:57:31
finish mi2 range(p) 2 loop
09:57:31
start mi2 range(NT) loop
09:57:31
finish mi2 range(NT) loop
09:57:31
start mi2 range(n) loop
09:57:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:57:31
start mi2 range(n) 2loop
09:57:31
finish mi2 range(n) 2loop
09:57:31
start mi3
09:57:31
start mi3 range(p) 1 loop
09:57:31
finish mi3 range(p) 1 loop
09:57:31
start mi3 range(p) 2 loop
09:57:31
finish mi3 range(p) 2 loop
09:57:31
start mi3 range(NT) loop
09:57:31
finish mi3 range(NT) loop
09:57:31
start mi3 range(n) loop
09:57:31
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:57:31
start mi3 range(n) 2loop
09:57:31
finish mi3 range(n) 2loop
09:57:32
[[-2.49054237]]
end mi3 loop
09:57:32
estep
09:57:32
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:57:48
start ppi1
09:57:48
start mi0
09:57:48
start mi0 range(p) 1 loop
09:57:48
finish mi0 range(p) 1 loop
09:57:48
start mi0 range(p) 2 loop
09:57:48
finish mi0 range(p) 2 loop
09:57:48
start mi0 range(NT) loop
09:57:48
finish mi0 range(NT) loop
09:57:48
start mi0 range(n) loop
09:57:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:57:48
start mi0 range(n) 2loop
09:57:48
finish mi0 range(n) 2loop
09:57:48
start mi1
09:57:48
start mi1 range(p) 1 loop
09:57:48
finish mi1 range(p) 1 loop
09:57:48
start mi1 range(p) 2 loop
09:57:48
finish mi1 range(p) 2 loop
09:57:48
start mi1 range(NT) loop
09:57:48
finish mi1 range(NT) loop
09:57:48
start mi1 range(n) loop
09:57:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:57:48
start mi1 range(n) 2loop
09:57:48
finish mi1 range(n) 2loop
09:57:48
start mi2
09:57:48
start mi2 range(p) 1 loop
09:57:48
finish mi2 range(p) 1 loop
09:57:48
start mi2 range(p) 2 loop
09:57:48
finish mi2 range(p) 2 loop
09:57:48
start mi2 range(NT) loop
09:57:48
finish mi2 range(NT) loop
09:57:48
start mi2 range(n) loop
09:57:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:57:48
start mi2 range(n) 2loop
09:57:48
finish mi2 range(n) 2loop
09:57:48
[[-2.55301307]]
end mi2 loop
09:57:48
estep
09:57:48
end estep
09:58:04
end pa09:58:04
goodness of fit correlation [0.15929227]
start cluster 09:58:04
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44156 instead
  warnings.warn(
3
parallel submitted
09:58:20
parallel finished
10:05:30
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:05:34
start mi0
10:05:34
start mi0 range(p) 1 loop
10:05:34
finish mi0 range(p) 1 loop
10:05:34
start mi0 range(p) 2 loop
10:05:34
finish mi0 range(p) 2 loop
10:05:34
start mi0 range(NT) loop
10:05:34
finish mi0 range(NT) loop
10:05:34
start mi0 range(n) loop
10:05:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:05:34
start mi0 range(n) 2loop
10:05:34
finish mi0 range(n) 2loop
10:05:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:05:34
start mi1 range(p) 1 loop
10:05:34
finish mi1 range(p) 1 loop
10:05:34
start mi1 range(p) 2 loop
10:05:34
finish mi1 range(p) 2 loop
10:05:34
start mi1 range(NT) loop
10:05:34
finish mi1 range(NT) loop
10:05:34
start mi1 range(n) loop
10:05:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:05:34
start mi1 range(n) 2loop
10:05:34
finish mi1 range(n) 2loop
10:05:35
start mi2
10:05:35
start mi2 range(p) 1 loop
10:05:35
finish mi2 range(p) 1 loop
10:05:35
start mi2 range(p) 2 loop
10:05:35
finish mi2 range(p) 2 loop
10:05:35
start mi2 range(NT) loop
10:05:35
finish mi2 range(NT) loop
10:05:35
start mi2 range(n) loop
10:05:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:05:35
start mi2 range(n) 2loop
10:05:35
finish mi2 range(n) 2loop
10:05:35
[[-2.53472488]]
end mi2 loop
10:05:35
estep
10:05:35
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:05:51
start ppi1
10:05:51
start mi0
10:05:51
start mi0 range(p) 1 loop
10:05:51
finish mi0 range(p) 1 loop
10:05:51
start mi0 range(p) 2 loop
10:05:51
finish mi0 range(p) 2 loop
10:05:51
start mi0 range(NT) loop
10:05:51
finish mi0 range(NT) loop
10:05:51
start mi0 range(n) loop
10:05:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:05:51
start mi0 range(n) 2loop
10:05:51
finish mi0 range(n) 2loop
10:05:51
start mi1
10:05:51
start mi1 range(p) 1 loop
10:05:51
finish mi1 range(p) 1 loop
10:05:51
start mi1 range(p) 2 loop
10:05:51
finish mi1 range(p) 2 loop
10:05:51
start mi1 range(NT) loop
10:05:51
finish mi1 range(NT) loop
10:05:51
start mi1 range(n) loop
10:05:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:05:51
start mi1 range(n) 2loop
10:05:51
finish mi1 range(n) 2loop
10:05:52
start mi2
10:05:52
start mi2 range(p) 1 loop
10:05:52
finish mi2 range(p) 1 loop
10:05:52
start mi2 range(p) 2 loop
10:05:52
finish mi2 range(p) 2 loop
10:05:52
start mi2 range(NT) loop
10:05:52
finish mi2 range(NT) loop
10:05:52
start mi2 range(n) loop
10:05:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:05:52
start mi2 range(n) 2loop
10:05:52
finish mi2 range(n) 2loop
10:05:52
[[-2.59723805]]
end mi2 loop
10:05:52
estep
10:05:52
end estep
10:06:08
end pa10:06:08
goodness of fit correlation [0.18989756]
start cluster 10:06:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34669 instead
  warnings.warn(
4
parallel submitted
10:06:26
parallel finished
10:13:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:14:01
start mi0
10:14:01
start mi0 range(p) 1 loop
10:14:01
finish mi0 range(p) 1 loop
10:14:01
start mi0 range(p) 2 loop
10:14:01
finish mi0 range(p) 2 loop
10:14:01
start mi0 range(NT) loop
10:14:01
finish mi0 range(NT) loop
10:14:01
start mi0 range(n) loop
10:14:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:14:01
start mi0 range(n) 2loop
10:14:01
finish mi0 range(n) 2loop
10:14:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:14:01
start mi1 range(p) 1 loop
10:14:01
finish mi1 range(p) 1 loop
10:14:01
start mi1 range(p) 2 loop
10:14:01
finish mi1 range(p) 2 loop
10:14:01
start mi1 range(NT) loop
10:14:01
finish mi1 range(NT) loop
10:14:01
start mi1 range(n) loop
10:14:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:14:02
start mi1 range(n) 2loop
10:14:02
finish mi1 range(n) 2loop
10:14:02
start mi2
10:14:02
start mi2 range(p) 1 loop
10:14:02
finish mi2 range(p) 1 loop
10:14:02
start mi2 range(p) 2 loop
10:14:02
finish mi2 range(p) 2 loop
10:14:02
start mi2 range(NT) loop
10:14:02
finish mi2 range(NT) loop
10:14:02
start mi2 range(n) loop
10:14:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:14:02
start mi2 range(n) 2loop
10:14:02
finish mi2 range(n) 2loop
10:14:02
[[-2.53060733]]
end mi2 loop
10:14:02
estep
10:14:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:14:17
start ppi1
10:14:17
start mi0
10:14:17
start mi0 range(p) 1 loop
10:14:17
finish mi0 range(p) 1 loop
10:14:17
start mi0 range(p) 2 loop
10:14:17
finish mi0 range(p) 2 loop
10:14:17
start mi0 range(NT) loop
10:14:17
finish mi0 range(NT) loop
10:14:18
start mi0 range(n) loop
10:14:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:14:18
start mi0 range(n) 2loop
10:14:18
finish mi0 range(n) 2loop
10:14:18
start mi1
10:14:18
start mi1 range(p) 1 loop
10:14:18
finish mi1 range(p) 1 loop
10:14:18
start mi1 range(p) 2 loop
10:14:18
finish mi1 range(p) 2 loop
10:14:18
start mi1 range(NT) loop
10:14:18
finish mi1 range(NT) loop
10:14:18
start mi1 range(n) loop
10:14:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:14:18
start mi1 range(n) 2loop
10:14:18
finish mi1 range(n) 2loop
10:14:18
start mi2
10:14:18
start mi2 range(p) 1 loop
10:14:18
finish mi2 range(p) 1 loop
10:14:18
start mi2 range(p) 2 loop
10:14:18
finish mi2 range(p) 2 loop
10:14:18
start mi2 range(NT) loop
10:14:18
finish mi2 range(NT) loop
10:14:18
start mi2 range(n) loop
10:14:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:14:18
start mi2 range(n) 2loop
10:14:18
finish mi2 range(n) 2loop
10:14:18
[[-2.59312202]]
end mi2 loop
10:14:18
estep
10:14:18
end estep
10:14:35
end pa10:14:35
goodness of fit correlation [0.18760588]
start cluster 10:14:35
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46323 instead
  warnings.warn(
5
parallel submitted
10:14:54
parallel finished
10:22:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:22:09
start mi0
10:22:09
start mi0 range(p) 1 loop
10:22:09
finish mi0 range(p) 1 loop
10:22:09
start mi0 range(p) 2 loop
10:22:09
finish mi0 range(p) 2 loop
10:22:09
start mi0 range(NT) loop
10:22:09
finish mi0 range(NT) loop
10:22:09
start mi0 range(n) loop
10:22:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:22:09
start mi0 range(n) 2loop
10:22:09
finish mi0 range(n) 2loop
10:22:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:22:10
start mi1 range(p) 1 loop
10:22:10
finish mi1 range(p) 1 loop
10:22:10
start mi1 range(p) 2 loop
10:22:10
finish mi1 range(p) 2 loop
10:22:10
start mi1 range(NT) loop
10:22:10
finish mi1 range(NT) loop
10:22:10
start mi1 range(n) loop
10:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:22:10
start mi1 range(n) 2loop
10:22:10
finish mi1 range(n) 2loop
10:22:10
start mi2
10:22:10
start mi2 range(p) 1 loop
10:22:10
finish mi2 range(p) 1 loop
10:22:10
start mi2 range(p) 2 loop
10:22:10
finish mi2 range(p) 2 loop
10:22:10
start mi2 range(NT) loop
10:22:10
finish mi2 range(NT) loop
10:22:10
start mi2 range(n) loop
10:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:22:10
start mi2 range(n) 2loop
10:22:10
finish mi2 range(n) 2loop
10:22:10
[[-2.52695509]]
end mi2 loop
10:22:10
estep
10:22:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:22:26
start ppi1
10:22:26
start mi0
10:22:26
start mi0 range(p) 1 loop
10:22:26
finish mi0 range(p) 1 loop
10:22:26
start mi0 range(p) 2 loop
10:22:26
finish mi0 range(p) 2 loop
10:22:26
start mi0 range(NT) loop
10:22:26
finish mi0 range(NT) loop
10:22:27
start mi0 range(n) loop
10:22:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:22:27
start mi0 range(n) 2loop
10:22:27
finish mi0 range(n) 2loop
10:22:27
start mi1
10:22:27
start mi1 range(p) 1 loop
10:22:27
finish mi1 range(p) 1 loop
10:22:27
start mi1 range(p) 2 loop
10:22:27
finish mi1 range(p) 2 loop
10:22:27
start mi1 range(NT) loop
10:22:27
finish mi1 range(NT) loop
10:22:27
start mi1 range(n) loop
10:22:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:22:27
start mi1 range(n) 2loop
10:22:27
finish mi1 range(n) 2loop
10:22:27
start mi2
10:22:27
start mi2 range(p) 1 loop
10:22:27
finish mi2 range(p) 1 loop
10:22:27
start mi2 range(p) 2 loop
10:22:27
finish mi2 range(p) 2 loop
10:22:27
start mi2 range(NT) loop
10:22:27
finish mi2 range(NT) loop
10:22:27
start mi2 range(n) loop
10:22:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:22:27
start mi2 range(n) 2loop
10:22:27
finish mi2 range(n) 2loop
10:22:27
[[-2.58947122]]
end mi2 loop
10:22:27
estep
10:22:27
end estep
10:22:43
end pa10:22:43
goodness of fit correlation [0.21361862]
start cluster 10:22:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42496 instead
  warnings.warn(
6
parallel submitted
10:23:02
parallel finished
10:28:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:28:53
start mi0
10:28:53
start mi0 range(p) 1 loop
10:28:53
finish mi0 range(p) 1 loop
10:28:53
start mi0 range(p) 2 loop
10:28:53
finish mi0 range(p) 2 loop
10:28:53
start mi0 range(NT) loop
10:28:53
finish mi0 range(NT) loop
10:28:53
start mi0 range(n) loop
10:28:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:28:53
start mi0 range(n) 2loop
10:28:53
finish mi0 range(n) 2loop
10:28:53
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:28:53
start mi1 range(p) 1 loop
10:28:53
finish mi1 range(p) 1 loop
10:28:53
start mi1 range(p) 2 loop
10:28:53
finish mi1 range(p) 2 loop
10:28:53
start mi1 range(NT) loop
10:28:53
finish mi1 range(NT) loop
10:28:53
start mi1 range(n) loop
10:28:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:28:53
start mi1 range(n) 2loop
10:28:53
finish mi1 range(n) 2loop
10:28:54
start mi2
10:28:54
start mi2 range(p) 1 loop
10:28:54
finish mi2 range(p) 1 loop
10:28:54
start mi2 range(p) 2 loop
10:28:54
finish mi2 range(p) 2 loop
10:28:54
start mi2 range(NT) loop
10:28:54
finish mi2 range(NT) loop
10:28:54
start mi2 range(n) loop
10:28:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:28:54
start mi2 range(n) 2loop
10:28:54
finish mi2 range(n) 2loop
10:28:54
[[-2.5841217]]
end mi2 loop
10:28:54
estep
10:28:54
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:29:10
start ppi1
10:29:10
start mi0
10:29:10
start mi0 range(p) 1 loop
10:29:10
finish mi0 range(p) 1 loop
10:29:10
start mi0 range(p) 2 loop
10:29:10
finish mi0 range(p) 2 loop
10:29:10
start mi0 range(NT) loop
10:29:10
finish mi0 range(NT) loop
10:29:10
start mi0 range(n) loop
10:29:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:29:10
start mi0 range(n) 2loop
10:29:10
finish mi0 range(n) 2loop
10:29:10
start mi1
10:29:10
start mi1 range(p) 1 loop
10:29:10
finish mi1 range(p) 1 loop
10:29:10
start mi1 range(p) 2 loop
10:29:10
finish mi1 range(p) 2 loop
10:29:10
start mi1 range(NT) loop
10:29:11
finish mi1 range(NT) loop
10:29:11
start mi1 range(n) loop
10:29:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:29:11
start mi1 range(n) 2loop
10:29:11
finish mi1 range(n) 2loop
10:29:11
start mi2
10:29:11
start mi2 range(p) 1 loop
10:29:11
finish mi2 range(p) 1 loop
10:29:11
start mi2 range(p) 2 loop
10:29:11
finish mi2 range(p) 2 loop
10:29:11
start mi2 range(NT) loop
10:29:11
finish mi2 range(NT) loop
10:29:11
start mi2 range(n) loop
10:29:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:29:11
start mi2 range(n) 2loop
10:29:11
finish mi2 range(n) 2loop
10:29:11
[[-2.64662239]]
end mi2 loop
10:29:11
estep
10:29:11
end estep
10:29:27
end pa10:29:27
goodness of fit correlation [0.20710157]
start cluster 10:29:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39779 instead
  warnings.warn(
7
parallel submitted
10:29:46
parallel finished
10:33:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:33:54
start mi0
10:33:54
start mi0 range(p) 1 loop
10:33:54
finish mi0 range(p) 1 loop
10:33:54
start mi0 range(p) 2 loop
10:33:54
finish mi0 range(p) 2 loop
10:33:54
start mi0 range(NT) loop
10:33:54
finish mi0 range(NT) loop
10:33:54
start mi0 range(n) loop
10:33:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:33:54
start mi0 range(n) 2loop
10:33:54
finish mi0 range(n) 2loop
10:33:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:33:54
start mi1 range(p) 1 loop
10:33:54
finish mi1 range(p) 1 loop
10:33:54
start mi1 range(p) 2 loop
10:33:54
finish mi1 range(p) 2 loop
10:33:54
start mi1 range(NT) loop
10:33:54
finish mi1 range(NT) loop
10:33:54
start mi1 range(n) loop
10:33:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:33:54
start mi1 range(n) 2loop
10:33:54
finish mi1 range(n) 2loop
10:33:54
start mi2
10:33:54
start mi2 range(p) 1 loop
10:33:54
finish mi2 range(p) 1 loop
10:33:54
start mi2 range(p) 2 loop
10:33:54
finish mi2 range(p) 2 loop
10:33:54
start mi2 range(NT) loop
10:33:54
finish mi2 range(NT) loop
10:33:54
start mi2 range(n) loop
10:33:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:33:54
start mi2 range(n) 2loop
10:33:54
finish mi2 range(n) 2loop
10:33:55
[[-2.59545538]]
end mi2 loop
10:33:55
estep
10:33:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:34:11
start ppi1
10:34:11
start mi0
10:34:11
start mi0 range(p) 1 loop
10:34:11
finish mi0 range(p) 1 loop
10:34:11
start mi0 range(p) 2 loop
10:34:11
finish mi0 range(p) 2 loop
10:34:11
start mi0 range(NT) loop
10:34:11
finish mi0 range(NT) loop
10:34:11
start mi0 range(n) loop
10:34:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:34:11
start mi0 range(n) 2loop
10:34:11
finish mi0 range(n) 2loop
10:34:11
start mi1
10:34:11
start mi1 range(p) 1 loop
10:34:11
finish mi1 range(p) 1 loop
10:34:11
start mi1 range(p) 2 loop
10:34:11
finish mi1 range(p) 2 loop
10:34:11
start mi1 range(NT) loop
10:34:11
finish mi1 range(NT) loop
10:34:11
start mi1 range(n) loop
10:34:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:34:11
start mi1 range(n) 2loop
10:34:11
finish mi1 range(n) 2loop
10:34:11
start mi2
10:34:11
start mi2 range(p) 1 loop
10:34:11
finish mi2 range(p) 1 loop
10:34:11
start mi2 range(p) 2 loop
10:34:11
finish mi2 range(p) 2 loop
10:34:11
start mi2 range(NT) loop
10:34:12
finish mi2 range(NT) loop
10:34:12
start mi2 range(n) loop
10:34:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:34:12
start mi2 range(n) 2loop
10:34:12
finish mi2 range(n) 2loop
10:34:12
[[-2.65795436]]
end mi2 loop
10:34:12
estep
10:34:12
end estep
10:34:28
end pa10:34:28
goodness of fit correlation [0.20330375]
start cluster 10:34:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38274 instead
  warnings.warn(
8
parallel submitted
10:34:47
parallel finished
10:37:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:37:54
start mi0
10:37:54
start mi0 range(p) 1 loop
10:37:54
finish mi0 range(p) 1 loop
10:37:54
start mi0 range(p) 2 loop
10:37:54
finish mi0 range(p) 2 loop
10:37:54
start mi0 range(NT) loop
10:37:54
finish mi0 range(NT) loop
10:37:54
start mi0 range(n) loop
10:37:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:37:54
start mi0 range(n) 2loop
10:37:54
finish mi0 range(n) 2loop
10:37:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:37:54
start mi1 range(p) 1 loop
10:37:54
finish mi1 range(p) 1 loop
10:37:54
start mi1 range(p) 2 loop
10:37:54
finish mi1 range(p) 2 loop
10:37:54
start mi1 range(NT) loop
10:37:54
finish mi1 range(NT) loop
10:37:54
start mi1 range(n) loop
10:37:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:37:55
start mi1 range(n) 2loop
10:37:55
finish mi1 range(n) 2loop
10:37:55
start mi2
10:37:55
start mi2 range(p) 1 loop
10:37:55
finish mi2 range(p) 1 loop
10:37:55
start mi2 range(p) 2 loop
10:37:55
finish mi2 range(p) 2 loop
10:37:55
start mi2 range(NT) loop
10:37:55
finish mi2 range(NT) loop
10:37:55
start mi2 range(n) loop
10:37:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:37:55
start mi2 range(n) 2loop
10:37:55
finish mi2 range(n) 2loop
10:37:55
[[-2.59340687]]
end mi2 loop
10:37:55
estep
10:37:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:38:11
start ppi1
10:38:11
start mi0
10:38:11
start mi0 range(p) 1 loop
10:38:11
finish mi0 range(p) 1 loop
10:38:11
start mi0 range(p) 2 loop
10:38:11
finish mi0 range(p) 2 loop
10:38:11
start mi0 range(NT) loop
10:38:11
finish mi0 range(NT) loop
10:38:11
start mi0 range(n) loop
10:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:38:11
start mi0 range(n) 2loop
10:38:11
finish mi0 range(n) 2loop
10:38:11
start mi1
10:38:11
start mi1 range(p) 1 loop
10:38:11
finish mi1 range(p) 1 loop
10:38:11
start mi1 range(p) 2 loop
10:38:11
finish mi1 range(p) 2 loop
10:38:11
start mi1 range(NT) loop
10:38:11
finish mi1 range(NT) loop
10:38:11
start mi1 range(n) loop
10:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:38:11
start mi1 range(n) 2loop
10:38:11
finish mi1 range(n) 2loop
10:38:11
start mi2
10:38:11
start mi2 range(p) 1 loop
10:38:11
finish mi2 range(p) 1 loop
10:38:11
start mi2 range(p) 2 loop
10:38:11
finish mi2 range(p) 2 loop
10:38:11
start mi2 range(NT) loop
10:38:11
finish mi2 range(NT) loop
10:38:11
start mi2 range(n) loop
10:38:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:38:11
start mi2 range(n) 2loop
10:38:11
finish mi2 range(n) 2loop
10:38:11
[[-2.65590614]]
end mi2 loop
10:38:11
estep
10:38:11
end estep
10:38:27
end pa10:38:27
goodness of fit correlation [0.28230689]
start cluster 10:38:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36632 instead
  warnings.warn(
9
parallel submitted
10:38:45
parallel finished
10:43:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:43:56
start mi0
10:43:56
start mi0 range(p) 1 loop
10:43:56
finish mi0 range(p) 1 loop
10:43:56
start mi0 range(p) 2 loop
10:43:56
finish mi0 range(p) 2 loop
10:43:56
start mi0 range(NT) loop
10:43:56
finish mi0 range(NT) loop
10:43:56
start mi0 range(n) loop
10:43:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:43:56
start mi0 range(n) 2loop
10:43:56
finish mi0 range(n) 2loop
10:43:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:43:57
start mi1 range(p) 1 loop
10:43:57
finish mi1 range(p) 1 loop
10:43:57
start mi1 range(p) 2 loop
10:43:57
finish mi1 range(p) 2 loop
10:43:57
start mi1 range(NT) loop
10:43:57
finish mi1 range(NT) loop
10:43:57
start mi1 range(n) loop
10:43:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:43:57
start mi1 range(n) 2loop
10:43:57
finish mi1 range(n) 2loop
10:43:57
start mi2
10:43:57
start mi2 range(p) 1 loop
10:43:57
finish mi2 range(p) 1 loop
10:43:57
start mi2 range(p) 2 loop
10:43:57
finish mi2 range(p) 2 loop
10:43:57
start mi2 range(NT) loop
10:43:57
finish mi2 range(NT) loop
10:43:57
start mi2 range(n) loop
10:43:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:43:57
start mi2 range(n) 2loop
10:43:57
finish mi2 range(n) 2loop
10:43:57
[[-2.61256308]]
end mi2 loop
10:43:57
estep
10:43:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:44:12
start ppi1
10:44:12
start mi0
10:44:12
start mi0 range(p) 1 loop
10:44:12
finish mi0 range(p) 1 loop
10:44:12
start mi0 range(p) 2 loop
10:44:12
finish mi0 range(p) 2 loop
10:44:12
start mi0 range(NT) loop
10:44:13
finish mi0 range(NT) loop
10:44:13
start mi0 range(n) loop
10:44:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:44:13
start mi0 range(n) 2loop
10:44:13
finish mi0 range(n) 2loop
10:44:13
start mi1
10:44:13
start mi1 range(p) 1 loop
10:44:13
finish mi1 range(p) 1 loop
10:44:13
start mi1 range(p) 2 loop
10:44:13
finish mi1 range(p) 2 loop
10:44:13
start mi1 range(NT) loop
10:44:13
finish mi1 range(NT) loop
10:44:13
start mi1 range(n) loop
10:44:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:44:13
start mi1 range(n) 2loop
10:44:13
finish mi1 range(n) 2loop
10:44:13
start mi2
10:44:13
start mi2 range(p) 1 loop
10:44:13
finish mi2 range(p) 1 loop
10:44:13
start mi2 range(p) 2 loop
10:44:13
finish mi2 range(p) 2 loop
10:44:13
start mi2 range(NT) loop
10:44:13
finish mi2 range(NT) loop
10:44:13
start mi2 range(n) loop
10:44:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:44:13
start mi2 range(n) 2loop
10:44:13
finish mi2 range(n) 2loop
10:44:13
[[-2.67506004]]
end mi2 loop
10:44:13
estep
10:44:13
end estep
10:44:29
end pa10:44:29
goodness of fit correlation [0.22765545]
start cluster 10:44:29
10
parallel submitted
10:44:46
parallel finished
10:48:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:48:55
start mi0
10:48:55
start mi0 range(p) 1 loop
10:48:55
finish mi0 range(p) 1 loop
10:48:55
start mi0 range(p) 2 loop
10:48:55
finish mi0 range(p) 2 loop
10:48:55
start mi0 range(NT) loop
10:48:55
finish mi0 range(NT) loop
10:48:55
start mi0 range(n) loop
10:48:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:48:55
start mi0 range(n) 2loop
10:48:55
finish mi0 range(n) 2loop
10:48:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:48:55
start mi1 range(p) 1 loop
10:48:55
finish mi1 range(p) 1 loop
10:48:55
start mi1 range(p) 2 loop
10:48:55
finish mi1 range(p) 2 loop
10:48:55
start mi1 range(NT) loop
10:48:55
finish mi1 range(NT) loop
10:48:55
start mi1 range(n) loop
10:48:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:48:55
start mi1 range(n) 2loop
10:48:55
finish mi1 range(n) 2loop
10:48:55
start mi2
10:48:55
start mi2 range(p) 1 loop
10:48:55
finish mi2 range(p) 1 loop
10:48:55
start mi2 range(p) 2 loop
10:48:55
finish mi2 range(p) 2 loop
10:48:55
start mi2 range(NT) loop
10:48:55
finish mi2 range(NT) loop
10:48:55
start mi2 range(n) loop
10:48:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:48:55
start mi2 range(n) 2loop
10:48:55
finish mi2 range(n) 2loop
10:48:56
[[-2.59236604]]
end mi2 loop
10:48:56
estep
10:48:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:11
start ppi1
10:49:11
start mi0
10:49:11
start mi0 range(p) 1 loop
10:49:11
finish mi0 range(p) 1 loop
10:49:11
start mi0 range(p) 2 loop
10:49:11
finish mi0 range(p) 2 loop
10:49:11
start mi0 range(NT) loop
10:49:11
finish mi0 range(NT) loop
10:49:11
start mi0 range(n) loop
10:49:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:11
start mi0 range(n) 2loop
10:49:11
finish mi0 range(n) 2loop
10:49:11
start mi1
10:49:11
start mi1 range(p) 1 loop
10:49:11
finish mi1 range(p) 1 loop
10:49:11
start mi1 range(p) 2 loop
10:49:11
finish mi1 range(p) 2 loop
10:49:11
start mi1 range(NT) loop
10:49:11
finish mi1 range(NT) loop
10:49:11
start mi1 range(n) loop
10:49:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:11
start mi1 range(n) 2loop
10:49:11
finish mi1 range(n) 2loop
10:49:11
start mi2
10:49:11
start mi2 range(p) 1 loop
10:49:11
finish mi2 range(p) 1 loop
10:49:11
start mi2 range(p) 2 loop
10:49:11
finish mi2 range(p) 2 loop
10:49:11
start mi2 range(NT) loop
10:49:11
finish mi2 range(NT) loop
10:49:11
start mi2 range(n) loop
10:49:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:49:11
start mi2 range(n) 2loop
10:49:11
finish mi2 range(n) 2loop
10:49:12
[[-2.65486546]]
end mi2 loop
10:49:12
estep
10:49:12
end estep
10:49:27
end pa10:49:27
goodness of fit correlation [0.25364283]
start cluster 10:49:27
11
parallel submitted
10:49:45
parallel finished
10:51:42
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:51:48
start mi0
10:51:48
start mi0 range(p) 1 loop
10:51:48
finish mi0 range(p) 1 loop
10:51:48
start mi0 range(p) 2 loop
10:51:48
finish mi0 range(p) 2 loop
10:51:48
start mi0 range(NT) loop
10:51:48
finish mi0 range(NT) loop
10:51:48
start mi0 range(n) loop
10:51:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:51:48
start mi0 range(n) 2loop
10:51:48
finish mi0 range(n) 2loop
10:51:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:51:48
start mi1 range(p) 1 loop
10:51:48
finish mi1 range(p) 1 loop
10:51:48
start mi1 range(p) 2 loop
10:51:48
finish mi1 range(p) 2 loop
10:51:48
start mi1 range(NT) loop
10:51:48
finish mi1 range(NT) loop
10:51:48
start mi1 range(n) loop
10:51:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:51:48
start mi1 range(n) 2loop
10:51:48
finish mi1 range(n) 2loop
10:51:48
start mi2
10:51:48
start mi2 range(p) 1 loop
10:51:48
finish mi2 range(p) 1 loop
10:51:48
start mi2 range(p) 2 loop
10:51:48
finish mi2 range(p) 2 loop
10:51:48
start mi2 range(NT) loop
10:51:48
finish mi2 range(NT) loop
10:51:48
start mi2 range(n) loop
10:51:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:51:49
start mi2 range(n) 2loop
10:51:49
finish mi2 range(n) 2loop
10:51:49
[[-2.6098259]]
end mi2 loop
10:51:49
estep
10:51:49
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:52:04
start ppi1
10:52:04
start mi0
10:52:04
start mi0 range(p) 1 loop
10:52:04
finish mi0 range(p) 1 loop
10:52:04
start mi0 range(p) 2 loop
10:52:04
finish mi0 range(p) 2 loop
10:52:04
start mi0 range(NT) loop
10:52:04
finish mi0 range(NT) loop
10:52:04
start mi0 range(n) loop
10:52:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:52:04
start mi0 range(n) 2loop
10:52:04
finish mi0 range(n) 2loop
10:52:04
start mi1
10:52:04
start mi1 range(p) 1 loop
10:52:04
finish mi1 range(p) 1 loop
10:52:04
start mi1 range(p) 2 loop
10:52:04
finish mi1 range(p) 2 loop
10:52:04
start mi1 range(NT) loop
10:52:04
finish mi1 range(NT) loop
10:52:04
start mi1 range(n) loop
10:52:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:52:04
start mi1 range(n) 2loop
10:52:04
finish mi1 range(n) 2loop
10:52:05
start mi2
10:52:05
start mi2 range(p) 1 loop
10:52:05
finish mi2 range(p) 1 loop
10:52:05
start mi2 range(p) 2 loop
10:52:05
finish mi2 range(p) 2 loop
10:52:05
start mi2 range(NT) loop
10:52:05
finish mi2 range(NT) loop
10:52:05
start mi2 range(n) loop
10:52:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:52:05
start mi2 range(n) 2loop
10:52:05
finish mi2 range(n) 2loop
10:52:05
[[-2.67232315]]
end mi2 loop
10:52:05
estep
10:52:05
end estep
10:52:21
end pa10:52:21
goodness of fit correlation [0.2318484]
start cluster 10:52:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45099 instead
  warnings.warn(
12
parallel submitted
10:52:40
parallel finished
10:54:33
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:54:38
start mi0
10:54:38
start mi0 range(p) 1 loop
10:54:38
finish mi0 range(p) 1 loop
10:54:38
start mi0 range(p) 2 loop
10:54:38
finish mi0 range(p) 2 loop
10:54:38
start mi0 range(NT) loop
10:54:38
finish mi0 range(NT) loop
10:54:38
start mi0 range(n) loop
10:54:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:54:38
start mi0 range(n) 2loop
10:54:38
finish mi0 range(n) 2loop
10:54:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:54:38
start mi1 range(p) 1 loop
10:54:38
finish mi1 range(p) 1 loop
10:54:38
start mi1 range(p) 2 loop
10:54:38
finish mi1 range(p) 2 loop
10:54:38
start mi1 range(NT) loop
10:54:39
finish mi1 range(NT) loop
10:54:39
start mi1 range(n) loop
10:54:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:54:39
start mi1 range(n) 2loop
10:54:39
finish mi1 range(n) 2loop
10:54:39
start mi2
10:54:39
start mi2 range(p) 1 loop
10:54:39
finish mi2 range(p) 1 loop
10:54:39
start mi2 range(p) 2 loop
10:54:39
finish mi2 range(p) 2 loop
10:54:39
start mi2 range(NT) loop
10:54:39
finish mi2 range(NT) loop
10:54:39
start mi2 range(n) loop
10:54:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:54:39
start mi2 range(n) 2loop
10:54:39
finish mi2 range(n) 2loop
10:54:39
[[-2.59636317]]
end mi2 loop
10:54:39
estep
10:54:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:54:54
start ppi1
10:54:54
start mi0
10:54:54
start mi0 range(p) 1 loop
10:54:54
finish mi0 range(p) 1 loop
10:54:54
start mi0 range(p) 2 loop
10:54:54
finish mi0 range(p) 2 loop
10:54:54
start mi0 range(NT) loop
10:54:54
finish mi0 range(NT) loop
10:54:54
start mi0 range(n) loop
10:54:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:54:54
start mi0 range(n) 2loop
10:54:54
finish mi0 range(n) 2loop
10:54:54
start mi1
10:54:54
start mi1 range(p) 1 loop
10:54:54
finish mi1 range(p) 1 loop
10:54:54
start mi1 range(p) 2 loop
10:54:54
finish mi1 range(p) 2 loop
10:54:54
start mi1 range(NT) loop
10:54:54
finish mi1 range(NT) loop
10:54:54
start mi1 range(n) loop
10:54:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:54:55
start mi1 range(n) 2loop
10:54:55
finish mi1 range(n) 2loop
10:54:55
start mi2
10:54:55
start mi2 range(p) 1 loop
10:54:55
finish mi2 range(p) 1 loop
10:54:55
start mi2 range(p) 2 loop
10:54:55
finish mi2 range(p) 2 loop
10:54:55
start mi2 range(NT) loop
10:54:55
finish mi2 range(NT) loop
10:54:55
start mi2 range(n) loop
10:54:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:54:55
start mi2 range(n) 2loop
10:54:55
finish mi2 range(n) 2loop
10:54:55
[[-2.65886202]]
end mi2 loop
10:54:55
estep
10:54:55
end estep
10:55:10
end pa10:55:10
goodness of fit correlation [0.24119996]
start cluster 10:55:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39085 instead
  warnings.warn(
13
parallel submitted
10:55:27
parallel finished
10:59:28
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:59:36
start mi0
10:59:36
start mi0 range(p) 1 loop
10:59:36
finish mi0 range(p) 1 loop
10:59:36
start mi0 range(p) 2 loop
10:59:36
finish mi0 range(p) 2 loop
10:59:36
start mi0 range(NT) loop
10:59:36
finish mi0 range(NT) loop
10:59:37
start mi0 range(n) loop
10:59:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:59:37
start mi0 range(n) 2loop
10:59:37
finish mi0 range(n) 2loop
10:59:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:59:37
start mi1 range(p) 1 loop
10:59:37
finish mi1 range(p) 1 loop
10:59:37
start mi1 range(p) 2 loop
10:59:37
finish mi1 range(p) 2 loop
10:59:37
start mi1 range(NT) loop
10:59:37
finish mi1 range(NT) loop
10:59:37
start mi1 range(n) loop
10:59:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:59:37
start mi1 range(n) 2loop
10:59:37
finish mi1 range(n) 2loop
10:59:37
start mi2
10:59:37
start mi2 range(p) 1 loop
10:59:37
finish mi2 range(p) 1 loop
10:59:37
start mi2 range(p) 2 loop
10:59:37
finish mi2 range(p) 2 loop
10:59:37
start mi2 range(NT) loop
10:59:37
finish mi2 range(NT) loop
10:59:37
start mi2 range(n) loop
10:59:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:59:37
start mi2 range(n) 2loop
10:59:37
finish mi2 range(n) 2loop
10:59:37
[[-2.63141063]]
end mi2 loop
10:59:37
estep
10:59:37
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:59:54
start ppi1
10:59:54
start mi0
10:59:54
start mi0 range(p) 1 loop
10:59:54
finish mi0 range(p) 1 loop
10:59:54
start mi0 range(p) 2 loop
10:59:54
finish mi0 range(p) 2 loop
10:59:54
start mi0 range(NT) loop
10:59:54
finish mi0 range(NT) loop
10:59:54
start mi0 range(n) loop
10:59:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:59:54
start mi0 range(n) 2loop
10:59:54
finish mi0 range(n) 2loop
10:59:54
start mi1
10:59:54
start mi1 range(p) 1 loop
10:59:54
finish mi1 range(p) 1 loop
10:59:54
start mi1 range(p) 2 loop
10:59:54
finish mi1 range(p) 2 loop
10:59:54
start mi1 range(NT) loop
10:59:54
finish mi1 range(NT) loop
10:59:54
start mi1 range(n) loop
10:59:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:59:54
start mi1 range(n) 2loop
10:59:54
finish mi1 range(n) 2loop
10:59:54
start mi2
10:59:54
start mi2 range(p) 1 loop
10:59:54
finish mi2 range(p) 1 loop
10:59:54
start mi2 range(p) 2 loop
10:59:54
finish mi2 range(p) 2 loop
10:59:54
start mi2 range(NT) loop
10:59:54
finish mi2 range(NT) loop
10:59:54
start mi2 range(n) loop
10:59:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:59:54
start mi2 range(n) 2loop
10:59:54
finish mi2 range(n) 2loop
10:59:54
[[-2.69390598]]
end mi2 loop
10:59:54
estep
10:59:54
end estep
11:00:10
end pa11:00:10
goodness of fit correlation [0.24261785]
start cluster 11:00:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38908 instead
  warnings.warn(
14
parallel submitted
11:00:30
parallel finished
11:02:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:02:25
start mi0
11:02:25
start mi0 range(p) 1 loop
11:02:25
finish mi0 range(p) 1 loop
11:02:25
start mi0 range(p) 2 loop
11:02:25
finish mi0 range(p) 2 loop
11:02:25
start mi0 range(NT) loop
11:02:25
finish mi0 range(NT) loop
11:02:25
start mi0 range(n) loop
11:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:02:25
start mi0 range(n) 2loop
11:02:25
finish mi0 range(n) 2loop
11:02:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:02:25
start mi1 range(p) 1 loop
11:02:25
finish mi1 range(p) 1 loop
11:02:25
start mi1 range(p) 2 loop
11:02:25
finish mi1 range(p) 2 loop
11:02:25
start mi1 range(NT) loop
11:02:25
finish mi1 range(NT) loop
11:02:26
start mi1 range(n) loop
11:02:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:02:26
start mi1 range(n) 2loop
11:02:26
finish mi1 range(n) 2loop
11:02:26
start mi2
11:02:26
start mi2 range(p) 1 loop
11:02:26
finish mi2 range(p) 1 loop
11:02:26
start mi2 range(p) 2 loop
11:02:26
finish mi2 range(p) 2 loop
11:02:26
start mi2 range(NT) loop
11:02:26
finish mi2 range(NT) loop
11:02:26
start mi2 range(n) loop
11:02:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:02:26
start mi2 range(n) 2loop
11:02:26
finish mi2 range(n) 2loop
11:02:26
[[-2.58874052]]
end mi2 loop
11:02:26
estep
11:02:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:02:42
start ppi1
11:02:42
start mi0
11:02:42
start mi0 range(p) 1 loop
11:02:42
finish mi0 range(p) 1 loop
11:02:42
start mi0 range(p) 2 loop
11:02:42
finish mi0 range(p) 2 loop
11:02:42
start mi0 range(NT) loop
11:02:43
finish mi0 range(NT) loop
11:02:43
start mi0 range(n) loop
11:02:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:02:43
start mi0 range(n) 2loop
11:02:43
finish mi0 range(n) 2loop
11:02:43
start mi1
11:02:43
start mi1 range(p) 1 loop
11:02:43
finish mi1 range(p) 1 loop
11:02:43
start mi1 range(p) 2 loop
11:02:43
finish mi1 range(p) 2 loop
11:02:43
start mi1 range(NT) loop
11:02:43
finish mi1 range(NT) loop
11:02:43
start mi1 range(n) loop
11:02:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:02:43
start mi1 range(n) 2loop
11:02:43
finish mi1 range(n) 2loop
11:02:43
start mi2
11:02:43
start mi2 range(p) 1 loop
11:02:43
finish mi2 range(p) 1 loop
11:02:43
start mi2 range(p) 2 loop
11:02:43
finish mi2 range(p) 2 loop
11:02:43
start mi2 range(NT) loop
11:02:43
finish mi2 range(NT) loop
11:02:43
start mi2 range(n) loop
11:02:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:02:43
start mi2 range(n) 2loop
11:02:43
finish mi2 range(n) 2loop
11:02:43
[[-2.65124047]]
end mi2 loop
11:02:43
estep
11:02:43
end estep
11:03:00
end pa11:03:00
goodness of fit correlation [0.1746263]
start cluster 11:03:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 32890 instead
  warnings.warn(
15
parallel submitted
11:03:20
parallel finished
11:06:07
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:06:13
start mi0
11:06:13
start mi0 range(p) 1 loop
11:06:13
finish mi0 range(p) 1 loop
11:06:13
start mi0 range(p) 2 loop
11:06:13
finish mi0 range(p) 2 loop
11:06:13
start mi0 range(NT) loop
11:06:13
finish mi0 range(NT) loop
11:06:13
start mi0 range(n) loop
11:06:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:06:13
start mi0 range(n) 2loop
11:06:13
finish mi0 range(n) 2loop
11:06:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:06:13
start mi1 range(p) 1 loop
11:06:13
finish mi1 range(p) 1 loop
11:06:13
start mi1 range(p) 2 loop
11:06:13
finish mi1 range(p) 2 loop
11:06:13
start mi1 range(NT) loop
11:06:13
finish mi1 range(NT) loop
11:06:13
start mi1 range(n) loop
11:06:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:06:13
start mi1 range(n) 2loop
11:06:13
finish mi1 range(n) 2loop
11:06:13
start mi2
11:06:13
start mi2 range(p) 1 loop
11:06:13
finish mi2 range(p) 1 loop
11:06:13
start mi2 range(p) 2 loop
11:06:13
finish mi2 range(p) 2 loop
11:06:13
start mi2 range(NT) loop
11:06:14
finish mi2 range(NT) loop
11:06:14
start mi2 range(n) loop
11:06:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:06:14
start mi2 range(n) 2loop
11:06:14
finish mi2 range(n) 2loop
11:06:14
[[-2.5324048]]
end mi2 loop
11:06:14
estep
11:06:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:06:30
start ppi1
11:06:30
start mi0
11:06:30
start mi0 range(p) 1 loop
11:06:30
finish mi0 range(p) 1 loop
11:06:30
start mi0 range(p) 2 loop
11:06:30
finish mi0 range(p) 2 loop
11:06:30
start mi0 range(NT) loop
11:06:30
finish mi0 range(NT) loop
11:06:30
start mi0 range(n) loop
11:06:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:06:30
start mi0 range(n) 2loop
11:06:30
finish mi0 range(n) 2loop
11:06:30
start mi1
11:06:30
start mi1 range(p) 1 loop
11:06:30
finish mi1 range(p) 1 loop
11:06:30
start mi1 range(p) 2 loop
11:06:30
finish mi1 range(p) 2 loop
11:06:30
start mi1 range(NT) loop
11:06:30
finish mi1 range(NT) loop
11:06:30
start mi1 range(n) loop
11:06:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:06:30
start mi1 range(n) 2loop
11:06:30
finish mi1 range(n) 2loop
11:06:30
start mi2
11:06:30
start mi2 range(p) 1 loop
11:06:30
finish mi2 range(p) 1 loop
11:06:30
start mi2 range(p) 2 loop
11:06:30
finish mi2 range(p) 2 loop
11:06:30
start mi2 range(NT) loop
11:06:30
finish mi2 range(NT) loop
11:06:30
start mi2 range(n) loop
11:06:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:06:31
start mi2 range(n) 2loop
11:06:31
finish mi2 range(n) 2loop
11:06:31
[[-2.59491882]]
end mi2 loop
11:06:31
estep
11:06:31
end estep
11:06:47
end pa11:06:47
goodness of fit correlation [0.13451863]
start cluster 11:06:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43048 instead
  warnings.warn(
16
parallel submitted
11:07:07
parallel finished
11:10:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:10:15
start mi0
11:10:15
start mi0 range(p) 1 loop
11:10:15
finish mi0 range(p) 1 loop
11:10:15
start mi0 range(p) 2 loop
11:10:15
finish mi0 range(p) 2 loop
11:10:15
start mi0 range(NT) loop
11:10:15
finish mi0 range(NT) loop
11:10:15
start mi0 range(n) loop
11:10:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:10:15
start mi0 range(n) 2loop
11:10:15
finish mi0 range(n) 2loop
11:10:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:10:16
start mi1 range(p) 1 loop
11:10:16
finish mi1 range(p) 1 loop
11:10:16
start mi1 range(p) 2 loop
11:10:16
finish mi1 range(p) 2 loop
11:10:16
start mi1 range(NT) loop
11:10:16
finish mi1 range(NT) loop
11:10:16
start mi1 range(n) loop
11:10:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:10:16
start mi1 range(n) 2loop
11:10:16
finish mi1 range(n) 2loop
11:10:16
start mi2
11:10:16
start mi2 range(p) 1 loop
11:10:16
finish mi2 range(p) 1 loop
11:10:16
start mi2 range(p) 2 loop
11:10:16
finish mi2 range(p) 2 loop
11:10:16
start mi2 range(NT) loop
11:10:16
finish mi2 range(NT) loop
11:10:16
start mi2 range(n) loop
11:10:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:10:16
start mi2 range(n) 2loop
11:10:16
finish mi2 range(n) 2loop
11:10:16
[[-2.53656848]]
end mi2 loop
11:10:16
estep
11:10:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:10:32
start ppi1
11:10:32
start mi0
11:10:32
start mi0 range(p) 1 loop
11:10:32
finish mi0 range(p) 1 loop
11:10:32
start mi0 range(p) 2 loop
11:10:32
finish mi0 range(p) 2 loop
11:10:32
start mi0 range(NT) loop
11:10:32
finish mi0 range(NT) loop
11:10:32
start mi0 range(n) loop
11:10:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:10:32
start mi0 range(n) 2loop
11:10:32
finish mi0 range(n) 2loop
11:10:32
start mi1
11:10:32
start mi1 range(p) 1 loop
11:10:32
finish mi1 range(p) 1 loop
11:10:32
start mi1 range(p) 2 loop
11:10:32
finish mi1 range(p) 2 loop
11:10:32
start mi1 range(NT) loop
11:10:32
finish mi1 range(NT) loop
11:10:32
start mi1 range(n) loop
11:10:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:10:33
start mi1 range(n) 2loop
11:10:33
finish mi1 range(n) 2loop
11:10:33
start mi2
11:10:33
start mi2 range(p) 1 loop
11:10:33
finish mi2 range(p) 1 loop
11:10:33
start mi2 range(p) 2 loop
11:10:33
finish mi2 range(p) 2 loop
11:10:33
start mi2 range(NT) loop
11:10:33
finish mi2 range(NT) loop
11:10:33
start mi2 range(n) loop
11:10:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:10:33
start mi2 range(n) 2loop
11:10:33
finish mi2 range(n) 2loop
11:10:33
[[-2.59908099]]
end mi2 loop
11:10:33
estep
11:10:33
end estep
11:10:49
end pa11:10:49
goodness of fit correlation [0.24996917]
start cluster 11:10:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41576 instead
  warnings.warn(
17
parallel submitted
11:11:10
parallel finished
11:14:25
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:14:34
start mi0
11:14:34
start mi0 range(p) 1 loop
11:14:34
finish mi0 range(p) 1 loop
11:14:34
start mi0 range(p) 2 loop
11:14:34
finish mi0 range(p) 2 loop
11:14:34
start mi0 range(NT) loop
11:14:34
finish mi0 range(NT) loop
11:14:34
start mi0 range(n) loop
11:14:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:14:34
start mi0 range(n) 2loop
11:14:34
finish mi0 range(n) 2loop
11:14:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:14:34
start mi1 range(p) 1 loop
11:14:34
finish mi1 range(p) 1 loop
11:14:34
start mi1 range(p) 2 loop
11:14:34
finish mi1 range(p) 2 loop
11:14:34
start mi1 range(NT) loop
11:14:34
finish mi1 range(NT) loop
11:14:34
start mi1 range(n) loop
11:14:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:14:34
start mi1 range(n) 2loop
11:14:34
finish mi1 range(n) 2loop
11:14:34
start mi2
11:14:34
start mi2 range(p) 1 loop
11:14:34
finish mi2 range(p) 1 loop
11:14:34
start mi2 range(p) 2 loop
11:14:34
finish mi2 range(p) 2 loop
11:14:34
start mi2 range(NT) loop
11:14:35
finish mi2 range(NT) loop
11:14:35
start mi2 range(n) loop
11:14:35
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:14:35
start mi2 range(n) 2loop
11:14:35
finish mi2 range(n) 2loop
11:14:35
[[-2.59106701]]
end mi2 loop
11:14:35
estep
11:14:35
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:14:50
start ppi1
11:14:50
start mi0
11:14:50
start mi0 range(p) 1 loop
11:14:50
finish mi0 range(p) 1 loop
11:14:50
start mi0 range(p) 2 loop
11:14:50
finish mi0 range(p) 2 loop
11:14:50
start mi0 range(NT) loop
11:14:50
finish mi0 range(NT) loop
11:14:50
start mi0 range(n) loop
11:14:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:14:50
start mi0 range(n) 2loop
11:14:50
finish mi0 range(n) 2loop
11:14:50
start mi1
11:14:50
start mi1 range(p) 1 loop
11:14:50
finish mi1 range(p) 1 loop
11:14:50
start mi1 range(p) 2 loop
11:14:50
finish mi1 range(p) 2 loop
11:14:50
start mi1 range(NT) loop
11:14:50
finish mi1 range(NT) loop
11:14:50
start mi1 range(n) loop
11:14:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:14:50
start mi1 range(n) 2loop
11:14:50
finish mi1 range(n) 2loop
11:14:51
start mi2
11:14:51
start mi2 range(p) 1 loop
11:14:51
finish mi2 range(p) 1 loop
11:14:51
start mi2 range(p) 2 loop
11:14:51
finish mi2 range(p) 2 loop
11:14:51
start mi2 range(NT) loop
11:14:51
finish mi2 range(NT) loop
11:14:51
start mi2 range(n) loop
11:14:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:14:51
start mi2 range(n) 2loop
11:14:51
finish mi2 range(n) 2loop
11:14:51
[[-2.65356662]]
end mi2 loop
11:14:51
estep
11:14:51
end estep
11:15:06
end pa11:15:06
goodness of fit correlation [0.14539408]
0.28230688722802594
[4.94068078e-01 4.89077592e-01 4.97125698e-01 4.73168015e-01
 4.90198772e-01 5.12594005e-01 5.76392414e-01 5.11371009e-01
 4.85951374e-01 4.81018596e-01 4.89300847e-01 4.85462155e-01
 4.80639407e-01 4.83950571e-01 4.89631088e-01 5.65018834e-01
 5.21419626e-01 4.89890877e-01 4.92814513e-01 4.96489218e-01
 5.91814750e-01 5.26356451e-01 5.25359762e-01 5.45016795e-01
 4.88277476e-01 5.45750333e-01 5.51648438e-01 6.00177332e-01
 5.29612413e-01 4.97631123e-01 4.95621423e-01 5.00084195e-01
 5.04615825e-01 4.88858293e-01 5.03466125e-01 5.20028312e-01
 5.44027110e-01 5.56362312e-01 5.09280597e-01 5.07087737e-01
 4.92546851e-01 5.53707348e-01 5.41747600e-01 5.93621094e-01
 5.19141535e-01 5.43995892e-01 5.05559754e-01 5.96493327e-01
 5.30187400e-01 5.18292354e-01 5.69483495e-01 5.31764882e-01
 5.55270290e-01 4.93743900e-01 4.86411721e-01 5.42817952e-01
 5.72143594e-01 5.36605813e-01 5.26806556e-01 6.02349453e-01
 5.83099642e-01 5.64841688e-01 5.82639411e-01 5.84610765e-01
 5.28873460e-01 5.21315275e-01 5.32580443e-01 5.99750059e-01
 3.22163305e-01 2.86036776e-01 3.33028602e-01 2.38975588e-01
 2.70805276e-01 3.51346298e-01 3.57109666e-01 3.56059885e-01
 3.01594307e-01 2.46843685e-01 2.84761276e-01 2.58832976e-01
 2.47393568e-01 2.55972440e-01 2.67119060e-01 3.48464599e-01
 3.40656976e-01 2.65265471e-01 2.92409394e-01 2.83023865e-01
 3.48751696e-01 3.68951163e-01 3.33232595e-01 3.43500659e-01
 2.68960573e-01 3.28311459e-01 3.37404397e-01 3.28273680e-01
 3.66788530e-01 3.01136365e-01 3.11000023e-01 3.08713254e-01
 3.62515341e-01 2.48081472e-01 3.51232467e-01 3.55630688e-01
 3.99396109e-01 3.59839948e-01 3.42577421e-01 3.55508212e-01
 3.45899739e-01 3.53407817e-01 3.63142858e-01 3.45676267e-01
 3.69913495e-01 3.36070047e-01 3.31593667e-01 3.45285313e-01
 3.86468133e-01 3.46241782e-01 3.55261912e-01 3.97722194e-01
 3.65162618e-01 2.87095543e-01 3.45704304e-01 3.49098232e-01
 3.18902396e-01 3.33042121e-01 3.76305014e-01 3.33574717e-01
 2.83403831e-01 3.27397443e-01 3.69186647e-01 3.38762836e-01
 3.54461486e-01 3.62501354e-01 3.66389983e-01 3.40845859e-01
 1.54431093e+00 1.01326111e-03]
start cluster 11:15:06
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43030 instead
  warnings.warn(
0
parallel submitted
11:15:24
parallel finished
11:19:07
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:19:14
start mi0
11:19:14
start mi0 range(p) 1 loop
11:19:14
finish mi0 range(p) 1 loop
11:19:14
start mi0 range(p) 2 loop
11:19:14
finish mi0 range(p) 2 loop
11:19:14
start mi0 range(NT) loop
11:19:14
finish mi0 range(NT) loop
11:19:14
start mi0 range(n) loop
11:19:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:19:15
start mi0 range(n) 2loop
11:19:15
finish mi0 range(n) 2loop
11:19:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:19:15
start mi1 range(p) 1 loop
11:19:15
finish mi1 range(p) 1 loop
11:19:15
start mi1 range(p) 2 loop
11:19:15
finish mi1 range(p) 2 loop
11:19:15
start mi1 range(NT) loop
11:19:15
finish mi1 range(NT) loop
11:19:15
start mi1 range(n) loop
11:19:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:19:15
start mi1 range(n) 2loop
11:19:15
finish mi1 range(n) 2loop
11:19:15
start mi2
11:19:15
start mi2 range(p) 1 loop
11:19:15
finish mi2 range(p) 1 loop
11:19:15
start mi2 range(p) 2 loop
11:19:15
finish mi2 range(p) 2 loop
11:19:15
start mi2 range(NT) loop
11:19:15
finish mi2 range(NT) loop
11:19:15
start mi2 range(n) loop
11:19:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:19:15
start mi2 range(n) 2loop
11:19:15
finish mi2 range(n) 2loop
11:19:15
start mi3
11:19:15
start mi3 range(p) 1 loop
11:19:15
finish mi3 range(p) 1 loop
11:19:15
start mi3 range(p) 2 loop
11:19:15
finish mi3 range(p) 2 loop
11:19:15
start mi3 range(NT) loop
11:19:15
finish mi3 range(NT) loop
11:19:15
start mi3 range(n) loop
11:19:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:19:15
start mi3 range(n) 2loop
11:19:15
finish mi3 range(n) 2loop
11:19:16
[[-2.44038307]]
end mi3 loop
11:19:16
estep
11:19:16
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:19:32
start ppi1
11:19:32
start mi0
11:19:32
start mi0 range(p) 1 loop
11:19:32
finish mi0 range(p) 1 loop
11:19:32
start mi0 range(p) 2 loop
11:19:32
finish mi0 range(p) 2 loop
11:19:32
start mi0 range(NT) loop
11:19:32
finish mi0 range(NT) loop
11:19:32
start mi0 range(n) loop
11:19:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:19:32
start mi0 range(n) 2loop
11:19:32
finish mi0 range(n) 2loop
11:19:32
start mi1
11:19:32
start mi1 range(p) 1 loop
11:19:32
finish mi1 range(p) 1 loop
11:19:32
start mi1 range(p) 2 loop
11:19:33
finish mi1 range(p) 2 loop
11:19:33
start mi1 range(NT) loop
11:19:33
finish mi1 range(NT) loop
11:19:33
start mi1 range(n) loop
11:19:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:19:33
start mi1 range(n) 2loop
11:19:33
finish mi1 range(n) 2loop
11:19:33
start mi2
11:19:33
start mi2 range(p) 1 loop
11:19:33
finish mi2 range(p) 1 loop
11:19:33
start mi2 range(p) 2 loop
11:19:33
finish mi2 range(p) 2 loop
11:19:33
start mi2 range(NT) loop
11:19:33
finish mi2 range(NT) loop
11:19:33
start mi2 range(n) loop
11:19:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:19:33
start mi2 range(n) 2loop
11:19:33
finish mi2 range(n) 2loop
11:19:33
start mi3
11:19:33
start mi3 range(p) 1 loop
11:19:33
finish mi3 range(p) 1 loop
11:19:33
start mi3 range(p) 2 loop
11:19:33
finish mi3 range(p) 2 loop
11:19:33
start mi3 range(NT) loop
11:19:33
finish mi3 range(NT) loop
11:19:33
start mi3 range(n) loop
11:19:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:19:33
start mi3 range(n) 2loop
11:19:33
finish mi3 range(n) 2loop
11:19:33
[[-2.44038307]]
end mi3 loop
11:19:33
estep
11:19:33
end estep
11:19:49
end pa11:19:49
goodness of fit correlation [0.02645059]
start cluster 11:19:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34139 instead
  warnings.warn(
1
parallel submitted
11:20:07
parallel finished
11:24:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:24:13
start mi0
11:24:13
start mi0 range(p) 1 loop
11:24:13
finish mi0 range(p) 1 loop
11:24:13
start mi0 range(p) 2 loop
11:24:13
finish mi0 range(p) 2 loop
11:24:13
start mi0 range(NT) loop
11:24:13
finish mi0 range(NT) loop
11:24:13
start mi0 range(n) loop
11:24:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:24:13
start mi0 range(n) 2loop
11:24:13
finish mi0 range(n) 2loop
11:24:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:24:13
start mi1 range(p) 1 loop
11:24:13
finish mi1 range(p) 1 loop
11:24:13
start mi1 range(p) 2 loop
11:24:13
finish mi1 range(p) 2 loop
11:24:13
start mi1 range(NT) loop
11:24:13
finish mi1 range(NT) loop
11:24:13
start mi1 range(n) loop
11:24:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:24:13
start mi1 range(n) 2loop
11:24:13
finish mi1 range(n) 2loop
11:24:14
start mi2
11:24:14
start mi2 range(p) 1 loop
11:24:14
finish mi2 range(p) 1 loop
11:24:14
start mi2 range(p) 2 loop
11:24:14
finish mi2 range(p) 2 loop
11:24:14
start mi2 range(NT) loop
11:24:14
finish mi2 range(NT) loop
11:24:14
start mi2 range(n) loop
11:24:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:24:14
start mi2 range(n) 2loop
11:24:14
finish mi2 range(n) 2loop
11:24:14
start mi3
11:24:14
start mi3 range(p) 1 loop
11:24:14
finish mi3 range(p) 1 loop
11:24:14
start mi3 range(p) 2 loop
11:24:14
finish mi3 range(p) 2 loop
11:24:14
start mi3 range(NT) loop
11:24:14
finish mi3 range(NT) loop
11:24:14
start mi3 range(n) loop
11:24:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:24:14
start mi3 range(n) 2loop
11:24:14
finish mi3 range(n) 2loop
11:24:14
[[-2.46924873]]
end mi3 loop
11:24:14
estep
11:24:14
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:24:30
start ppi1
11:24:30
start mi0
11:24:30
start mi0 range(p) 1 loop
11:24:30
finish mi0 range(p) 1 loop
11:24:30
start mi0 range(p) 2 loop
11:24:30
finish mi0 range(p) 2 loop
11:24:30
start mi0 range(NT) loop
11:24:30
finish mi0 range(NT) loop
11:24:30
start mi0 range(n) loop
11:24:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:24:30
start mi0 range(n) 2loop
11:24:30
finish mi0 range(n) 2loop
11:24:30
start mi1
11:24:30
start mi1 range(p) 1 loop
11:24:30
finish mi1 range(p) 1 loop
11:24:30
start mi1 range(p) 2 loop
11:24:30
finish mi1 range(p) 2 loop
11:24:30
start mi1 range(NT) loop
11:24:30
finish mi1 range(NT) loop
11:24:30
start mi1 range(n) loop
11:24:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:24:30
start mi1 range(n) 2loop
11:24:30
finish mi1 range(n) 2loop
11:24:30
start mi2
11:24:30
start mi2 range(p) 1 loop
11:24:30
finish mi2 range(p) 1 loop
11:24:30
start mi2 range(p) 2 loop
11:24:30
finish mi2 range(p) 2 loop
11:24:30
start mi2 range(NT) loop
11:24:30
finish mi2 range(NT) loop
11:24:30
start mi2 range(n) loop
11:24:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:24:30
start mi2 range(n) 2loop
11:24:30
finish mi2 range(n) 2loop
11:24:30
[[-2.53170911]]
end mi2 loop
11:24:30
estep
11:24:30
end estep
11:24:46
end pa11:24:46
goodness of fit correlation [0.17805769]
start cluster 11:24:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36359 instead
  warnings.warn(
2
parallel submitted
11:25:08
parallel finished
11:28:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:28:22
start mi0
11:28:22
start mi0 range(p) 1 loop
11:28:22
finish mi0 range(p) 1 loop
11:28:22
start mi0 range(p) 2 loop
11:28:22
finish mi0 range(p) 2 loop
11:28:22
start mi0 range(NT) loop
11:28:22
finish mi0 range(NT) loop
11:28:22
start mi0 range(n) loop
11:28:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:28:22
start mi0 range(n) 2loop
11:28:22
finish mi0 range(n) 2loop
11:28:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:28:23
start mi1 range(p) 1 loop
11:28:23
finish mi1 range(p) 1 loop
11:28:23
start mi1 range(p) 2 loop
11:28:23
finish mi1 range(p) 2 loop
11:28:23
start mi1 range(NT) loop
11:28:23
finish mi1 range(NT) loop
11:28:23
start mi1 range(n) loop
11:28:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:28:23
start mi1 range(n) 2loop
11:28:23
finish mi1 range(n) 2loop
11:28:23
start mi2
11:28:23
start mi2 range(p) 1 loop
11:28:23
finish mi2 range(p) 1 loop
11:28:23
start mi2 range(p) 2 loop
11:28:23
finish mi2 range(p) 2 loop
11:28:23
start mi2 range(NT) loop
11:28:23
finish mi2 range(NT) loop
11:28:23
start mi2 range(n) loop
11:28:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:28:23
start mi2 range(n) 2loop
11:28:23
finish mi2 range(n) 2loop
11:28:23
[[-2.53838785]]
end mi2 loop
11:28:23
estep
11:28:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:28:39
start ppi1
11:28:39
start mi0
11:28:39
start mi0 range(p) 1 loop
11:28:39
finish mi0 range(p) 1 loop
11:28:39
start mi0 range(p) 2 loop
11:28:39
finish mi0 range(p) 2 loop
11:28:39
start mi0 range(NT) loop
11:28:39
finish mi0 range(NT) loop
11:28:39
start mi0 range(n) loop
11:28:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:28:39
start mi0 range(n) 2loop
11:28:39
finish mi0 range(n) 2loop
11:28:39
start mi1
11:28:39
start mi1 range(p) 1 loop
11:28:39
finish mi1 range(p) 1 loop
11:28:39
start mi1 range(p) 2 loop
11:28:39
finish mi1 range(p) 2 loop
11:28:39
start mi1 range(NT) loop
11:28:39
finish mi1 range(NT) loop
11:28:39
start mi1 range(n) loop
11:28:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:28:39
start mi1 range(n) 2loop
11:28:39
finish mi1 range(n) 2loop
11:28:40
start mi2
11:28:40
start mi2 range(p) 1 loop
11:28:40
finish mi2 range(p) 1 loop
11:28:40
start mi2 range(p) 2 loop
11:28:40
finish mi2 range(p) 2 loop
11:28:40
start mi2 range(NT) loop
11:28:40
finish mi2 range(NT) loop
11:28:40
start mi2 range(n) loop
11:28:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:28:40
start mi2 range(n) 2loop
11:28:40
finish mi2 range(n) 2loop
11:28:40
[[-2.60089973]]
end mi2 loop
11:28:40
estep
11:28:40
end estep
11:28:57
end pa11:28:57
goodness of fit correlation [0.23665832]
start cluster 11:28:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44803 instead
  warnings.warn(
3
parallel submitted
11:29:18
parallel finished
11:31:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:31:32
start mi0
11:31:32
start mi0 range(p) 1 loop
11:31:32
finish mi0 range(p) 1 loop
11:31:32
start mi0 range(p) 2 loop
11:31:32
finish mi0 range(p) 2 loop
11:31:32
start mi0 range(NT) loop
11:31:32
finish mi0 range(NT) loop
11:31:32
start mi0 range(n) loop
11:31:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:31:32
start mi0 range(n) 2loop
11:31:32
finish mi0 range(n) 2loop
11:31:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:31:32
start mi1 range(p) 1 loop
11:31:32
finish mi1 range(p) 1 loop
11:31:32
start mi1 range(p) 2 loop
11:31:32
finish mi1 range(p) 2 loop
11:31:32
start mi1 range(NT) loop
11:31:32
finish mi1 range(NT) loop
11:31:32
start mi1 range(n) loop
11:31:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:31:32
start mi1 range(n) 2loop
11:31:32
finish mi1 range(n) 2loop
11:31:32
start mi2
11:31:32
start mi2 range(p) 1 loop
11:31:32
finish mi2 range(p) 1 loop
11:31:32
start mi2 range(p) 2 loop
11:31:32
finish mi2 range(p) 2 loop
11:31:32
start mi2 range(NT) loop
11:31:33
finish mi2 range(NT) loop
11:31:33
start mi2 range(n) loop
11:31:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:31:33
start mi2 range(n) 2loop
11:31:33
finish mi2 range(n) 2loop
11:31:33
[[-2.57856804]]
end mi2 loop
11:31:33
estep
11:31:33
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:31:50
start ppi1
11:31:50
start mi0
11:31:50
start mi0 range(p) 1 loop
11:31:50
finish mi0 range(p) 1 loop
11:31:50
start mi0 range(p) 2 loop
11:31:50
finish mi0 range(p) 2 loop
11:31:50
start mi0 range(NT) loop
11:31:50
finish mi0 range(NT) loop
11:31:50
start mi0 range(n) loop
11:31:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:31:50
start mi0 range(n) 2loop
11:31:50
finish mi0 range(n) 2loop
11:31:50
start mi1
11:31:50
start mi1 range(p) 1 loop
11:31:50
finish mi1 range(p) 1 loop
11:31:50
start mi1 range(p) 2 loop
11:31:50
finish mi1 range(p) 2 loop
11:31:50
start mi1 range(NT) loop
11:31:50
finish mi1 range(NT) loop
11:31:50
start mi1 range(n) loop
11:31:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:31:50
start mi1 range(n) 2loop
11:31:50
finish mi1 range(n) 2loop
11:31:50
start mi2
11:31:50
start mi2 range(p) 1 loop
11:31:50
finish mi2 range(p) 1 loop
11:31:50
start mi2 range(p) 2 loop
11:31:50
finish mi2 range(p) 2 loop
11:31:50
start mi2 range(NT) loop
11:31:50
finish mi2 range(NT) loop
11:31:50
start mi2 range(n) loop
11:31:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:31:50
start mi2 range(n) 2loop
11:31:50
finish mi2 range(n) 2loop
11:31:51
[[-2.64106969]]
end mi2 loop
11:31:51
estep
11:31:51
end estep
11:32:10
end pa11:32:10
goodness of fit correlation [0.20956139]
start cluster 11:32:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41464 instead
  warnings.warn(
4
parallel submitted
11:32:31
parallel finished
11:35:20
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:35:28
start mi0
11:35:28
start mi0 range(p) 1 loop
11:35:28
finish mi0 range(p) 1 loop
11:35:28
start mi0 range(p) 2 loop
11:35:28
finish mi0 range(p) 2 loop
11:35:28
start mi0 range(NT) loop
11:35:28
finish mi0 range(NT) loop
11:35:28
start mi0 range(n) loop
11:35:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:35:28
start mi0 range(n) 2loop
11:35:28
finish mi0 range(n) 2loop
11:35:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:35:28
start mi1 range(p) 1 loop
11:35:28
finish mi1 range(p) 1 loop
11:35:28
start mi1 range(p) 2 loop
11:35:28
finish mi1 range(p) 2 loop
11:35:28
start mi1 range(NT) loop
11:35:28
finish mi1 range(NT) loop
11:35:28
start mi1 range(n) loop
11:35:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:35:29
start mi1 range(n) 2loop
11:35:29
finish mi1 range(n) 2loop
11:35:29
start mi2
11:35:29
start mi2 range(p) 1 loop
11:35:29
finish mi2 range(p) 1 loop
11:35:29
start mi2 range(p) 2 loop
11:35:29
finish mi2 range(p) 2 loop
11:35:29
start mi2 range(NT) loop
11:35:29
finish mi2 range(NT) loop
11:35:29
start mi2 range(n) loop
11:35:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:35:29
start mi2 range(n) 2loop
11:35:29
finish mi2 range(n) 2loop
11:35:29
[[-2.54208156]]
end mi2 loop
11:35:29
estep
11:35:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:35:45
start ppi1
11:35:45
start mi0
11:35:45
start mi0 range(p) 1 loop
11:35:45
finish mi0 range(p) 1 loop
11:35:45
start mi0 range(p) 2 loop
11:35:45
finish mi0 range(p) 2 loop
11:35:45
start mi0 range(NT) loop
11:35:45
finish mi0 range(NT) loop
11:35:45
start mi0 range(n) loop
11:35:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:35:45
start mi0 range(n) 2loop
11:35:45
finish mi0 range(n) 2loop
11:35:45
start mi1
11:35:45
start mi1 range(p) 1 loop
11:35:45
finish mi1 range(p) 1 loop
11:35:45
start mi1 range(p) 2 loop
11:35:45
finish mi1 range(p) 2 loop
11:35:45
start mi1 range(NT) loop
11:35:45
finish mi1 range(NT) loop
11:35:45
start mi1 range(n) loop
11:35:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:35:45
start mi1 range(n) 2loop
11:35:45
finish mi1 range(n) 2loop
11:35:45
start mi2
11:35:45
start mi2 range(p) 1 loop
11:35:45
finish mi2 range(p) 1 loop
11:35:45
start mi2 range(p) 2 loop
11:35:45
finish mi2 range(p) 2 loop
11:35:45
start mi2 range(NT) loop
11:35:45
finish mi2 range(NT) loop
11:35:45
start mi2 range(n) loop
11:35:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:35:45
start mi2 range(n) 2loop
11:35:45
finish mi2 range(n) 2loop
11:35:45
[[-2.60459221]]
end mi2 loop
11:35:45
estep
11:35:45
end estep
11:36:02
end pa11:36:02
goodness of fit correlation [0.22279924]
start cluster 11:36:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33694 instead
  warnings.warn(
5
parallel submitted
11:36:23
parallel finished
11:39:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:39:55
start mi0
11:39:55
start mi0 range(p) 1 loop
11:39:55
finish mi0 range(p) 1 loop
11:39:55
start mi0 range(p) 2 loop
11:39:55
finish mi0 range(p) 2 loop
11:39:55
start mi0 range(NT) loop
11:39:55
finish mi0 range(NT) loop
11:39:55
start mi0 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:39:55
start mi0 range(n) 2loop
11:39:55
finish mi0 range(n) 2loop
11:39:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:39:55
start mi1 range(p) 1 loop
11:39:55
finish mi1 range(p) 1 loop
11:39:55
start mi1 range(p) 2 loop
11:39:55
finish mi1 range(p) 2 loop
11:39:55
start mi1 range(NT) loop
11:39:55
finish mi1 range(NT) loop
11:39:55
start mi1 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:39:55
start mi1 range(n) 2loop
11:39:55
finish mi1 range(n) 2loop
11:39:55
start mi2
11:39:55
start mi2 range(p) 1 loop
11:39:55
finish mi2 range(p) 1 loop
11:39:55
start mi2 range(p) 2 loop
11:39:55
finish mi2 range(p) 2 loop
11:39:55
start mi2 range(NT) loop
11:39:55
finish mi2 range(NT) loop
11:39:55
start mi2 range(n) loop
11:39:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:39:55
start mi2 range(n) 2loop
11:39:55
finish mi2 range(n) 2loop
11:39:56
[[-2.57798525]]
end mi2 loop
11:39:56
estep
11:39:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:40:11
start ppi1
11:40:11
start mi0
11:40:11
start mi0 range(p) 1 loop
11:40:11
finish mi0 range(p) 1 loop
11:40:11
start mi0 range(p) 2 loop
11:40:11
finish mi0 range(p) 2 loop
11:40:11
start mi0 range(NT) loop
11:40:11
finish mi0 range(NT) loop
11:40:11
start mi0 range(n) loop
11:40:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:40:11
start mi0 range(n) 2loop
11:40:11
finish mi0 range(n) 2loop
11:40:11
start mi1
11:40:11
start mi1 range(p) 1 loop
11:40:11
finish mi1 range(p) 1 loop
11:40:11
start mi1 range(p) 2 loop
11:40:11
finish mi1 range(p) 2 loop
11:40:11
start mi1 range(NT) loop
11:40:11
finish mi1 range(NT) loop
11:40:11
start mi1 range(n) loop
11:40:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:40:12
start mi1 range(n) 2loop
11:40:12
finish mi1 range(n) 2loop
11:40:12
start mi2
11:40:12
start mi2 range(p) 1 loop
11:40:12
finish mi2 range(p) 1 loop
11:40:12
start mi2 range(p) 2 loop
11:40:12
finish mi2 range(p) 2 loop
11:40:12
start mi2 range(NT) loop
11:40:12
finish mi2 range(NT) loop
11:40:12
start mi2 range(n) loop
11:40:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:40:12
start mi2 range(n) 2loop
11:40:12
finish mi2 range(n) 2loop
11:40:12
[[-2.64048701]]
end mi2 loop
11:40:12
estep
11:40:12
end estep
11:40:28
end pa11:40:28
goodness of fit correlation [0.19679145]
start cluster 11:40:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35957 instead
  warnings.warn(
6
parallel submitted
11:40:52
parallel finished
11:44:05
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:44:14
start mi0
11:44:14
start mi0 range(p) 1 loop
11:44:14
finish mi0 range(p) 1 loop
11:44:14
start mi0 range(p) 2 loop
11:44:14
finish mi0 range(p) 2 loop
11:44:14
start mi0 range(NT) loop
11:44:15
finish mi0 range(NT) loop
11:44:15
start mi0 range(n) loop
11:44:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:44:15
start mi0 range(n) 2loop
11:44:15
finish mi0 range(n) 2loop
11:44:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:44:15
start mi1 range(p) 1 loop
11:44:15
finish mi1 range(p) 1 loop
11:44:15
start mi1 range(p) 2 loop
11:44:15
finish mi1 range(p) 2 loop
11:44:15
start mi1 range(NT) loop
11:44:15
finish mi1 range(NT) loop
11:44:15
start mi1 range(n) loop
11:44:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:44:15
start mi1 range(n) 2loop
11:44:15
finish mi1 range(n) 2loop
11:44:15
start mi2
11:44:15
start mi2 range(p) 1 loop
11:44:15
finish mi2 range(p) 1 loop
11:44:15
start mi2 range(p) 2 loop
11:44:15
finish mi2 range(p) 2 loop
11:44:15
start mi2 range(NT) loop
11:44:15
finish mi2 range(NT) loop
11:44:15
start mi2 range(n) loop
11:44:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:44:15
start mi2 range(n) 2loop
11:44:15
finish mi2 range(n) 2loop
11:44:15
[[-2.57456407]]
end mi2 loop
11:44:15
estep
11:44:15
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:44:32
start ppi1
11:44:32
start mi0
11:44:32
start mi0 range(p) 1 loop
11:44:32
finish mi0 range(p) 1 loop
11:44:32
start mi0 range(p) 2 loop
11:44:32
finish mi0 range(p) 2 loop
11:44:32
start mi0 range(NT) loop
11:44:32
finish mi0 range(NT) loop
11:44:32
start mi0 range(n) loop
11:44:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:44:32
start mi0 range(n) 2loop
11:44:32
finish mi0 range(n) 2loop
11:44:33
start mi1
11:44:33
start mi1 range(p) 1 loop
11:44:33
finish mi1 range(p) 1 loop
11:44:33
start mi1 range(p) 2 loop
11:44:33
finish mi1 range(p) 2 loop
11:44:33
start mi1 range(NT) loop
11:44:33
finish mi1 range(NT) loop
11:44:33
start mi1 range(n) loop
11:44:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:44:33
start mi1 range(n) 2loop
11:44:33
finish mi1 range(n) 2loop
11:44:33
start mi2
11:44:33
start mi2 range(p) 1 loop
11:44:33
finish mi2 range(p) 1 loop
11:44:33
start mi2 range(p) 2 loop
11:44:33
finish mi2 range(p) 2 loop
11:44:33
start mi2 range(NT) loop
11:44:33
finish mi2 range(NT) loop
11:44:33
start mi2 range(n) loop
11:44:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:44:33
start mi2 range(n) 2loop
11:44:33
finish mi2 range(n) 2loop
11:44:33
[[-2.63706648]]
end mi2 loop
11:44:33
estep
11:44:33
end estep
11:44:50
end pa11:44:50
goodness of fit correlation [0.19509595]
start cluster 11:44:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37804 instead
  warnings.warn(
7
parallel submitted
11:45:14
parallel finished
11:48:51
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:49:01
start mi0
11:49:01
start mi0 range(p) 1 loop
11:49:01
finish mi0 range(p) 1 loop
11:49:02
start mi0 range(p) 2 loop
11:49:02
finish mi0 range(p) 2 loop
11:49:02
start mi0 range(NT) loop
11:49:02
finish mi0 range(NT) loop
11:49:02
start mi0 range(n) loop
11:49:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:49:02
start mi0 range(n) 2loop
11:49:02
finish mi0 range(n) 2loop
11:49:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:49:02
start mi1 range(p) 1 loop
11:49:02
finish mi1 range(p) 1 loop
11:49:02
start mi1 range(p) 2 loop
11:49:02
finish mi1 range(p) 2 loop
11:49:02
start mi1 range(NT) loop
11:49:02
finish mi1 range(NT) loop
11:49:02
start mi1 range(n) loop
11:49:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:49:02
start mi1 range(n) 2loop
11:49:02
finish mi1 range(n) 2loop
11:49:02
start mi2
11:49:02
start mi2 range(p) 1 loop
11:49:02
finish mi2 range(p) 1 loop
11:49:02
start mi2 range(p) 2 loop
11:49:02
finish mi2 range(p) 2 loop
11:49:02
start mi2 range(NT) loop
11:49:02
finish mi2 range(NT) loop
11:49:02
start mi2 range(n) loop
11:49:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:49:02
start mi2 range(n) 2loop
11:49:02
finish mi2 range(n) 2loop
11:49:02
[[-2.58785279]]
end mi2 loop
11:49:02
estep
11:49:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:49:18
start ppi1
11:49:18
start mi0
11:49:18
start mi0 range(p) 1 loop
11:49:18
finish mi0 range(p) 1 loop
11:49:18
start mi0 range(p) 2 loop
11:49:18
finish mi0 range(p) 2 loop
11:49:18
start mi0 range(NT) loop
11:49:18
finish mi0 range(NT) loop
11:49:18
start mi0 range(n) loop
11:49:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:49:18
start mi0 range(n) 2loop
11:49:18
finish mi0 range(n) 2loop
11:49:18
start mi1
11:49:18
start mi1 range(p) 1 loop
11:49:18
finish mi1 range(p) 1 loop
11:49:18
start mi1 range(p) 2 loop
11:49:18
finish mi1 range(p) 2 loop
11:49:18
start mi1 range(NT) loop
11:49:18
finish mi1 range(NT) loop
11:49:18
start mi1 range(n) loop
11:49:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:49:18
start mi1 range(n) 2loop
11:49:18
finish mi1 range(n) 2loop
11:49:18
start mi2
11:49:18
start mi2 range(p) 1 loop
11:49:18
finish mi2 range(p) 1 loop
11:49:18
start mi2 range(p) 2 loop
11:49:18
finish mi2 range(p) 2 loop
11:49:18
start mi2 range(NT) loop
11:49:19
finish mi2 range(NT) loop
11:49:19
start mi2 range(n) loop
11:49:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:49:19
start mi2 range(n) 2loop
11:49:19
finish mi2 range(n) 2loop
11:49:19
[[-2.65035288]]
end mi2 loop
11:49:19
estep
11:49:19
end estep
11:49:36
end pa11:49:36
goodness of fit correlation [0.28042635]
start cluster 11:49:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36750 instead
  warnings.warn(
8
parallel submitted
11:49:58
parallel finished
11:53:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:53:26
start mi0
11:53:26
start mi0 range(p) 1 loop
11:53:26
finish mi0 range(p) 1 loop
11:53:26
start mi0 range(p) 2 loop
11:53:26
finish mi0 range(p) 2 loop
11:53:26
start mi0 range(NT) loop
11:53:26
finish mi0 range(NT) loop
11:53:26
start mi0 range(n) loop
11:53:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:53:26
start mi0 range(n) 2loop
11:53:26
finish mi0 range(n) 2loop
11:53:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:53:26
start mi1 range(p) 1 loop
11:53:26
finish mi1 range(p) 1 loop
11:53:26
start mi1 range(p) 2 loop
11:53:26
finish mi1 range(p) 2 loop
11:53:26
start mi1 range(NT) loop
11:53:26
finish mi1 range(NT) loop
11:53:26
start mi1 range(n) loop
11:53:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:53:26
start mi1 range(n) 2loop
11:53:26
finish mi1 range(n) 2loop
11:53:27
start mi2
11:53:27
start mi2 range(p) 1 loop
11:53:27
finish mi2 range(p) 1 loop
11:53:27
start mi2 range(p) 2 loop
11:53:27
finish mi2 range(p) 2 loop
11:53:27
start mi2 range(NT) loop
11:53:27
finish mi2 range(NT) loop
11:53:27
start mi2 range(n) loop
11:53:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:53:27
start mi2 range(n) 2loop
11:53:27
finish mi2 range(n) 2loop
11:53:27
[[-2.6021531]]
end mi2 loop
11:53:27
estep
11:53:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:53:43
start ppi1
11:53:43
start mi0
11:53:43
start mi0 range(p) 1 loop
11:53:43
finish mi0 range(p) 1 loop
11:53:43
start mi0 range(p) 2 loop
11:53:43
finish mi0 range(p) 2 loop
11:53:43
start mi0 range(NT) loop
11:53:43
finish mi0 range(NT) loop
11:53:43
start mi0 range(n) loop
11:53:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:53:43
start mi0 range(n) 2loop
11:53:43
finish mi0 range(n) 2loop
11:53:43
start mi1
11:53:43
start mi1 range(p) 1 loop
11:53:43
finish mi1 range(p) 1 loop
11:53:43
start mi1 range(p) 2 loop
11:53:43
finish mi1 range(p) 2 loop
11:53:43
start mi1 range(NT) loop
11:53:43
finish mi1 range(NT) loop
11:53:43
start mi1 range(n) loop
11:53:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:53:43
start mi1 range(n) 2loop
11:53:43
finish mi1 range(n) 2loop
11:53:44
start mi2
11:53:44
start mi2 range(p) 1 loop
11:53:44
finish mi2 range(p) 1 loop
11:53:44
start mi2 range(p) 2 loop
11:53:44
finish mi2 range(p) 2 loop
11:53:44
start mi2 range(NT) loop
11:53:44
finish mi2 range(NT) loop
11:53:44
start mi2 range(n) loop
11:53:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:53:44
start mi2 range(n) 2loop
11:53:44
finish mi2 range(n) 2loop
11:53:44
[[-2.66465122]]
end mi2 loop
11:53:44
estep
11:53:44
end estep
11:54:00
end pa11:54:00
goodness of fit correlation [0.23988]
start cluster 11:54:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43181 instead
  warnings.warn(
9
parallel submitted
11:54:22
parallel finished
11:57:27
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:57:37
start mi0
11:57:37
start mi0 range(p) 1 loop
11:57:37
finish mi0 range(p) 1 loop
11:57:37
start mi0 range(p) 2 loop
11:57:37
finish mi0 range(p) 2 loop
11:57:37
start mi0 range(NT) loop
11:57:37
finish mi0 range(NT) loop
11:57:37
start mi0 range(n) loop
11:57:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:57:37
start mi0 range(n) 2loop
11:57:37
finish mi0 range(n) 2loop
11:57:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:57:37
start mi1 range(p) 1 loop
11:57:37
finish mi1 range(p) 1 loop
11:57:37
start mi1 range(p) 2 loop
11:57:37
finish mi1 range(p) 2 loop
11:57:37
start mi1 range(NT) loop
11:57:37
finish mi1 range(NT) loop
11:57:37
start mi1 range(n) loop
11:57:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:57:37
start mi1 range(n) 2loop
11:57:37
finish mi1 range(n) 2loop
11:57:37
start mi2
11:57:37
start mi2 range(p) 1 loop
11:57:37
finish mi2 range(p) 1 loop
11:57:37
start mi2 range(p) 2 loop
11:57:37
finish mi2 range(p) 2 loop
11:57:37
start mi2 range(NT) loop
11:57:37
finish mi2 range(NT) loop
11:57:37
start mi2 range(n) loop
11:57:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:57:37
start mi2 range(n) 2loop
11:57:37
finish mi2 range(n) 2loop
11:57:38
[[-2.64404141]]
end mi2 loop
11:57:38
estep
11:57:38
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:57:53
start ppi1
11:57:53
start mi0
11:57:53
start mi0 range(p) 1 loop
11:57:53
finish mi0 range(p) 1 loop
11:57:53
start mi0 range(p) 2 loop
11:57:53
finish mi0 range(p) 2 loop
11:57:53
start mi0 range(NT) loop
11:57:54
finish mi0 range(NT) loop
11:57:54
start mi0 range(n) loop
11:57:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:57:54
start mi0 range(n) 2loop
11:57:54
finish mi0 range(n) 2loop
11:57:54
start mi1
11:57:54
start mi1 range(p) 1 loop
11:57:54
finish mi1 range(p) 1 loop
11:57:54
start mi1 range(p) 2 loop
11:57:54
finish mi1 range(p) 2 loop
11:57:54
start mi1 range(NT) loop
11:57:54
finish mi1 range(NT) loop
11:57:54
start mi1 range(n) loop
11:57:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:57:54
start mi1 range(n) 2loop
11:57:54
finish mi1 range(n) 2loop
11:57:54
start mi2
11:57:54
start mi2 range(p) 1 loop
11:57:54
finish mi2 range(p) 1 loop
11:57:54
start mi2 range(p) 2 loop
11:57:54
finish mi2 range(p) 2 loop
11:57:54
start mi2 range(NT) loop
11:57:54
finish mi2 range(NT) loop
11:57:54
start mi2 range(n) loop
11:57:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:57:54
start mi2 range(n) 2loop
11:57:54
finish mi2 range(n) 2loop
11:57:54
[[-2.70653595]]
end mi2 loop
11:57:54
estep
11:57:54
end estep
11:58:11
end pa11:58:11
goodness of fit correlation [0.2660146]
start cluster 11:58:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44891 instead
  warnings.warn(
10
parallel submitted
11:58:34
parallel finished
12:01:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:02:08
start mi0
12:02:08
start mi0 range(p) 1 loop
12:02:08
finish mi0 range(p) 1 loop
12:02:08
start mi0 range(p) 2 loop
12:02:08
finish mi0 range(p) 2 loop
12:02:08
start mi0 range(NT) loop
12:02:08
finish mi0 range(NT) loop
12:02:08
start mi0 range(n) loop
12:02:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:02:08
start mi0 range(n) 2loop
12:02:08
finish mi0 range(n) 2loop
12:02:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:02:08
start mi1 range(p) 1 loop
12:02:08
finish mi1 range(p) 1 loop
12:02:08
start mi1 range(p) 2 loop
12:02:08
finish mi1 range(p) 2 loop
12:02:08
start mi1 range(NT) loop
12:02:08
finish mi1 range(NT) loop
12:02:09
start mi1 range(n) loop
12:02:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:02:09
start mi1 range(n) 2loop
12:02:09
finish mi1 range(n) 2loop
12:02:09
start mi2
12:02:09
start mi2 range(p) 1 loop
12:02:09
finish mi2 range(p) 1 loop
12:02:09
start mi2 range(p) 2 loop
12:02:09
finish mi2 range(p) 2 loop
12:02:09
start mi2 range(NT) loop
12:02:09
finish mi2 range(NT) loop
12:02:09
start mi2 range(n) loop
12:02:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:02:09
start mi2 range(n) 2loop
12:02:09
finish mi2 range(n) 2loop
12:02:09
[[-2.63832023]]
end mi2 loop
12:02:09
estep
12:02:09
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:02:25
start ppi1
12:02:25
start mi0
12:02:25
start mi0 range(p) 1 loop
12:02:25
finish mi0 range(p) 1 loop
12:02:25
start mi0 range(p) 2 loop
12:02:25
finish mi0 range(p) 2 loop
12:02:25
start mi0 range(NT) loop
12:02:25
finish mi0 range(NT) loop
12:02:25
start mi0 range(n) loop
12:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:02:25
start mi0 range(n) 2loop
12:02:25
finish mi0 range(n) 2loop
12:02:25
start mi1
12:02:25
start mi1 range(p) 1 loop
12:02:25
finish mi1 range(p) 1 loop
12:02:25
start mi1 range(p) 2 loop
12:02:25
finish mi1 range(p) 2 loop
12:02:25
start mi1 range(NT) loop
12:02:25
finish mi1 range(NT) loop
12:02:25
start mi1 range(n) loop
12:02:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:02:25
start mi1 range(n) 2loop
12:02:25
finish mi1 range(n) 2loop
12:02:25
start mi2
12:02:25
start mi2 range(p) 1 loop
12:02:25
finish mi2 range(p) 1 loop
12:02:26
start mi2 range(p) 2 loop
12:02:26
finish mi2 range(p) 2 loop
12:02:26
start mi2 range(NT) loop
12:02:26
finish mi2 range(NT) loop
12:02:26
start mi2 range(n) loop
12:02:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:02:26
start mi2 range(n) 2loop
12:02:26
finish mi2 range(n) 2loop
12:02:26
[[-2.70081511]]
end mi2 loop
12:02:26
estep
12:02:26
end estep
12:02:43
end pa12:02:43
goodness of fit correlation [0.25402522]
start cluster 12:02:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33781 instead
  warnings.warn(
11
parallel submitted
12:03:07
parallel finished
12:06:09
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:06:20
start mi0
12:06:20
start mi0 range(p) 1 loop
12:06:20
finish mi0 range(p) 1 loop
12:06:20
start mi0 range(p) 2 loop
12:06:20
finish mi0 range(p) 2 loop
12:06:20
start mi0 range(NT) loop
12:06:20
finish mi0 range(NT) loop
12:06:20
start mi0 range(n) loop
12:06:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:06:20
start mi0 range(n) 2loop
12:06:20
finish mi0 range(n) 2loop
12:06:20
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:06:20
start mi1 range(p) 1 loop
12:06:20
finish mi1 range(p) 1 loop
12:06:20
start mi1 range(p) 2 loop
12:06:20
finish mi1 range(p) 2 loop
12:06:20
start mi1 range(NT) loop
12:06:20
finish mi1 range(NT) loop
12:06:20
start mi1 range(n) loop
12:06:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:06:20
start mi1 range(n) 2loop
12:06:20
finish mi1 range(n) 2loop
12:06:20
start mi2
12:06:20
start mi2 range(p) 1 loop
12:06:20
finish mi2 range(p) 1 loop
12:06:20
start mi2 range(p) 2 loop
12:06:20
finish mi2 range(p) 2 loop
12:06:20
start mi2 range(NT) loop
12:06:21
finish mi2 range(NT) loop
12:06:21
start mi2 range(n) loop
12:06:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:06:21
start mi2 range(n) 2loop
12:06:21
finish mi2 range(n) 2loop
12:06:21
[[-2.61610766]]
end mi2 loop
12:06:21
estep
12:06:21
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:06:37
start ppi1
12:06:37
start mi0
12:06:37
start mi0 range(p) 1 loop
12:06:37
finish mi0 range(p) 1 loop
12:06:37
start mi0 range(p) 2 loop
12:06:37
finish mi0 range(p) 2 loop
12:06:37
start mi0 range(NT) loop
12:06:37
finish mi0 range(NT) loop
12:06:37
start mi0 range(n) loop
12:06:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:06:37
start mi0 range(n) 2loop
12:06:37
finish mi0 range(n) 2loop
12:06:37
start mi1
12:06:37
start mi1 range(p) 1 loop
12:06:37
finish mi1 range(p) 1 loop
12:06:37
start mi1 range(p) 2 loop
12:06:37
finish mi1 range(p) 2 loop
12:06:37
start mi1 range(NT) loop
12:06:38
finish mi1 range(NT) loop
12:06:38
start mi1 range(n) loop
12:06:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:06:38
start mi1 range(n) 2loop
12:06:38
finish mi1 range(n) 2loop
12:06:38
start mi2
12:06:38
start mi2 range(p) 1 loop
12:06:38
finish mi2 range(p) 1 loop
12:06:38
start mi2 range(p) 2 loop
12:06:38
finish mi2 range(p) 2 loop
12:06:38
start mi2 range(NT) loop
12:06:38
finish mi2 range(NT) loop
12:06:38
start mi2 range(n) loop
12:06:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:06:38
start mi2 range(n) 2loop
12:06:38
finish mi2 range(n) 2loop
12:06:38
[[-2.67860428]]
end mi2 loop
12:06:38
estep
12:06:38
end estep
12:06:54
end pa12:06:54
goodness of fit correlation [0.17150818]
start cluster 12:06:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38729 instead
  warnings.warn(
12
parallel submitted
12:07:16
parallel finished
12:10:29
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:10:41
start mi0
12:10:41
start mi0 range(p) 1 loop
12:10:41
finish mi0 range(p) 1 loop
12:10:41
start mi0 range(p) 2 loop
12:10:42
finish mi0 range(p) 2 loop
12:10:42
start mi0 range(NT) loop
12:10:42
finish mi0 range(NT) loop
12:10:42
start mi0 range(n) loop
12:10:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:10:42
start mi0 range(n) 2loop
12:10:42
finish mi0 range(n) 2loop
12:10:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:10:42
start mi1 range(p) 1 loop
12:10:42
finish mi1 range(p) 1 loop
12:10:42
start mi1 range(p) 2 loop
12:10:42
finish mi1 range(p) 2 loop
12:10:42
start mi1 range(NT) loop
12:10:42
finish mi1 range(NT) loop
12:10:42
start mi1 range(n) loop
12:10:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:10:42
start mi1 range(n) 2loop
12:10:42
finish mi1 range(n) 2loop
12:10:42
start mi2
12:10:42
start mi2 range(p) 1 loop
12:10:42
finish mi2 range(p) 1 loop
12:10:42
start mi2 range(p) 2 loop
12:10:42
finish mi2 range(p) 2 loop
12:10:42
start mi2 range(NT) loop
12:10:42
finish mi2 range(NT) loop
12:10:42
start mi2 range(n) loop
12:10:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:10:42
start mi2 range(n) 2loop
12:10:42
finish mi2 range(n) 2loop
12:10:42
[[-2.55339846]]
end mi2 loop
12:10:42
estep
12:10:42
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:10:58
start ppi1
12:10:58
start mi0
12:10:58
start mi0 range(p) 1 loop
12:10:58
finish mi0 range(p) 1 loop
12:10:58
start mi0 range(p) 2 loop
12:10:58
finish mi0 range(p) 2 loop
12:10:58
start mi0 range(NT) loop
12:10:58
finish mi0 range(NT) loop
12:10:58
start mi0 range(n) loop
12:10:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:10:58
start mi0 range(n) 2loop
12:10:58
finish mi0 range(n) 2loop
12:10:58
start mi1
12:10:58
start mi1 range(p) 1 loop
12:10:58
finish mi1 range(p) 1 loop
12:10:58
start mi1 range(p) 2 loop
12:10:58
finish mi1 range(p) 2 loop
12:10:58
start mi1 range(NT) loop
12:10:58
finish mi1 range(NT) loop
12:10:58
start mi1 range(n) loop
12:10:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:10:58
start mi1 range(n) 2loop
12:10:58
finish mi1 range(n) 2loop
12:10:59
start mi2
12:10:59
start mi2 range(p) 1 loop
12:10:59
finish mi2 range(p) 1 loop
12:10:59
start mi2 range(p) 2 loop
12:10:59
finish mi2 range(p) 2 loop
12:10:59
start mi2 range(NT) loop
12:10:59
finish mi2 range(NT) loop
12:10:59
start mi2 range(n) loop
12:10:59
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:10:59
start mi2 range(n) 2loop
12:10:59
finish mi2 range(n) 2loop
12:10:59
[[-2.61590576]]
end mi2 loop
12:10:59
estep
12:10:59
end estep
12:11:15
end pa12:11:15
goodness of fit correlation [0.16735618]
start cluster 12:11:15
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35841 instead
  warnings.warn(
13
parallel submitted
12:11:36
parallel finished
12:14:35
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:14:46
start mi0
12:14:46
start mi0 range(p) 1 loop
12:14:46
finish mi0 range(p) 1 loop
12:14:46
start mi0 range(p) 2 loop
12:14:46
finish mi0 range(p) 2 loop
12:14:46
start mi0 range(NT) loop
12:14:46
finish mi0 range(NT) loop
12:14:46
start mi0 range(n) loop
12:14:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:14:46
start mi0 range(n) 2loop
12:14:46
finish mi0 range(n) 2loop
12:14:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:14:46
start mi1 range(p) 1 loop
12:14:46
finish mi1 range(p) 1 loop
12:14:46
start mi1 range(p) 2 loop
12:14:46
finish mi1 range(p) 2 loop
12:14:46
start mi1 range(NT) loop
12:14:46
finish mi1 range(NT) loop
12:14:46
start mi1 range(n) loop
12:14:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:14:46
start mi1 range(n) 2loop
12:14:46
finish mi1 range(n) 2loop
12:14:46
start mi2
12:14:46
start mi2 range(p) 1 loop
12:14:46
finish mi2 range(p) 1 loop
12:14:46
start mi2 range(p) 2 loop
12:14:46
finish mi2 range(p) 2 loop
12:14:46
start mi2 range(NT) loop
12:14:46
finish mi2 range(NT) loop
12:14:46
start mi2 range(n) loop
12:14:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:14:46
start mi2 range(n) 2loop
12:14:46
finish mi2 range(n) 2loop
12:14:46
[[-2.53614387]]
end mi2 loop
12:14:46
estep
12:14:46
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:15:03
start ppi1
12:15:03
start mi0
12:15:03
start mi0 range(p) 1 loop
12:15:03
finish mi0 range(p) 1 loop
12:15:03
start mi0 range(p) 2 loop
12:15:03
finish mi0 range(p) 2 loop
12:15:03
start mi0 range(NT) loop
12:15:03
finish mi0 range(NT) loop
12:15:03
start mi0 range(n) loop
12:15:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:15:03
start mi0 range(n) 2loop
12:15:03
finish mi0 range(n) 2loop
12:15:03
start mi1
12:15:03
start mi1 range(p) 1 loop
12:15:03
finish mi1 range(p) 1 loop
12:15:03
start mi1 range(p) 2 loop
12:15:03
finish mi1 range(p) 2 loop
12:15:03
start mi1 range(NT) loop
12:15:03
finish mi1 range(NT) loop
12:15:03
start mi1 range(n) loop
12:15:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:15:03
start mi1 range(n) 2loop
12:15:03
finish mi1 range(n) 2loop
12:15:03
start mi2
12:15:03
start mi2 range(p) 1 loop
12:15:03
finish mi2 range(p) 1 loop
12:15:03
start mi2 range(p) 2 loop
12:15:03
finish mi2 range(p) 2 loop
12:15:03
start mi2 range(NT) loop
12:15:03
finish mi2 range(NT) loop
12:15:03
start mi2 range(n) loop
12:15:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:15:03
start mi2 range(n) 2loop
12:15:03
finish mi2 range(n) 2loop
12:15:04
[[-2.59865653]]
end mi2 loop
12:15:04
estep
12:15:04
end estep
12:15:21
end pa12:15:21
goodness of fit correlation [0.16046719]
start cluster 12:15:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35958 instead
  warnings.warn(
14
parallel submitted
12:15:44
parallel finished
12:20:10
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:20:21
start mi0
12:20:21
start mi0 range(p) 1 loop
12:20:21
finish mi0 range(p) 1 loop
12:20:21
start mi0 range(p) 2 loop
12:20:21
finish mi0 range(p) 2 loop
12:20:21
start mi0 range(NT) loop
12:20:21
finish mi0 range(NT) loop
12:20:21
start mi0 range(n) loop
12:20:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:20:21
start mi0 range(n) 2loop
12:20:21
finish mi0 range(n) 2loop
12:20:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:20:21
start mi1 range(p) 1 loop
12:20:21
finish mi1 range(p) 1 loop
12:20:21
start mi1 range(p) 2 loop
12:20:21
finish mi1 range(p) 2 loop
12:20:21
start mi1 range(NT) loop
12:20:21
finish mi1 range(NT) loop
12:20:21
start mi1 range(n) loop
12:20:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:20:21
start mi1 range(n) 2loop
12:20:21
finish mi1 range(n) 2loop
12:20:21
start mi2
12:20:21
start mi2 range(p) 1 loop
12:20:21
finish mi2 range(p) 1 loop
12:20:21
start mi2 range(p) 2 loop
12:20:21
finish mi2 range(p) 2 loop
12:20:21
start mi2 range(NT) loop
12:20:21
finish mi2 range(NT) loop
12:20:21
start mi2 range(n) loop
12:20:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:20:21
start mi2 range(n) 2loop
12:20:21
finish mi2 range(n) 2loop
12:20:21
[[-2.52283805]]
end mi2 loop
12:20:21
estep
12:20:21
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:20:37
start ppi1
12:20:37
start mi0
12:20:37
start mi0 range(p) 1 loop
12:20:37
finish mi0 range(p) 1 loop
12:20:37
start mi0 range(p) 2 loop
12:20:37
finish mi0 range(p) 2 loop
12:20:37
start mi0 range(NT) loop
12:20:37
finish mi0 range(NT) loop
12:20:37
start mi0 range(n) loop
12:20:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:20:38
start mi0 range(n) 2loop
12:20:38
finish mi0 range(n) 2loop
12:20:38
start mi1
12:20:38
start mi1 range(p) 1 loop
12:20:38
finish mi1 range(p) 1 loop
12:20:38
start mi1 range(p) 2 loop
12:20:38
finish mi1 range(p) 2 loop
12:20:38
start mi1 range(NT) loop
12:20:38
finish mi1 range(NT) loop
12:20:38
start mi1 range(n) loop
12:20:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:20:38
start mi1 range(n) 2loop
12:20:38
finish mi1 range(n) 2loop
12:20:38
start mi2
12:20:38
start mi2 range(p) 1 loop
12:20:38
finish mi2 range(p) 1 loop
12:20:38
start mi2 range(p) 2 loop
12:20:38
finish mi2 range(p) 2 loop
12:20:38
start mi2 range(NT) loop
12:20:38
finish mi2 range(NT) loop
12:20:38
start mi2 range(n) loop
12:20:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:20:38
start mi2 range(n) 2loop
12:20:38
finish mi2 range(n) 2loop
12:20:38
[[-2.58535589]]
end mi2 loop
12:20:38
estep
12:20:38
end estep
12:20:55
end pa12:20:55
goodness of fit correlation [0.20219767]
start cluster 12:20:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39519 instead
  warnings.warn(
15
parallel submitted
12:21:19
parallel finished
12:24:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:24:56
start mi0
12:24:56
start mi0 range(p) 1 loop
12:24:56
finish mi0 range(p) 1 loop
12:24:56
start mi0 range(p) 2 loop
12:24:56
finish mi0 range(p) 2 loop
12:24:56
start mi0 range(NT) loop
12:24:56
finish mi0 range(NT) loop
12:24:56
start mi0 range(n) loop
12:24:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:24:56
start mi0 range(n) 2loop
12:24:56
finish mi0 range(n) 2loop
12:24:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:24:56
start mi1 range(p) 1 loop
12:24:56
finish mi1 range(p) 1 loop
12:24:56
start mi1 range(p) 2 loop
12:24:56
finish mi1 range(p) 2 loop
12:24:56
start mi1 range(NT) loop
12:24:56
finish mi1 range(NT) loop
12:24:56
start mi1 range(n) loop
12:24:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:24:56
start mi1 range(n) 2loop
12:24:56
finish mi1 range(n) 2loop
12:24:57
start mi2
12:24:57
start mi2 range(p) 1 loop
12:24:57
finish mi2 range(p) 1 loop
12:24:57
start mi2 range(p) 2 loop
12:24:57
finish mi2 range(p) 2 loop
12:24:57
start mi2 range(NT) loop
12:24:57
finish mi2 range(NT) loop
12:24:57
start mi2 range(n) loop
12:24:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:24:57
start mi2 range(n) 2loop
12:24:57
finish mi2 range(n) 2loop
12:24:57
[[-2.59467626]]
end mi2 loop
12:24:57
estep
12:24:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:25:13
start ppi1
12:25:13
start mi0
12:25:13
start mi0 range(p) 1 loop
12:25:13
finish mi0 range(p) 1 loop
12:25:13
start mi0 range(p) 2 loop
12:25:13
finish mi0 range(p) 2 loop
12:25:13
start mi0 range(NT) loop
12:25:13
finish mi0 range(NT) loop
12:25:13
start mi0 range(n) loop
12:25:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:25:13
start mi0 range(n) 2loop
12:25:13
finish mi0 range(n) 2loop
12:25:13
start mi1
12:25:13
start mi1 range(p) 1 loop
12:25:13
finish mi1 range(p) 1 loop
12:25:13
start mi1 range(p) 2 loop
12:25:13
finish mi1 range(p) 2 loop
12:25:13
start mi1 range(NT) loop
12:25:13
finish mi1 range(NT) loop
12:25:13
start mi1 range(n) loop
12:25:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:25:13
start mi1 range(n) 2loop
12:25:13
finish mi1 range(n) 2loop
12:25:13
start mi2
12:25:13
start mi2 range(p) 1 loop
12:25:13
finish mi2 range(p) 1 loop
12:25:13
start mi2 range(p) 2 loop
12:25:13
finish mi2 range(p) 2 loop
12:25:13
start mi2 range(NT) loop
12:25:14
finish mi2 range(NT) loop
12:25:14
start mi2 range(n) loop
12:25:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:25:14
start mi2 range(n) 2loop
12:25:14
finish mi2 range(n) 2loop
12:25:14
[[-2.65717535]]
end mi2 loop
12:25:14
estep
12:25:14
end estep
12:25:31
end pa12:25:31
goodness of fit correlation [0.30808157]
start cluster 12:25:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34372 instead
  warnings.warn(
16
parallel submitted
12:25:55
parallel finished
12:29:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:29:36
start mi0
12:29:36
start mi0 range(p) 1 loop
12:29:36
finish mi0 range(p) 1 loop
12:29:36
start mi0 range(p) 2 loop
12:29:36
finish mi0 range(p) 2 loop
12:29:36
start mi0 range(NT) loop
12:29:36
finish mi0 range(NT) loop
12:29:36
start mi0 range(n) loop
12:29:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:29:36
start mi0 range(n) 2loop
12:29:36
finish mi0 range(n) 2loop
12:29:36
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:29:36
start mi1 range(p) 1 loop
12:29:36
finish mi1 range(p) 1 loop
12:29:36
start mi1 range(p) 2 loop
12:29:36
finish mi1 range(p) 2 loop
12:29:36
start mi1 range(NT) loop
12:29:36
finish mi1 range(NT) loop
12:29:36
start mi1 range(n) loop
12:29:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:29:36
start mi1 range(n) 2loop
12:29:36
finish mi1 range(n) 2loop
12:29:36
start mi2
12:29:36
start mi2 range(p) 1 loop
12:29:36
finish mi2 range(p) 1 loop
12:29:36
start mi2 range(p) 2 loop
12:29:36
finish mi2 range(p) 2 loop
12:29:36
start mi2 range(NT) loop
12:29:36
finish mi2 range(NT) loop
12:29:36
start mi2 range(n) loop
12:29:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:29:37
start mi2 range(n) 2loop
12:29:37
finish mi2 range(n) 2loop
12:29:37
[[-2.73736652]]
end mi2 loop
12:29:37
estep
12:29:37
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:29:53
start ppi1
12:29:53
start mi0
12:29:53
start mi0 range(p) 1 loop
12:29:53
finish mi0 range(p) 1 loop
12:29:53
start mi0 range(p) 2 loop
12:29:53
finish mi0 range(p) 2 loop
12:29:53
start mi0 range(NT) loop
12:29:53
finish mi0 range(NT) loop
12:29:53
start mi0 range(n) loop
12:29:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:29:53
start mi0 range(n) 2loop
12:29:53
finish mi0 range(n) 2loop
12:29:53
start mi1
12:29:53
start mi1 range(p) 1 loop
12:29:53
finish mi1 range(p) 1 loop
12:29:53
start mi1 range(p) 2 loop
12:29:53
finish mi1 range(p) 2 loop
12:29:53
start mi1 range(NT) loop
12:29:53
finish mi1 range(NT) loop
12:29:53
start mi1 range(n) loop
12:29:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:29:54
start mi1 range(n) 2loop
12:29:54
finish mi1 range(n) 2loop
12:29:54
start mi2
12:29:54
start mi2 range(p) 1 loop
12:29:54
finish mi2 range(p) 1 loop
12:29:54
start mi2 range(p) 2 loop
12:29:54
finish mi2 range(p) 2 loop
12:29:54
start mi2 range(NT) loop
12:29:54
finish mi2 range(NT) loop
12:29:54
start mi2 range(n) loop
12:29:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:29:54
start mi2 range(n) 2loop
12:29:54
finish mi2 range(n) 2loop
12:29:54
[[-2.79985878]]
end mi2 loop
12:29:54
estep
12:29:54
end estep
12:30:12
end pa12:30:12
goodness of fit correlation [0.27909799]
start cluster 12:30:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46346 instead
  warnings.warn(
17
parallel submitted
12:30:35
parallel finished
12:33:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:33:57
start mi0
12:33:57
start mi0 range(p) 1 loop
12:33:57
finish mi0 range(p) 1 loop
12:33:57
start mi0 range(p) 2 loop
12:33:57
finish mi0 range(p) 2 loop
12:33:57
start mi0 range(NT) loop
12:33:58
finish mi0 range(NT) loop
12:33:58
start mi0 range(n) loop
12:33:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:33:58
start mi0 range(n) 2loop
12:33:58
finish mi0 range(n) 2loop
12:33:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:33:58
start mi1 range(p) 1 loop
12:33:58
finish mi1 range(p) 1 loop
12:33:58
start mi1 range(p) 2 loop
12:33:58
finish mi1 range(p) 2 loop
12:33:58
start mi1 range(NT) loop
12:33:58
finish mi1 range(NT) loop
12:33:58
start mi1 range(n) loop
12:33:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:33:58
start mi1 range(n) 2loop
12:33:58
finish mi1 range(n) 2loop
12:33:58
start mi2
12:33:58
start mi2 range(p) 1 loop
12:33:58
finish mi2 range(p) 1 loop
12:33:58
start mi2 range(p) 2 loop
12:33:58
finish mi2 range(p) 2 loop
12:33:58
start mi2 range(NT) loop
12:33:58
finish mi2 range(NT) loop
12:33:58
start mi2 range(n) loop
12:33:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:33:58
start mi2 range(n) 2loop
12:33:58
finish mi2 range(n) 2loop
12:33:58
[[-2.76856897]]
end mi2 loop
12:33:58
estep
12:33:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:34:14
start ppi1
12:34:14
start mi0
12:34:14
start mi0 range(p) 1 loop
12:34:14
finish mi0 range(p) 1 loop
12:34:14
start mi0 range(p) 2 loop
12:34:14
finish mi0 range(p) 2 loop
12:34:14
start mi0 range(NT) loop
12:34:14
finish mi0 range(NT) loop
12:34:15
start mi0 range(n) loop
12:34:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:34:15
start mi0 range(n) 2loop
12:34:15
finish mi0 range(n) 2loop
12:34:15
start mi1
12:34:15
start mi1 range(p) 1 loop
12:34:15
finish mi1 range(p) 1 loop
12:34:15
start mi1 range(p) 2 loop
12:34:15
finish mi1 range(p) 2 loop
12:34:15
start mi1 range(NT) loop
12:34:15
finish mi1 range(NT) loop
12:34:15
start mi1 range(n) loop
12:34:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:34:15
start mi1 range(n) 2loop
12:34:15
finish mi1 range(n) 2loop
12:34:15
start mi2
12:34:15
start mi2 range(p) 1 loop
12:34:15
finish mi2 range(p) 1 loop
12:34:15
start mi2 range(p) 2 loop
12:34:15
finish mi2 range(p) 2 loop
12:34:15
start mi2 range(NT) loop
12:34:15
finish mi2 range(NT) loop
12:34:15
start mi2 range(n) loop
12:34:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:34:15
start mi2 range(n) 2loop
12:34:15
finish mi2 range(n) 2loop
12:34:15
[[-2.83106109]]
end mi2 loop
12:34:15
estep
12:34:15
end estep
12:34:32
end pa12:34:32
goodness of fit correlation [0.28191761]
start cluster 12:34:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34264 instead
  warnings.warn(
18
parallel submitted
12:34:56
parallel finished
12:38:13
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:38:26
start mi0
12:38:26
start mi0 range(p) 1 loop
12:38:26
finish mi0 range(p) 1 loop
12:38:26
start mi0 range(p) 2 loop
12:38:26
finish mi0 range(p) 2 loop
12:38:26
start mi0 range(NT) loop
12:38:26
finish mi0 range(NT) loop
12:38:26
start mi0 range(n) loop
12:38:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:38:26
start mi0 range(n) 2loop
12:38:26
finish mi0 range(n) 2loop
12:38:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:38:26
start mi1 range(p) 1 loop
12:38:26
finish mi1 range(p) 1 loop
12:38:26
start mi1 range(p) 2 loop
12:38:26
finish mi1 range(p) 2 loop
12:38:26
start mi1 range(NT) loop
12:38:26
finish mi1 range(NT) loop
12:38:26
start mi1 range(n) loop
12:38:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:38:26
start mi1 range(n) 2loop
12:38:26
finish mi1 range(n) 2loop
12:38:26
start mi2
12:38:26
start mi2 range(p) 1 loop
12:38:26
finish mi2 range(p) 1 loop
12:38:26
start mi2 range(p) 2 loop
12:38:26
finish mi2 range(p) 2 loop
12:38:26
start mi2 range(NT) loop
12:38:26
finish mi2 range(NT) loop
12:38:26
start mi2 range(n) loop
12:38:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:38:26
start mi2 range(n) 2loop
12:38:26
finish mi2 range(n) 2loop
12:38:26
[[-2.75228645]]
end mi2 loop
12:38:26
estep
12:38:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:38:43
start ppi1
12:38:43
start mi0
12:38:43
start mi0 range(p) 1 loop
12:38:43
finish mi0 range(p) 1 loop
12:38:43
start mi0 range(p) 2 loop
12:38:43
finish mi0 range(p) 2 loop
12:38:43
start mi0 range(NT) loop
12:38:43
finish mi0 range(NT) loop
12:38:43
start mi0 range(n) loop
12:38:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:38:43
start mi0 range(n) 2loop
12:38:43
finish mi0 range(n) 2loop
12:38:43
start mi1
12:38:43
start mi1 range(p) 1 loop
12:38:43
finish mi1 range(p) 1 loop
12:38:43
start mi1 range(p) 2 loop
12:38:43
finish mi1 range(p) 2 loop
12:38:43
start mi1 range(NT) loop
12:38:43
finish mi1 range(NT) loop
12:38:43
start mi1 range(n) loop
12:38:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:38:43
start mi1 range(n) 2loop
12:38:43
finish mi1 range(n) 2loop
12:38:43
start mi2
12:38:43
start mi2 range(p) 1 loop
12:38:43
finish mi2 range(p) 1 loop
12:38:43
start mi2 range(p) 2 loop
12:38:43
finish mi2 range(p) 2 loop
12:38:43
start mi2 range(NT) loop
12:38:43
finish mi2 range(NT) loop
12:38:43
start mi2 range(n) loop
12:38:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:38:43
start mi2 range(n) 2loop
12:38:43
finish mi2 range(n) 2loop
12:38:44
[[-2.81477862]]
end mi2 loop
12:38:44
estep
12:38:44
end estep
12:39:01
end pa12:39:01
goodness of fit correlation [0.29517853]
start cluster 12:39:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40825 instead
  warnings.warn(
19
parallel submitted
12:39:26
parallel finished
12:42:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:43:07
start mi0
12:43:07
start mi0 range(p) 1 loop
12:43:07
finish mi0 range(p) 1 loop
12:43:07
start mi0 range(p) 2 loop
12:43:07
finish mi0 range(p) 2 loop
12:43:07
start mi0 range(NT) loop
12:43:07
finish mi0 range(NT) loop
12:43:07
start mi0 range(n) loop
12:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:43:07
start mi0 range(n) 2loop
12:43:07
finish mi0 range(n) 2loop
12:43:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:43:07
start mi1 range(p) 1 loop
12:43:07
finish mi1 range(p) 1 loop
12:43:07
start mi1 range(p) 2 loop
12:43:07
finish mi1 range(p) 2 loop
12:43:07
start mi1 range(NT) loop
12:43:07
finish mi1 range(NT) loop
12:43:07
start mi1 range(n) loop
12:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:43:07
start mi1 range(n) 2loop
12:43:07
finish mi1 range(n) 2loop
12:43:07
start mi2
12:43:07
start mi2 range(p) 1 loop
12:43:07
finish mi2 range(p) 1 loop
12:43:07
start mi2 range(p) 2 loop
12:43:07
finish mi2 range(p) 2 loop
12:43:07
start mi2 range(NT) loop
12:43:07
finish mi2 range(NT) loop
12:43:07
start mi2 range(n) loop
12:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:43:07
start mi2 range(n) 2loop
12:43:07
finish mi2 range(n) 2loop
12:43:07
[[-2.69635558]]
end mi2 loop
12:43:07
estep
12:43:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:43:24
start ppi1
12:43:24
start mi0
12:43:24
start mi0 range(p) 1 loop
12:43:24
finish mi0 range(p) 1 loop
12:43:24
start mi0 range(p) 2 loop
12:43:24
finish mi0 range(p) 2 loop
12:43:24
start mi0 range(NT) loop
12:43:24
finish mi0 range(NT) loop
12:43:24
start mi0 range(n) loop
12:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:43:24
start mi0 range(n) 2loop
12:43:24
finish mi0 range(n) 2loop
12:43:24
start mi1
12:43:24
start mi1 range(p) 1 loop
12:43:24
finish mi1 range(p) 1 loop
12:43:24
start mi1 range(p) 2 loop
12:43:24
finish mi1 range(p) 2 loop
12:43:24
start mi1 range(NT) loop
12:43:24
finish mi1 range(NT) loop
12:43:24
start mi1 range(n) loop
12:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:43:24
start mi1 range(n) 2loop
12:43:24
finish mi1 range(n) 2loop
12:43:24
start mi2
12:43:24
start mi2 range(p) 1 loop
12:43:24
finish mi2 range(p) 1 loop
12:43:24
start mi2 range(p) 2 loop
12:43:24
finish mi2 range(p) 2 loop
12:43:24
start mi2 range(NT) loop
12:43:25
finish mi2 range(NT) loop
12:43:25
start mi2 range(n) loop
12:43:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:43:25
start mi2 range(n) 2loop
12:43:25
finish mi2 range(n) 2loop
12:43:25
[[-2.75884832]]
end mi2 loop
12:43:25
estep
12:43:25
end estep
12:43:42
end pa12:43:42
goodness of fit correlation [0.26761567]
start cluster 12:43:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34974 instead
  warnings.warn(
20
parallel submitted
12:44:07
parallel finished
12:47:54
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:48:07
start mi0
12:48:07
start mi0 range(p) 1 loop
12:48:07
finish mi0 range(p) 1 loop
12:48:07
start mi0 range(p) 2 loop
12:48:07
finish mi0 range(p) 2 loop
12:48:07
start mi0 range(NT) loop
12:48:07
finish mi0 range(NT) loop
12:48:07
start mi0 range(n) loop
12:48:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:48:07
start mi0 range(n) 2loop
12:48:07
finish mi0 range(n) 2loop
12:48:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:48:07
start mi1 range(p) 1 loop
12:48:07
finish mi1 range(p) 1 loop
12:48:07
start mi1 range(p) 2 loop
12:48:07
finish mi1 range(p) 2 loop
12:48:07
start mi1 range(NT) loop
12:48:07
finish mi1 range(NT) loop
12:48:07
start mi1 range(n) loop
12:48:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:48:07
start mi1 range(n) 2loop
12:48:07
finish mi1 range(n) 2loop
12:48:07
start mi2
12:48:07
start mi2 range(p) 1 loop
12:48:07
finish mi2 range(p) 1 loop
12:48:07
start mi2 range(p) 2 loop
12:48:07
finish mi2 range(p) 2 loop
12:48:07
start mi2 range(NT) loop
12:48:07
finish mi2 range(NT) loop
12:48:07
start mi2 range(n) loop
12:48:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:48:08
start mi2 range(n) 2loop
12:48:08
finish mi2 range(n) 2loop
12:48:08
[[-2.70960762]]
end mi2 loop
12:48:08
estep
12:48:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:48:25
start ppi1
12:48:25
start mi0
12:48:25
start mi0 range(p) 1 loop
12:48:25
finish mi0 range(p) 1 loop
12:48:25
start mi0 range(p) 2 loop
12:48:25
finish mi0 range(p) 2 loop
12:48:25
start mi0 range(NT) loop
12:48:26
finish mi0 range(NT) loop
12:48:26
start mi0 range(n) loop
12:48:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:48:26
start mi0 range(n) 2loop
12:48:26
finish mi0 range(n) 2loop
12:48:26
start mi1
12:48:26
start mi1 range(p) 1 loop
12:48:26
finish mi1 range(p) 1 loop
12:48:26
start mi1 range(p) 2 loop
12:48:26
finish mi1 range(p) 2 loop
12:48:26
start mi1 range(NT) loop
12:48:26
finish mi1 range(NT) loop
12:48:26
start mi1 range(n) loop
12:48:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:48:26
start mi1 range(n) 2loop
12:48:26
finish mi1 range(n) 2loop
12:48:26
start mi2
12:48:26
start mi2 range(p) 1 loop
12:48:26
finish mi2 range(p) 1 loop
12:48:26
start mi2 range(p) 2 loop
12:48:26
finish mi2 range(p) 2 loop
12:48:26
start mi2 range(NT) loop
12:48:26
finish mi2 range(NT) loop
12:48:26
start mi2 range(n) loop
12:48:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:48:26
start mi2 range(n) 2loop
12:48:26
finish mi2 range(n) 2loop
12:48:26
[[-2.77210015]]
end mi2 loop
12:48:26
estep
12:48:26
end estep
12:48:44
end pa12:48:44
goodness of fit correlation [0.26809211]
start cluster 12:48:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35812 instead
  warnings.warn(
21
parallel submitted
12:49:08
parallel finished
12:52:03
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:52:18
start mi0
12:52:18
start mi0 range(p) 1 loop
12:52:18
finish mi0 range(p) 1 loop
12:52:18
start mi0 range(p) 2 loop
12:52:18
finish mi0 range(p) 2 loop
12:52:18
start mi0 range(NT) loop
12:52:18
finish mi0 range(NT) loop
12:52:18
start mi0 range(n) loop
12:52:18
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:52:18
start mi0 range(n) 2loop
12:52:18
finish mi0 range(n) 2loop
12:52:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:52:18
start mi1 range(p) 1 loop
12:52:18
finish mi1 range(p) 1 loop
12:52:18
start mi1 range(p) 2 loop
12:52:18
finish mi1 range(p) 2 loop
12:52:18
start mi1 range(NT) loop
12:52:19
finish mi1 range(NT) loop
12:52:19
start mi1 range(n) loop
12:52:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:52:19
start mi1 range(n) 2loop
12:52:19
finish mi1 range(n) 2loop
12:52:19
start mi2
12:52:19
start mi2 range(p) 1 loop
12:52:19
finish mi2 range(p) 1 loop
12:52:19
start mi2 range(p) 2 loop
12:52:19
finish mi2 range(p) 2 loop
12:52:19
start mi2 range(NT) loop
12:52:19
finish mi2 range(NT) loop
12:52:19
start mi2 range(n) loop
12:52:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:52:19
start mi2 range(n) 2loop
12:52:19
finish mi2 range(n) 2loop
12:52:19
[[-2.61462042]]
end mi2 loop
12:52:19
estep
12:52:19
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:52:36
start ppi1
12:52:36
start mi0
12:52:36
start mi0 range(p) 1 loop
12:52:36
finish mi0 range(p) 1 loop
12:52:36
start mi0 range(p) 2 loop
12:52:36
finish mi0 range(p) 2 loop
12:52:36
start mi0 range(NT) loop
12:52:36
finish mi0 range(NT) loop
12:52:36
start mi0 range(n) loop
12:52:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:52:36
start mi0 range(n) 2loop
12:52:36
finish mi0 range(n) 2loop
12:52:36
start mi1
12:52:36
start mi1 range(p) 1 loop
12:52:36
finish mi1 range(p) 1 loop
12:52:36
start mi1 range(p) 2 loop
12:52:36
finish mi1 range(p) 2 loop
12:52:36
start mi1 range(NT) loop
12:52:36
finish mi1 range(NT) loop
12:52:36
start mi1 range(n) loop
12:52:36
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:52:36
start mi1 range(n) 2loop
12:52:36
finish mi1 range(n) 2loop
12:52:36
start mi2
12:52:36
start mi2 range(p) 1 loop
12:52:36
finish mi2 range(p) 1 loop
12:52:36
start mi2 range(p) 2 loop
12:52:36
finish mi2 range(p) 2 loop
12:52:36
start mi2 range(NT) loop
12:52:37
finish mi2 range(NT) loop
12:52:37
start mi2 range(n) loop
12:52:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:52:37
start mi2 range(n) 2loop
12:52:37
finish mi2 range(n) 2loop
12:52:37
[[-2.67711717]]
end mi2 loop
12:52:37
estep
12:52:37
end estep
12:52:54
end pa12:52:54
goodness of fit correlation [0.19139226]
start cluster 12:52:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37781 instead
  warnings.warn(
22
parallel submitted
12:53:19
parallel finished
12:56:37
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:56:49
start mi0
12:56:49
start mi0 range(p) 1 loop
12:56:49
finish mi0 range(p) 1 loop
12:56:49
start mi0 range(p) 2 loop
12:56:49
finish mi0 range(p) 2 loop
12:56:49
start mi0 range(NT) loop
12:56:50
finish mi0 range(NT) loop
12:56:50
start mi0 range(n) loop
12:56:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:56:50
start mi0 range(n) 2loop
12:56:50
finish mi0 range(n) 2loop
12:56:50
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:56:50
start mi1 range(p) 1 loop
12:56:50
finish mi1 range(p) 1 loop
12:56:50
start mi1 range(p) 2 loop
12:56:50
finish mi1 range(p) 2 loop
12:56:50
start mi1 range(NT) loop
12:56:50
finish mi1 range(NT) loop
12:56:50
start mi1 range(n) loop
12:56:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:56:50
start mi1 range(n) 2loop
12:56:50
finish mi1 range(n) 2loop
12:56:50
start mi2
12:56:50
start mi2 range(p) 1 loop
12:56:50
finish mi2 range(p) 1 loop
12:56:50
start mi2 range(p) 2 loop
12:56:50
finish mi2 range(p) 2 loop
12:56:50
start mi2 range(NT) loop
12:56:50
finish mi2 range(NT) loop
12:56:50
start mi2 range(n) loop
12:56:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:56:50
start mi2 range(n) 2loop
12:56:50
finish mi2 range(n) 2loop
12:56:50
[[-2.57914027]]
end mi2 loop
12:56:50
estep
12:56:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:57:07
start ppi1
12:57:07
start mi0
12:57:07
start mi0 range(p) 1 loop
12:57:07
finish mi0 range(p) 1 loop
12:57:07
start mi0 range(p) 2 loop
12:57:07
finish mi0 range(p) 2 loop
12:57:07
start mi0 range(NT) loop
12:57:07
finish mi0 range(NT) loop
12:57:07
start mi0 range(n) loop
12:57:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:57:07
start mi0 range(n) 2loop
12:57:07
finish mi0 range(n) 2loop
12:57:07
start mi1
12:57:07
start mi1 range(p) 1 loop
12:57:07
finish mi1 range(p) 1 loop
12:57:07
start mi1 range(p) 2 loop
12:57:07
finish mi1 range(p) 2 loop
12:57:07
start mi1 range(NT) loop
12:57:07
finish mi1 range(NT) loop
12:57:07
start mi1 range(n) loop
12:57:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:57:07
start mi1 range(n) 2loop
12:57:07
finish mi1 range(n) 2loop
12:57:07
start mi2
12:57:07
start mi2 range(p) 1 loop
12:57:07
finish mi2 range(p) 1 loop
12:57:07
start mi2 range(p) 2 loop
12:57:07
finish mi2 range(p) 2 loop
12:57:07
start mi2 range(NT) loop
12:57:07
finish mi2 range(NT) loop
12:57:07
start mi2 range(n) loop
12:57:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:57:07
start mi2 range(n) 2loop
12:57:07
finish mi2 range(n) 2loop
12:57:08
[[-2.64164182]]
end mi2 loop
12:57:08
estep
12:57:08
end estep
12:57:25
end pa12:57:25
goodness of fit correlation [0.18129667]
start cluster 12:57:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33128 instead
  warnings.warn(
23
parallel submitted
12:57:50
parallel finished
13:00:49
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:01:03
start mi0
13:01:03
start mi0 range(p) 1 loop
13:01:03
finish mi0 range(p) 1 loop
13:01:03
start mi0 range(p) 2 loop
13:01:03
finish mi0 range(p) 2 loop
13:01:03
start mi0 range(NT) loop
13:01:03
finish mi0 range(NT) loop
13:01:03
start mi0 range(n) loop
13:01:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:01:03
start mi0 range(n) 2loop
13:01:03
finish mi0 range(n) 2loop
13:01:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:01:03
start mi1 range(p) 1 loop
13:01:03
finish mi1 range(p) 1 loop
13:01:03
start mi1 range(p) 2 loop
13:01:03
finish mi1 range(p) 2 loop
13:01:03
start mi1 range(NT) loop
13:01:03
finish mi1 range(NT) loop
13:01:03
start mi1 range(n) loop
13:01:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:01:04
start mi1 range(n) 2loop
13:01:04
finish mi1 range(n) 2loop
13:01:04
start mi2
13:01:04
start mi2 range(p) 1 loop
13:01:04
finish mi2 range(p) 1 loop
13:01:04
start mi2 range(p) 2 loop
13:01:04
finish mi2 range(p) 2 loop
13:01:04
start mi2 range(NT) loop
13:01:04
finish mi2 range(NT) loop
13:01:04
start mi2 range(n) loop
13:01:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:01:04
start mi2 range(n) 2loop
13:01:04
finish mi2 range(n) 2loop
13:01:04
[[-2.5706412]]
end mi2 loop
13:01:04
estep
13:01:04
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:01:21
start ppi1
13:01:21
start mi0
13:01:21
start mi0 range(p) 1 loop
13:01:21
finish mi0 range(p) 1 loop
13:01:21
start mi0 range(p) 2 loop
13:01:21
finish mi0 range(p) 2 loop
13:01:21
start mi0 range(NT) loop
13:01:21
finish mi0 range(NT) loop
13:01:21
start mi0 range(n) loop
13:01:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:01:21
start mi0 range(n) 2loop
13:01:21
finish mi0 range(n) 2loop
13:01:21
start mi1
13:01:21
start mi1 range(p) 1 loop
13:01:21
finish mi1 range(p) 1 loop
13:01:21
start mi1 range(p) 2 loop
13:01:21
finish mi1 range(p) 2 loop
13:01:21
start mi1 range(NT) loop
13:01:21
finish mi1 range(NT) loop
13:01:21
start mi1 range(n) loop
13:01:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:01:21
start mi1 range(n) 2loop
13:01:21
finish mi1 range(n) 2loop
13:01:21
start mi2
13:01:21
start mi2 range(p) 1 loop
13:01:21
finish mi2 range(p) 1 loop
13:01:21
start mi2 range(p) 2 loop
13:01:21
finish mi2 range(p) 2 loop
13:01:21
start mi2 range(NT) loop
13:01:22
finish mi2 range(NT) loop
13:01:22
start mi2 range(n) loop
13:01:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:01:22
start mi2 range(n) 2loop
13:01:22
finish mi2 range(n) 2loop
13:01:22
[[-2.63314439]]
end mi2 loop
13:01:22
estep
13:01:22
end estep
13:01:40
end pa13:01:40
goodness of fit correlation [0.1437773]
start cluster 13:01:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40642 instead
  warnings.warn(
24
parallel submitted
13:02:05
parallel finished
13:05:25
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:05:41
start mi0
13:05:41
start mi0 range(p) 1 loop
13:05:41
finish mi0 range(p) 1 loop
13:05:41
start mi0 range(p) 2 loop
13:05:41
finish mi0 range(p) 2 loop
13:05:41
start mi0 range(NT) loop
13:05:42
finish mi0 range(NT) loop
13:05:42
start mi0 range(n) loop
13:05:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:05:42
start mi0 range(n) 2loop
13:05:42
finish mi0 range(n) 2loop
13:05:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:05:42
start mi1 range(p) 1 loop
13:05:42
finish mi1 range(p) 1 loop
13:05:42
start mi1 range(p) 2 loop
13:05:42
finish mi1 range(p) 2 loop
13:05:42
start mi1 range(NT) loop
13:05:42
finish mi1 range(NT) loop
13:05:42
start mi1 range(n) loop
13:05:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:05:42
start mi1 range(n) 2loop
13:05:42
finish mi1 range(n) 2loop
13:05:42
start mi2
13:05:42
start mi2 range(p) 1 loop
13:05:42
finish mi2 range(p) 1 loop
13:05:42
start mi2 range(p) 2 loop
13:05:42
finish mi2 range(p) 2 loop
13:05:42
start mi2 range(NT) loop
13:05:42
finish mi2 range(NT) loop
13:05:42
start mi2 range(n) loop
13:05:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:05:42
start mi2 range(n) 2loop
13:05:42
finish mi2 range(n) 2loop
13:05:42
start mi3
13:05:42
start mi3 range(p) 1 loop
13:05:42
finish mi3 range(p) 1 loop
13:05:42
start mi3 range(p) 2 loop
13:05:42
finish mi3 range(p) 2 loop
13:05:42
start mi3 range(NT) loop
13:05:42
finish mi3 range(NT) loop
13:05:42
start mi3 range(n) loop
13:05:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:05:43
start mi3 range(n) 2loop
13:05:43
finish mi3 range(n) 2loop
13:05:43
[[-2.50513386]]
end mi3 loop
13:05:43
estep
13:05:43
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:05:59
start ppi1
13:05:59
start mi0
13:05:59
start mi0 range(p) 1 loop
13:05:59
finish mi0 range(p) 1 loop
13:05:59
start mi0 range(p) 2 loop
13:05:59
finish mi0 range(p) 2 loop
13:05:59
start mi0 range(NT) loop
13:05:59
finish mi0 range(NT) loop
13:06:00
start mi0 range(n) loop
13:06:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:06:00
start mi0 range(n) 2loop
13:06:00
finish mi0 range(n) 2loop
13:06:00
start mi1
13:06:00
start mi1 range(p) 1 loop
13:06:00
finish mi1 range(p) 1 loop
13:06:00
start mi1 range(p) 2 loop
13:06:00
finish mi1 range(p) 2 loop
13:06:00
start mi1 range(NT) loop
13:06:00
finish mi1 range(NT) loop
13:06:00
start mi1 range(n) loop
13:06:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:06:00
start mi1 range(n) 2loop
13:06:00
finish mi1 range(n) 2loop
13:06:00
start mi2
13:06:00
start mi2 range(p) 1 loop
13:06:00
finish mi2 range(p) 1 loop
13:06:00
start mi2 range(p) 2 loop
13:06:00
finish mi2 range(p) 2 loop
13:06:00
start mi2 range(NT) loop
13:06:00
finish mi2 range(NT) loop
13:06:00
start mi2 range(n) loop
13:06:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:06:00
start mi2 range(n) 2loop
13:06:00
finish mi2 range(n) 2loop
13:06:00
[[-2.56760979]]
end mi2 loop
13:06:00
estep
13:06:00
end estep
13:06:18
end pa13:06:18
goodness of fit correlation [0.13516352]
start cluster 13:06:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35869 instead
  warnings.warn(
25
parallel submitted
13:06:43
parallel finished
13:09:57
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:10:14
start mi0
13:10:14
start mi0 range(p) 1 loop
13:10:14
finish mi0 range(p) 1 loop
13:10:14
start mi0 range(p) 2 loop
13:10:14
finish mi0 range(p) 2 loop
13:10:14
start mi0 range(NT) loop
13:10:14
finish mi0 range(NT) loop
13:10:14
start mi0 range(n) loop
13:10:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:10:14
start mi0 range(n) 2loop
13:10:14
finish mi0 range(n) 2loop
13:10:14
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:10:14
start mi1 range(p) 1 loop
13:10:14
finish mi1 range(p) 1 loop
13:10:14
start mi1 range(p) 2 loop
13:10:14
finish mi1 range(p) 2 loop
13:10:14
start mi1 range(NT) loop
13:10:14
finish mi1 range(NT) loop
13:10:14
start mi1 range(n) loop
13:10:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:10:14
start mi1 range(n) 2loop
13:10:14
finish mi1 range(n) 2loop
13:10:14
start mi2
13:10:14
start mi2 range(p) 1 loop
13:10:14
finish mi2 range(p) 1 loop
13:10:14
start mi2 range(p) 2 loop
13:10:14
finish mi2 range(p) 2 loop
13:10:14
start mi2 range(NT) loop
13:10:15
finish mi2 range(NT) loop
13:10:15
start mi2 range(n) loop
13:10:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:10:15
start mi2 range(n) 2loop
13:10:15
finish mi2 range(n) 2loop
13:10:15
[[-2.53564358]]
end mi2 loop
13:10:15
estep
13:10:15
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:10:33
start ppi1
13:10:33
start mi0
13:10:33
start mi0 range(p) 1 loop
13:10:33
finish mi0 range(p) 1 loop
13:10:33
start mi0 range(p) 2 loop
13:10:33
finish mi0 range(p) 2 loop
13:10:33
start mi0 range(NT) loop
13:10:33
finish mi0 range(NT) loop
13:10:33
start mi0 range(n) loop
13:10:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:10:33
start mi0 range(n) 2loop
13:10:33
finish mi0 range(n) 2loop
13:10:33
start mi1
13:10:33
start mi1 range(p) 1 loop
13:10:33
finish mi1 range(p) 1 loop
13:10:33
start mi1 range(p) 2 loop
13:10:33
finish mi1 range(p) 2 loop
13:10:33
start mi1 range(NT) loop
13:10:33
finish mi1 range(NT) loop
13:10:33
start mi1 range(n) loop
13:10:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:10:33
start mi1 range(n) 2loop
13:10:33
finish mi1 range(n) 2loop
13:10:33
start mi2
13:10:33
start mi2 range(p) 1 loop
13:10:33
finish mi2 range(p) 1 loop
13:10:33
start mi2 range(p) 2 loop
13:10:33
finish mi2 range(p) 2 loop
13:10:33
start mi2 range(NT) loop
13:10:33
finish mi2 range(NT) loop
13:10:34
start mi2 range(n) loop
13:10:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:10:34
start mi2 range(n) 2loop
13:10:34
finish mi2 range(n) 2loop
13:10:34
[[-2.59815641]]
end mi2 loop
13:10:34
estep
13:10:34
end estep
13:10:52
end pa13:10:52
goodness of fit correlation [0.22059806]
start cluster 13:10:52
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41932 instead
  warnings.warn(
26
parallel submitted
13:11:17
parallel finished
13:16:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:16:57
start mi0
13:16:57
start mi0 range(p) 1 loop
13:16:57
finish mi0 range(p) 1 loop
13:16:57
start mi0 range(p) 2 loop
13:16:57
finish mi0 range(p) 2 loop
13:16:57
start mi0 range(NT) loop
13:16:57
finish mi0 range(NT) loop
13:16:57
start mi0 range(n) loop
13:16:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:16:57
start mi0 range(n) 2loop
13:16:57
finish mi0 range(n) 2loop
13:16:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:16:57
start mi1 range(p) 1 loop
13:16:57
finish mi1 range(p) 1 loop
13:16:57
start mi1 range(p) 2 loop
13:16:57
finish mi1 range(p) 2 loop
13:16:57
start mi1 range(NT) loop
13:16:57
finish mi1 range(NT) loop
13:16:57
start mi1 range(n) loop
13:16:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:16:57
start mi1 range(n) 2loop
13:16:57
finish mi1 range(n) 2loop
13:16:57
start mi2
13:16:57
start mi2 range(p) 1 loop
13:16:57
finish mi2 range(p) 1 loop
13:16:57
start mi2 range(p) 2 loop
13:16:57
finish mi2 range(p) 2 loop
13:16:57
start mi2 range(NT) loop
13:16:57
finish mi2 range(NT) loop
13:16:57
start mi2 range(n) loop
13:16:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:16:57
start mi2 range(n) 2loop
13:16:57
finish mi2 range(n) 2loop
13:16:57
[[-2.58663078]]
end mi2 loop
13:16:57
estep
13:16:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:17:15
start ppi1
13:17:15
start mi0
13:17:15
start mi0 range(p) 1 loop
13:17:15
finish mi0 range(p) 1 loop
13:17:15
start mi0 range(p) 2 loop
13:17:15
finish mi0 range(p) 2 loop
13:17:15
start mi0 range(NT) loop
13:17:15
finish mi0 range(NT) loop
13:17:15
start mi0 range(n) loop
13:17:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:17:15
start mi0 range(n) 2loop
13:17:15
finish mi0 range(n) 2loop
13:17:15
start mi1
13:17:15
start mi1 range(p) 1 loop
13:17:15
finish mi1 range(p) 1 loop
13:17:15
start mi1 range(p) 2 loop
13:17:15
finish mi1 range(p) 2 loop
13:17:15
start mi1 range(NT) loop
13:17:15
finish mi1 range(NT) loop
13:17:15
start mi1 range(n) loop
13:17:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:17:15
start mi1 range(n) 2loop
13:17:15
finish mi1 range(n) 2loop
13:17:15
start mi2
13:17:15
start mi2 range(p) 1 loop
13:17:15
finish mi2 range(p) 1 loop
13:17:15
start mi2 range(p) 2 loop
13:17:15
finish mi2 range(p) 2 loop
13:17:15
start mi2 range(NT) loop
13:17:15
finish mi2 range(NT) loop
13:17:15
start mi2 range(n) loop
13:17:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:17:15
start mi2 range(n) 2loop
13:17:15
finish mi2 range(n) 2loop
13:17:15
[[-2.64913106]]
end mi2 loop
13:17:15
estep
13:17:15
end estep
13:17:33
end pa13:17:33
goodness of fit correlation [0.28247986]
start cluster 13:17:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44959 instead
  warnings.warn(
27
parallel submitted
13:17:56
parallel finished
13:23:52
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:24:07
start mi0
13:24:07
start mi0 range(p) 1 loop
13:24:07
finish mi0 range(p) 1 loop
13:24:07
start mi0 range(p) 2 loop
13:24:07
finish mi0 range(p) 2 loop
13:24:07
start mi0 range(NT) loop
13:24:08
finish mi0 range(NT) loop
13:24:08
start mi0 range(n) loop
13:24:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:24:08
start mi0 range(n) 2loop
13:24:08
finish mi0 range(n) 2loop
13:24:08
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:24:08
start mi1 range(p) 1 loop
13:24:08
finish mi1 range(p) 1 loop
13:24:08
start mi1 range(p) 2 loop
13:24:08
finish mi1 range(p) 2 loop
13:24:08
start mi1 range(NT) loop
13:24:08
finish mi1 range(NT) loop
13:24:08
start mi1 range(n) loop
13:24:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:24:08
start mi1 range(n) 2loop
13:24:08
finish mi1 range(n) 2loop
13:24:08
start mi2
13:24:08
start mi2 range(p) 1 loop
13:24:08
finish mi2 range(p) 1 loop
13:24:08
start mi2 range(p) 2 loop
13:24:08
finish mi2 range(p) 2 loop
13:24:08
start mi2 range(NT) loop
13:24:08
finish mi2 range(NT) loop
13:24:08
start mi2 range(n) loop
13:24:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:24:08
start mi2 range(n) 2loop
13:24:08
finish mi2 range(n) 2loop
13:24:08
[[-2.80141964]]
end mi2 loop
13:24:08
estep
13:24:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:24:25
start ppi1
13:24:25
start mi0
13:24:25
start mi0 range(p) 1 loop
13:24:25
finish mi0 range(p) 1 loop
13:24:25
start mi0 range(p) 2 loop
13:24:25
finish mi0 range(p) 2 loop
13:24:25
start mi0 range(NT) loop
13:24:25
finish mi0 range(NT) loop
13:24:25
start mi0 range(n) loop
13:24:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:24:26
start mi0 range(n) 2loop
13:24:26
finish mi0 range(n) 2loop
13:24:26
start mi1
13:24:26
start mi1 range(p) 1 loop
13:24:26
finish mi1 range(p) 1 loop
13:24:26
start mi1 range(p) 2 loop
13:24:26
finish mi1 range(p) 2 loop
13:24:26
start mi1 range(NT) loop
13:24:26
finish mi1 range(NT) loop
13:24:26
start mi1 range(n) loop
13:24:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:24:26
start mi1 range(n) 2loop
13:24:26
finish mi1 range(n) 2loop
13:24:26
[[-2.86386485]]
end mi1 loop
13:24:26
estep
13:24:26
end estep
13:24:43
end pa13:24:43
goodness of fit correlation [0.30334321]
start cluster 13:24:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42696 instead
  warnings.warn(
28
parallel submitted
13:25:08
parallel finished
13:30:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:30:41
start mi0
13:30:41
start mi0 range(p) 1 loop
13:30:41
finish mi0 range(p) 1 loop
13:30:41
start mi0 range(p) 2 loop
13:30:41
finish mi0 range(p) 2 loop
13:30:41
start mi0 range(NT) loop
13:30:41
finish mi0 range(NT) loop
13:30:41
start mi0 range(n) loop
13:30:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:30:42
start mi0 range(n) 2loop
13:30:42
finish mi0 range(n) 2loop
13:30:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:30:42
start mi1 range(p) 1 loop
13:30:42
finish mi1 range(p) 1 loop
13:30:42
start mi1 range(p) 2 loop
13:30:42
finish mi1 range(p) 2 loop
13:30:42
start mi1 range(NT) loop
13:30:42
finish mi1 range(NT) loop
13:30:42
start mi1 range(n) loop
13:30:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:30:42
start mi1 range(n) 2loop
13:30:42
finish mi1 range(n) 2loop
13:30:42
start mi2
13:30:42
start mi2 range(p) 1 loop
13:30:42
finish mi2 range(p) 1 loop
13:30:42
start mi2 range(p) 2 loop
13:30:42
finish mi2 range(p) 2 loop
13:30:42
start mi2 range(NT) loop
13:30:42
finish mi2 range(NT) loop
13:30:42
start mi2 range(n) loop
13:30:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:30:42
start mi2 range(n) 2loop
13:30:42
finish mi2 range(n) 2loop
13:30:42
[[-2.78494749]]
end mi2 loop
13:30:42
estep
13:30:42
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:31:01
start ppi1
13:31:01
start mi0
13:31:01
start mi0 range(p) 1 loop
13:31:01
finish mi0 range(p) 1 loop
13:31:01
start mi0 range(p) 2 loop
13:31:01
finish mi0 range(p) 2 loop
13:31:01
start mi0 range(NT) loop
13:31:01
finish mi0 range(NT) loop
13:31:01
start mi0 range(n) loop
13:31:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:31:01
start mi0 range(n) 2loop
13:31:01
finish mi0 range(n) 2loop
13:31:02
start mi1
13:31:02
start mi1 range(p) 1 loop
13:31:02
finish mi1 range(p) 1 loop
13:31:02
start mi1 range(p) 2 loop
13:31:02
finish mi1 range(p) 2 loop
13:31:02
start mi1 range(NT) loop
13:31:02
finish mi1 range(NT) loop
13:31:02
start mi1 range(n) loop
13:31:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:31:02
start mi1 range(n) 2loop
13:31:02
finish mi1 range(n) 2loop
13:31:02
start mi2
13:31:02
start mi2 range(p) 1 loop
13:31:02
finish mi2 range(p) 1 loop
13:31:02
start mi2 range(p) 2 loop
13:31:02
finish mi2 range(p) 2 loop
13:31:02
start mi2 range(NT) loop
13:31:02
finish mi2 range(NT) loop
13:31:02
start mi2 range(n) loop
13:31:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:31:02
start mi2 range(n) 2loop
13:31:02
finish mi2 range(n) 2loop
13:31:02
[[-2.84743957]]
end mi2 loop
13:31:02
estep
13:31:02
end estep
13:31:19
end pa13:31:19
goodness of fit correlation [0.11248938]
0.3080815692525431
[5.43876112e-01 5.19077917e-01 5.50446831e-01 5.07374162e-01
 5.12147415e-01 5.97299919e-01 5.66897410e-01 5.79535438e-01
 5.44630733e-01 6.45465765e-01 5.28794445e-01 5.42838106e-01
 5.45558725e-01 5.39877010e-01 5.20627137e-01 5.46459684e-01
 5.79494227e-01 4.91822120e-01 5.22807419e-01 5.25041215e-01
 5.79613286e-01 5.67934373e-01 5.22400491e-01 6.00486619e-01
 5.20916112e-01 5.79740473e-01 5.28690891e-01 5.46380927e-01
 6.19535096e-01 6.19870972e-01 5.14498628e-01 5.03476746e-01
 5.11333548e-01 5.62821868e-01 5.37939704e-01 5.52029518e-01
 5.52797406e-01 5.40327427e-01 5.09000786e-01 5.50109935e-01
 5.81189670e-01 5.67314492e-01 5.78063777e-01 5.63758589e-01
 5.20715961e-01 4.99951168e-01 5.23070090e-01 6.18192711e-01
 5.28594180e-01 5.63970839e-01 5.68247365e-01 4.93943296e-01
 5.39174132e-01 5.16110071e-01 5.80368216e-01 5.88580241e-01
 5.06093336e-01 5.47252755e-01 5.24124399e-01 6.16274126e-01
 5.22869721e-01 5.67734240e-01 5.80828954e-01 5.77933646e-01
 5.10950663e-01 5.06824552e-01 5.12221082e-01 6.45776298e-01
 3.55995310e-01 3.50852661e-01 3.30864540e-01 3.69427181e-01
 3.16312300e-01 3.52007684e-01 3.32108929e-01 3.43139360e-01
 3.58448122e-01 3.32845794e-01 3.52371299e-01 3.41295243e-01
 3.61144340e-01 3.31550075e-01 3.60283558e-01 3.60419955e-01
 3.46296850e-01 3.43937810e-01 3.63307796e-01 3.52526848e-01
 3.40102257e-01 3.56243034e-01 3.37200380e-01 3.36042196e-01
 3.54596342e-01 3.47290548e-01 3.15279100e-01 3.27208349e-01
 3.45944375e-01 3.39224937e-01 3.67870687e-01 3.18161593e-01
 3.52712531e-01 3.43172097e-01 3.50893242e-01 3.56805017e-01
 3.31779703e-01 3.76481488e-01 3.36346125e-01 3.51706818e-01
 3.30434225e-01 3.51411516e-01 3.64046342e-01 3.52592733e-01
 3.38780302e-01 3.23414292e-01 3.45792130e-01 3.34703335e-01
 3.60322626e-01 3.58163590e-01 3.63782074e-01 2.87356437e-01
 3.64454868e-01 3.39694290e-01 3.42580034e-01 3.45785180e-01
 3.45647633e-01 3.38466992e-01 3.64676451e-01 3.43490795e-01
 3.16202413e-01 3.28743673e-01 3.50026243e-01 3.40725855e-01
 3.42589503e-01 3.22516292e-01 3.44333016e-01 3.33726902e-01
 1.46619402e+00 1.01003507e-03]
start cluster 13:31:19
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44447 instead
  warnings.warn(
0
parallel submitted
13:31:43
parallel finished
13:34:55
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:35:10
start mi0
13:35:10
start mi0 range(p) 1 loop
13:35:10
finish mi0 range(p) 1 loop
13:35:10
start mi0 range(p) 2 loop
13:35:10
finish mi0 range(p) 2 loop
13:35:10
start mi0 range(NT) loop
13:35:10
finish mi0 range(NT) loop
13:35:10
start mi0 range(n) loop
13:35:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:35:10
start mi0 range(n) 2loop
13:35:10
finish mi0 range(n) 2loop
13:35:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:35:10
start mi1 range(p) 1 loop
13:35:10
finish mi1 range(p) 1 loop
13:35:10
start mi1 range(p) 2 loop
13:35:10
finish mi1 range(p) 2 loop
13:35:10
start mi1 range(NT) loop
13:35:10
finish mi1 range(NT) loop
13:35:10
start mi1 range(n) loop
13:35:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:35:10
start mi1 range(n) 2loop
13:35:10
finish mi1 range(n) 2loop
13:35:10
start mi2
13:35:10
start mi2 range(p) 1 loop
13:35:10
finish mi2 range(p) 1 loop
13:35:10
start mi2 range(p) 2 loop
13:35:10
finish mi2 range(p) 2 loop
13:35:10
start mi2 range(NT) loop
13:35:11
finish mi2 range(NT) loop
13:35:11
start mi2 range(n) loop
13:35:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:35:11
start mi2 range(n) 2loop
13:35:11
finish mi2 range(n) 2loop
13:35:11
start mi3
13:35:11
start mi3 range(p) 1 loop
13:35:11
finish mi3 range(p) 1 loop
13:35:11
start mi3 range(p) 2 loop
13:35:11
finish mi3 range(p) 2 loop
13:35:11
start mi3 range(NT) loop
13:35:11
finish mi3 range(NT) loop
13:35:11
start mi3 range(n) loop
13:35:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:35:11
start mi3 range(n) 2loop
13:35:11
finish mi3 range(n) 2loop
13:35:11
[[-2.45806723]]
end mi3 loop
13:35:11
estep
13:35:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:35:28
start ppi1
13:35:28
start mi0
13:35:28
start mi0 range(p) 1 loop
13:35:28
finish mi0 range(p) 1 loop
13:35:28
start mi0 range(p) 2 loop
13:35:28
finish mi0 range(p) 2 loop
13:35:28
start mi0 range(NT) loop
13:35:29
finish mi0 range(NT) loop
13:35:29
start mi0 range(n) loop
13:35:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:35:29
start mi0 range(n) 2loop
13:35:29
finish mi0 range(n) 2loop
13:35:29
start mi1
13:35:29
start mi1 range(p) 1 loop
13:35:29
finish mi1 range(p) 1 loop
13:35:29
start mi1 range(p) 2 loop
13:35:29
finish mi1 range(p) 2 loop
13:35:29
start mi1 range(NT) loop
13:35:29
finish mi1 range(NT) loop
13:35:29
start mi1 range(n) loop
13:35:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:35:29
start mi1 range(n) 2loop
13:35:29
finish mi1 range(n) 2loop
13:35:29
start mi2
13:35:29
start mi2 range(p) 1 loop
13:35:29
finish mi2 range(p) 1 loop
13:35:29
start mi2 range(p) 2 loop
13:35:29
finish mi2 range(p) 2 loop
13:35:29
start mi2 range(NT) loop
13:35:29
finish mi2 range(NT) loop
13:35:29
start mi2 range(n) loop
13:35:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:35:30
start mi2 range(n) 2loop
13:35:30
finish mi2 range(n) 2loop
13:35:30
start mi3
13:35:30
start mi3 range(p) 1 loop
13:35:30
finish mi3 range(p) 1 loop
13:35:30
start mi3 range(p) 2 loop
13:35:30
finish mi3 range(p) 2 loop
13:35:30
start mi3 range(NT) loop
13:35:30
finish mi3 range(NT) loop
13:35:30
start mi3 range(n) loop
13:35:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:35:30
start mi3 range(n) 2loop
13:35:30
finish mi3 range(n) 2loop
13:35:30
[[-2.45806723]]
end mi3 loop
13:35:30
estep
13:35:30
end estep
13:35:47
end pa13:35:47
goodness of fit correlation [0.05343331]
start cluster 13:35:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42092 instead
  warnings.warn(
1
parallel submitted
13:36:13
parallel finished
13:41:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:42:05
start mi0
13:42:05
start mi0 range(p) 1 loop
13:42:05
finish mi0 range(p) 1 loop
13:42:05
start mi0 range(p) 2 loop
13:42:05
finish mi0 range(p) 2 loop
13:42:05
start mi0 range(NT) loop
13:42:05
finish mi0 range(NT) loop
13:42:05
start mi0 range(n) loop
13:42:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:42:05
start mi0 range(n) 2loop
13:42:05
finish mi0 range(n) 2loop
13:42:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:42:05
start mi1 range(p) 1 loop
13:42:05
finish mi1 range(p) 1 loop
13:42:05
start mi1 range(p) 2 loop
13:42:05
finish mi1 range(p) 2 loop
13:42:05
start mi1 range(NT) loop
13:42:05
finish mi1 range(NT) loop
13:42:05
start mi1 range(n) loop
13:42:05
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:42:05
start mi1 range(n) 2loop
13:42:05
finish mi1 range(n) 2loop
13:42:06
start mi2
13:42:06
start mi2 range(p) 1 loop
13:42:06
finish mi2 range(p) 1 loop
13:42:06
start mi2 range(p) 2 loop
13:42:06
finish mi2 range(p) 2 loop
13:42:06
start mi2 range(NT) loop
13:42:06
finish mi2 range(NT) loop
13:42:06
start mi2 range(n) loop
13:42:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:42:06
start mi2 range(n) 2loop
13:42:06
finish mi2 range(n) 2loop
13:42:06
start mi3
13:42:06
start mi3 range(p) 1 loop
13:42:06
finish mi3 range(p) 1 loop
13:42:06
start mi3 range(p) 2 loop
13:42:06
finish mi3 range(p) 2 loop
13:42:06
start mi3 range(NT) loop
13:42:06
finish mi3 range(NT) loop
13:42:06
start mi3 range(n) loop
13:42:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:42:06
start mi3 range(n) 2loop
13:42:06
finish mi3 range(n) 2loop
13:42:06
[[-2.4673306]]
end mi3 loop
13:42:06
estep
13:42:06
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:42:23
start ppi1
13:42:23
start mi0
13:42:23
start mi0 range(p) 1 loop
13:42:23
finish mi0 range(p) 1 loop
13:42:23
start mi0 range(p) 2 loop
13:42:23
finish mi0 range(p) 2 loop
13:42:23
start mi0 range(NT) loop
13:42:23
finish mi0 range(NT) loop
13:42:24
start mi0 range(n) loop
13:42:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:42:24
start mi0 range(n) 2loop
13:42:24
finish mi0 range(n) 2loop
13:42:24
start mi1
13:42:24
start mi1 range(p) 1 loop
13:42:24
finish mi1 range(p) 1 loop
13:42:24
start mi1 range(p) 2 loop
13:42:24
finish mi1 range(p) 2 loop
13:42:24
start mi1 range(NT) loop
13:42:24
finish mi1 range(NT) loop
13:42:24
start mi1 range(n) loop
13:42:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:42:24
start mi1 range(n) 2loop
13:42:24
finish mi1 range(n) 2loop
13:42:24
start mi2
13:42:24
start mi2 range(p) 1 loop
13:42:24
finish mi2 range(p) 1 loop
13:42:24
start mi2 range(p) 2 loop
13:42:24
finish mi2 range(p) 2 loop
13:42:24
start mi2 range(NT) loop
13:42:24
finish mi2 range(NT) loop
13:42:24
start mi2 range(n) loop
13:42:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:42:24
start mi2 range(n) 2loop
13:42:24
finish mi2 range(n) 2loop
13:42:24
[[-2.52978986]]
end mi2 loop
13:42:24
estep
13:42:24
end estep
13:42:41
end pa13:42:41
goodness of fit correlation [0.17872974]
start cluster 13:42:41
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36678 instead
  warnings.warn(
2
parallel submitted
13:43:07
parallel finished
13:47:23
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:47:39
start mi0
13:47:39
start mi0 range(p) 1 loop
13:47:39
finish mi0 range(p) 1 loop
13:47:39
start mi0 range(p) 2 loop
13:47:39
finish mi0 range(p) 2 loop
13:47:39
start mi0 range(NT) loop
13:47:40
finish mi0 range(NT) loop
13:47:40
start mi0 range(n) loop
13:47:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:47:40
start mi0 range(n) 2loop
13:47:40
finish mi0 range(n) 2loop
13:47:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:47:40
start mi1 range(p) 1 loop
13:47:40
finish mi1 range(p) 1 loop
13:47:40
start mi1 range(p) 2 loop
13:47:40
finish mi1 range(p) 2 loop
13:47:40
start mi1 range(NT) loop
13:47:40
finish mi1 range(NT) loop
13:47:40
start mi1 range(n) loop
13:47:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:47:40
start mi1 range(n) 2loop
13:47:40
finish mi1 range(n) 2loop
13:47:40
start mi2
13:47:40
start mi2 range(p) 1 loop
13:47:40
finish mi2 range(p) 1 loop
13:47:40
start mi2 range(p) 2 loop
13:47:40
finish mi2 range(p) 2 loop
13:47:40
start mi2 range(NT) loop
13:47:40
finish mi2 range(NT) loop
13:47:40
start mi2 range(n) loop
13:47:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:47:40
start mi2 range(n) 2loop
13:47:40
finish mi2 range(n) 2loop
13:47:40
[[-2.52008507]]
end mi2 loop
13:47:40
estep
13:47:40
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:47:58
start ppi1
13:47:58
start mi0
13:47:58
start mi0 range(p) 1 loop
13:47:58
finish mi0 range(p) 1 loop
13:47:58
start mi0 range(p) 2 loop
13:47:58
finish mi0 range(p) 2 loop
13:47:58
start mi0 range(NT) loop
13:47:58
finish mi0 range(NT) loop
13:47:58
start mi0 range(n) loop
13:47:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:47:58
start mi0 range(n) 2loop
13:47:58
finish mi0 range(n) 2loop
13:47:58
start mi1
13:47:58
start mi1 range(p) 1 loop
13:47:58
finish mi1 range(p) 1 loop
13:47:58
start mi1 range(p) 2 loop
13:47:58
finish mi1 range(p) 2 loop
13:47:58
start mi1 range(NT) loop
13:47:58
finish mi1 range(NT) loop
13:47:58
start mi1 range(n) loop
13:47:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:47:58
start mi1 range(n) 2loop
13:47:58
finish mi1 range(n) 2loop
13:47:58
start mi2
13:47:58
start mi2 range(p) 1 loop
13:47:58
finish mi2 range(p) 1 loop
13:47:58
start mi2 range(p) 2 loop
13:47:58
finish mi2 range(p) 2 loop
13:47:58
start mi2 range(NT) loop
13:47:58
finish mi2 range(NT) loop
13:47:58
start mi2 range(n) loop
13:47:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:47:59
start mi2 range(n) 2loop
13:47:59
finish mi2 range(n) 2loop
13:47:59
[[-2.58260412]]
end mi2 loop
13:47:59
estep
13:47:59
end estep
13:48:16
end pa13:48:16
goodness of fit correlation [0.21973249]
start cluster 13:48:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42617 instead
  warnings.warn(
3
parallel submitted
13:48:43
slurmstepd: error: *** JOB 1825845 ON nodeb23 CANCELLED AT 2020-11-06T13:53:19 ***
