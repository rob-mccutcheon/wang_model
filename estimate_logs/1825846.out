17
subject 1022_01_MR
start cluster 09:36:17
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40362 instead
  warnings.warn(
0
parallel submitted
09:36:34
parallel finished
09:43:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:43:07
start mi0
09:43:07
start mi0 range(p) 1 loop
09:43:07
finish mi0 range(p) 1 loop
09:43:07
start mi0 range(p) 2 loop
09:43:07
finish mi0 range(p) 2 loop
09:43:07
start mi0 range(NT) loop
09:43:07
finish mi0 range(NT) loop
09:43:07
start mi0 range(n) loop
09:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:43:07
start mi0 range(n) 2loop
09:43:07
finish mi0 range(n) 2loop
09:43:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:43:07
start mi1 range(p) 1 loop
09:43:07
finish mi1 range(p) 1 loop
09:43:07
start mi1 range(p) 2 loop
09:43:07
finish mi1 range(p) 2 loop
09:43:07
start mi1 range(NT) loop
09:43:07
finish mi1 range(NT) loop
09:43:07
start mi1 range(n) loop
09:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:43:07
start mi1 range(n) 2loop
09:43:07
finish mi1 range(n) 2loop
09:43:07
start mi2
09:43:07
start mi2 range(p) 1 loop
09:43:07
finish mi2 range(p) 1 loop
09:43:07
start mi2 range(p) 2 loop
09:43:07
finish mi2 range(p) 2 loop
09:43:07
start mi2 range(NT) loop
09:43:07
finish mi2 range(NT) loop
09:43:07
start mi2 range(n) loop
09:43:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:43:07
start mi2 range(n) 2loop
09:43:07
finish mi2 range(n) 2loop
09:43:08
start mi3
09:43:08
start mi3 range(p) 1 loop
09:43:08
finish mi3 range(p) 1 loop
09:43:08
start mi3 range(p) 2 loop
09:43:08
finish mi3 range(p) 2 loop
09:43:08
start mi3 range(NT) loop
09:43:08
finish mi3 range(NT) loop
09:43:08
start mi3 range(n) loop
09:43:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:43:08
start mi3 range(n) 2loop
09:43:08
finish mi3 range(n) 2loop
09:43:08
[[-2.18876112]]
end mi3 loop
09:43:08
estep
09:43:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:43:24
start ppi1
09:43:24
start mi0
09:43:24
start mi0 range(p) 1 loop
09:43:24
finish mi0 range(p) 1 loop
09:43:24
start mi0 range(p) 2 loop
09:43:24
finish mi0 range(p) 2 loop
09:43:24
start mi0 range(NT) loop
09:43:24
finish mi0 range(NT) loop
09:43:24
start mi0 range(n) loop
09:43:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:43:24
start mi0 range(n) 2loop
09:43:24
finish mi0 range(n) 2loop
09:43:24
start mi1
09:43:25
start mi1 range(p) 1 loop
09:43:25
finish mi1 range(p) 1 loop
09:43:25
start mi1 range(p) 2 loop
09:43:25
finish mi1 range(p) 2 loop
09:43:25
start mi1 range(NT) loop
09:43:25
finish mi1 range(NT) loop
09:43:25
start mi1 range(n) loop
09:43:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:43:25
start mi1 range(n) 2loop
09:43:25
finish mi1 range(n) 2loop
09:43:25
start mi2
09:43:25
start mi2 range(p) 1 loop
09:43:25
finish mi2 range(p) 1 loop
09:43:25
start mi2 range(p) 2 loop
09:43:25
finish mi2 range(p) 2 loop
09:43:25
start mi2 range(NT) loop
09:43:25
finish mi2 range(NT) loop
09:43:25
start mi2 range(n) loop
09:43:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:43:25
start mi2 range(n) 2loop
09:43:25
finish mi2 range(n) 2loop
09:43:25
start mi3
09:43:25
start mi3 range(p) 1 loop
09:43:25
finish mi3 range(p) 1 loop
09:43:25
start mi3 range(p) 2 loop
09:43:25
finish mi3 range(p) 2 loop
09:43:25
start mi3 range(NT) loop
09:43:25
finish mi3 range(NT) loop
09:43:25
start mi3 range(n) loop
09:43:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:43:25
start mi3 range(n) 2loop
09:43:25
finish mi3 range(n) 2loop
09:43:25
[[-2.18876112]]
end mi3 loop
09:43:25
estep
09:43:25
end estep
09:43:42
end pa09:43:42
goodness of fit correlation [0.05534866]
start cluster 09:43:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45181 instead
  warnings.warn(
1
parallel submitted
09:43:59
parallel finished
09:49:44
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:49:49
start mi0
09:49:49
start mi0 range(p) 1 loop
09:49:49
finish mi0 range(p) 1 loop
09:49:49
start mi0 range(p) 2 loop
09:49:49
finish mi0 range(p) 2 loop
09:49:49
start mi0 range(NT) loop
09:49:49
finish mi0 range(NT) loop
09:49:49
start mi0 range(n) loop
09:49:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:49:49
start mi0 range(n) 2loop
09:49:49
finish mi0 range(n) 2loop
09:49:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:49:49
start mi1 range(p) 1 loop
09:49:49
finish mi1 range(p) 1 loop
09:49:49
start mi1 range(p) 2 loop
09:49:49
finish mi1 range(p) 2 loop
09:49:49
start mi1 range(NT) loop
09:49:49
finish mi1 range(NT) loop
09:49:49
start mi1 range(n) loop
09:49:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:49:49
start mi1 range(n) 2loop
09:49:49
finish mi1 range(n) 2loop
09:49:49
start mi2
09:49:49
start mi2 range(p) 1 loop
09:49:49
finish mi2 range(p) 1 loop
09:49:49
start mi2 range(p) 2 loop
09:49:49
finish mi2 range(p) 2 loop
09:49:49
start mi2 range(NT) loop
09:49:49
finish mi2 range(NT) loop
09:49:49
start mi2 range(n) loop
09:49:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:49:49
start mi2 range(n) 2loop
09:49:49
finish mi2 range(n) 2loop
09:49:50
start mi3
09:49:50
start mi3 range(p) 1 loop
09:49:50
finish mi3 range(p) 1 loop
09:49:50
start mi3 range(p) 2 loop
09:49:50
finish mi3 range(p) 2 loop
09:49:50
start mi3 range(NT) loop
09:49:50
finish mi3 range(NT) loop
09:49:50
start mi3 range(n) loop
09:49:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:49:50
start mi3 range(n) 2loop
09:49:50
finish mi3 range(n) 2loop
09:49:50
[[-2.1935707]]
end mi3 loop
09:49:50
estep
09:49:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:50:07
start ppi1
09:50:07
start mi0
09:50:07
start mi0 range(p) 1 loop
09:50:07
finish mi0 range(p) 1 loop
09:50:07
start mi0 range(p) 2 loop
09:50:07
finish mi0 range(p) 2 loop
09:50:07
start mi0 range(NT) loop
09:50:07
finish mi0 range(NT) loop
09:50:07
start mi0 range(n) loop
09:50:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:50:07
start mi0 range(n) 2loop
09:50:07
finish mi0 range(n) 2loop
09:50:07
start mi1
09:50:07
start mi1 range(p) 1 loop
09:50:07
finish mi1 range(p) 1 loop
09:50:07
start mi1 range(p) 2 loop
09:50:07
finish mi1 range(p) 2 loop
09:50:07
start mi1 range(NT) loop
09:50:07
finish mi1 range(NT) loop
09:50:07
start mi1 range(n) loop
09:50:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:50:07
start mi1 range(n) 2loop
09:50:07
finish mi1 range(n) 2loop
09:50:08
start mi2
09:50:08
start mi2 range(p) 1 loop
09:50:08
finish mi2 range(p) 1 loop
09:50:08
start mi2 range(p) 2 loop
09:50:08
finish mi2 range(p) 2 loop
09:50:08
start mi2 range(NT) loop
09:50:08
finish mi2 range(NT) loop
09:50:08
start mi2 range(n) loop
09:50:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:50:08
start mi2 range(n) 2loop
09:50:08
finish mi2 range(n) 2loop
09:50:08
start mi3
09:50:08
start mi3 range(p) 1 loop
09:50:08
finish mi3 range(p) 1 loop
09:50:08
start mi3 range(p) 2 loop
09:50:08
finish mi3 range(p) 2 loop
09:50:08
start mi3 range(NT) loop
09:50:08
finish mi3 range(NT) loop
09:50:08
start mi3 range(n) loop
09:50:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:50:08
start mi3 range(n) 2loop
09:50:08
finish mi3 range(n) 2loop
09:50:09
[[-2.25606667]]
end mi3 loop
09:50:09
estep
09:50:09
end estep
09:50:25
end pa09:50:25
goodness of fit correlation [0.17413814]
start cluster 09:50:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44719 instead
  warnings.warn(
2
parallel submitted
09:50:42
parallel finished
09:57:22
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
09:57:26
start mi0
09:57:26
start mi0 range(p) 1 loop
09:57:26
finish mi0 range(p) 1 loop
09:57:26
start mi0 range(p) 2 loop
09:57:26
finish mi0 range(p) 2 loop
09:57:26
start mi0 range(NT) loop
09:57:26
finish mi0 range(NT) loop
09:57:26
start mi0 range(n) loop
09:57:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
09:57:26
start mi0 range(n) 2loop
09:57:26
finish mi0 range(n) 2loop
09:57:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
09:57:26
start mi1 range(p) 1 loop
09:57:26
finish mi1 range(p) 1 loop
09:57:26
start mi1 range(p) 2 loop
09:57:26
finish mi1 range(p) 2 loop
09:57:26
start mi1 range(NT) loop
09:57:26
finish mi1 range(NT) loop
09:57:26
start mi1 range(n) loop
09:57:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
09:57:26
start mi1 range(n) 2loop
09:57:26
finish mi1 range(n) 2loop
09:57:26
start mi2
09:57:26
start mi2 range(p) 1 loop
09:57:26
finish mi2 range(p) 1 loop
09:57:26
start mi2 range(p) 2 loop
09:57:26
finish mi2 range(p) 2 loop
09:57:26
start mi2 range(NT) loop
09:57:26
finish mi2 range(NT) loop
09:57:26
start mi2 range(n) loop
09:57:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
09:57:26
start mi2 range(n) 2loop
09:57:26
finish mi2 range(n) 2loop
09:57:26
start mi3
09:57:26
start mi3 range(p) 1 loop
09:57:26
finish mi3 range(p) 1 loop
09:57:26
start mi3 range(p) 2 loop
09:57:26
finish mi3 range(p) 2 loop
09:57:26
start mi3 range(NT) loop
09:57:26
finish mi3 range(NT) loop
09:57:26
start mi3 range(n) loop
09:57:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
09:57:26
start mi3 range(n) 2loop
09:57:26
finish mi3 range(n) 2loop
09:57:27
[[-2.27937548]]
end mi3 loop
09:57:27
estep
09:57:27
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
09:57:43
start ppi1
09:57:43
start mi0
09:57:43
start mi0 range(p) 1 loop
09:57:43
finish mi0 range(p) 1 loop
09:57:43
start mi0 range(p) 2 loop
09:57:43
finish mi0 range(p) 2 loop
09:57:43
start mi0 range(NT) loop
09:57:43
finish mi0 range(NT) loop
09:57:43
start mi0 range(n) loop
09:57:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
09:57:43
start mi0 range(n) 2loop
09:57:43
finish mi0 range(n) 2loop
09:57:43
start mi1
09:57:43
start mi1 range(p) 1 loop
09:57:43
finish mi1 range(p) 1 loop
09:57:43
start mi1 range(p) 2 loop
09:57:43
finish mi1 range(p) 2 loop
09:57:43
start mi1 range(NT) loop
09:57:43
finish mi1 range(NT) loop
09:57:43
start mi1 range(n) loop
09:57:43
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
09:57:44
start mi1 range(n) 2loop
09:57:44
finish mi1 range(n) 2loop
09:57:44
start mi2
09:57:44
start mi2 range(p) 1 loop
09:57:44
finish mi2 range(p) 1 loop
09:57:44
start mi2 range(p) 2 loop
09:57:44
finish mi2 range(p) 2 loop
09:57:44
start mi2 range(NT) loop
09:57:44
finish mi2 range(NT) loop
09:57:44
start mi2 range(n) loop
09:57:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
09:57:44
start mi2 range(n) 2loop
09:57:44
finish mi2 range(n) 2loop
09:57:44
start mi3
09:57:44
start mi3 range(p) 1 loop
09:57:44
finish mi3 range(p) 1 loop
09:57:44
start mi3 range(p) 2 loop
09:57:44
finish mi3 range(p) 2 loop
09:57:44
start mi3 range(NT) loop
09:57:44
finish mi3 range(NT) loop
09:57:44
start mi3 range(n) loop
09:57:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
09:57:44
start mi3 range(n) 2loop
09:57:44
finish mi3 range(n) 2loop
09:57:44
[[-2.34186813]]
end mi3 loop
09:57:44
estep
09:57:44
end estep
09:58:00
end pa09:58:00
goodness of fit correlation [0.2094028]
start cluster 09:58:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45328 instead
  warnings.warn(
3
parallel submitted
09:58:17
parallel finished
10:05:26
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:05:29
start mi0
10:05:29
start mi0 range(p) 1 loop
10:05:29
finish mi0 range(p) 1 loop
10:05:29
start mi0 range(p) 2 loop
10:05:29
finish mi0 range(p) 2 loop
10:05:29
start mi0 range(NT) loop
10:05:29
finish mi0 range(NT) loop
10:05:29
start mi0 range(n) loop
10:05:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:05:29
start mi0 range(n) 2loop
10:05:29
finish mi0 range(n) 2loop
10:05:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:05:29
start mi1 range(p) 1 loop
10:05:29
finish mi1 range(p) 1 loop
10:05:29
start mi1 range(p) 2 loop
10:05:29
finish mi1 range(p) 2 loop
10:05:29
start mi1 range(NT) loop
10:05:29
finish mi1 range(NT) loop
10:05:29
start mi1 range(n) loop
10:05:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:05:29
start mi1 range(n) 2loop
10:05:29
finish mi1 range(n) 2loop
10:05:30
start mi2
10:05:30
start mi2 range(p) 1 loop
10:05:30
finish mi2 range(p) 1 loop
10:05:30
start mi2 range(p) 2 loop
10:05:30
finish mi2 range(p) 2 loop
10:05:30
start mi2 range(NT) loop
10:05:30
finish mi2 range(NT) loop
10:05:30
start mi2 range(n) loop
10:05:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:05:30
start mi2 range(n) 2loop
10:05:30
finish mi2 range(n) 2loop
10:05:30
start mi3
10:05:30
start mi3 range(p) 1 loop
10:05:30
finish mi3 range(p) 1 loop
10:05:30
start mi3 range(p) 2 loop
10:05:30
finish mi3 range(p) 2 loop
10:05:30
start mi3 range(NT) loop
10:05:30
finish mi3 range(NT) loop
10:05:30
start mi3 range(n) loop
10:05:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:05:30
start mi3 range(n) 2loop
10:05:30
finish mi3 range(n) 2loop
10:05:30
[[-2.28785747]]
end mi3 loop
10:05:30
estep
10:05:30
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:05:46
start ppi1
10:05:46
start mi0
10:05:46
start mi0 range(p) 1 loop
10:05:46
finish mi0 range(p) 1 loop
10:05:46
start mi0 range(p) 2 loop
10:05:46
finish mi0 range(p) 2 loop
10:05:46
start mi0 range(NT) loop
10:05:46
finish mi0 range(NT) loop
10:05:46
start mi0 range(n) loop
10:05:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:05:46
start mi0 range(n) 2loop
10:05:46
finish mi0 range(n) 2loop
10:05:46
start mi1
10:05:46
start mi1 range(p) 1 loop
10:05:46
finish mi1 range(p) 1 loop
10:05:46
start mi1 range(p) 2 loop
10:05:46
finish mi1 range(p) 2 loop
10:05:46
start mi1 range(NT) loop
10:05:47
finish mi1 range(NT) loop
10:05:47
start mi1 range(n) loop
10:05:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:05:47
start mi1 range(n) 2loop
10:05:47
finish mi1 range(n) 2loop
10:05:47
start mi2
10:05:47
start mi2 range(p) 1 loop
10:05:47
finish mi2 range(p) 1 loop
10:05:47
start mi2 range(p) 2 loop
10:05:47
finish mi2 range(p) 2 loop
10:05:47
start mi2 range(NT) loop
10:05:47
finish mi2 range(NT) loop
10:05:47
start mi2 range(n) loop
10:05:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:05:47
start mi2 range(n) 2loop
10:05:47
finish mi2 range(n) 2loop
10:05:47
start mi3
10:05:47
start mi3 range(p) 1 loop
10:05:47
finish mi3 range(p) 1 loop
10:05:47
start mi3 range(p) 2 loop
10:05:47
finish mi3 range(p) 2 loop
10:05:47
start mi3 range(NT) loop
10:05:47
finish mi3 range(NT) loop
10:05:47
start mi3 range(n) loop
10:05:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:05:47
start mi3 range(n) 2loop
10:05:47
finish mi3 range(n) 2loop
10:05:47
[[-2.35035001]]
end mi3 loop
10:05:47
estep
10:05:47
end estep
10:06:03
end pa10:06:03
goodness of fit correlation [0.16232192]
start cluster 10:06:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44168 instead
  warnings.warn(
4
parallel submitted
10:06:21
parallel finished
10:10:37
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:10:40
start mi0
10:10:40
start mi0 range(p) 1 loop
10:10:40
finish mi0 range(p) 1 loop
10:10:40
start mi0 range(p) 2 loop
10:10:40
finish mi0 range(p) 2 loop
10:10:40
start mi0 range(NT) loop
10:10:41
finish mi0 range(NT) loop
10:10:41
start mi0 range(n) loop
10:10:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:10:41
start mi0 range(n) 2loop
10:10:41
finish mi0 range(n) 2loop
10:10:41
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:10:41
start mi1 range(p) 1 loop
10:10:41
finish mi1 range(p) 1 loop
10:10:41
start mi1 range(p) 2 loop
10:10:41
finish mi1 range(p) 2 loop
10:10:41
start mi1 range(NT) loop
10:10:41
finish mi1 range(NT) loop
10:10:41
start mi1 range(n) loop
10:10:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:10:41
start mi1 range(n) 2loop
10:10:41
finish mi1 range(n) 2loop
10:10:41
start mi2
10:10:41
start mi2 range(p) 1 loop
10:10:41
finish mi2 range(p) 1 loop
10:10:41
start mi2 range(p) 2 loop
10:10:41
finish mi2 range(p) 2 loop
10:10:41
start mi2 range(NT) loop
10:10:41
finish mi2 range(NT) loop
10:10:41
start mi2 range(n) loop
10:10:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:10:41
start mi2 range(n) 2loop
10:10:41
finish mi2 range(n) 2loop
10:10:41
start mi3
10:10:41
start mi3 range(p) 1 loop
10:10:41
finish mi3 range(p) 1 loop
10:10:41
start mi3 range(p) 2 loop
10:10:41
finish mi3 range(p) 2 loop
10:10:41
start mi3 range(NT) loop
10:10:41
finish mi3 range(NT) loop
10:10:41
start mi3 range(n) loop
10:10:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:10:41
start mi3 range(n) 2loop
10:10:41
finish mi3 range(n) 2loop
10:10:41
[[-2.23857279]]
end mi3 loop
10:10:41
estep
10:10:41
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:10:57
start ppi1
10:10:57
start mi0
10:10:57
start mi0 range(p) 1 loop
10:10:57
finish mi0 range(p) 1 loop
10:10:57
start mi0 range(p) 2 loop
10:10:57
finish mi0 range(p) 2 loop
10:10:57
start mi0 range(NT) loop
10:10:57
finish mi0 range(NT) loop
10:10:57
start mi0 range(n) loop
10:10:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:10:57
start mi0 range(n) 2loop
10:10:57
finish mi0 range(n) 2loop
10:10:57
start mi1
10:10:57
start mi1 range(p) 1 loop
10:10:57
finish mi1 range(p) 1 loop
10:10:57
start mi1 range(p) 2 loop
10:10:57
finish mi1 range(p) 2 loop
10:10:57
start mi1 range(NT) loop
10:10:57
finish mi1 range(NT) loop
10:10:57
start mi1 range(n) loop
10:10:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:10:57
start mi1 range(n) 2loop
10:10:57
finish mi1 range(n) 2loop
10:10:58
start mi2
10:10:58
start mi2 range(p) 1 loop
10:10:58
finish mi2 range(p) 1 loop
10:10:58
start mi2 range(p) 2 loop
10:10:58
finish mi2 range(p) 2 loop
10:10:58
start mi2 range(NT) loop
10:10:58
finish mi2 range(NT) loop
10:10:58
start mi2 range(n) loop
10:10:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:10:58
start mi2 range(n) 2loop
10:10:58
finish mi2 range(n) 2loop
10:10:58
start mi3
10:10:58
start mi3 range(p) 1 loop
10:10:58
finish mi3 range(p) 1 loop
10:10:58
start mi3 range(p) 2 loop
10:10:58
finish mi3 range(p) 2 loop
10:10:58
start mi3 range(NT) loop
10:10:58
finish mi3 range(NT) loop
10:10:58
start mi3 range(n) loop
10:10:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:10:58
start mi3 range(n) 2loop
10:10:58
finish mi3 range(n) 2loop
10:10:58
[[-2.30106636]]
end mi3 loop
10:10:58
estep
10:10:58
end estep
10:11:13
end pa10:11:13
goodness of fit correlation [0.19278472]
start cluster 10:11:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40800 instead
  warnings.warn(
5
parallel submitted
10:11:30
parallel finished
10:20:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:20:06
start mi0
10:20:06
start mi0 range(p) 1 loop
10:20:06
finish mi0 range(p) 1 loop
10:20:06
start mi0 range(p) 2 loop
10:20:06
finish mi0 range(p) 2 loop
10:20:06
start mi0 range(NT) loop
10:20:06
finish mi0 range(NT) loop
10:20:06
start mi0 range(n) loop
10:20:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:20:06
start mi0 range(n) 2loop
10:20:06
finish mi0 range(n) 2loop
10:20:06
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:20:06
start mi1 range(p) 1 loop
10:20:06
finish mi1 range(p) 1 loop
10:20:06
start mi1 range(p) 2 loop
10:20:06
finish mi1 range(p) 2 loop
10:20:06
start mi1 range(NT) loop
10:20:06
finish mi1 range(NT) loop
10:20:06
start mi1 range(n) loop
10:20:06
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:20:06
start mi1 range(n) 2loop
10:20:06
finish mi1 range(n) 2loop
10:20:06
start mi2
10:20:06
start mi2 range(p) 1 loop
10:20:06
finish mi2 range(p) 1 loop
10:20:06
start mi2 range(p) 2 loop
10:20:06
finish mi2 range(p) 2 loop
10:20:06
start mi2 range(NT) loop
10:20:07
finish mi2 range(NT) loop
10:20:07
start mi2 range(n) loop
10:20:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:20:07
start mi2 range(n) 2loop
10:20:07
finish mi2 range(n) 2loop
10:20:07
start mi3
10:20:07
start mi3 range(p) 1 loop
10:20:07
finish mi3 range(p) 1 loop
10:20:07
start mi3 range(p) 2 loop
10:20:07
finish mi3 range(p) 2 loop
10:20:07
start mi3 range(NT) loop
10:20:07
finish mi3 range(NT) loop
10:20:07
start mi3 range(n) loop
10:20:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:20:07
start mi3 range(n) 2loop
10:20:07
finish mi3 range(n) 2loop
10:20:07
[[-2.26094597]]
end mi3 loop
10:20:07
estep
10:20:07
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:20:23
start ppi1
10:20:23
start mi0
10:20:23
start mi0 range(p) 1 loop
10:20:23
finish mi0 range(p) 1 loop
10:20:23
start mi0 range(p) 2 loop
10:20:23
finish mi0 range(p) 2 loop
10:20:23
start mi0 range(NT) loop
10:20:23
finish mi0 range(NT) loop
10:20:23
start mi0 range(n) loop
10:20:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:20:23
start mi0 range(n) 2loop
10:20:23
finish mi0 range(n) 2loop
10:20:23
start mi1
10:20:23
start mi1 range(p) 1 loop
10:20:23
finish mi1 range(p) 1 loop
10:20:23
start mi1 range(p) 2 loop
10:20:23
finish mi1 range(p) 2 loop
10:20:23
start mi1 range(NT) loop
10:20:23
finish mi1 range(NT) loop
10:20:23
start mi1 range(n) loop
10:20:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:20:23
start mi1 range(n) 2loop
10:20:23
finish mi1 range(n) 2loop
10:20:23
start mi2
10:20:23
start mi2 range(p) 1 loop
10:20:23
finish mi2 range(p) 1 loop
10:20:23
start mi2 range(p) 2 loop
10:20:23
finish mi2 range(p) 2 loop
10:20:23
start mi2 range(NT) loop
10:20:23
finish mi2 range(NT) loop
10:20:23
start mi2 range(n) loop
10:20:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:20:23
start mi2 range(n) 2loop
10:20:23
finish mi2 range(n) 2loop
10:20:24
start mi3
10:20:24
start mi3 range(p) 1 loop
10:20:24
finish mi3 range(p) 1 loop
10:20:24
start mi3 range(p) 2 loop
10:20:24
finish mi3 range(p) 2 loop
10:20:24
start mi3 range(NT) loop
10:20:24
finish mi3 range(NT) loop
10:20:24
start mi3 range(n) loop
10:20:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:20:24
start mi3 range(n) 2loop
10:20:24
finish mi3 range(n) 2loop
10:20:24
[[-2.32343893]]
end mi3 loop
10:20:24
estep
10:20:24
end estep
10:20:40
end pa10:20:40
goodness of fit correlation [0.25140768]
start cluster 10:20:40
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46331 instead
  warnings.warn(
6
parallel submitted
10:20:59
parallel finished
10:25:34
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:25:38
start mi0
10:25:38
start mi0 range(p) 1 loop
10:25:38
finish mi0 range(p) 1 loop
10:25:38
start mi0 range(p) 2 loop
10:25:38
finish mi0 range(p) 2 loop
10:25:38
start mi0 range(NT) loop
10:25:38
finish mi0 range(NT) loop
10:25:38
start mi0 range(n) loop
10:25:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:25:38
start mi0 range(n) 2loop
10:25:38
finish mi0 range(n) 2loop
10:25:39
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:25:39
start mi1 range(p) 1 loop
10:25:39
finish mi1 range(p) 1 loop
10:25:39
start mi1 range(p) 2 loop
10:25:39
finish mi1 range(p) 2 loop
10:25:39
start mi1 range(NT) loop
10:25:39
finish mi1 range(NT) loop
10:25:39
start mi1 range(n) loop
10:25:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:25:39
start mi1 range(n) 2loop
10:25:39
finish mi1 range(n) 2loop
10:25:39
start mi2
10:25:39
start mi2 range(p) 1 loop
10:25:39
finish mi2 range(p) 1 loop
10:25:39
start mi2 range(p) 2 loop
10:25:39
finish mi2 range(p) 2 loop
10:25:39
start mi2 range(NT) loop
10:25:39
finish mi2 range(NT) loop
10:25:39
start mi2 range(n) loop
10:25:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:25:39
start mi2 range(n) 2loop
10:25:39
finish mi2 range(n) 2loop
10:25:39
start mi3
10:25:39
start mi3 range(p) 1 loop
10:25:39
finish mi3 range(p) 1 loop
10:25:39
start mi3 range(p) 2 loop
10:25:39
finish mi3 range(p) 2 loop
10:25:39
start mi3 range(NT) loop
10:25:39
finish mi3 range(NT) loop
10:25:39
start mi3 range(n) loop
10:25:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:25:39
start mi3 range(n) 2loop
10:25:39
finish mi3 range(n) 2loop
10:25:39
[[-2.31248792]]
end mi3 loop
10:25:39
estep
10:25:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:25:55
start ppi1
10:25:55
start mi0
10:25:55
start mi0 range(p) 1 loop
10:25:55
finish mi0 range(p) 1 loop
10:25:55
start mi0 range(p) 2 loop
10:25:55
finish mi0 range(p) 2 loop
10:25:55
start mi0 range(NT) loop
10:25:55
finish mi0 range(NT) loop
10:25:55
start mi0 range(n) loop
10:25:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:25:56
start mi0 range(n) 2loop
10:25:56
finish mi0 range(n) 2loop
10:25:56
start mi1
10:25:56
start mi1 range(p) 1 loop
10:25:56
finish mi1 range(p) 1 loop
10:25:56
start mi1 range(p) 2 loop
10:25:56
finish mi1 range(p) 2 loop
10:25:56
start mi1 range(NT) loop
10:25:56
finish mi1 range(NT) loop
10:25:56
start mi1 range(n) loop
10:25:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:25:56
start mi1 range(n) 2loop
10:25:56
finish mi1 range(n) 2loop
10:25:56
start mi2
10:25:56
start mi2 range(p) 1 loop
10:25:56
finish mi2 range(p) 1 loop
10:25:56
start mi2 range(p) 2 loop
10:25:56
finish mi2 range(p) 2 loop
10:25:56
start mi2 range(NT) loop
10:25:56
finish mi2 range(NT) loop
10:25:56
start mi2 range(n) loop
10:25:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:25:56
start mi2 range(n) 2loop
10:25:56
finish mi2 range(n) 2loop
10:25:56
start mi3
10:25:56
start mi3 range(p) 1 loop
10:25:56
finish mi3 range(p) 1 loop
10:25:56
start mi3 range(p) 2 loop
10:25:56
finish mi3 range(p) 2 loop
10:25:56
start mi3 range(NT) loop
10:25:56
finish mi3 range(NT) loop
10:25:56
start mi3 range(n) loop
10:25:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:25:56
start mi3 range(n) 2loop
10:25:56
finish mi3 range(n) 2loop
10:25:56
[[-2.37498024]]
end mi3 loop
10:25:56
estep
10:25:56
end estep
10:26:13
end pa10:26:13
goodness of fit correlation [0.1450289]
0.25140767676411974
[5.12228195e-01 5.04074065e-01 5.27560148e-01 5.40976410e-01
 4.96591868e-01 5.16390684e-01 5.85679095e-01 5.05599939e-01
 5.10446605e-01 5.45242736e-01 5.01168545e-01 5.20146243e-01
 5.03893181e-01 5.32749223e-01 4.97411002e-01 5.34920398e-01
 5.29370469e-01 5.02160164e-01 5.10059316e-01 5.11367560e-01
 5.06068124e-01 5.11418298e-01 5.09840549e-01 4.98107421e-01
 4.91919398e-01 5.30259339e-01 5.12104965e-01 5.29776667e-01
 5.36324834e-01 5.76559254e-01 4.96373406e-01 4.96030906e-01
 5.13498693e-01 5.41727471e-01 5.01758928e-01 5.05004065e-01
 5.37306993e-01 5.50417863e-01 4.98343704e-01 5.17327148e-01
 6.03388843e-01 5.05732044e-01 5.19530551e-01 5.45665532e-01
 5.05218839e-01 5.33993082e-01 5.03615153e-01 5.10561758e-01
 5.08491965e-01 5.43267933e-01 5.22902382e-01 5.01378162e-01
 4.99834688e-01 5.36899163e-01 5.21799542e-01 5.26250877e-01
 5.15362999e-01 4.98774560e-01 5.00788265e-01 5.26529782e-01
 5.06821217e-01 5.32728854e-01 5.08958141e-01 5.37430416e-01
 5.01676812e-01 5.01603584e-01 4.96803800e-01 5.03524946e-01
 3.34943763e-01 3.23447881e-01 3.32145296e-01 3.86675856e-01
 2.98229445e-01 3.53606051e-01 3.61671651e-01 3.30336441e-01
 3.64053393e-01 3.56753652e-01 3.31131453e-01 3.86001793e-01
 3.24162006e-01 3.43241298e-01 3.11431088e-01 3.47291946e-01
 3.42168814e-01 3.10185020e-01 3.58999113e-01 3.75870305e-01
 3.38581577e-01 3.54468989e-01 3.50612493e-01 3.45276302e-01
 3.12739295e-01 3.37659989e-01 3.22943568e-01 3.45732048e-01
 3.68534942e-01 3.81075926e-01 2.96236959e-01 2.98722837e-01
 3.20908858e-01 3.65422942e-01 3.20405076e-01 3.34315594e-01
 3.39386060e-01 3.83292564e-01 3.05041188e-01 3.56120005e-01
 3.52695131e-01 3.26120392e-01 3.71393780e-01 3.72462239e-01
 3.31466180e-01 3.96722108e-01 3.21828766e-01 3.31903364e-01
 3.26077320e-01 3.43733531e-01 3.62749180e-01 3.12190006e-01
 3.47482147e-01 3.82799213e-01 3.37326182e-01 3.81764779e-01
 3.50484122e-01 3.43432753e-01 3.18790986e-01 3.37596552e-01
 3.20724128e-01 3.50625141e-01 3.50183380e-01 3.59683306e-01
 3.09485097e-01 3.02185796e-01 3.11118602e-01 3.52740010e-01
 1.45337064e+00 9.77818369e-04]
start cluster 10:26:13
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40122 instead
  warnings.warn(
0
parallel submitted
10:26:30
parallel finished
10:31:05
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:31:10
start mi0
10:31:10
start mi0 range(p) 1 loop
10:31:10
finish mi0 range(p) 1 loop
10:31:10
start mi0 range(p) 2 loop
10:31:10
finish mi0 range(p) 2 loop
10:31:10
start mi0 range(NT) loop
10:31:10
finish mi0 range(NT) loop
10:31:10
start mi0 range(n) loop
10:31:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:31:10
start mi0 range(n) 2loop
10:31:10
finish mi0 range(n) 2loop
10:31:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:31:10
start mi1 range(p) 1 loop
10:31:10
finish mi1 range(p) 1 loop
10:31:10
start mi1 range(p) 2 loop
10:31:10
finish mi1 range(p) 2 loop
10:31:10
start mi1 range(NT) loop
10:31:10
finish mi1 range(NT) loop
10:31:10
start mi1 range(n) loop
10:31:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:31:10
start mi1 range(n) 2loop
10:31:10
finish mi1 range(n) 2loop
10:31:10
start mi2
10:31:10
start mi2 range(p) 1 loop
10:31:10
finish mi2 range(p) 1 loop
10:31:10
start mi2 range(p) 2 loop
10:31:10
finish mi2 range(p) 2 loop
10:31:10
start mi2 range(NT) loop
10:31:10
finish mi2 range(NT) loop
10:31:10
start mi2 range(n) loop
10:31:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:31:10
start mi2 range(n) 2loop
10:31:10
finish mi2 range(n) 2loop
10:31:10
start mi3
10:31:10
start mi3 range(p) 1 loop
10:31:10
finish mi3 range(p) 1 loop
10:31:10
start mi3 range(p) 2 loop
10:31:10
finish mi3 range(p) 2 loop
10:31:10
start mi3 range(NT) loop
10:31:11
finish mi3 range(NT) loop
10:31:11
start mi3 range(n) loop
10:31:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:31:11
start mi3 range(n) 2loop
10:31:11
finish mi3 range(n) 2loop
10:31:11
[[-2.18366307]]
end mi3 loop
10:31:11
estep
10:31:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:31:27
start ppi1
10:31:27
start mi0
10:31:27
start mi0 range(p) 1 loop
10:31:27
finish mi0 range(p) 1 loop
10:31:27
start mi0 range(p) 2 loop
10:31:27
finish mi0 range(p) 2 loop
10:31:27
start mi0 range(NT) loop
10:31:27
finish mi0 range(NT) loop
10:31:27
start mi0 range(n) loop
10:31:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:31:27
start mi0 range(n) 2loop
10:31:27
finish mi0 range(n) 2loop
10:31:27
start mi1
10:31:27
start mi1 range(p) 1 loop
10:31:27
finish mi1 range(p) 1 loop
10:31:27
start mi1 range(p) 2 loop
10:31:27
finish mi1 range(p) 2 loop
10:31:27
start mi1 range(NT) loop
10:31:27
finish mi1 range(NT) loop
10:31:27
start mi1 range(n) loop
10:31:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:31:27
start mi1 range(n) 2loop
10:31:27
finish mi1 range(n) 2loop
10:31:27
start mi2
10:31:27
start mi2 range(p) 1 loop
10:31:27
finish mi2 range(p) 1 loop
10:31:27
start mi2 range(p) 2 loop
10:31:27
finish mi2 range(p) 2 loop
10:31:27
start mi2 range(NT) loop
10:31:27
finish mi2 range(NT) loop
10:31:27
start mi2 range(n) loop
10:31:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:31:27
start mi2 range(n) 2loop
10:31:27
finish mi2 range(n) 2loop
10:31:27
start mi3
10:31:27
start mi3 range(p) 1 loop
10:31:27
finish mi3 range(p) 1 loop
10:31:27
start mi3 range(p) 2 loop
10:31:27
finish mi3 range(p) 2 loop
10:31:27
start mi3 range(NT) loop
10:31:27
finish mi3 range(NT) loop
10:31:27
start mi3 range(n) loop
10:31:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:31:27
start mi3 range(n) 2loop
10:31:27
finish mi3 range(n) 2loop
10:31:28
[[-2.18366307]]
end mi3 loop
10:31:28
estep
10:31:28
end estep
10:31:43
end pa10:31:43
goodness of fit correlation [0.03181828]
start cluster 10:31:43
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38384 instead
  warnings.warn(
1
parallel submitted
10:32:02
parallel finished
10:35:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:35:51
start mi0
10:35:51
start mi0 range(p) 1 loop
10:35:51
finish mi0 range(p) 1 loop
10:35:51
start mi0 range(p) 2 loop
10:35:51
finish mi0 range(p) 2 loop
10:35:51
start mi0 range(NT) loop
10:35:51
finish mi0 range(NT) loop
10:35:51
start mi0 range(n) loop
10:35:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:35:51
start mi0 range(n) 2loop
10:35:51
finish mi0 range(n) 2loop
10:35:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:35:51
start mi1 range(p) 1 loop
10:35:51
finish mi1 range(p) 1 loop
10:35:51
start mi1 range(p) 2 loop
10:35:51
finish mi1 range(p) 2 loop
10:35:51
start mi1 range(NT) loop
10:35:51
finish mi1 range(NT) loop
10:35:51
start mi1 range(n) loop
10:35:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:35:51
start mi1 range(n) 2loop
10:35:51
finish mi1 range(n) 2loop
10:35:51
start mi2
10:35:51
start mi2 range(p) 1 loop
10:35:51
finish mi2 range(p) 1 loop
10:35:51
start mi2 range(p) 2 loop
10:35:51
finish mi2 range(p) 2 loop
10:35:51
start mi2 range(NT) loop
10:35:51
finish mi2 range(NT) loop
10:35:51
start mi2 range(n) loop
10:35:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:35:52
start mi2 range(n) 2loop
10:35:52
finish mi2 range(n) 2loop
10:35:52
start mi3
10:35:52
start mi3 range(p) 1 loop
10:35:52
finish mi3 range(p) 1 loop
10:35:52
start mi3 range(p) 2 loop
10:35:52
finish mi3 range(p) 2 loop
10:35:52
start mi3 range(NT) loop
10:35:52
finish mi3 range(NT) loop
10:35:52
start mi3 range(n) loop
10:35:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:35:52
start mi3 range(n) 2loop
10:35:52
finish mi3 range(n) 2loop
10:35:52
[[-2.21151461]]
end mi3 loop
10:35:52
estep
10:35:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:36:08
start ppi1
10:36:08
start mi0
10:36:08
start mi0 range(p) 1 loop
10:36:08
finish mi0 range(p) 1 loop
10:36:08
start mi0 range(p) 2 loop
10:36:08
finish mi0 range(p) 2 loop
10:36:08
start mi0 range(NT) loop
10:36:09
finish mi0 range(NT) loop
10:36:09
start mi0 range(n) loop
10:36:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:36:09
start mi0 range(n) 2loop
10:36:09
finish mi0 range(n) 2loop
10:36:09
start mi1
10:36:09
start mi1 range(p) 1 loop
10:36:09
finish mi1 range(p) 1 loop
10:36:09
start mi1 range(p) 2 loop
10:36:09
finish mi1 range(p) 2 loop
10:36:09
start mi1 range(NT) loop
10:36:09
finish mi1 range(NT) loop
10:36:09
start mi1 range(n) loop
10:36:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:36:09
start mi1 range(n) 2loop
10:36:09
finish mi1 range(n) 2loop
10:36:09
start mi2
10:36:09
start mi2 range(p) 1 loop
10:36:09
finish mi2 range(p) 1 loop
10:36:09
start mi2 range(p) 2 loop
10:36:09
finish mi2 range(p) 2 loop
10:36:09
start mi2 range(NT) loop
10:36:09
finish mi2 range(NT) loop
10:36:09
start mi2 range(n) loop
10:36:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:36:09
start mi2 range(n) 2loop
10:36:09
finish mi2 range(n) 2loop
10:36:09
start mi3
10:36:09
start mi3 range(p) 1 loop
10:36:09
finish mi3 range(p) 1 loop
10:36:09
start mi3 range(p) 2 loop
10:36:09
finish mi3 range(p) 2 loop
10:36:09
start mi3 range(NT) loop
10:36:09
finish mi3 range(NT) loop
10:36:09
start mi3 range(n) loop
10:36:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:36:09
start mi3 range(n) 2loop
10:36:09
finish mi3 range(n) 2loop
10:36:09
[[-2.27400937]]
end mi3 loop
10:36:09
estep
10:36:09
end estep
10:36:26
end pa10:36:26
goodness of fit correlation [0.18145858]
start cluster 10:36:26
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33386 instead
  warnings.warn(
2
parallel submitted
10:36:45
parallel finished
10:40:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:40:51
start mi0
10:40:51
start mi0 range(p) 1 loop
10:40:51
finish mi0 range(p) 1 loop
10:40:51
start mi0 range(p) 2 loop
10:40:51
finish mi0 range(p) 2 loop
10:40:51
start mi0 range(NT) loop
10:40:51
finish mi0 range(NT) loop
10:40:51
start mi0 range(n) loop
10:40:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:40:51
start mi0 range(n) 2loop
10:40:51
finish mi0 range(n) 2loop
10:40:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:40:51
start mi1 range(p) 1 loop
10:40:51
finish mi1 range(p) 1 loop
10:40:51
start mi1 range(p) 2 loop
10:40:51
finish mi1 range(p) 2 loop
10:40:51
start mi1 range(NT) loop
10:40:51
finish mi1 range(NT) loop
10:40:51
start mi1 range(n) loop
10:40:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:40:51
start mi1 range(n) 2loop
10:40:51
finish mi1 range(n) 2loop
10:40:51
start mi2
10:40:51
start mi2 range(p) 1 loop
10:40:51
finish mi2 range(p) 1 loop
10:40:51
start mi2 range(p) 2 loop
10:40:51
finish mi2 range(p) 2 loop
10:40:51
start mi2 range(NT) loop
10:40:51
finish mi2 range(NT) loop
10:40:51
start mi2 range(n) loop
10:40:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:40:51
start mi2 range(n) 2loop
10:40:51
finish mi2 range(n) 2loop
10:40:52
start mi3
10:40:52
start mi3 range(p) 1 loop
10:40:52
finish mi3 range(p) 1 loop
10:40:52
start mi3 range(p) 2 loop
10:40:52
finish mi3 range(p) 2 loop
10:40:52
start mi3 range(NT) loop
10:40:52
finish mi3 range(NT) loop
10:40:52
start mi3 range(n) loop
10:40:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:40:52
start mi3 range(n) 2loop
10:40:52
finish mi3 range(n) 2loop
10:40:52
[[-2.26648631]]
end mi3 loop
10:40:52
estep
10:40:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:41:08
start ppi1
10:41:08
start mi0
10:41:08
start mi0 range(p) 1 loop
10:41:08
finish mi0 range(p) 1 loop
10:41:08
start mi0 range(p) 2 loop
10:41:08
finish mi0 range(p) 2 loop
10:41:08
start mi0 range(NT) loop
10:41:09
finish mi0 range(NT) loop
10:41:09
start mi0 range(n) loop
10:41:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:41:09
start mi0 range(n) 2loop
10:41:09
finish mi0 range(n) 2loop
10:41:09
start mi1
10:41:09
start mi1 range(p) 1 loop
10:41:09
finish mi1 range(p) 1 loop
10:41:09
start mi1 range(p) 2 loop
10:41:09
finish mi1 range(p) 2 loop
10:41:09
start mi1 range(NT) loop
10:41:09
finish mi1 range(NT) loop
10:41:09
start mi1 range(n) loop
10:41:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:41:09
start mi1 range(n) 2loop
10:41:09
finish mi1 range(n) 2loop
10:41:09
start mi2
10:41:09
start mi2 range(p) 1 loop
10:41:09
finish mi2 range(p) 1 loop
10:41:09
start mi2 range(p) 2 loop
10:41:09
finish mi2 range(p) 2 loop
10:41:09
start mi2 range(NT) loop
10:41:09
finish mi2 range(NT) loop
10:41:09
start mi2 range(n) loop
10:41:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:41:09
start mi2 range(n) 2loop
10:41:09
finish mi2 range(n) 2loop
10:41:09
start mi3
10:41:09
start mi3 range(p) 1 loop
10:41:09
finish mi3 range(p) 1 loop
10:41:09
start mi3 range(p) 2 loop
10:41:09
finish mi3 range(p) 2 loop
10:41:09
start mi3 range(NT) loop
10:41:09
finish mi3 range(NT) loop
10:41:09
start mi3 range(n) loop
10:41:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:41:09
start mi3 range(n) 2loop
10:41:09
finish mi3 range(n) 2loop
10:41:09
[[-2.32897917]]
end mi3 loop
10:41:10
estep
10:41:10
end estep
10:41:29
end pa10:41:29
goodness of fit correlation [0.30314198]
start cluster 10:41:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43099 instead
  warnings.warn(
3
parallel submitted
10:41:48
parallel finished
10:45:50
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:45:57
start mi0
10:45:57
start mi0 range(p) 1 loop
10:45:57
finish mi0 range(p) 1 loop
10:45:57
start mi0 range(p) 2 loop
10:45:57
finish mi0 range(p) 2 loop
10:45:57
start mi0 range(NT) loop
10:45:57
finish mi0 range(NT) loop
10:45:57
start mi0 range(n) loop
10:45:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:45:57
start mi0 range(n) 2loop
10:45:57
finish mi0 range(n) 2loop
10:45:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:45:57
start mi1 range(p) 1 loop
10:45:57
finish mi1 range(p) 1 loop
10:45:57
start mi1 range(p) 2 loop
10:45:57
finish mi1 range(p) 2 loop
10:45:57
start mi1 range(NT) loop
10:45:57
finish mi1 range(NT) loop
10:45:57
start mi1 range(n) loop
10:45:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:45:58
start mi1 range(n) 2loop
10:45:58
finish mi1 range(n) 2loop
10:45:58
start mi2
10:45:58
start mi2 range(p) 1 loop
10:45:58
finish mi2 range(p) 1 loop
10:45:58
start mi2 range(p) 2 loop
10:45:58
finish mi2 range(p) 2 loop
10:45:58
start mi2 range(NT) loop
10:45:58
finish mi2 range(NT) loop
10:45:58
start mi2 range(n) loop
10:45:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:45:58
start mi2 range(n) 2loop
10:45:58
finish mi2 range(n) 2loop
10:45:58
start mi3
10:45:58
start mi3 range(p) 1 loop
10:45:58
finish mi3 range(p) 1 loop
10:45:58
start mi3 range(p) 2 loop
10:45:58
finish mi3 range(p) 2 loop
10:45:58
start mi3 range(NT) loop
10:45:58
finish mi3 range(NT) loop
10:45:58
start mi3 range(n) loop
10:45:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:45:58
start mi3 range(n) 2loop
10:45:58
finish mi3 range(n) 2loop
10:45:58
[[-2.3541165]]
end mi3 loop
10:45:58
estep
10:45:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:46:15
start ppi1
10:46:15
start mi0
10:46:15
start mi0 range(p) 1 loop
10:46:15
finish mi0 range(p) 1 loop
10:46:15
start mi0 range(p) 2 loop
10:46:15
finish mi0 range(p) 2 loop
10:46:15
start mi0 range(NT) loop
10:46:15
finish mi0 range(NT) loop
10:46:15
start mi0 range(n) loop
10:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:46:15
start mi0 range(n) 2loop
10:46:15
finish mi0 range(n) 2loop
10:46:15
start mi1
10:46:15
start mi1 range(p) 1 loop
10:46:15
finish mi1 range(p) 1 loop
10:46:15
start mi1 range(p) 2 loop
10:46:15
finish mi1 range(p) 2 loop
10:46:15
start mi1 range(NT) loop
10:46:15
finish mi1 range(NT) loop
10:46:15
start mi1 range(n) loop
10:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:46:15
start mi1 range(n) 2loop
10:46:15
finish mi1 range(n) 2loop
10:46:15
start mi2
10:46:15
start mi2 range(p) 1 loop
10:46:15
finish mi2 range(p) 1 loop
10:46:15
start mi2 range(p) 2 loop
10:46:15
finish mi2 range(p) 2 loop
10:46:15
start mi2 range(NT) loop
10:46:15
finish mi2 range(NT) loop
10:46:15
start mi2 range(n) loop
10:46:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:46:15
start mi2 range(n) 2loop
10:46:15
finish mi2 range(n) 2loop
10:46:16
start mi3
10:46:16
start mi3 range(p) 1 loop
10:46:16
finish mi3 range(p) 1 loop
10:46:16
start mi3 range(p) 2 loop
10:46:16
finish mi3 range(p) 2 loop
10:46:16
start mi3 range(NT) loop
10:46:16
finish mi3 range(NT) loop
10:46:16
start mi3 range(n) loop
10:46:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:46:16
start mi3 range(n) 2loop
10:46:16
finish mi3 range(n) 2loop
10:46:16
[[-2.41660863]]
end mi3 loop
10:46:16
estep
10:46:16
end estep
10:46:32
end pa10:46:32
goodness of fit correlation [0.29893817]
start cluster 10:46:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39054 instead
  warnings.warn(
4
parallel submitted
10:46:50
parallel finished
10:49:20
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:49:27
start mi0
10:49:27
start mi0 range(p) 1 loop
10:49:27
finish mi0 range(p) 1 loop
10:49:27
start mi0 range(p) 2 loop
10:49:27
finish mi0 range(p) 2 loop
10:49:27
start mi0 range(NT) loop
10:49:27
finish mi0 range(NT) loop
10:49:27
start mi0 range(n) loop
10:49:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:49:27
start mi0 range(n) 2loop
10:49:27
finish mi0 range(n) 2loop
10:49:27
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:49:27
start mi1 range(p) 1 loop
10:49:27
finish mi1 range(p) 1 loop
10:49:27
start mi1 range(p) 2 loop
10:49:27
finish mi1 range(p) 2 loop
10:49:27
start mi1 range(NT) loop
10:49:27
finish mi1 range(NT) loop
10:49:27
start mi1 range(n) loop
10:49:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:49:28
start mi1 range(n) 2loop
10:49:28
finish mi1 range(n) 2loop
10:49:28
start mi2
10:49:28
start mi2 range(p) 1 loop
10:49:28
finish mi2 range(p) 1 loop
10:49:28
start mi2 range(p) 2 loop
10:49:28
finish mi2 range(p) 2 loop
10:49:28
start mi2 range(NT) loop
10:49:28
finish mi2 range(NT) loop
10:49:28
start mi2 range(n) loop
10:49:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:49:28
start mi2 range(n) 2loop
10:49:28
finish mi2 range(n) 2loop
10:49:28
start mi3
10:49:28
start mi3 range(p) 1 loop
10:49:28
finish mi3 range(p) 1 loop
10:49:28
start mi3 range(p) 2 loop
10:49:28
finish mi3 range(p) 2 loop
10:49:28
start mi3 range(NT) loop
10:49:28
finish mi3 range(NT) loop
10:49:28
start mi3 range(n) loop
10:49:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:49:28
start mi3 range(n) 2loop
10:49:28
finish mi3 range(n) 2loop
10:49:28
[[-2.369632]]
end mi3 loop
10:49:28
estep
10:49:28
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:49:45
start ppi1
10:49:45
start mi0
10:49:45
start mi0 range(p) 1 loop
10:49:45
finish mi0 range(p) 1 loop
10:49:45
start mi0 range(p) 2 loop
10:49:45
finish mi0 range(p) 2 loop
10:49:45
start mi0 range(NT) loop
10:49:45
finish mi0 range(NT) loop
10:49:45
start mi0 range(n) loop
10:49:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:49:45
start mi0 range(n) 2loop
10:49:45
finish mi0 range(n) 2loop
10:49:45
start mi1
10:49:45
start mi1 range(p) 1 loop
10:49:45
finish mi1 range(p) 1 loop
10:49:45
start mi1 range(p) 2 loop
10:49:45
finish mi1 range(p) 2 loop
10:49:45
start mi1 range(NT) loop
10:49:45
finish mi1 range(NT) loop
10:49:45
start mi1 range(n) loop
10:49:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:49:45
start mi1 range(n) 2loop
10:49:45
finish mi1 range(n) 2loop
10:49:46
start mi2
10:49:46
start mi2 range(p) 1 loop
10:49:46
finish mi2 range(p) 1 loop
10:49:46
start mi2 range(p) 2 loop
10:49:46
finish mi2 range(p) 2 loop
10:49:46
start mi2 range(NT) loop
10:49:46
finish mi2 range(NT) loop
10:49:46
start mi2 range(n) loop
10:49:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:49:46
start mi2 range(n) 2loop
10:49:46
finish mi2 range(n) 2loop
10:49:46
start mi3
10:49:46
start mi3 range(p) 1 loop
10:49:46
finish mi3 range(p) 1 loop
10:49:46
start mi3 range(p) 2 loop
10:49:46
finish mi3 range(p) 2 loop
10:49:46
start mi3 range(NT) loop
10:49:46
finish mi3 range(NT) loop
10:49:46
start mi3 range(n) loop
10:49:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:49:46
start mi3 range(n) 2loop
10:49:46
finish mi3 range(n) 2loop
10:49:46
[[-2.43212411]]
end mi3 loop
10:49:46
estep
10:49:46
end estep
10:50:03
end pa10:50:03
goodness of fit correlation [0.28616257]
start cluster 10:50:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42083 instead
  warnings.warn(
5
parallel submitted
10:50:23
parallel finished
10:53:47
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:53:55
start mi0
10:53:55
start mi0 range(p) 1 loop
10:53:55
finish mi0 range(p) 1 loop
10:53:55
start mi0 range(p) 2 loop
10:53:55
finish mi0 range(p) 2 loop
10:53:55
start mi0 range(NT) loop
10:53:55
finish mi0 range(NT) loop
10:53:55
start mi0 range(n) loop
10:53:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:53:55
start mi0 range(n) 2loop
10:53:55
finish mi0 range(n) 2loop
10:53:55
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:53:55
start mi1 range(p) 1 loop
10:53:55
finish mi1 range(p) 1 loop
10:53:55
start mi1 range(p) 2 loop
10:53:55
finish mi1 range(p) 2 loop
10:53:55
start mi1 range(NT) loop
10:53:55
finish mi1 range(NT) loop
10:53:55
start mi1 range(n) loop
10:53:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:53:55
start mi1 range(n) 2loop
10:53:55
finish mi1 range(n) 2loop
10:53:55
start mi2
10:53:55
start mi2 range(p) 1 loop
10:53:55
finish mi2 range(p) 1 loop
10:53:55
start mi2 range(p) 2 loop
10:53:55
finish mi2 range(p) 2 loop
10:53:55
start mi2 range(NT) loop
10:53:55
finish mi2 range(NT) loop
10:53:55
start mi2 range(n) loop
10:53:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:53:55
start mi2 range(n) 2loop
10:53:55
finish mi2 range(n) 2loop
10:53:55
start mi3
10:53:55
start mi3 range(p) 1 loop
10:53:55
finish mi3 range(p) 1 loop
10:53:55
start mi3 range(p) 2 loop
10:53:55
finish mi3 range(p) 2 loop
10:53:55
start mi3 range(NT) loop
10:53:55
finish mi3 range(NT) loop
10:53:55
start mi3 range(n) loop
10:53:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:53:56
start mi3 range(n) 2loop
10:53:56
finish mi3 range(n) 2loop
10:53:56
[[-2.34402265]]
end mi3 loop
10:53:56
estep
10:53:56
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:54:12
start ppi1
10:54:12
start mi0
10:54:12
start mi0 range(p) 1 loop
10:54:12
finish mi0 range(p) 1 loop
10:54:12
start mi0 range(p) 2 loop
10:54:12
finish mi0 range(p) 2 loop
10:54:12
start mi0 range(NT) loop
10:54:12
finish mi0 range(NT) loop
10:54:12
start mi0 range(n) loop
10:54:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:54:12
start mi0 range(n) 2loop
10:54:12
finish mi0 range(n) 2loop
10:54:12
start mi1
10:54:12
start mi1 range(p) 1 loop
10:54:12
finish mi1 range(p) 1 loop
10:54:12
start mi1 range(p) 2 loop
10:54:12
finish mi1 range(p) 2 loop
10:54:12
start mi1 range(NT) loop
10:54:12
finish mi1 range(NT) loop
10:54:12
start mi1 range(n) loop
10:54:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:54:12
start mi1 range(n) 2loop
10:54:12
finish mi1 range(n) 2loop
10:54:12
start mi2
10:54:12
start mi2 range(p) 1 loop
10:54:12
finish mi2 range(p) 1 loop
10:54:12
start mi2 range(p) 2 loop
10:54:12
finish mi2 range(p) 2 loop
10:54:12
start mi2 range(NT) loop
10:54:12
finish mi2 range(NT) loop
10:54:12
start mi2 range(n) loop
10:54:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:54:12
start mi2 range(n) 2loop
10:54:12
finish mi2 range(n) 2loop
10:54:13
start mi3
10:54:13
start mi3 range(p) 1 loop
10:54:13
finish mi3 range(p) 1 loop
10:54:13
start mi3 range(p) 2 loop
10:54:13
finish mi3 range(p) 2 loop
10:54:13
start mi3 range(NT) loop
10:54:13
finish mi3 range(NT) loop
10:54:13
start mi3 range(n) loop
10:54:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:54:13
start mi3 range(n) 2loop
10:54:13
finish mi3 range(n) 2loop
10:54:13
[[-2.40651481]]
end mi3 loop
10:54:13
estep
10:54:13
end estep
10:54:29
end pa10:54:29
goodness of fit correlation [0.21725497]
start cluster 10:54:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36283 instead
  warnings.warn(
6
parallel submitted
10:54:48
parallel finished
10:57:15
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
10:57:23
start mi0
10:57:23
start mi0 range(p) 1 loop
10:57:23
finish mi0 range(p) 1 loop
10:57:23
start mi0 range(p) 2 loop
10:57:23
finish mi0 range(p) 2 loop
10:57:23
start mi0 range(NT) loop
10:57:23
finish mi0 range(NT) loop
10:57:23
start mi0 range(n) loop
10:57:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
10:57:23
start mi0 range(n) 2loop
10:57:23
finish mi0 range(n) 2loop
10:57:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
10:57:23
start mi1 range(p) 1 loop
10:57:23
finish mi1 range(p) 1 loop
10:57:23
start mi1 range(p) 2 loop
10:57:23
finish mi1 range(p) 2 loop
10:57:23
start mi1 range(NT) loop
10:57:23
finish mi1 range(NT) loop
10:57:23
start mi1 range(n) loop
10:57:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
10:57:23
start mi1 range(n) 2loop
10:57:23
finish mi1 range(n) 2loop
10:57:24
start mi2
10:57:24
start mi2 range(p) 1 loop
10:57:24
finish mi2 range(p) 1 loop
10:57:24
start mi2 range(p) 2 loop
10:57:24
finish mi2 range(p) 2 loop
10:57:24
start mi2 range(NT) loop
10:57:24
finish mi2 range(NT) loop
10:57:24
start mi2 range(n) loop
10:57:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
10:57:24
start mi2 range(n) 2loop
10:57:24
finish mi2 range(n) 2loop
10:57:24
start mi3
10:57:24
start mi3 range(p) 1 loop
10:57:24
finish mi3 range(p) 1 loop
10:57:24
start mi3 range(p) 2 loop
10:57:24
finish mi3 range(p) 2 loop
10:57:24
start mi3 range(NT) loop
10:57:24
finish mi3 range(NT) loop
10:57:24
start mi3 range(n) loop
10:57:24
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
10:57:24
start mi3 range(n) 2loop
10:57:24
finish mi3 range(n) 2loop
10:57:24
[[-2.30455203]]
end mi3 loop
10:57:24
estep
10:57:24
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
10:57:41
start ppi1
10:57:41
start mi0
10:57:41
start mi0 range(p) 1 loop
10:57:41
finish mi0 range(p) 1 loop
10:57:41
start mi0 range(p) 2 loop
10:57:41
finish mi0 range(p) 2 loop
10:57:41
start mi0 range(NT) loop
10:57:41
finish mi0 range(NT) loop
10:57:41
start mi0 range(n) loop
10:57:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
10:57:42
start mi0 range(n) 2loop
10:57:42
finish mi0 range(n) 2loop
10:57:42
start mi1
10:57:42
start mi1 range(p) 1 loop
10:57:42
finish mi1 range(p) 1 loop
10:57:42
start mi1 range(p) 2 loop
10:57:42
finish mi1 range(p) 2 loop
10:57:42
start mi1 range(NT) loop
10:57:42
finish mi1 range(NT) loop
10:57:42
start mi1 range(n) loop
10:57:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
10:57:42
start mi1 range(n) 2loop
10:57:42
finish mi1 range(n) 2loop
10:57:42
start mi2
10:57:42
start mi2 range(p) 1 loop
10:57:42
finish mi2 range(p) 1 loop
10:57:42
start mi2 range(p) 2 loop
10:57:42
finish mi2 range(p) 2 loop
10:57:42
start mi2 range(NT) loop
10:57:42
finish mi2 range(NT) loop
10:57:42
start mi2 range(n) loop
10:57:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
10:57:42
start mi2 range(n) 2loop
10:57:42
finish mi2 range(n) 2loop
10:57:42
start mi3
10:57:42
start mi3 range(p) 1 loop
10:57:42
finish mi3 range(p) 1 loop
10:57:42
start mi3 range(p) 2 loop
10:57:42
finish mi3 range(p) 2 loop
10:57:42
start mi3 range(NT) loop
10:57:42
finish mi3 range(NT) loop
10:57:42
start mi3 range(n) loop
10:57:42
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
10:57:42
start mi3 range(n) 2loop
10:57:42
finish mi3 range(n) 2loop
10:57:42
[[-2.3670444]]
end mi3 loop
10:57:42
estep
10:57:42
end estep
10:58:00
end pa10:58:00
goodness of fit correlation [0.21912726]
start cluster 10:58:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46085 instead
  warnings.warn(
7
parallel submitted
10:58:23
parallel finished
11:02:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:02:21
start mi0
11:02:21
start mi0 range(p) 1 loop
11:02:21
finish mi0 range(p) 1 loop
11:02:21
start mi0 range(p) 2 loop
11:02:21
finish mi0 range(p) 2 loop
11:02:21
start mi0 range(NT) loop
11:02:21
finish mi0 range(NT) loop
11:02:21
start mi0 range(n) loop
11:02:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:02:21
start mi0 range(n) 2loop
11:02:21
finish mi0 range(n) 2loop
11:02:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:02:22
start mi1 range(p) 1 loop
11:02:22
finish mi1 range(p) 1 loop
11:02:22
start mi1 range(p) 2 loop
11:02:22
finish mi1 range(p) 2 loop
11:02:22
start mi1 range(NT) loop
11:02:22
finish mi1 range(NT) loop
11:02:22
start mi1 range(n) loop
11:02:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:02:22
start mi1 range(n) 2loop
11:02:22
finish mi1 range(n) 2loop
11:02:22
start mi2
11:02:22
start mi2 range(p) 1 loop
11:02:22
finish mi2 range(p) 1 loop
11:02:22
start mi2 range(p) 2 loop
11:02:22
finish mi2 range(p) 2 loop
11:02:22
start mi2 range(NT) loop
11:02:22
finish mi2 range(NT) loop
11:02:22
start mi2 range(n) loop
11:02:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:02:22
start mi2 range(n) 2loop
11:02:22
finish mi2 range(n) 2loop
11:02:22
start mi3
11:02:22
start mi3 range(p) 1 loop
11:02:22
finish mi3 range(p) 1 loop
11:02:22
start mi3 range(p) 2 loop
11:02:22
finish mi3 range(p) 2 loop
11:02:22
start mi3 range(NT) loop
11:02:22
finish mi3 range(NT) loop
11:02:22
start mi3 range(n) loop
11:02:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:02:22
start mi3 range(n) 2loop
11:02:22
finish mi3 range(n) 2loop
11:02:22
[[-2.35039193]]
end mi3 loop
11:02:22
estep
11:02:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:02:40
start ppi1
11:02:40
start mi0
11:02:40
start mi0 range(p) 1 loop
11:02:40
finish mi0 range(p) 1 loop
11:02:40
start mi0 range(p) 2 loop
11:02:40
finish mi0 range(p) 2 loop
11:02:40
start mi0 range(NT) loop
11:02:40
finish mi0 range(NT) loop
11:02:40
start mi0 range(n) loop
11:02:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:02:40
start mi0 range(n) 2loop
11:02:40
finish mi0 range(n) 2loop
11:02:40
start mi1
11:02:40
start mi1 range(p) 1 loop
11:02:40
finish mi1 range(p) 1 loop
11:02:40
start mi1 range(p) 2 loop
11:02:40
finish mi1 range(p) 2 loop
11:02:40
start mi1 range(NT) loop
11:02:40
finish mi1 range(NT) loop
11:02:40
start mi1 range(n) loop
11:02:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:02:40
start mi1 range(n) 2loop
11:02:40
finish mi1 range(n) 2loop
11:02:40
start mi2
11:02:40
start mi2 range(p) 1 loop
11:02:40
finish mi2 range(p) 1 loop
11:02:40
start mi2 range(p) 2 loop
11:02:40
finish mi2 range(p) 2 loop
11:02:40
start mi2 range(NT) loop
11:02:40
finish mi2 range(NT) loop
11:02:40
start mi2 range(n) loop
11:02:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:02:40
start mi2 range(n) 2loop
11:02:40
finish mi2 range(n) 2loop
11:02:41
start mi3
11:02:41
start mi3 range(p) 1 loop
11:02:41
finish mi3 range(p) 1 loop
11:02:41
start mi3 range(p) 2 loop
11:02:41
finish mi3 range(p) 2 loop
11:02:41
start mi3 range(NT) loop
11:02:41
finish mi3 range(NT) loop
11:02:41
start mi3 range(n) loop
11:02:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:02:41
start mi3 range(n) 2loop
11:02:41
finish mi3 range(n) 2loop
11:02:41
[[-2.41288408]]
end mi3 loop
11:02:41
estep
11:02:41
end estep
11:02:59
end pa11:02:59
goodness of fit correlation [0.32078634]
start cluster 11:02:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43043 instead
  warnings.warn(
8
parallel submitted
11:03:20
parallel finished
11:06:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:06:08
start mi0
11:06:08
start mi0 range(p) 1 loop
11:06:08
finish mi0 range(p) 1 loop
11:06:08
start mi0 range(p) 2 loop
11:06:09
finish mi0 range(p) 2 loop
11:06:09
start mi0 range(NT) loop
11:06:09
finish mi0 range(NT) loop
11:06:09
start mi0 range(n) loop
11:06:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:06:09
start mi0 range(n) 2loop
11:06:09
finish mi0 range(n) 2loop
11:06:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:06:09
start mi1 range(p) 1 loop
11:06:09
finish mi1 range(p) 1 loop
11:06:09
start mi1 range(p) 2 loop
11:06:09
finish mi1 range(p) 2 loop
11:06:09
start mi1 range(NT) loop
11:06:09
finish mi1 range(NT) loop
11:06:09
start mi1 range(n) loop
11:06:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:06:09
start mi1 range(n) 2loop
11:06:09
finish mi1 range(n) 2loop
11:06:09
start mi2
11:06:09
start mi2 range(p) 1 loop
11:06:09
finish mi2 range(p) 1 loop
11:06:09
start mi2 range(p) 2 loop
11:06:09
finish mi2 range(p) 2 loop
11:06:09
start mi2 range(NT) loop
11:06:09
finish mi2 range(NT) loop
11:06:09
start mi2 range(n) loop
11:06:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:06:09
start mi2 range(n) 2loop
11:06:09
finish mi2 range(n) 2loop
11:06:09
start mi3
11:06:09
start mi3 range(p) 1 loop
11:06:09
finish mi3 range(p) 1 loop
11:06:09
start mi3 range(p) 2 loop
11:06:09
finish mi3 range(p) 2 loop
11:06:09
start mi3 range(NT) loop
11:06:09
finish mi3 range(NT) loop
11:06:09
start mi3 range(n) loop
11:06:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:06:09
start mi3 range(n) 2loop
11:06:09
finish mi3 range(n) 2loop
11:06:10
[[-2.37789214]]
end mi3 loop
11:06:10
estep
11:06:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:06:26
start ppi1
11:06:26
start mi0
11:06:26
start mi0 range(p) 1 loop
11:06:26
finish mi0 range(p) 1 loop
11:06:26
start mi0 range(p) 2 loop
11:06:26
finish mi0 range(p) 2 loop
11:06:26
start mi0 range(NT) loop
11:06:27
finish mi0 range(NT) loop
11:06:27
start mi0 range(n) loop
11:06:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:06:27
start mi0 range(n) 2loop
11:06:27
finish mi0 range(n) 2loop
11:06:27
start mi1
11:06:27
start mi1 range(p) 1 loop
11:06:27
finish mi1 range(p) 1 loop
11:06:27
start mi1 range(p) 2 loop
11:06:27
finish mi1 range(p) 2 loop
11:06:27
start mi1 range(NT) loop
11:06:27
finish mi1 range(NT) loop
11:06:27
start mi1 range(n) loop
11:06:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:06:27
start mi1 range(n) 2loop
11:06:27
finish mi1 range(n) 2loop
11:06:27
start mi2
11:06:27
start mi2 range(p) 1 loop
11:06:27
finish mi2 range(p) 1 loop
11:06:27
start mi2 range(p) 2 loop
11:06:27
finish mi2 range(p) 2 loop
11:06:27
start mi2 range(NT) loop
11:06:27
finish mi2 range(NT) loop
11:06:27
start mi2 range(n) loop
11:06:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:06:27
start mi2 range(n) 2loop
11:06:27
finish mi2 range(n) 2loop
11:06:27
start mi3
11:06:27
start mi3 range(p) 1 loop
11:06:27
finish mi3 range(p) 1 loop
11:06:27
start mi3 range(p) 2 loop
11:06:27
finish mi3 range(p) 2 loop
11:06:27
start mi3 range(NT) loop
11:06:27
finish mi3 range(NT) loop
11:06:27
start mi3 range(n) loop
11:06:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:06:27
start mi3 range(n) 2loop
11:06:27
finish mi3 range(n) 2loop
11:06:28
[[-2.44038423]]
end mi3 loop
11:06:28
estep
11:06:28
end estep
11:06:45
end pa11:06:45
goodness of fit correlation [0.31633285]
start cluster 11:06:45
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39727 instead
  warnings.warn(
9
parallel submitted
11:07:06
parallel finished
11:09:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:09:57
start mi0
11:09:57
start mi0 range(p) 1 loop
11:09:57
finish mi0 range(p) 1 loop
11:09:57
start mi0 range(p) 2 loop
11:09:57
finish mi0 range(p) 2 loop
11:09:57
start mi0 range(NT) loop
11:09:58
finish mi0 range(NT) loop
11:09:58
start mi0 range(n) loop
11:09:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:09:58
start mi0 range(n) 2loop
11:09:58
finish mi0 range(n) 2loop
11:09:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:09:58
start mi1 range(p) 1 loop
11:09:58
finish mi1 range(p) 1 loop
11:09:58
start mi1 range(p) 2 loop
11:09:58
finish mi1 range(p) 2 loop
11:09:58
start mi1 range(NT) loop
11:09:58
finish mi1 range(NT) loop
11:09:58
start mi1 range(n) loop
11:09:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:09:58
start mi1 range(n) 2loop
11:09:58
finish mi1 range(n) 2loop
11:09:58
start mi2
11:09:58
start mi2 range(p) 1 loop
11:09:58
finish mi2 range(p) 1 loop
11:09:58
start mi2 range(p) 2 loop
11:09:58
finish mi2 range(p) 2 loop
11:09:58
start mi2 range(NT) loop
11:09:58
finish mi2 range(NT) loop
11:09:58
start mi2 range(n) loop
11:09:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:09:58
start mi2 range(n) 2loop
11:09:58
finish mi2 range(n) 2loop
11:09:58
start mi3
11:09:58
start mi3 range(p) 1 loop
11:09:58
finish mi3 range(p) 1 loop
11:09:58
start mi3 range(p) 2 loop
11:09:58
finish mi3 range(p) 2 loop
11:09:58
start mi3 range(NT) loop
11:09:58
finish mi3 range(NT) loop
11:09:58
start mi3 range(n) loop
11:09:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:09:58
start mi3 range(n) 2loop
11:09:58
finish mi3 range(n) 2loop
11:09:59
[[-2.44647644]]
end mi3 loop
11:09:59
estep
11:09:59
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:10:15
start ppi1
11:10:15
start mi0
11:10:15
start mi0 range(p) 1 loop
11:10:15
finish mi0 range(p) 1 loop
11:10:15
start mi0 range(p) 2 loop
11:10:15
finish mi0 range(p) 2 loop
11:10:15
start mi0 range(NT) loop
11:10:15
finish mi0 range(NT) loop
11:10:15
start mi0 range(n) loop
11:10:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:10:15
start mi0 range(n) 2loop
11:10:15
finish mi0 range(n) 2loop
11:10:15
start mi1
11:10:15
start mi1 range(p) 1 loop
11:10:15
finish mi1 range(p) 1 loop
11:10:15
start mi1 range(p) 2 loop
11:10:15
finish mi1 range(p) 2 loop
11:10:15
start mi1 range(NT) loop
11:10:15
finish mi1 range(NT) loop
11:10:15
start mi1 range(n) loop
11:10:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:10:16
start mi1 range(n) 2loop
11:10:16
finish mi1 range(n) 2loop
11:10:16
start mi2
11:10:16
start mi2 range(p) 1 loop
11:10:16
finish mi2 range(p) 1 loop
11:10:16
start mi2 range(p) 2 loop
11:10:16
finish mi2 range(p) 2 loop
11:10:16
start mi2 range(NT) loop
11:10:16
finish mi2 range(NT) loop
11:10:16
start mi2 range(n) loop
11:10:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:10:16
start mi2 range(n) 2loop
11:10:16
finish mi2 range(n) 2loop
11:10:16
[[-2.50892111]]
end mi2 loop
11:10:16
estep
11:10:16
end estep
11:10:33
end pa11:10:33
goodness of fit correlation [0.30542354]
start cluster 11:10:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46594 instead
  warnings.warn(
10
parallel submitted
11:10:54
parallel finished
11:14:04
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:14:11
start mi0
11:14:11
start mi0 range(p) 1 loop
11:14:11
finish mi0 range(p) 1 loop
11:14:11
start mi0 range(p) 2 loop
11:14:11
finish mi0 range(p) 2 loop
11:14:11
start mi0 range(NT) loop
11:14:11
finish mi0 range(NT) loop
11:14:11
start mi0 range(n) loop
11:14:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:14:11
start mi0 range(n) 2loop
11:14:11
finish mi0 range(n) 2loop
11:14:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:14:11
start mi1 range(p) 1 loop
11:14:11
finish mi1 range(p) 1 loop
11:14:11
start mi1 range(p) 2 loop
11:14:11
finish mi1 range(p) 2 loop
11:14:11
start mi1 range(NT) loop
11:14:11
finish mi1 range(NT) loop
11:14:11
start mi1 range(n) loop
11:14:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:14:11
start mi1 range(n) 2loop
11:14:11
finish mi1 range(n) 2loop
11:14:12
start mi2
11:14:12
start mi2 range(p) 1 loop
11:14:12
finish mi2 range(p) 1 loop
11:14:12
start mi2 range(p) 2 loop
11:14:12
finish mi2 range(p) 2 loop
11:14:12
start mi2 range(NT) loop
11:14:12
finish mi2 range(NT) loop
11:14:12
start mi2 range(n) loop
11:14:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:14:12
start mi2 range(n) 2loop
11:14:12
finish mi2 range(n) 2loop
11:14:12
start mi3
11:14:12
start mi3 range(p) 1 loop
11:14:12
finish mi3 range(p) 1 loop
11:14:12
start mi3 range(p) 2 loop
11:14:12
finish mi3 range(p) 2 loop
11:14:12
start mi3 range(NT) loop
11:14:12
finish mi3 range(NT) loop
11:14:12
start mi3 range(n) loop
11:14:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:14:12
start mi3 range(n) 2loop
11:14:12
finish mi3 range(n) 2loop
11:14:12
[[-2.34793243]]
end mi3 loop
11:14:12
estep
11:14:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:14:29
start ppi1
11:14:29
start mi0
11:14:29
start mi0 range(p) 1 loop
11:14:29
finish mi0 range(p) 1 loop
11:14:29
start mi0 range(p) 2 loop
11:14:29
finish mi0 range(p) 2 loop
11:14:29
start mi0 range(NT) loop
11:14:30
finish mi0 range(NT) loop
11:14:30
start mi0 range(n) loop
11:14:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:14:30
start mi0 range(n) 2loop
11:14:30
finish mi0 range(n) 2loop
11:14:30
start mi1
11:14:30
start mi1 range(p) 1 loop
11:14:30
finish mi1 range(p) 1 loop
11:14:30
start mi1 range(p) 2 loop
11:14:30
finish mi1 range(p) 2 loop
11:14:30
start mi1 range(NT) loop
11:14:30
finish mi1 range(NT) loop
11:14:30
start mi1 range(n) loop
11:14:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:14:30
start mi1 range(n) 2loop
11:14:30
finish mi1 range(n) 2loop
11:14:30
start mi2
11:14:30
start mi2 range(p) 1 loop
11:14:30
finish mi2 range(p) 1 loop
11:14:30
start mi2 range(p) 2 loop
11:14:30
finish mi2 range(p) 2 loop
11:14:30
start mi2 range(NT) loop
11:14:30
finish mi2 range(NT) loop
11:14:30
start mi2 range(n) loop
11:14:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:14:30
start mi2 range(n) 2loop
11:14:30
finish mi2 range(n) 2loop
11:14:30
start mi3
11:14:30
start mi3 range(p) 1 loop
11:14:30
finish mi3 range(p) 1 loop
11:14:30
start mi3 range(p) 2 loop
11:14:30
finish mi3 range(p) 2 loop
11:14:30
start mi3 range(NT) loop
11:14:30
finish mi3 range(NT) loop
11:14:30
start mi3 range(n) loop
11:14:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:14:30
start mi3 range(n) 2loop
11:14:30
finish mi3 range(n) 2loop
11:14:30
[[-2.41042458]]
end mi3 loop
11:14:31
estep
11:14:31
end estep
11:14:47
end pa11:14:47
goodness of fit correlation [0.21373309]
start cluster 11:14:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40374 instead
  warnings.warn(
11
parallel submitted
11:15:06
parallel finished
11:18:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:18:10
start mi0
11:18:10
start mi0 range(p) 1 loop
11:18:10
finish mi0 range(p) 1 loop
11:18:10
start mi0 range(p) 2 loop
11:18:10
finish mi0 range(p) 2 loop
11:18:10
start mi0 range(NT) loop
11:18:10
finish mi0 range(NT) loop
11:18:10
start mi0 range(n) loop
11:18:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:18:10
start mi0 range(n) 2loop
11:18:10
finish mi0 range(n) 2loop
11:18:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:18:10
start mi1 range(p) 1 loop
11:18:10
finish mi1 range(p) 1 loop
11:18:10
start mi1 range(p) 2 loop
11:18:10
finish mi1 range(p) 2 loop
11:18:10
start mi1 range(NT) loop
11:18:10
finish mi1 range(NT) loop
11:18:10
start mi1 range(n) loop
11:18:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:18:10
start mi1 range(n) 2loop
11:18:10
finish mi1 range(n) 2loop
11:18:10
start mi2
11:18:10
start mi2 range(p) 1 loop
11:18:10
finish mi2 range(p) 1 loop
11:18:10
start mi2 range(p) 2 loop
11:18:10
finish mi2 range(p) 2 loop
11:18:10
start mi2 range(NT) loop
11:18:10
finish mi2 range(NT) loop
11:18:10
start mi2 range(n) loop
11:18:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:18:10
start mi2 range(n) 2loop
11:18:10
finish mi2 range(n) 2loop
11:18:10
start mi3
11:18:10
start mi3 range(p) 1 loop
11:18:10
finish mi3 range(p) 1 loop
11:18:10
start mi3 range(p) 2 loop
11:18:10
finish mi3 range(p) 2 loop
11:18:10
start mi3 range(NT) loop
11:18:11
finish mi3 range(NT) loop
11:18:11
start mi3 range(n) loop
11:18:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:18:11
start mi3 range(n) 2loop
11:18:11
finish mi3 range(n) 2loop
11:18:11
[[-2.2772447]]
end mi3 loop
11:18:11
estep
11:18:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:18:29
start ppi1
11:18:29
start mi0
11:18:29
start mi0 range(p) 1 loop
11:18:29
finish mi0 range(p) 1 loop
11:18:29
start mi0 range(p) 2 loop
11:18:29
finish mi0 range(p) 2 loop
11:18:29
start mi0 range(NT) loop
11:18:29
finish mi0 range(NT) loop
11:18:29
start mi0 range(n) loop
11:18:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:18:29
start mi0 range(n) 2loop
11:18:29
finish mi0 range(n) 2loop
11:18:29
start mi1
11:18:29
start mi1 range(p) 1 loop
11:18:29
finish mi1 range(p) 1 loop
11:18:29
start mi1 range(p) 2 loop
11:18:29
finish mi1 range(p) 2 loop
11:18:29
start mi1 range(NT) loop
11:18:29
finish mi1 range(NT) loop
11:18:29
start mi1 range(n) loop
11:18:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:18:29
start mi1 range(n) 2loop
11:18:29
finish mi1 range(n) 2loop
11:18:29
start mi2
11:18:29
start mi2 range(p) 1 loop
11:18:29
finish mi2 range(p) 1 loop
11:18:29
start mi2 range(p) 2 loop
11:18:29
finish mi2 range(p) 2 loop
11:18:29
start mi2 range(NT) loop
11:18:29
finish mi2 range(NT) loop
11:18:29
start mi2 range(n) loop
11:18:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:18:29
start mi2 range(n) 2loop
11:18:29
finish mi2 range(n) 2loop
11:18:29
start mi3
11:18:29
start mi3 range(p) 1 loop
11:18:29
finish mi3 range(p) 1 loop
11:18:29
start mi3 range(p) 2 loop
11:18:29
finish mi3 range(p) 2 loop
11:18:29
start mi3 range(NT) loop
11:18:30
finish mi3 range(NT) loop
11:18:30
start mi3 range(n) loop
11:18:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:18:30
start mi3 range(n) 2loop
11:18:30
finish mi3 range(n) 2loop
11:18:30
[[-2.33973738]]
end mi3 loop
11:18:30
estep
11:18:30
end estep
11:18:47
end pa11:18:47
goodness of fit correlation [0.10206973]
0.3207863435585472
[5.40184043e-01 5.23211217e-01 5.29712831e-01 5.23627403e-01
 4.85932232e-01 5.16959185e-01 5.19830009e-01 5.60721583e-01
 5.25725287e-01 5.13487284e-01 5.08746305e-01 5.16137548e-01
 5.38218683e-01 5.45889186e-01 5.11497073e-01 5.78311027e-01
 5.23446522e-01 5.09358072e-01 5.14695281e-01 4.97056328e-01
 6.08913624e-01 5.63799872e-01 4.79360564e-01 5.29106935e-01
 5.25267499e-01 5.36252707e-01 4.77130959e-01 4.79672311e-01
 5.60681818e-01 6.19681991e-01 5.08180190e-01 5.05099030e-01
 4.91217120e-01 5.09769798e-01 5.10643903e-01 5.90892006e-01
 5.48804542e-01 4.88678975e-01 5.03752809e-01 5.03878082e-01
 5.40413444e-01 5.15477458e-01 5.00553582e-01 4.88043857e-01
 5.27958411e-01 5.02152759e-01 5.33832442e-01 5.42884577e-01
 5.11994444e-01 5.97996525e-01 5.49643490e-01 5.05833801e-01
 5.21425068e-01 5.09408873e-01 6.34391177e-01 5.59761078e-01
 5.25980507e-01 4.71386229e-01 5.13500861e-01 5.40770174e-01
 4.74190252e-01 4.69391083e-01 5.28978228e-01 5.30713079e-01
 5.02298146e-01 4.97640740e-01 5.00885398e-01 5.87161089e-01
 3.51816078e-01 3.75772791e-01 3.33215879e-01 3.15517249e-01
 3.08391913e-01 3.41870011e-01 3.28619879e-01 3.24118466e-01
 3.32402331e-01 3.23756295e-01 3.63032551e-01 3.65820841e-01
 3.70156567e-01 3.41034320e-01 3.46771903e-01 3.45917673e-01
 3.47357085e-01 3.32204418e-01 3.65322152e-01 3.47391046e-01
 3.42568187e-01 3.70368145e-01 3.37316034e-01 3.21986986e-01
 3.78696797e-01 3.41286990e-01 3.18776953e-01 3.22789704e-01
 3.47048651e-01 3.42722337e-01 2.83648510e-01 2.90517306e-01
 3.99670604e-01 3.58014920e-01 3.46971902e-01 3.70644161e-01
 3.42446436e-01 3.17489617e-01 3.12594379e-01 3.39280795e-01
 3.28910285e-01 3.38720393e-01 3.29484439e-01 3.32469654e-01
 3.59504079e-01 3.23626866e-01 3.60798269e-01 3.23257528e-01
 3.60636365e-01 3.38675157e-01 3.55683247e-01 3.50267357e-01
 3.67082214e-01 3.43137206e-01 3.31632885e-01 3.60977693e-01
 3.33056971e-01 3.23831732e-01 3.56306084e-01 3.38685541e-01
 3.21393685e-01 3.16009367e-01 3.41899764e-01 3.40797960e-01
 3.43467716e-01 2.96207406e-01 3.42575196e-01 3.28497853e-01
 1.59957881e+00 9.87860680e-04]
start cluster 11:18:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33031 instead
  warnings.warn(
0
parallel submitted
11:19:08
parallel finished
11:22:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:22:10
start mi0
11:22:10
start mi0 range(p) 1 loop
11:22:10
finish mi0 range(p) 1 loop
11:22:10
start mi0 range(p) 2 loop
11:22:10
finish mi0 range(p) 2 loop
11:22:10
start mi0 range(NT) loop
11:22:10
finish mi0 range(NT) loop
11:22:10
start mi0 range(n) loop
11:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:22:10
start mi0 range(n) 2loop
11:22:10
finish mi0 range(n) 2loop
11:22:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:22:10
start mi1 range(p) 1 loop
11:22:10
finish mi1 range(p) 1 loop
11:22:10
start mi1 range(p) 2 loop
11:22:10
finish mi1 range(p) 2 loop
11:22:10
start mi1 range(NT) loop
11:22:10
finish mi1 range(NT) loop
11:22:10
start mi1 range(n) loop
11:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:22:10
start mi1 range(n) 2loop
11:22:10
finish mi1 range(n) 2loop
11:22:10
start mi2
11:22:10
start mi2 range(p) 1 loop
11:22:10
finish mi2 range(p) 1 loop
11:22:10
start mi2 range(p) 2 loop
11:22:10
finish mi2 range(p) 2 loop
11:22:10
start mi2 range(NT) loop
11:22:10
finish mi2 range(NT) loop
11:22:10
start mi2 range(n) loop
11:22:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:22:11
start mi2 range(n) 2loop
11:22:11
finish mi2 range(n) 2loop
11:22:11
start mi3
11:22:11
start mi3 range(p) 1 loop
11:22:11
finish mi3 range(p) 1 loop
11:22:11
start mi3 range(p) 2 loop
11:22:11
finish mi3 range(p) 2 loop
11:22:11
start mi3 range(NT) loop
11:22:11
finish mi3 range(NT) loop
11:22:11
start mi3 range(n) loop
11:22:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:22:11
start mi3 range(n) 2loop
11:22:11
finish mi3 range(n) 2loop
11:22:11
[[-2.20048333]]
end mi3 loop
11:22:11
estep
11:22:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:22:29
start ppi1
11:22:29
start mi0
11:22:29
start mi0 range(p) 1 loop
11:22:29
finish mi0 range(p) 1 loop
11:22:29
start mi0 range(p) 2 loop
11:22:29
finish mi0 range(p) 2 loop
11:22:29
start mi0 range(NT) loop
11:22:29
finish mi0 range(NT) loop
11:22:29
start mi0 range(n) loop
11:22:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:22:29
start mi0 range(n) 2loop
11:22:29
finish mi0 range(n) 2loop
11:22:29
start mi1
11:22:29
start mi1 range(p) 1 loop
11:22:29
finish mi1 range(p) 1 loop
11:22:29
start mi1 range(p) 2 loop
11:22:29
finish mi1 range(p) 2 loop
11:22:29
start mi1 range(NT) loop
11:22:29
finish mi1 range(NT) loop
11:22:29
start mi1 range(n) loop
11:22:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:22:29
start mi1 range(n) 2loop
11:22:29
finish mi1 range(n) 2loop
11:22:29
start mi2
11:22:29
start mi2 range(p) 1 loop
11:22:29
finish mi2 range(p) 1 loop
11:22:29
start mi2 range(p) 2 loop
11:22:29
finish mi2 range(p) 2 loop
11:22:29
start mi2 range(NT) loop
11:22:29
finish mi2 range(NT) loop
11:22:29
start mi2 range(n) loop
11:22:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:22:30
start mi2 range(n) 2loop
11:22:30
finish mi2 range(n) 2loop
11:22:30
start mi3
11:22:30
start mi3 range(p) 1 loop
11:22:30
finish mi3 range(p) 1 loop
11:22:30
start mi3 range(p) 2 loop
11:22:30
finish mi3 range(p) 2 loop
11:22:30
start mi3 range(NT) loop
11:22:30
finish mi3 range(NT) loop
11:22:30
start mi3 range(n) loop
11:22:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:22:30
start mi3 range(n) 2loop
11:22:30
finish mi3 range(n) 2loop
11:22:30
[[-2.20048333]]
end mi3 loop
11:22:30
estep
11:22:30
end estep
11:22:48
end pa11:22:48
goodness of fit correlation [0.06356185]
start cluster 11:22:48
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35252 instead
  warnings.warn(
1
parallel submitted
11:23:09
parallel finished
11:26:24
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:26:32
start mi0
11:26:32
start mi0 range(p) 1 loop
11:26:32
finish mi0 range(p) 1 loop
11:26:32
start mi0 range(p) 2 loop
11:26:32
finish mi0 range(p) 2 loop
11:26:32
start mi0 range(NT) loop
11:26:32
finish mi0 range(NT) loop
11:26:32
start mi0 range(n) loop
11:26:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:26:32
start mi0 range(n) 2loop
11:26:32
finish mi0 range(n) 2loop
11:26:32
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:26:32
start mi1 range(p) 1 loop
11:26:32
finish mi1 range(p) 1 loop
11:26:32
start mi1 range(p) 2 loop
11:26:32
finish mi1 range(p) 2 loop
11:26:32
start mi1 range(NT) loop
11:26:32
finish mi1 range(NT) loop
11:26:32
start mi1 range(n) loop
11:26:32
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:26:33
start mi1 range(n) 2loop
11:26:33
finish mi1 range(n) 2loop
11:26:33
start mi2
11:26:33
start mi2 range(p) 1 loop
11:26:33
finish mi2 range(p) 1 loop
11:26:33
start mi2 range(p) 2 loop
11:26:33
finish mi2 range(p) 2 loop
11:26:33
start mi2 range(NT) loop
11:26:33
finish mi2 range(NT) loop
11:26:33
start mi2 range(n) loop
11:26:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:26:33
start mi2 range(n) 2loop
11:26:33
finish mi2 range(n) 2loop
11:26:33
start mi3
11:26:33
start mi3 range(p) 1 loop
11:26:33
finish mi3 range(p) 1 loop
11:26:33
start mi3 range(p) 2 loop
11:26:33
finish mi3 range(p) 2 loop
11:26:33
start mi3 range(NT) loop
11:26:33
finish mi3 range(NT) loop
11:26:33
start mi3 range(n) loop
11:26:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:26:33
start mi3 range(n) 2loop
11:26:33
finish mi3 range(n) 2loop
11:26:33
[[-2.21247936]]
end mi3 loop
11:26:33
estep
11:26:33
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:26:50
start ppi1
11:26:50
start mi0
11:26:50
start mi0 range(p) 1 loop
11:26:50
finish mi0 range(p) 1 loop
11:26:50
start mi0 range(p) 2 loop
11:26:50
finish mi0 range(p) 2 loop
11:26:50
start mi0 range(NT) loop
11:26:50
finish mi0 range(NT) loop
11:26:50
start mi0 range(n) loop
11:26:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:26:51
start mi0 range(n) 2loop
11:26:51
finish mi0 range(n) 2loop
11:26:51
start mi1
11:26:51
start mi1 range(p) 1 loop
11:26:51
finish mi1 range(p) 1 loop
11:26:51
start mi1 range(p) 2 loop
11:26:51
finish mi1 range(p) 2 loop
11:26:51
start mi1 range(NT) loop
11:26:51
finish mi1 range(NT) loop
11:26:51
start mi1 range(n) loop
11:26:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:26:51
start mi1 range(n) 2loop
11:26:51
finish mi1 range(n) 2loop
11:26:51
start mi2
11:26:51
start mi2 range(p) 1 loop
11:26:51
finish mi2 range(p) 1 loop
11:26:51
start mi2 range(p) 2 loop
11:26:51
finish mi2 range(p) 2 loop
11:26:51
start mi2 range(NT) loop
11:26:51
finish mi2 range(NT) loop
11:26:51
start mi2 range(n) loop
11:26:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:26:51
start mi2 range(n) 2loop
11:26:51
finish mi2 range(n) 2loop
11:26:51
start mi3
11:26:51
start mi3 range(p) 1 loop
11:26:51
finish mi3 range(p) 1 loop
11:26:51
start mi3 range(p) 2 loop
11:26:51
finish mi3 range(p) 2 loop
11:26:51
start mi3 range(NT) loop
11:26:51
finish mi3 range(NT) loop
11:26:51
start mi3 range(n) loop
11:26:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:26:51
start mi3 range(n) 2loop
11:26:51
finish mi3 range(n) 2loop
11:26:51
[[-2.27497406]]
end mi3 loop
11:26:52
estep
11:26:52
end estep
11:27:09
end pa11:27:09
goodness of fit correlation [0.18921958]
start cluster 11:27:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36354 instead
  warnings.warn(
2
parallel submitted
11:27:31
parallel finished
11:30:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:30:56
start mi0
11:30:56
start mi0 range(p) 1 loop
11:30:56
finish mi0 range(p) 1 loop
11:30:56
start mi0 range(p) 2 loop
11:30:56
finish mi0 range(p) 2 loop
11:30:56
start mi0 range(NT) loop
11:30:56
finish mi0 range(NT) loop
11:30:56
start mi0 range(n) loop
11:30:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:30:56
start mi0 range(n) 2loop
11:30:56
finish mi0 range(n) 2loop
11:30:56
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:30:56
start mi1 range(p) 1 loop
11:30:56
finish mi1 range(p) 1 loop
11:30:56
start mi1 range(p) 2 loop
11:30:56
finish mi1 range(p) 2 loop
11:30:56
start mi1 range(NT) loop
11:30:56
finish mi1 range(NT) loop
11:30:56
start mi1 range(n) loop
11:30:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:30:56
start mi1 range(n) 2loop
11:30:56
finish mi1 range(n) 2loop
11:30:57
start mi2
11:30:57
start mi2 range(p) 1 loop
11:30:57
finish mi2 range(p) 1 loop
11:30:57
start mi2 range(p) 2 loop
11:30:57
finish mi2 range(p) 2 loop
11:30:57
start mi2 range(NT) loop
11:30:57
finish mi2 range(NT) loop
11:30:57
start mi2 range(n) loop
11:30:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:30:57
start mi2 range(n) 2loop
11:30:57
finish mi2 range(n) 2loop
11:30:57
start mi3
11:30:57
start mi3 range(p) 1 loop
11:30:57
finish mi3 range(p) 1 loop
11:30:57
start mi3 range(p) 2 loop
11:30:57
finish mi3 range(p) 2 loop
11:30:57
start mi3 range(NT) loop
11:30:57
finish mi3 range(NT) loop
11:30:57
start mi3 range(n) loop
11:30:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:30:57
start mi3 range(n) 2loop
11:30:57
finish mi3 range(n) 2loop
11:30:57
[[-2.24220765]]
end mi3 loop
11:30:57
estep
11:30:57
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:31:14
start ppi1
11:31:14
start mi0
11:31:14
start mi0 range(p) 1 loop
11:31:14
finish mi0 range(p) 1 loop
11:31:14
start mi0 range(p) 2 loop
11:31:14
finish mi0 range(p) 2 loop
11:31:14
start mi0 range(NT) loop
11:31:14
finish mi0 range(NT) loop
11:31:14
start mi0 range(n) loop
11:31:14
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:31:15
start mi0 range(n) 2loop
11:31:15
finish mi0 range(n) 2loop
11:31:15
start mi1
11:31:15
start mi1 range(p) 1 loop
11:31:15
finish mi1 range(p) 1 loop
11:31:15
start mi1 range(p) 2 loop
11:31:15
finish mi1 range(p) 2 loop
11:31:15
start mi1 range(NT) loop
11:31:15
finish mi1 range(NT) loop
11:31:15
start mi1 range(n) loop
11:31:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:31:15
start mi1 range(n) 2loop
11:31:15
finish mi1 range(n) 2loop
11:31:15
start mi2
11:31:15
start mi2 range(p) 1 loop
11:31:15
finish mi2 range(p) 1 loop
11:31:15
start mi2 range(p) 2 loop
11:31:15
finish mi2 range(p) 2 loop
11:31:15
start mi2 range(NT) loop
11:31:15
finish mi2 range(NT) loop
11:31:15
start mi2 range(n) loop
11:31:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:31:15
start mi2 range(n) 2loop
11:31:15
finish mi2 range(n) 2loop
11:31:15
start mi3
11:31:15
start mi3 range(p) 1 loop
11:31:15
finish mi3 range(p) 1 loop
11:31:15
start mi3 range(p) 2 loop
11:31:15
finish mi3 range(p) 2 loop
11:31:15
start mi3 range(NT) loop
11:31:15
finish mi3 range(NT) loop
11:31:15
start mi3 range(n) loop
11:31:15
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:31:15
start mi3 range(n) 2loop
11:31:15
finish mi3 range(n) 2loop
11:31:15
[[-2.30470109]]
end mi3 loop
11:31:15
estep
11:31:15
end estep
11:31:33
end pa11:31:33
goodness of fit correlation [0.24048071]
start cluster 11:31:33
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 33713 instead
  warnings.warn(
3
parallel submitted
11:31:55
parallel finished
11:35:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:35:28
start mi0
11:35:28
start mi0 range(p) 1 loop
11:35:28
finish mi0 range(p) 1 loop
11:35:28
start mi0 range(p) 2 loop
11:35:28
finish mi0 range(p) 2 loop
11:35:28
start mi0 range(NT) loop
11:35:28
finish mi0 range(NT) loop
11:35:28
start mi0 range(n) loop
11:35:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:35:28
start mi0 range(n) 2loop
11:35:28
finish mi0 range(n) 2loop
11:35:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:35:28
start mi1 range(p) 1 loop
11:35:28
finish mi1 range(p) 1 loop
11:35:28
start mi1 range(p) 2 loop
11:35:28
finish mi1 range(p) 2 loop
11:35:28
start mi1 range(NT) loop
11:35:28
finish mi1 range(NT) loop
11:35:28
start mi1 range(n) loop
11:35:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:35:28
start mi1 range(n) 2loop
11:35:28
finish mi1 range(n) 2loop
11:35:28
start mi2
11:35:28
start mi2 range(p) 1 loop
11:35:28
finish mi2 range(p) 1 loop
11:35:28
start mi2 range(p) 2 loop
11:35:28
finish mi2 range(p) 2 loop
11:35:28
start mi2 range(NT) loop
11:35:28
finish mi2 range(NT) loop
11:35:28
start mi2 range(n) loop
11:35:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:35:28
start mi2 range(n) 2loop
11:35:28
finish mi2 range(n) 2loop
11:35:29
start mi3
11:35:29
start mi3 range(p) 1 loop
11:35:29
finish mi3 range(p) 1 loop
11:35:29
start mi3 range(p) 2 loop
11:35:29
finish mi3 range(p) 2 loop
11:35:29
start mi3 range(NT) loop
11:35:29
finish mi3 range(NT) loop
11:35:29
start mi3 range(n) loop
11:35:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:35:29
start mi3 range(n) 2loop
11:35:29
finish mi3 range(n) 2loop
11:35:29
[[-2.28440393]]
end mi3 loop
11:35:29
estep
11:35:29
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:35:46
start ppi1
11:35:46
start mi0
11:35:46
start mi0 range(p) 1 loop
11:35:46
finish mi0 range(p) 1 loop
11:35:46
start mi0 range(p) 2 loop
11:35:46
finish mi0 range(p) 2 loop
11:35:46
start mi0 range(NT) loop
11:35:46
finish mi0 range(NT) loop
11:35:46
start mi0 range(n) loop
11:35:46
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:35:46
start mi0 range(n) 2loop
11:35:46
finish mi0 range(n) 2loop
11:35:47
start mi1
11:35:47
start mi1 range(p) 1 loop
11:35:47
finish mi1 range(p) 1 loop
11:35:47
start mi1 range(p) 2 loop
11:35:47
finish mi1 range(p) 2 loop
11:35:47
start mi1 range(NT) loop
11:35:47
finish mi1 range(NT) loop
11:35:47
start mi1 range(n) loop
11:35:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:35:47
start mi1 range(n) 2loop
11:35:47
finish mi1 range(n) 2loop
11:35:47
start mi2
11:35:47
start mi2 range(p) 1 loop
11:35:47
finish mi2 range(p) 1 loop
11:35:47
start mi2 range(p) 2 loop
11:35:47
finish mi2 range(p) 2 loop
11:35:47
start mi2 range(NT) loop
11:35:47
finish mi2 range(NT) loop
11:35:47
start mi2 range(n) loop
11:35:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:35:47
start mi2 range(n) 2loop
11:35:47
finish mi2 range(n) 2loop
11:35:47
start mi3
11:35:47
start mi3 range(p) 1 loop
11:35:47
finish mi3 range(p) 1 loop
11:35:47
start mi3 range(p) 2 loop
11:35:47
finish mi3 range(p) 2 loop
11:35:47
start mi3 range(NT) loop
11:35:47
finish mi3 range(NT) loop
11:35:47
start mi3 range(n) loop
11:35:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:35:47
start mi3 range(n) 2loop
11:35:47
finish mi3 range(n) 2loop
11:35:47
[[-2.34689651]]
end mi3 loop
11:35:47
estep
11:35:47
end estep
11:36:05
end pa11:36:05
goodness of fit correlation [0.18788473]
start cluster 11:36:05
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38541 instead
  warnings.warn(
4
parallel submitted
11:36:27
parallel finished
11:39:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:39:56
start mi0
11:39:56
start mi0 range(p) 1 loop
11:39:56
finish mi0 range(p) 1 loop
11:39:56
start mi0 range(p) 2 loop
11:39:56
finish mi0 range(p) 2 loop
11:39:56
start mi0 range(NT) loop
11:39:56
finish mi0 range(NT) loop
11:39:56
start mi0 range(n) loop
11:39:56
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:39:57
start mi0 range(n) 2loop
11:39:57
finish mi0 range(n) 2loop
11:39:57
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:39:57
start mi1 range(p) 1 loop
11:39:57
finish mi1 range(p) 1 loop
11:39:57
start mi1 range(p) 2 loop
11:39:57
finish mi1 range(p) 2 loop
11:39:57
start mi1 range(NT) loop
11:39:57
finish mi1 range(NT) loop
11:39:57
start mi1 range(n) loop
11:39:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:39:57
start mi1 range(n) 2loop
11:39:57
finish mi1 range(n) 2loop
11:39:57
start mi2
11:39:57
start mi2 range(p) 1 loop
11:39:57
finish mi2 range(p) 1 loop
11:39:57
start mi2 range(p) 2 loop
11:39:57
finish mi2 range(p) 2 loop
11:39:57
start mi2 range(NT) loop
11:39:57
finish mi2 range(NT) loop
11:39:57
start mi2 range(n) loop
11:39:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:39:57
start mi2 range(n) 2loop
11:39:57
finish mi2 range(n) 2loop
11:39:57
start mi3
11:39:57
start mi3 range(p) 1 loop
11:39:57
finish mi3 range(p) 1 loop
11:39:57
start mi3 range(p) 2 loop
11:39:57
finish mi3 range(p) 2 loop
11:39:57
start mi3 range(NT) loop
11:39:57
finish mi3 range(NT) loop
11:39:57
start mi3 range(n) loop
11:39:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:39:57
start mi3 range(n) 2loop
11:39:57
finish mi3 range(n) 2loop
11:39:58
[[-2.27077642]]
end mi3 loop
11:39:58
estep
11:39:58
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:40:15
start ppi1
11:40:15
start mi0
11:40:15
start mi0 range(p) 1 loop
11:40:15
finish mi0 range(p) 1 loop
11:40:15
start mi0 range(p) 2 loop
11:40:15
finish mi0 range(p) 2 loop
11:40:15
start mi0 range(NT) loop
11:40:16
finish mi0 range(NT) loop
11:40:16
start mi0 range(n) loop
11:40:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:40:16
start mi0 range(n) 2loop
11:40:16
finish mi0 range(n) 2loop
11:40:16
start mi1
11:40:16
start mi1 range(p) 1 loop
11:40:16
finish mi1 range(p) 1 loop
11:40:16
start mi1 range(p) 2 loop
11:40:16
finish mi1 range(p) 2 loop
11:40:16
start mi1 range(NT) loop
11:40:16
finish mi1 range(NT) loop
11:40:16
start mi1 range(n) loop
11:40:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:40:16
start mi1 range(n) 2loop
11:40:16
finish mi1 range(n) 2loop
11:40:16
start mi2
11:40:16
start mi2 range(p) 1 loop
11:40:16
finish mi2 range(p) 1 loop
11:40:16
start mi2 range(p) 2 loop
11:40:16
finish mi2 range(p) 2 loop
11:40:16
start mi2 range(NT) loop
11:40:16
finish mi2 range(NT) loop
11:40:16
start mi2 range(n) loop
11:40:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:40:16
start mi2 range(n) 2loop
11:40:16
finish mi2 range(n) 2loop
11:40:16
start mi3
11:40:16
start mi3 range(p) 1 loop
11:40:16
finish mi3 range(p) 1 loop
11:40:16
start mi3 range(p) 2 loop
11:40:16
finish mi3 range(p) 2 loop
11:40:16
start mi3 range(NT) loop
11:40:16
finish mi3 range(NT) loop
11:40:16
start mi3 range(n) loop
11:40:16
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:40:16
start mi3 range(n) 2loop
11:40:16
finish mi3 range(n) 2loop
11:40:17
[[-2.3332692]]
end mi3 loop
11:40:17
estep
11:40:17
end estep
11:40:34
end pa11:40:34
goodness of fit correlation [0.22071392]
start cluster 11:40:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42647 instead
  warnings.warn(
5
parallel submitted
11:40:57
parallel finished
11:45:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:45:54
start mi0
11:45:54
start mi0 range(p) 1 loop
11:45:54
finish mi0 range(p) 1 loop
11:45:54
start mi0 range(p) 2 loop
11:45:54
finish mi0 range(p) 2 loop
11:45:54
start mi0 range(NT) loop
11:45:54
finish mi0 range(NT) loop
11:45:54
start mi0 range(n) loop
11:45:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:45:54
start mi0 range(n) 2loop
11:45:54
finish mi0 range(n) 2loop
11:45:54
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:45:54
start mi1 range(p) 1 loop
11:45:54
finish mi1 range(p) 1 loop
11:45:54
start mi1 range(p) 2 loop
11:45:54
finish mi1 range(p) 2 loop
11:45:54
start mi1 range(NT) loop
11:45:54
finish mi1 range(NT) loop
11:45:54
start mi1 range(n) loop
11:45:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:45:54
start mi1 range(n) 2loop
11:45:54
finish mi1 range(n) 2loop
11:45:54
start mi2
11:45:54
start mi2 range(p) 1 loop
11:45:54
finish mi2 range(p) 1 loop
11:45:54
start mi2 range(p) 2 loop
11:45:54
finish mi2 range(p) 2 loop
11:45:54
start mi2 range(NT) loop
11:45:54
finish mi2 range(NT) loop
11:45:54
start mi2 range(n) loop
11:45:54
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:45:54
start mi2 range(n) 2loop
11:45:54
finish mi2 range(n) 2loop
11:45:55
start mi3
11:45:55
start mi3 range(p) 1 loop
11:45:55
finish mi3 range(p) 1 loop
11:45:55
start mi3 range(p) 2 loop
11:45:55
finish mi3 range(p) 2 loop
11:45:55
start mi3 range(NT) loop
11:45:55
finish mi3 range(NT) loop
11:45:55
start mi3 range(n) loop
11:45:55
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:45:55
start mi3 range(n) 2loop
11:45:55
finish mi3 range(n) 2loop
11:45:55
[[-2.30274948]]
end mi3 loop
11:45:55
estep
11:45:55
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:46:12
start ppi1
11:46:12
start mi0
11:46:12
start mi0 range(p) 1 loop
11:46:12
finish mi0 range(p) 1 loop
11:46:12
start mi0 range(p) 2 loop
11:46:12
finish mi0 range(p) 2 loop
11:46:12
start mi0 range(NT) loop
11:46:12
finish mi0 range(NT) loop
11:46:12
start mi0 range(n) loop
11:46:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:46:13
start mi0 range(n) 2loop
11:46:13
finish mi0 range(n) 2loop
11:46:13
start mi1
11:46:13
start mi1 range(p) 1 loop
11:46:13
finish mi1 range(p) 1 loop
11:46:13
start mi1 range(p) 2 loop
11:46:13
finish mi1 range(p) 2 loop
11:46:13
start mi1 range(NT) loop
11:46:13
finish mi1 range(NT) loop
11:46:13
start mi1 range(n) loop
11:46:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:46:13
start mi1 range(n) 2loop
11:46:13
finish mi1 range(n) 2loop
11:46:13
start mi2
11:46:13
start mi2 range(p) 1 loop
11:46:13
finish mi2 range(p) 1 loop
11:46:13
start mi2 range(p) 2 loop
11:46:13
finish mi2 range(p) 2 loop
11:46:13
start mi2 range(NT) loop
11:46:13
finish mi2 range(NT) loop
11:46:13
start mi2 range(n) loop
11:46:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:46:13
start mi2 range(n) 2loop
11:46:13
finish mi2 range(n) 2loop
11:46:13
start mi3
11:46:13
start mi3 range(p) 1 loop
11:46:13
finish mi3 range(p) 1 loop
11:46:13
start mi3 range(p) 2 loop
11:46:13
finish mi3 range(p) 2 loop
11:46:13
start mi3 range(NT) loop
11:46:13
finish mi3 range(NT) loop
11:46:13
start mi3 range(n) loop
11:46:13
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:46:13
start mi3 range(n) 2loop
11:46:13
finish mi3 range(n) 2loop
11:46:13
[[-2.36524187]]
end mi3 loop
11:46:13
estep
11:46:13
end estep
11:46:30
end pa11:46:30
goodness of fit correlation [0.22882046]
start cluster 11:46:30
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39227 instead
  warnings.warn(
6
parallel submitted
11:46:53
parallel finished
11:50:59
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:51:10
start mi0
11:51:10
start mi0 range(p) 1 loop
11:51:10
finish mi0 range(p) 1 loop
11:51:10
start mi0 range(p) 2 loop
11:51:10
finish mi0 range(p) 2 loop
11:51:10
start mi0 range(NT) loop
11:51:10
finish mi0 range(NT) loop
11:51:10
start mi0 range(n) loop
11:51:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:51:10
start mi0 range(n) 2loop
11:51:10
finish mi0 range(n) 2loop
11:51:10
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:51:10
start mi1 range(p) 1 loop
11:51:10
finish mi1 range(p) 1 loop
11:51:10
start mi1 range(p) 2 loop
11:51:10
finish mi1 range(p) 2 loop
11:51:10
start mi1 range(NT) loop
11:51:10
finish mi1 range(NT) loop
11:51:10
start mi1 range(n) loop
11:51:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:51:10
start mi1 range(n) 2loop
11:51:10
finish mi1 range(n) 2loop
11:51:10
start mi2
11:51:10
start mi2 range(p) 1 loop
11:51:10
finish mi2 range(p) 1 loop
11:51:10
start mi2 range(p) 2 loop
11:51:10
finish mi2 range(p) 2 loop
11:51:10
start mi2 range(NT) loop
11:51:10
finish mi2 range(NT) loop
11:51:10
start mi2 range(n) loop
11:51:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:51:10
start mi2 range(n) 2loop
11:51:10
finish mi2 range(n) 2loop
11:51:11
start mi3
11:51:11
start mi3 range(p) 1 loop
11:51:11
finish mi3 range(p) 1 loop
11:51:11
start mi3 range(p) 2 loop
11:51:11
finish mi3 range(p) 2 loop
11:51:11
start mi3 range(NT) loop
11:51:11
finish mi3 range(NT) loop
11:51:11
start mi3 range(n) loop
11:51:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:51:11
start mi3 range(n) 2loop
11:51:11
finish mi3 range(n) 2loop
11:51:11
[[-2.35883424]]
end mi3 loop
11:51:11
estep
11:51:11
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:51:27
start ppi1
11:51:27
start mi0
11:51:27
start mi0 range(p) 1 loop
11:51:27
finish mi0 range(p) 1 loop
11:51:27
start mi0 range(p) 2 loop
11:51:27
finish mi0 range(p) 2 loop
11:51:27
start mi0 range(NT) loop
11:51:27
finish mi0 range(NT) loop
11:51:27
start mi0 range(n) loop
11:51:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:51:27
start mi0 range(n) 2loop
11:51:27
finish mi0 range(n) 2loop
11:51:28
start mi1
11:51:28
start mi1 range(p) 1 loop
11:51:28
finish mi1 range(p) 1 loop
11:51:28
start mi1 range(p) 2 loop
11:51:28
finish mi1 range(p) 2 loop
11:51:28
start mi1 range(NT) loop
11:51:28
finish mi1 range(NT) loop
11:51:28
start mi1 range(n) loop
11:51:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:51:28
start mi1 range(n) 2loop
11:51:28
finish mi1 range(n) 2loop
11:51:28
start mi2
11:51:28
start mi2 range(p) 1 loop
11:51:28
finish mi2 range(p) 1 loop
11:51:28
start mi2 range(p) 2 loop
11:51:28
finish mi2 range(p) 2 loop
11:51:28
start mi2 range(NT) loop
11:51:28
finish mi2 range(NT) loop
11:51:28
start mi2 range(n) loop
11:51:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:51:28
start mi2 range(n) 2loop
11:51:28
finish mi2 range(n) 2loop
11:51:28
start mi3
11:51:28
start mi3 range(p) 1 loop
11:51:28
finish mi3 range(p) 1 loop
11:51:28
start mi3 range(p) 2 loop
11:51:28
finish mi3 range(p) 2 loop
11:51:28
start mi3 range(NT) loop
11:51:28
finish mi3 range(NT) loop
11:51:28
start mi3 range(n) loop
11:51:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:51:28
start mi3 range(n) 2loop
11:51:28
finish mi3 range(n) 2loop
11:51:28
[[-2.42132637]]
end mi3 loop
11:51:28
estep
11:51:28
end estep
11:51:46
end pa11:51:46
goodness of fit correlation [0.27705958]
start cluster 11:51:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40378 instead
  warnings.warn(
7
parallel submitted
11:52:09
parallel finished
11:55:29
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:55:38
start mi0
11:55:38
start mi0 range(p) 1 loop
11:55:38
finish mi0 range(p) 1 loop
11:55:38
start mi0 range(p) 2 loop
11:55:38
finish mi0 range(p) 2 loop
11:55:38
start mi0 range(NT) loop
11:55:38
finish mi0 range(NT) loop
11:55:38
start mi0 range(n) loop
11:55:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:55:38
start mi0 range(n) 2loop
11:55:38
finish mi0 range(n) 2loop
11:55:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:55:38
start mi1 range(p) 1 loop
11:55:38
finish mi1 range(p) 1 loop
11:55:38
start mi1 range(p) 2 loop
11:55:38
finish mi1 range(p) 2 loop
11:55:38
start mi1 range(NT) loop
11:55:38
finish mi1 range(NT) loop
11:55:38
start mi1 range(n) loop
11:55:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:55:38
start mi1 range(n) 2loop
11:55:38
finish mi1 range(n) 2loop
11:55:39
start mi2
11:55:39
start mi2 range(p) 1 loop
11:55:39
finish mi2 range(p) 1 loop
11:55:39
start mi2 range(p) 2 loop
11:55:39
finish mi2 range(p) 2 loop
11:55:39
start mi2 range(NT) loop
11:55:39
finish mi2 range(NT) loop
11:55:39
start mi2 range(n) loop
11:55:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:55:39
start mi2 range(n) 2loop
11:55:39
finish mi2 range(n) 2loop
11:55:39
start mi3
11:55:39
start mi3 range(p) 1 loop
11:55:39
finish mi3 range(p) 1 loop
11:55:39
start mi3 range(p) 2 loop
11:55:39
finish mi3 range(p) 2 loop
11:55:39
start mi3 range(NT) loop
11:55:39
finish mi3 range(NT) loop
11:55:39
start mi3 range(n) loop
11:55:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:55:39
start mi3 range(n) 2loop
11:55:39
finish mi3 range(n) 2loop
11:55:39
[[-2.29463346]]
end mi3 loop
11:55:39
estep
11:55:39
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
11:55:57
start ppi1
11:55:57
start mi0
11:55:57
start mi0 range(p) 1 loop
11:55:57
finish mi0 range(p) 1 loop
11:55:57
start mi0 range(p) 2 loop
11:55:57
finish mi0 range(p) 2 loop
11:55:57
start mi0 range(NT) loop
11:55:57
finish mi0 range(NT) loop
11:55:57
start mi0 range(n) loop
11:55:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
11:55:57
start mi0 range(n) 2loop
11:55:57
finish mi0 range(n) 2loop
11:55:57
start mi1
11:55:57
start mi1 range(p) 1 loop
11:55:57
finish mi1 range(p) 1 loop
11:55:57
start mi1 range(p) 2 loop
11:55:57
finish mi1 range(p) 2 loop
11:55:57
start mi1 range(NT) loop
11:55:57
finish mi1 range(NT) loop
11:55:57
start mi1 range(n) loop
11:55:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
11:55:57
start mi1 range(n) 2loop
11:55:57
finish mi1 range(n) 2loop
11:55:57
start mi2
11:55:57
start mi2 range(p) 1 loop
11:55:57
finish mi2 range(p) 1 loop
11:55:57
start mi2 range(p) 2 loop
11:55:57
finish mi2 range(p) 2 loop
11:55:57
start mi2 range(NT) loop
11:55:58
finish mi2 range(NT) loop
11:55:58
start mi2 range(n) loop
11:55:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
11:55:58
start mi2 range(n) 2loop
11:55:58
finish mi2 range(n) 2loop
11:55:58
start mi3
11:55:58
start mi3 range(p) 1 loop
11:55:58
finish mi3 range(p) 1 loop
11:55:58
start mi3 range(p) 2 loop
11:55:58
finish mi3 range(p) 2 loop
11:55:58
start mi3 range(NT) loop
11:55:58
finish mi3 range(NT) loop
11:55:58
start mi3 range(n) loop
11:55:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
11:55:58
start mi3 range(n) 2loop
11:55:58
finish mi3 range(n) 2loop
11:55:58
[[-2.35712592]]
end mi3 loop
11:55:58
estep
11:55:58
end estep
11:56:16
end pa11:56:16
goodness of fit correlation [0.20349821]
start cluster 11:56:16
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37901 instead
  warnings.warn(
8
parallel submitted
11:56:41
parallel finished
11:59:40
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
11:59:51
start mi0
11:59:51
start mi0 range(p) 1 loop
11:59:51
finish mi0 range(p) 1 loop
11:59:51
start mi0 range(p) 2 loop
11:59:51
finish mi0 range(p) 2 loop
11:59:51
start mi0 range(NT) loop
11:59:51
finish mi0 range(NT) loop
11:59:51
start mi0 range(n) loop
11:59:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
11:59:51
start mi0 range(n) 2loop
11:59:51
finish mi0 range(n) 2loop
11:59:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
11:59:51
start mi1 range(p) 1 loop
11:59:51
finish mi1 range(p) 1 loop
11:59:51
start mi1 range(p) 2 loop
11:59:51
finish mi1 range(p) 2 loop
11:59:51
start mi1 range(NT) loop
11:59:52
finish mi1 range(NT) loop
11:59:52
start mi1 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
11:59:52
start mi1 range(n) 2loop
11:59:52
finish mi1 range(n) 2loop
11:59:52
start mi2
11:59:52
start mi2 range(p) 1 loop
11:59:52
finish mi2 range(p) 1 loop
11:59:52
start mi2 range(p) 2 loop
11:59:52
finish mi2 range(p) 2 loop
11:59:52
start mi2 range(NT) loop
11:59:52
finish mi2 range(NT) loop
11:59:52
start mi2 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
11:59:52
start mi2 range(n) 2loop
11:59:52
finish mi2 range(n) 2loop
11:59:52
start mi3
11:59:52
start mi3 range(p) 1 loop
11:59:52
finish mi3 range(p) 1 loop
11:59:52
start mi3 range(p) 2 loop
11:59:52
finish mi3 range(p) 2 loop
11:59:52
start mi3 range(NT) loop
11:59:52
finish mi3 range(NT) loop
11:59:52
start mi3 range(n) loop
11:59:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
11:59:52
start mi3 range(n) 2loop
11:59:52
finish mi3 range(n) 2loop
11:59:52
[[-2.29235763]]
end mi3 loop
11:59:52
estep
11:59:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:00:10
start ppi1
12:00:10
start mi0
12:00:10
start mi0 range(p) 1 loop
12:00:10
finish mi0 range(p) 1 loop
12:00:10
start mi0 range(p) 2 loop
12:00:10
finish mi0 range(p) 2 loop
12:00:10
start mi0 range(NT) loop
12:00:10
finish mi0 range(NT) loop
12:00:10
start mi0 range(n) loop
12:00:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:00:10
start mi0 range(n) 2loop
12:00:10
finish mi0 range(n) 2loop
12:00:10
start mi1
12:00:10
start mi1 range(p) 1 loop
12:00:10
finish mi1 range(p) 1 loop
12:00:10
start mi1 range(p) 2 loop
12:00:10
finish mi1 range(p) 2 loop
12:00:10
start mi1 range(NT) loop
12:00:10
finish mi1 range(NT) loop
12:00:10
start mi1 range(n) loop
12:00:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:00:10
start mi1 range(n) 2loop
12:00:10
finish mi1 range(n) 2loop
12:00:10
start mi2
12:00:10
start mi2 range(p) 1 loop
12:00:10
finish mi2 range(p) 1 loop
12:00:10
start mi2 range(p) 2 loop
12:00:10
finish mi2 range(p) 2 loop
12:00:10
start mi2 range(NT) loop
12:00:10
finish mi2 range(NT) loop
12:00:10
start mi2 range(n) loop
12:00:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:00:10
start mi2 range(n) 2loop
12:00:10
finish mi2 range(n) 2loop
12:00:10
start mi3
12:00:10
start mi3 range(p) 1 loop
12:00:10
finish mi3 range(p) 1 loop
12:00:10
start mi3 range(p) 2 loop
12:00:10
finish mi3 range(p) 2 loop
12:00:10
start mi3 range(NT) loop
12:00:10
finish mi3 range(NT) loop
12:00:10
start mi3 range(n) loop
12:00:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:00:11
start mi3 range(n) 2loop
12:00:11
finish mi3 range(n) 2loop
12:00:11
[[-2.35485012]]
end mi3 loop
12:00:11
estep
12:00:11
end estep
12:00:28
end pa12:00:28
goodness of fit correlation [0.23999376]
start cluster 12:00:28
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46492 instead
  warnings.warn(
9
parallel submitted
12:00:51
parallel finished
12:04:10
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:04:22
start mi0
12:04:22
start mi0 range(p) 1 loop
12:04:22
finish mi0 range(p) 1 loop
12:04:22
start mi0 range(p) 2 loop
12:04:22
finish mi0 range(p) 2 loop
12:04:22
start mi0 range(NT) loop
12:04:22
finish mi0 range(NT) loop
12:04:22
start mi0 range(n) loop
12:04:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:04:22
start mi0 range(n) 2loop
12:04:22
finish mi0 range(n) 2loop
12:04:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:04:23
start mi1 range(p) 1 loop
12:04:23
finish mi1 range(p) 1 loop
12:04:23
start mi1 range(p) 2 loop
12:04:23
finish mi1 range(p) 2 loop
12:04:23
start mi1 range(NT) loop
12:04:23
finish mi1 range(NT) loop
12:04:23
start mi1 range(n) loop
12:04:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:04:23
start mi1 range(n) 2loop
12:04:23
finish mi1 range(n) 2loop
12:04:23
start mi2
12:04:23
start mi2 range(p) 1 loop
12:04:23
finish mi2 range(p) 1 loop
12:04:23
start mi2 range(p) 2 loop
12:04:23
finish mi2 range(p) 2 loop
12:04:23
start mi2 range(NT) loop
12:04:23
finish mi2 range(NT) loop
12:04:23
start mi2 range(n) loop
12:04:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:04:23
start mi2 range(n) 2loop
12:04:23
finish mi2 range(n) 2loop
12:04:23
start mi3
12:04:23
start mi3 range(p) 1 loop
12:04:23
finish mi3 range(p) 1 loop
12:04:23
start mi3 range(p) 2 loop
12:04:23
finish mi3 range(p) 2 loop
12:04:23
start mi3 range(NT) loop
12:04:23
finish mi3 range(NT) loop
12:04:23
start mi3 range(n) loop
12:04:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:04:23
start mi3 range(n) 2loop
12:04:23
finish mi3 range(n) 2loop
12:04:23
[[-2.29743888]]
end mi3 loop
12:04:23
estep
12:04:23
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:04:40
start ppi1
12:04:40
start mi0
12:04:40
start mi0 range(p) 1 loop
12:04:40
finish mi0 range(p) 1 loop
12:04:40
start mi0 range(p) 2 loop
12:04:40
finish mi0 range(p) 2 loop
12:04:40
start mi0 range(NT) loop
12:04:40
finish mi0 range(NT) loop
12:04:40
start mi0 range(n) loop
12:04:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:04:40
start mi0 range(n) 2loop
12:04:40
finish mi0 range(n) 2loop
12:04:40
start mi1
12:04:40
start mi1 range(p) 1 loop
12:04:40
finish mi1 range(p) 1 loop
12:04:40
start mi1 range(p) 2 loop
12:04:40
finish mi1 range(p) 2 loop
12:04:40
start mi1 range(NT) loop
12:04:40
finish mi1 range(NT) loop
12:04:41
start mi1 range(n) loop
12:04:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:04:41
start mi1 range(n) 2loop
12:04:41
finish mi1 range(n) 2loop
12:04:41
start mi2
12:04:41
start mi2 range(p) 1 loop
12:04:41
finish mi2 range(p) 1 loop
12:04:41
start mi2 range(p) 2 loop
12:04:41
finish mi2 range(p) 2 loop
12:04:41
start mi2 range(NT) loop
12:04:41
finish mi2 range(NT) loop
12:04:41
start mi2 range(n) loop
12:04:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:04:41
start mi2 range(n) 2loop
12:04:41
finish mi2 range(n) 2loop
12:04:41
start mi3
12:04:41
start mi3 range(p) 1 loop
12:04:41
finish mi3 range(p) 1 loop
12:04:41
start mi3 range(p) 2 loop
12:04:41
finish mi3 range(p) 2 loop
12:04:41
start mi3 range(NT) loop
12:04:41
finish mi3 range(NT) loop
12:04:41
start mi3 range(n) loop
12:04:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:04:41
start mi3 range(n) 2loop
12:04:41
finish mi3 range(n) 2loop
12:04:41
[[-2.35993132]]
end mi3 loop
12:04:41
estep
12:04:41
end estep
12:04:59
end pa12:04:59
goodness of fit correlation [0.22440006]
start cluster 12:04:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 46029 instead
  warnings.warn(
10
parallel submitted
12:05:21
parallel finished
12:08:39
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:08:49
start mi0
12:08:49
start mi0 range(p) 1 loop
12:08:49
finish mi0 range(p) 1 loop
12:08:49
start mi0 range(p) 2 loop
12:08:49
finish mi0 range(p) 2 loop
12:08:49
start mi0 range(NT) loop
12:08:49
finish mi0 range(NT) loop
12:08:49
start mi0 range(n) loop
12:08:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:08:49
start mi0 range(n) 2loop
12:08:49
finish mi0 range(n) 2loop
12:08:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:08:49
start mi1 range(p) 1 loop
12:08:49
finish mi1 range(p) 1 loop
12:08:49
start mi1 range(p) 2 loop
12:08:49
finish mi1 range(p) 2 loop
12:08:49
start mi1 range(NT) loop
12:08:49
finish mi1 range(NT) loop
12:08:49
start mi1 range(n) loop
12:08:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:08:49
start mi1 range(n) 2loop
12:08:49
finish mi1 range(n) 2loop
12:08:50
start mi2
12:08:50
start mi2 range(p) 1 loop
12:08:50
finish mi2 range(p) 1 loop
12:08:50
start mi2 range(p) 2 loop
12:08:50
finish mi2 range(p) 2 loop
12:08:50
start mi2 range(NT) loop
12:08:50
finish mi2 range(NT) loop
12:08:50
start mi2 range(n) loop
12:08:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:08:50
start mi2 range(n) 2loop
12:08:50
finish mi2 range(n) 2loop
12:08:50
start mi3
12:08:50
start mi3 range(p) 1 loop
12:08:50
finish mi3 range(p) 1 loop
12:08:50
start mi3 range(p) 2 loop
12:08:50
finish mi3 range(p) 2 loop
12:08:50
start mi3 range(NT) loop
12:08:50
finish mi3 range(NT) loop
12:08:50
start mi3 range(n) loop
12:08:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:08:50
start mi3 range(n) 2loop
12:08:50
finish mi3 range(n) 2loop
12:08:50
[[-2.29818204]]
end mi3 loop
12:08:50
estep
12:08:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:09:08
start ppi1
12:09:08
start mi0
12:09:08
start mi0 range(p) 1 loop
12:09:08
finish mi0 range(p) 1 loop
12:09:08
start mi0 range(p) 2 loop
12:09:08
finish mi0 range(p) 2 loop
12:09:08
start mi0 range(NT) loop
12:09:08
finish mi0 range(NT) loop
12:09:08
start mi0 range(n) loop
12:09:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:09:08
start mi0 range(n) 2loop
12:09:08
finish mi0 range(n) 2loop
12:09:08
start mi1
12:09:08
start mi1 range(p) 1 loop
12:09:08
finish mi1 range(p) 1 loop
12:09:08
start mi1 range(p) 2 loop
12:09:08
finish mi1 range(p) 2 loop
12:09:08
start mi1 range(NT) loop
12:09:09
finish mi1 range(NT) loop
12:09:09
start mi1 range(n) loop
12:09:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:09:09
start mi1 range(n) 2loop
12:09:09
finish mi1 range(n) 2loop
12:09:09
start mi2
12:09:09
start mi2 range(p) 1 loop
12:09:09
finish mi2 range(p) 1 loop
12:09:09
start mi2 range(p) 2 loop
12:09:09
finish mi2 range(p) 2 loop
12:09:09
start mi2 range(NT) loop
12:09:09
finish mi2 range(NT) loop
12:09:09
start mi2 range(n) loop
12:09:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:09:09
start mi2 range(n) 2loop
12:09:09
finish mi2 range(n) 2loop
12:09:09
start mi3
12:09:09
start mi3 range(p) 1 loop
12:09:09
finish mi3 range(p) 1 loop
12:09:09
start mi3 range(p) 2 loop
12:09:09
finish mi3 range(p) 2 loop
12:09:09
start mi3 range(NT) loop
12:09:09
finish mi3 range(NT) loop
12:09:09
start mi3 range(n) loop
12:09:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:09:09
start mi3 range(n) 2loop
12:09:09
finish mi3 range(n) 2loop
12:09:09
[[-2.36067447]]
end mi3 loop
12:09:09
estep
12:09:09
end estep
12:09:27
end pa12:09:27
goodness of fit correlation [0.18977913]
start cluster 12:09:27
11
parallel submitted
12:09:51
parallel finished
12:13:16
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:13:29
start mi0
12:13:29
start mi0 range(p) 1 loop
12:13:29
finish mi0 range(p) 1 loop
12:13:29
start mi0 range(p) 2 loop
12:13:29
finish mi0 range(p) 2 loop
12:13:29
start mi0 range(NT) loop
12:13:29
finish mi0 range(NT) loop
12:13:29
start mi0 range(n) loop
12:13:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:13:29
start mi0 range(n) 2loop
12:13:29
finish mi0 range(n) 2loop
12:13:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:13:29
start mi1 range(p) 1 loop
12:13:29
finish mi1 range(p) 1 loop
12:13:29
start mi1 range(p) 2 loop
12:13:29
finish mi1 range(p) 2 loop
12:13:29
start mi1 range(NT) loop
12:13:29
finish mi1 range(NT) loop
12:13:29
start mi1 range(n) loop
12:13:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:13:30
start mi1 range(n) 2loop
12:13:30
finish mi1 range(n) 2loop
12:13:30
start mi2
12:13:30
start mi2 range(p) 1 loop
12:13:30
finish mi2 range(p) 1 loop
12:13:30
start mi2 range(p) 2 loop
12:13:30
finish mi2 range(p) 2 loop
12:13:30
start mi2 range(NT) loop
12:13:30
finish mi2 range(NT) loop
12:13:30
start mi2 range(n) loop
12:13:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:13:30
start mi2 range(n) 2loop
12:13:30
finish mi2 range(n) 2loop
12:13:30
start mi3
12:13:30
start mi3 range(p) 1 loop
12:13:30
finish mi3 range(p) 1 loop
12:13:30
start mi3 range(p) 2 loop
12:13:30
finish mi3 range(p) 2 loop
12:13:30
start mi3 range(NT) loop
12:13:30
finish mi3 range(NT) loop
12:13:30
start mi3 range(n) loop
12:13:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:13:30
start mi3 range(n) 2loop
12:13:30
finish mi3 range(n) 2loop
12:13:30
[[-2.32201172]]
end mi3 loop
12:13:30
estep
12:13:30
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:13:47
start ppi1
12:13:47
start mi0
12:13:47
start mi0 range(p) 1 loop
12:13:47
finish mi0 range(p) 1 loop
12:13:47
start mi0 range(p) 2 loop
12:13:47
finish mi0 range(p) 2 loop
12:13:47
start mi0 range(NT) loop
12:13:47
finish mi0 range(NT) loop
12:13:47
start mi0 range(n) loop
12:13:47
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:13:48
start mi0 range(n) 2loop
12:13:48
finish mi0 range(n) 2loop
12:13:48
start mi1
12:13:48
start mi1 range(p) 1 loop
12:13:48
finish mi1 range(p) 1 loop
12:13:48
start mi1 range(p) 2 loop
12:13:48
finish mi1 range(p) 2 loop
12:13:48
start mi1 range(NT) loop
12:13:48
finish mi1 range(NT) loop
12:13:48
start mi1 range(n) loop
12:13:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:13:48
start mi1 range(n) 2loop
12:13:48
finish mi1 range(n) 2loop
12:13:48
start mi2
12:13:48
start mi2 range(p) 1 loop
12:13:48
finish mi2 range(p) 1 loop
12:13:48
start mi2 range(p) 2 loop
12:13:48
finish mi2 range(p) 2 loop
12:13:48
start mi2 range(NT) loop
12:13:48
finish mi2 range(NT) loop
12:13:48
start mi2 range(n) loop
12:13:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:13:48
start mi2 range(n) 2loop
12:13:48
finish mi2 range(n) 2loop
12:13:48
start mi3
12:13:48
start mi3 range(p) 1 loop
12:13:48
finish mi3 range(p) 1 loop
12:13:48
start mi3 range(p) 2 loop
12:13:48
finish mi3 range(p) 2 loop
12:13:48
start mi3 range(NT) loop
12:13:48
finish mi3 range(NT) loop
12:13:48
start mi3 range(n) loop
12:13:48
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:13:48
start mi3 range(n) 2loop
12:13:48
finish mi3 range(n) 2loop
12:13:49
[[-2.38450397]]
end mi3 loop
12:13:49
estep
12:13:49
end estep
12:14:06
end pa12:14:06
goodness of fit correlation [0.27924641]
start cluster 12:14:06
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36198 instead
  warnings.warn(
12
parallel submitted
12:14:27
parallel finished
12:18:58
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:19:11
start mi0
12:19:11
start mi0 range(p) 1 loop
12:19:11
finish mi0 range(p) 1 loop
12:19:11
start mi0 range(p) 2 loop
12:19:11
finish mi0 range(p) 2 loop
12:19:11
start mi0 range(NT) loop
12:19:11
finish mi0 range(NT) loop
12:19:11
start mi0 range(n) loop
12:19:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:19:11
start mi0 range(n) 2loop
12:19:11
finish mi0 range(n) 2loop
12:19:11
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:19:11
start mi1 range(p) 1 loop
12:19:11
finish mi1 range(p) 1 loop
12:19:11
start mi1 range(p) 2 loop
12:19:11
finish mi1 range(p) 2 loop
12:19:11
start mi1 range(NT) loop
12:19:11
finish mi1 range(NT) loop
12:19:11
start mi1 range(n) loop
12:19:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:19:11
start mi1 range(n) 2loop
12:19:11
finish mi1 range(n) 2loop
12:19:11
start mi2
12:19:11
start mi2 range(p) 1 loop
12:19:11
finish mi2 range(p) 1 loop
12:19:11
start mi2 range(p) 2 loop
12:19:11
finish mi2 range(p) 2 loop
12:19:11
start mi2 range(NT) loop
12:19:12
finish mi2 range(NT) loop
12:19:12
start mi2 range(n) loop
12:19:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:19:12
start mi2 range(n) 2loop
12:19:12
finish mi2 range(n) 2loop
12:19:12
start mi3
12:19:12
start mi3 range(p) 1 loop
12:19:12
finish mi3 range(p) 1 loop
12:19:12
start mi3 range(p) 2 loop
12:19:12
finish mi3 range(p) 2 loop
12:19:12
start mi3 range(NT) loop
12:19:12
finish mi3 range(NT) loop
12:19:12
start mi3 range(n) loop
12:19:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:19:12
start mi3 range(n) 2loop
12:19:12
finish mi3 range(n) 2loop
12:19:12
[[-2.38085042]]
end mi3 loop
12:19:12
estep
12:19:12
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:19:29
start ppi1
12:19:29
start mi0
12:19:29
start mi0 range(p) 1 loop
12:19:29
finish mi0 range(p) 1 loop
12:19:29
start mi0 range(p) 2 loop
12:19:29
finish mi0 range(p) 2 loop
12:19:29
start mi0 range(NT) loop
12:19:29
finish mi0 range(NT) loop
12:19:29
start mi0 range(n) loop
12:19:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:19:29
start mi0 range(n) 2loop
12:19:29
finish mi0 range(n) 2loop
12:19:29
start mi1
12:19:29
start mi1 range(p) 1 loop
12:19:29
finish mi1 range(p) 1 loop
12:19:29
start mi1 range(p) 2 loop
12:19:29
finish mi1 range(p) 2 loop
12:19:29
start mi1 range(NT) loop
12:19:29
finish mi1 range(NT) loop
12:19:29
start mi1 range(n) loop
12:19:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:19:29
start mi1 range(n) 2loop
12:19:29
finish mi1 range(n) 2loop
12:19:29
start mi2
12:19:29
start mi2 range(p) 1 loop
12:19:29
finish mi2 range(p) 1 loop
12:19:29
start mi2 range(p) 2 loop
12:19:29
finish mi2 range(p) 2 loop
12:19:29
start mi2 range(NT) loop
12:19:29
finish mi2 range(NT) loop
12:19:29
start mi2 range(n) loop
12:19:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:19:29
start mi2 range(n) 2loop
12:19:29
finish mi2 range(n) 2loop
12:19:29
start mi3
12:19:29
start mi3 range(p) 1 loop
12:19:29
finish mi3 range(p) 1 loop
12:19:29
start mi3 range(p) 2 loop
12:19:29
finish mi3 range(p) 2 loop
12:19:29
start mi3 range(NT) loop
12:19:29
finish mi3 range(NT) loop
12:19:29
start mi3 range(n) loop
12:19:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:19:30
start mi3 range(n) 2loop
12:19:30
finish mi3 range(n) 2loop
12:19:30
[[-2.44334251]]
end mi3 loop
12:19:30
estep
12:19:30
end estep
12:19:46
end pa12:19:46
goodness of fit correlation [0.31276592]
start cluster 12:19:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 44217 instead
  warnings.warn(
13
parallel submitted
12:20:08
parallel finished
12:22:53
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:23:07
start mi0
12:23:07
start mi0 range(p) 1 loop
12:23:07
finish mi0 range(p) 1 loop
12:23:07
start mi0 range(p) 2 loop
12:23:07
finish mi0 range(p) 2 loop
12:23:07
start mi0 range(NT) loop
12:23:07
finish mi0 range(NT) loop
12:23:07
start mi0 range(n) loop
12:23:07
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:23:07
start mi0 range(n) 2loop
12:23:07
finish mi0 range(n) 2loop
12:23:07
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:23:08
start mi1 range(p) 1 loop
12:23:08
finish mi1 range(p) 1 loop
12:23:08
start mi1 range(p) 2 loop
12:23:08
finish mi1 range(p) 2 loop
12:23:08
start mi1 range(NT) loop
12:23:08
finish mi1 range(NT) loop
12:23:08
start mi1 range(n) loop
12:23:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:23:08
start mi1 range(n) 2loop
12:23:08
finish mi1 range(n) 2loop
12:23:08
start mi2
12:23:08
start mi2 range(p) 1 loop
12:23:08
finish mi2 range(p) 1 loop
12:23:08
start mi2 range(p) 2 loop
12:23:08
finish mi2 range(p) 2 loop
12:23:08
start mi2 range(NT) loop
12:23:08
finish mi2 range(NT) loop
12:23:08
start mi2 range(n) loop
12:23:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:23:08
start mi2 range(n) 2loop
12:23:08
finish mi2 range(n) 2loop
12:23:08
start mi3
12:23:08
start mi3 range(p) 1 loop
12:23:08
finish mi3 range(p) 1 loop
12:23:08
start mi3 range(p) 2 loop
12:23:08
finish mi3 range(p) 2 loop
12:23:08
start mi3 range(NT) loop
12:23:08
finish mi3 range(NT) loop
12:23:08
start mi3 range(n) loop
12:23:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:23:08
start mi3 range(n) 2loop
12:23:08
finish mi3 range(n) 2loop
12:23:08
[[-2.42277739]]
end mi3 loop
12:23:08
estep
12:23:08
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:23:27
start ppi1
12:23:27
start mi0
12:23:27
start mi0 range(p) 1 loop
12:23:27
finish mi0 range(p) 1 loop
12:23:27
start mi0 range(p) 2 loop
12:23:27
finish mi0 range(p) 2 loop
12:23:27
start mi0 range(NT) loop
12:23:27
finish mi0 range(NT) loop
12:23:27
start mi0 range(n) loop
12:23:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:23:27
start mi0 range(n) 2loop
12:23:27
finish mi0 range(n) 2loop
12:23:27
start mi1
12:23:27
start mi1 range(p) 1 loop
12:23:27
finish mi1 range(p) 1 loop
12:23:27
start mi1 range(p) 2 loop
12:23:27
finish mi1 range(p) 2 loop
12:23:27
start mi1 range(NT) loop
12:23:27
finish mi1 range(NT) loop
12:23:27
start mi1 range(n) loop
12:23:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:23:27
start mi1 range(n) 2loop
12:23:27
finish mi1 range(n) 2loop
12:23:27
start mi2
12:23:27
start mi2 range(p) 1 loop
12:23:27
finish mi2 range(p) 1 loop
12:23:27
start mi2 range(p) 2 loop
12:23:27
finish mi2 range(p) 2 loop
12:23:27
start mi2 range(NT) loop
12:23:27
finish mi2 range(NT) loop
12:23:27
start mi2 range(n) loop
12:23:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:23:28
start mi2 range(n) 2loop
12:23:28
finish mi2 range(n) 2loop
12:23:28
start mi3
12:23:28
start mi3 range(p) 1 loop
12:23:28
finish mi3 range(p) 1 loop
12:23:28
start mi3 range(p) 2 loop
12:23:28
finish mi3 range(p) 2 loop
12:23:28
start mi3 range(NT) loop
12:23:28
finish mi3 range(NT) loop
12:23:28
start mi3 range(n) loop
12:23:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:23:28
start mi3 range(n) 2loop
12:23:28
finish mi3 range(n) 2loop
12:23:28
[[-2.48526944]]
end mi3 loop
12:23:28
estep
12:23:28
end estep
12:23:47
end pa12:23:47
goodness of fit correlation [0.25860578]
start cluster 12:23:47
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41066 instead
  warnings.warn(
14
parallel submitted
12:24:12
parallel finished
12:26:56
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:27:09
start mi0
12:27:09
start mi0 range(p) 1 loop
12:27:09
finish mi0 range(p) 1 loop
12:27:09
start mi0 range(p) 2 loop
12:27:09
finish mi0 range(p) 2 loop
12:27:09
start mi0 range(NT) loop
12:27:09
finish mi0 range(NT) loop
12:27:09
start mi0 range(n) loop
12:27:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:27:09
start mi0 range(n) 2loop
12:27:09
finish mi0 range(n) 2loop
12:27:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:27:09
start mi1 range(p) 1 loop
12:27:09
finish mi1 range(p) 1 loop
12:27:09
start mi1 range(p) 2 loop
12:27:09
finish mi1 range(p) 2 loop
12:27:09
start mi1 range(NT) loop
12:27:09
finish mi1 range(NT) loop
12:27:09
start mi1 range(n) loop
12:27:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:27:09
start mi1 range(n) 2loop
12:27:09
finish mi1 range(n) 2loop
12:27:09
start mi2
12:27:09
start mi2 range(p) 1 loop
12:27:09
finish mi2 range(p) 1 loop
12:27:10
start mi2 range(p) 2 loop
12:27:10
finish mi2 range(p) 2 loop
12:27:10
start mi2 range(NT) loop
12:27:10
finish mi2 range(NT) loop
12:27:10
start mi2 range(n) loop
12:27:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:27:10
start mi2 range(n) 2loop
12:27:10
finish mi2 range(n) 2loop
12:27:10
start mi3
12:27:10
start mi3 range(p) 1 loop
12:27:10
finish mi3 range(p) 1 loop
12:27:10
start mi3 range(p) 2 loop
12:27:10
finish mi3 range(p) 2 loop
12:27:10
start mi3 range(NT) loop
12:27:10
finish mi3 range(NT) loop
12:27:10
start mi3 range(n) loop
12:27:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:27:10
start mi3 range(n) 2loop
12:27:10
finish mi3 range(n) 2loop
12:27:10
[[-2.35926887]]
end mi3 loop
12:27:10
estep
12:27:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:27:27
start ppi1
12:27:27
start mi0
12:27:27
start mi0 range(p) 1 loop
12:27:27
finish mi0 range(p) 1 loop
12:27:27
start mi0 range(p) 2 loop
12:27:27
finish mi0 range(p) 2 loop
12:27:27
start mi0 range(NT) loop
12:27:27
finish mi0 range(NT) loop
12:27:27
start mi0 range(n) loop
12:27:27
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:27:27
start mi0 range(n) 2loop
12:27:27
finish mi0 range(n) 2loop
12:27:27
start mi1
12:27:27
start mi1 range(p) 1 loop
12:27:27
finish mi1 range(p) 1 loop
12:27:27
start mi1 range(p) 2 loop
12:27:27
finish mi1 range(p) 2 loop
12:27:27
start mi1 range(NT) loop
12:27:28
finish mi1 range(NT) loop
12:27:28
start mi1 range(n) loop
12:27:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:27:28
start mi1 range(n) 2loop
12:27:28
finish mi1 range(n) 2loop
12:27:28
start mi2
12:27:28
start mi2 range(p) 1 loop
12:27:28
finish mi2 range(p) 1 loop
12:27:28
start mi2 range(p) 2 loop
12:27:28
finish mi2 range(p) 2 loop
12:27:28
start mi2 range(NT) loop
12:27:28
finish mi2 range(NT) loop
12:27:28
start mi2 range(n) loop
12:27:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:27:28
start mi2 range(n) 2loop
12:27:28
finish mi2 range(n) 2loop
12:27:28
start mi3
12:27:28
start mi3 range(p) 1 loop
12:27:28
finish mi3 range(p) 1 loop
12:27:28
start mi3 range(p) 2 loop
12:27:28
finish mi3 range(p) 2 loop
12:27:28
start mi3 range(NT) loop
12:27:28
finish mi3 range(NT) loop
12:27:28
start mi3 range(n) loop
12:27:28
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:27:28
start mi3 range(n) 2loop
12:27:28
finish mi3 range(n) 2loop
12:27:28
[[-2.42176099]]
end mi3 loop
12:27:28
estep
12:27:28
end estep
12:27:46
end pa12:27:46
goodness of fit correlation [0.23122904]
start cluster 12:27:46
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40396 instead
  warnings.warn(
15
parallel submitted
12:28:10
parallel finished
12:31:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:31:44
start mi0
12:31:44
start mi0 range(p) 1 loop
12:31:44
finish mi0 range(p) 1 loop
12:31:44
start mi0 range(p) 2 loop
12:31:44
finish mi0 range(p) 2 loop
12:31:44
start mi0 range(NT) loop
12:31:44
finish mi0 range(NT) loop
12:31:44
start mi0 range(n) loop
12:31:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:31:44
start mi0 range(n) 2loop
12:31:44
finish mi0 range(n) 2loop
12:31:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:31:44
start mi1 range(p) 1 loop
12:31:44
finish mi1 range(p) 1 loop
12:31:44
start mi1 range(p) 2 loop
12:31:44
finish mi1 range(p) 2 loop
12:31:44
start mi1 range(NT) loop
12:31:44
finish mi1 range(NT) loop
12:31:44
start mi1 range(n) loop
12:31:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:31:45
start mi1 range(n) 2loop
12:31:45
finish mi1 range(n) 2loop
12:31:45
start mi2
12:31:45
start mi2 range(p) 1 loop
12:31:45
finish mi2 range(p) 1 loop
12:31:45
start mi2 range(p) 2 loop
12:31:45
finish mi2 range(p) 2 loop
12:31:45
start mi2 range(NT) loop
12:31:45
finish mi2 range(NT) loop
12:31:45
start mi2 range(n) loop
12:31:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:31:45
start mi2 range(n) 2loop
12:31:45
finish mi2 range(n) 2loop
12:31:45
start mi3
12:31:45
start mi3 range(p) 1 loop
12:31:45
finish mi3 range(p) 1 loop
12:31:45
start mi3 range(p) 2 loop
12:31:45
finish mi3 range(p) 2 loop
12:31:45
start mi3 range(NT) loop
12:31:45
finish mi3 range(NT) loop
12:31:45
start mi3 range(n) loop
12:31:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:31:45
start mi3 range(n) 2loop
12:31:45
finish mi3 range(n) 2loop
12:31:45
[[-2.29657695]]
end mi3 loop
12:31:45
estep
12:31:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:32:02
start ppi1
12:32:02
start mi0
12:32:02
start mi0 range(p) 1 loop
12:32:02
finish mi0 range(p) 1 loop
12:32:02
start mi0 range(p) 2 loop
12:32:02
finish mi0 range(p) 2 loop
12:32:02
start mi0 range(NT) loop
12:32:02
finish mi0 range(NT) loop
12:32:02
start mi0 range(n) loop
12:32:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:32:03
start mi0 range(n) 2loop
12:32:03
finish mi0 range(n) 2loop
12:32:03
start mi1
12:32:03
start mi1 range(p) 1 loop
12:32:03
finish mi1 range(p) 1 loop
12:32:03
start mi1 range(p) 2 loop
12:32:03
finish mi1 range(p) 2 loop
12:32:03
start mi1 range(NT) loop
12:32:03
finish mi1 range(NT) loop
12:32:03
start mi1 range(n) loop
12:32:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:32:03
start mi1 range(n) 2loop
12:32:03
finish mi1 range(n) 2loop
12:32:03
start mi2
12:32:03
start mi2 range(p) 1 loop
12:32:03
finish mi2 range(p) 1 loop
12:32:03
start mi2 range(p) 2 loop
12:32:03
finish mi2 range(p) 2 loop
12:32:03
start mi2 range(NT) loop
12:32:03
finish mi2 range(NT) loop
12:32:03
start mi2 range(n) loop
12:32:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:32:03
start mi2 range(n) 2loop
12:32:03
finish mi2 range(n) 2loop
12:32:03
start mi3
12:32:03
start mi3 range(p) 1 loop
12:32:03
finish mi3 range(p) 1 loop
12:32:03
start mi3 range(p) 2 loop
12:32:03
finish mi3 range(p) 2 loop
12:32:03
start mi3 range(NT) loop
12:32:03
finish mi3 range(NT) loop
12:32:03
start mi3 range(n) loop
12:32:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:32:03
start mi3 range(n) 2loop
12:32:03
finish mi3 range(n) 2loop
12:32:04
[[-2.3590694]]
end mi3 loop
12:32:04
estep
12:32:04
end estep
12:32:22
end pa12:32:22
goodness of fit correlation [0.10640813]
0.3127659228604026
[5.70903785e-01 5.06912886e-01 5.03692700e-01 4.93271452e-01
 5.11766079e-01 5.44652036e-01 6.86915759e-01 5.67469069e-01
 5.27275370e-01 6.12684965e-01 5.05194142e-01 5.05410754e-01
 4.98569589e-01 5.96904009e-01 5.11329844e-01 5.21261703e-01
 5.27397896e-01 5.11057983e-01 5.12234666e-01 5.05084213e-01
 5.57108584e-01 5.15674704e-01 5.11202761e-01 5.66901376e-01
 4.75039423e-01 5.20818845e-01 4.99931470e-01 6.42735747e-01
 5.57542717e-01 6.31512474e-01 5.13648466e-01 5.01844005e-01
 5.28533311e-01 5.21846225e-01 5.47353808e-01 5.12395862e-01
 5.28768673e-01 5.01532230e-01 4.86688347e-01 5.18206628e-01
 6.33884504e-01 5.36765228e-01 4.95106199e-01 5.71292855e-01
 5.41226568e-01 5.13954237e-01 4.84129261e-01 5.49409036e-01
 4.95518619e-01 5.76394324e-01 5.30559803e-01 5.29217962e-01
 4.86085768e-01 5.10883872e-01 5.67257050e-01 5.34198537e-01
 5.20575063e-01 5.14444535e-01 4.73527744e-01 5.38288693e-01
 5.08271269e-01 5.54041489e-01 5.95638737e-01 6.54785649e-01
 4.70760719e-01 4.93352586e-01 5.27795427e-01 6.17038492e-01
 3.61034613e-01 3.45087137e-01 3.42581128e-01 3.53026680e-01
 3.11145379e-01 3.58922647e-01 3.33578835e-01 3.46773283e-01
 3.44011125e-01 3.62636904e-01 3.52220195e-01 3.73293674e-01
 3.42380255e-01 3.43652741e-01 3.49129643e-01 3.54506374e-01
 3.50746655e-01 3.27409408e-01 3.53723027e-01 3.41143692e-01
 3.40927242e-01 3.50639745e-01 3.39100595e-01 3.35671745e-01
 3.54762548e-01 3.45556484e-01 3.17388490e-01 3.27468847e-01
 3.43014285e-01 3.41326138e-01 2.90894419e-01 2.87823717e-01
 3.83878056e-01 3.46870776e-01 3.65684392e-01 3.46466670e-01
 3.45190558e-01 3.68791773e-01 3.08540131e-01 3.55564481e-01
 3.35744727e-01 3.49896386e-01 3.43587576e-01 3.68642796e-01
 3.51100520e-01 3.76110138e-01 3.46313938e-01 3.46143349e-01
 3.49291760e-01 3.50869195e-01 3.61969580e-01 3.40841847e-01
 3.52999954e-01 3.73369714e-01 3.36492373e-01 3.34717280e-01
 3.39211067e-01 3.33598253e-01 3.56996734e-01 3.47945037e-01
 3.18959576e-01 3.39165578e-01 3.63733641e-01 3.47772304e-01
 3.45392385e-01 2.87487325e-01 3.77114480e-01 3.40826089e-01
 1.49269412e+00 1.04459836e-03]
start cluster 12:32:22
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34793 instead
  warnings.warn(
0
parallel submitted
12:32:47
parallel finished
12:36:14
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:36:25
start mi0
12:36:25
start mi0 range(p) 1 loop
12:36:25
finish mi0 range(p) 1 loop
12:36:25
start mi0 range(p) 2 loop
12:36:25
finish mi0 range(p) 2 loop
12:36:25
start mi0 range(NT) loop
12:36:25
finish mi0 range(NT) loop
12:36:25
start mi0 range(n) loop
12:36:25
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:36:25
start mi0 range(n) 2loop
12:36:25
finish mi0 range(n) 2loop
12:36:25
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:36:25
start mi1 range(p) 1 loop
12:36:25
finish mi1 range(p) 1 loop
12:36:25
start mi1 range(p) 2 loop
12:36:25
finish mi1 range(p) 2 loop
12:36:25
start mi1 range(NT) loop
12:36:26
finish mi1 range(NT) loop
12:36:26
start mi1 range(n) loop
12:36:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:36:26
start mi1 range(n) 2loop
12:36:26
finish mi1 range(n) 2loop
12:36:26
start mi2
12:36:26
start mi2 range(p) 1 loop
12:36:26
finish mi2 range(p) 1 loop
12:36:26
start mi2 range(p) 2 loop
12:36:26
finish mi2 range(p) 2 loop
12:36:26
start mi2 range(NT) loop
12:36:26
finish mi2 range(NT) loop
12:36:26
start mi2 range(n) loop
12:36:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:36:26
start mi2 range(n) 2loop
12:36:26
finish mi2 range(n) 2loop
12:36:26
start mi3
12:36:26
start mi3 range(p) 1 loop
12:36:26
finish mi3 range(p) 1 loop
12:36:26
start mi3 range(p) 2 loop
12:36:26
finish mi3 range(p) 2 loop
12:36:26
start mi3 range(NT) loop
12:36:26
finish mi3 range(NT) loop
12:36:26
start mi3 range(n) loop
12:36:26
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:36:26
start mi3 range(n) 2loop
12:36:26
finish mi3 range(n) 2loop
12:36:26
[[-2.1989045]]
end mi3 loop
12:36:26
estep
12:36:26
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:36:44
start ppi1
12:36:44
start mi0
12:36:44
start mi0 range(p) 1 loop
12:36:44
finish mi0 range(p) 1 loop
12:36:44
start mi0 range(p) 2 loop
12:36:44
finish mi0 range(p) 2 loop
12:36:44
start mi0 range(NT) loop
12:36:44
finish mi0 range(NT) loop
12:36:44
start mi0 range(n) loop
12:36:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:36:44
start mi0 range(n) 2loop
12:36:44
finish mi0 range(n) 2loop
12:36:45
start mi1
12:36:45
start mi1 range(p) 1 loop
12:36:45
finish mi1 range(p) 1 loop
12:36:45
start mi1 range(p) 2 loop
12:36:45
finish mi1 range(p) 2 loop
12:36:45
start mi1 range(NT) loop
12:36:45
finish mi1 range(NT) loop
12:36:45
start mi1 range(n) loop
12:36:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:36:45
start mi1 range(n) 2loop
12:36:45
finish mi1 range(n) 2loop
12:36:45
start mi2
12:36:45
start mi2 range(p) 1 loop
12:36:45
finish mi2 range(p) 1 loop
12:36:45
start mi2 range(p) 2 loop
12:36:45
finish mi2 range(p) 2 loop
12:36:45
start mi2 range(NT) loop
12:36:45
finish mi2 range(NT) loop
12:36:45
start mi2 range(n) loop
12:36:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:36:45
start mi2 range(n) 2loop
12:36:45
finish mi2 range(n) 2loop
12:36:45
start mi3
12:36:45
start mi3 range(p) 1 loop
12:36:45
finish mi3 range(p) 1 loop
12:36:45
start mi3 range(p) 2 loop
12:36:45
finish mi3 range(p) 2 loop
12:36:45
start mi3 range(NT) loop
12:36:45
finish mi3 range(NT) loop
12:36:45
start mi3 range(n) loop
12:36:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:36:45
start mi3 range(n) 2loop
12:36:45
finish mi3 range(n) 2loop
12:36:45
[[-2.1989045]]
end mi3 loop
12:36:45
estep
12:36:45
end estep
12:37:04
end pa12:37:04
goodness of fit correlation [0.07438771]
start cluster 12:37:04
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 42170 instead
  warnings.warn(
1
parallel submitted
12:37:30
parallel finished
12:40:30
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:40:44
start mi0
12:40:44
start mi0 range(p) 1 loop
12:40:44
finish mi0 range(p) 1 loop
12:40:44
start mi0 range(p) 2 loop
12:40:44
finish mi0 range(p) 2 loop
12:40:44
start mi0 range(NT) loop
12:40:44
finish mi0 range(NT) loop
12:40:44
start mi0 range(n) loop
12:40:44
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:40:44
start mi0 range(n) 2loop
12:40:44
finish mi0 range(n) 2loop
12:40:44
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:40:44
start mi1 range(p) 1 loop
12:40:44
finish mi1 range(p) 1 loop
12:40:44
start mi1 range(p) 2 loop
12:40:44
finish mi1 range(p) 2 loop
12:40:44
start mi1 range(NT) loop
12:40:45
finish mi1 range(NT) loop
12:40:45
start mi1 range(n) loop
12:40:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:40:45
start mi1 range(n) 2loop
12:40:45
finish mi1 range(n) 2loop
12:40:45
start mi2
12:40:45
start mi2 range(p) 1 loop
12:40:45
finish mi2 range(p) 1 loop
12:40:45
start mi2 range(p) 2 loop
12:40:45
finish mi2 range(p) 2 loop
12:40:45
start mi2 range(NT) loop
12:40:45
finish mi2 range(NT) loop
12:40:45
start mi2 range(n) loop
12:40:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:40:45
start mi2 range(n) 2loop
12:40:45
finish mi2 range(n) 2loop
12:40:45
start mi3
12:40:45
start mi3 range(p) 1 loop
12:40:45
finish mi3 range(p) 1 loop
12:40:45
start mi3 range(p) 2 loop
12:40:45
finish mi3 range(p) 2 loop
12:40:45
start mi3 range(NT) loop
12:40:45
finish mi3 range(NT) loop
12:40:45
start mi3 range(n) loop
12:40:45
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:40:45
start mi3 range(n) 2loop
12:40:45
finish mi3 range(n) 2loop
12:40:45
[[-2.19940756]]
end mi3 loop
12:40:45
estep
12:40:45
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:41:03
start ppi1
12:41:03
start mi0
12:41:03
start mi0 range(p) 1 loop
12:41:03
finish mi0 range(p) 1 loop
12:41:03
start mi0 range(p) 2 loop
12:41:03
finish mi0 range(p) 2 loop
12:41:03
start mi0 range(NT) loop
12:41:03
finish mi0 range(NT) loop
12:41:03
start mi0 range(n) loop
12:41:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:41:03
start mi0 range(n) 2loop
12:41:03
finish mi0 range(n) 2loop
12:41:03
start mi1
12:41:03
start mi1 range(p) 1 loop
12:41:03
finish mi1 range(p) 1 loop
12:41:03
start mi1 range(p) 2 loop
12:41:03
finish mi1 range(p) 2 loop
12:41:03
start mi1 range(NT) loop
12:41:03
finish mi1 range(NT) loop
12:41:03
start mi1 range(n) loop
12:41:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:41:03
start mi1 range(n) 2loop
12:41:03
finish mi1 range(n) 2loop
12:41:04
start mi2
12:41:04
start mi2 range(p) 1 loop
12:41:04
finish mi2 range(p) 1 loop
12:41:04
start mi2 range(p) 2 loop
12:41:04
finish mi2 range(p) 2 loop
12:41:04
start mi2 range(NT) loop
12:41:04
finish mi2 range(NT) loop
12:41:04
start mi2 range(n) loop
12:41:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:41:04
start mi2 range(n) 2loop
12:41:04
finish mi2 range(n) 2loop
12:41:04
start mi3
12:41:04
start mi3 range(p) 1 loop
12:41:04
finish mi3 range(p) 1 loop
12:41:04
start mi3 range(p) 2 loop
12:41:04
finish mi3 range(p) 2 loop
12:41:04
start mi3 range(NT) loop
12:41:04
finish mi3 range(NT) loop
12:41:04
start mi3 range(n) loop
12:41:04
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:41:04
start mi3 range(n) 2loop
12:41:04
finish mi3 range(n) 2loop
12:41:04
[[-2.26190309]]
end mi3 loop
12:41:04
estep
12:41:04
end estep
12:41:23
end pa12:41:23
goodness of fit correlation [0.18751319]
start cluster 12:41:23
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41153 instead
  warnings.warn(
2
parallel submitted
12:41:48
parallel finished
12:45:08
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:45:20
start mi0
12:45:20
start mi0 range(p) 1 loop
12:45:20
finish mi0 range(p) 1 loop
12:45:20
start mi0 range(p) 2 loop
12:45:20
finish mi0 range(p) 2 loop
12:45:20
start mi0 range(NT) loop
12:45:21
finish mi0 range(NT) loop
12:45:21
start mi0 range(n) loop
12:45:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:45:21
start mi0 range(n) 2loop
12:45:21
finish mi0 range(n) 2loop
12:45:21
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:45:21
start mi1 range(p) 1 loop
12:45:21
finish mi1 range(p) 1 loop
12:45:21
start mi1 range(p) 2 loop
12:45:21
finish mi1 range(p) 2 loop
12:45:21
start mi1 range(NT) loop
12:45:21
finish mi1 range(NT) loop
12:45:21
start mi1 range(n) loop
12:45:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:45:21
start mi1 range(n) 2loop
12:45:21
finish mi1 range(n) 2loop
12:45:21
start mi2
12:45:21
start mi2 range(p) 1 loop
12:45:21
finish mi2 range(p) 1 loop
12:45:21
start mi2 range(p) 2 loop
12:45:21
finish mi2 range(p) 2 loop
12:45:21
start mi2 range(NT) loop
12:45:21
finish mi2 range(NT) loop
12:45:21
start mi2 range(n) loop
12:45:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:45:21
start mi2 range(n) 2loop
12:45:21
finish mi2 range(n) 2loop
12:45:21
start mi3
12:45:21
start mi3 range(p) 1 loop
12:45:21
finish mi3 range(p) 1 loop
12:45:21
start mi3 range(p) 2 loop
12:45:21
finish mi3 range(p) 2 loop
12:45:21
start mi3 range(NT) loop
12:45:21
finish mi3 range(NT) loop
12:45:21
start mi3 range(n) loop
12:45:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:45:22
start mi3 range(n) 2loop
12:45:22
finish mi3 range(n) 2loop
12:45:22
[[-2.25521044]]
end mi3 loop
12:45:22
estep
12:45:22
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:45:39
start ppi1
12:45:39
start mi0
12:45:39
start mi0 range(p) 1 loop
12:45:39
finish mi0 range(p) 1 loop
12:45:39
start mi0 range(p) 2 loop
12:45:39
finish mi0 range(p) 2 loop
12:45:39
start mi0 range(NT) loop
12:45:39
finish mi0 range(NT) loop
12:45:39
start mi0 range(n) loop
12:45:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:45:39
start mi0 range(n) 2loop
12:45:39
finish mi0 range(n) 2loop
12:45:39
start mi1
12:45:39
start mi1 range(p) 1 loop
12:45:39
finish mi1 range(p) 1 loop
12:45:39
start mi1 range(p) 2 loop
12:45:39
finish mi1 range(p) 2 loop
12:45:39
start mi1 range(NT) loop
12:45:39
finish mi1 range(NT) loop
12:45:39
start mi1 range(n) loop
12:45:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:45:39
start mi1 range(n) 2loop
12:45:39
finish mi1 range(n) 2loop
12:45:40
start mi2
12:45:40
start mi2 range(p) 1 loop
12:45:40
finish mi2 range(p) 1 loop
12:45:40
start mi2 range(p) 2 loop
12:45:40
finish mi2 range(p) 2 loop
12:45:40
start mi2 range(NT) loop
12:45:40
finish mi2 range(NT) loop
12:45:40
start mi2 range(n) loop
12:45:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:45:40
start mi2 range(n) 2loop
12:45:40
finish mi2 range(n) 2loop
12:45:40
start mi3
12:45:40
start mi3 range(p) 1 loop
12:45:40
finish mi3 range(p) 1 loop
12:45:40
start mi3 range(p) 2 loop
12:45:40
finish mi3 range(p) 2 loop
12:45:40
start mi3 range(NT) loop
12:45:40
finish mi3 range(NT) loop
12:45:40
start mi3 range(n) loop
12:45:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:45:40
start mi3 range(n) 2loop
12:45:40
finish mi3 range(n) 2loop
12:45:40
[[-2.31770353]]
end mi3 loop
12:45:40
estep
12:45:40
end estep
12:45:58
end pa12:45:58
goodness of fit correlation [0.28265006]
start cluster 12:45:58
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 34235 instead
  warnings.warn(
3
parallel submitted
12:46:24
parallel finished
12:49:46
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:50:00
start mi0
12:50:00
start mi0 range(p) 1 loop
12:50:00
finish mi0 range(p) 1 loop
12:50:00
start mi0 range(p) 2 loop
12:50:00
finish mi0 range(p) 2 loop
12:50:00
start mi0 range(NT) loop
12:50:00
finish mi0 range(NT) loop
12:50:00
start mi0 range(n) loop
12:50:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:50:00
start mi0 range(n) 2loop
12:50:00
finish mi0 range(n) 2loop
12:50:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:50:00
start mi1 range(p) 1 loop
12:50:00
finish mi1 range(p) 1 loop
12:50:00
start mi1 range(p) 2 loop
12:50:00
finish mi1 range(p) 2 loop
12:50:00
start mi1 range(NT) loop
12:50:00
finish mi1 range(NT) loop
12:50:00
start mi1 range(n) loop
12:50:00
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:50:00
start mi1 range(n) 2loop
12:50:00
finish mi1 range(n) 2loop
12:50:00
start mi2
12:50:00
start mi2 range(p) 1 loop
12:50:00
finish mi2 range(p) 1 loop
12:50:00
start mi2 range(p) 2 loop
12:50:00
finish mi2 range(p) 2 loop
12:50:00
start mi2 range(NT) loop
12:50:00
finish mi2 range(NT) loop
12:50:01
start mi2 range(n) loop
12:50:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:50:01
start mi2 range(n) 2loop
12:50:01
finish mi2 range(n) 2loop
12:50:01
start mi3
12:50:01
start mi3 range(p) 1 loop
12:50:01
finish mi3 range(p) 1 loop
12:50:01
start mi3 range(p) 2 loop
12:50:01
finish mi3 range(p) 2 loop
12:50:01
start mi3 range(NT) loop
12:50:01
finish mi3 range(NT) loop
12:50:01
start mi3 range(n) loop
12:50:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:50:01
start mi3 range(n) 2loop
12:50:01
finish mi3 range(n) 2loop
12:50:01
[[-2.3357949]]
end mi3 loop
12:50:01
estep
12:50:01
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:50:19
start ppi1
12:50:19
start mi0
12:50:19
start mi0 range(p) 1 loop
12:50:19
finish mi0 range(p) 1 loop
12:50:19
start mi0 range(p) 2 loop
12:50:19
finish mi0 range(p) 2 loop
12:50:19
start mi0 range(NT) loop
12:50:19
finish mi0 range(NT) loop
12:50:19
start mi0 range(n) loop
12:50:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:50:19
start mi0 range(n) 2loop
12:50:19
finish mi0 range(n) 2loop
12:50:19
start mi1
12:50:19
start mi1 range(p) 1 loop
12:50:19
finish mi1 range(p) 1 loop
12:50:19
start mi1 range(p) 2 loop
12:50:19
finish mi1 range(p) 2 loop
12:50:19
start mi1 range(NT) loop
12:50:19
finish mi1 range(NT) loop
12:50:19
start mi1 range(n) loop
12:50:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:50:19
start mi1 range(n) 2loop
12:50:19
finish mi1 range(n) 2loop
12:50:19
start mi2
12:50:19
start mi2 range(p) 1 loop
12:50:19
finish mi2 range(p) 1 loop
12:50:19
start mi2 range(p) 2 loop
12:50:19
finish mi2 range(p) 2 loop
12:50:19
start mi2 range(NT) loop
12:50:20
finish mi2 range(NT) loop
12:50:20
start mi2 range(n) loop
12:50:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:50:20
start mi2 range(n) 2loop
12:50:20
finish mi2 range(n) 2loop
12:50:20
start mi3
12:50:20
start mi3 range(p) 1 loop
12:50:20
finish mi3 range(p) 1 loop
12:50:20
start mi3 range(p) 2 loop
12:50:20
finish mi3 range(p) 2 loop
12:50:20
start mi3 range(NT) loop
12:50:20
finish mi3 range(NT) loop
12:50:20
start mi3 range(n) loop
12:50:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:50:20
start mi3 range(n) 2loop
12:50:20
finish mi3 range(n) 2loop
12:50:20
[[-2.39828709]]
end mi3 loop
12:50:20
estep
12:50:20
end estep
12:50:38
end pa12:50:38
goodness of fit correlation [0.18804562]
start cluster 12:50:38
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 35719 instead
  warnings.warn(
4
parallel submitted
12:51:03
parallel finished
12:54:19
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:54:33
start mi0
12:54:33
start mi0 range(p) 1 loop
12:54:33
finish mi0 range(p) 1 loop
12:54:33
start mi0 range(p) 2 loop
12:54:33
finish mi0 range(p) 2 loop
12:54:33
start mi0 range(NT) loop
12:54:33
finish mi0 range(NT) loop
12:54:33
start mi0 range(n) loop
12:54:33
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:54:33
start mi0 range(n) 2loop
12:54:33
finish mi0 range(n) 2loop
12:54:34
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:54:34
start mi1 range(p) 1 loop
12:54:34
finish mi1 range(p) 1 loop
12:54:34
start mi1 range(p) 2 loop
12:54:34
finish mi1 range(p) 2 loop
12:54:34
start mi1 range(NT) loop
12:54:34
finish mi1 range(NT) loop
12:54:34
start mi1 range(n) loop
12:54:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:54:34
start mi1 range(n) 2loop
12:54:34
finish mi1 range(n) 2loop
12:54:34
start mi2
12:54:34
start mi2 range(p) 1 loop
12:54:34
finish mi2 range(p) 1 loop
12:54:34
start mi2 range(p) 2 loop
12:54:34
finish mi2 range(p) 2 loop
12:54:34
start mi2 range(NT) loop
12:54:34
finish mi2 range(NT) loop
12:54:34
start mi2 range(n) loop
12:54:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:54:34
start mi2 range(n) 2loop
12:54:34
finish mi2 range(n) 2loop
12:54:34
start mi3
12:54:34
start mi3 range(p) 1 loop
12:54:34
finish mi3 range(p) 1 loop
12:54:34
start mi3 range(p) 2 loop
12:54:34
finish mi3 range(p) 2 loop
12:54:34
start mi3 range(NT) loop
12:54:34
finish mi3 range(NT) loop
12:54:34
start mi3 range(n) loop
12:54:34
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:54:34
start mi3 range(n) 2loop
12:54:34
finish mi3 range(n) 2loop
12:54:34
[[-2.27470165]]
end mi3 loop
12:54:34
estep
12:54:34
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:54:52
start ppi1
12:54:52
start mi0
12:54:52
start mi0 range(p) 1 loop
12:54:52
finish mi0 range(p) 1 loop
12:54:52
start mi0 range(p) 2 loop
12:54:52
finish mi0 range(p) 2 loop
12:54:52
start mi0 range(NT) loop
12:54:52
finish mi0 range(NT) loop
12:54:52
start mi0 range(n) loop
12:54:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:54:52
start mi0 range(n) 2loop
12:54:52
finish mi0 range(n) 2loop
12:54:52
start mi1
12:54:52
start mi1 range(p) 1 loop
12:54:52
finish mi1 range(p) 1 loop
12:54:52
start mi1 range(p) 2 loop
12:54:52
finish mi1 range(p) 2 loop
12:54:52
start mi1 range(NT) loop
12:54:52
finish mi1 range(NT) loop
12:54:52
start mi1 range(n) loop
12:54:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:54:52
start mi1 range(n) 2loop
12:54:52
finish mi1 range(n) 2loop
12:54:52
start mi2
12:54:52
start mi2 range(p) 1 loop
12:54:52
finish mi2 range(p) 1 loop
12:54:52
start mi2 range(p) 2 loop
12:54:52
finish mi2 range(p) 2 loop
12:54:52
start mi2 range(NT) loop
12:54:52
finish mi2 range(NT) loop
12:54:52
start mi2 range(n) loop
12:54:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:54:52
start mi2 range(n) 2loop
12:54:52
finish mi2 range(n) 2loop
12:54:53
start mi3
12:54:53
start mi3 range(p) 1 loop
12:54:53
finish mi3 range(p) 1 loop
12:54:53
start mi3 range(p) 2 loop
12:54:53
finish mi3 range(p) 2 loop
12:54:53
start mi3 range(NT) loop
12:54:53
finish mi3 range(NT) loop
12:54:53
start mi3 range(n) loop
12:54:53
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:54:53
start mi3 range(n) 2loop
12:54:53
finish mi3 range(n) 2loop
12:54:53
[[-2.33719437]]
end mi3 loop
12:54:53
estep
12:54:53
end estep
12:55:12
end pa12:55:12
goodness of fit correlation [0.22636568]
start cluster 12:55:12
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 40469 instead
  warnings.warn(
5
parallel submitted
12:55:38
parallel finished
12:58:48
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
12:59:02
start mi0
12:59:02
start mi0 range(p) 1 loop
12:59:02
finish mi0 range(p) 1 loop
12:59:02
start mi0 range(p) 2 loop
12:59:02
finish mi0 range(p) 2 loop
12:59:02
start mi0 range(NT) loop
12:59:02
finish mi0 range(NT) loop
12:59:02
start mi0 range(n) loop
12:59:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
12:59:02
start mi0 range(n) 2loop
12:59:02
finish mi0 range(n) 2loop
12:59:02
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
12:59:02
start mi1 range(p) 1 loop
12:59:02
finish mi1 range(p) 1 loop
12:59:02
start mi1 range(p) 2 loop
12:59:02
finish mi1 range(p) 2 loop
12:59:02
start mi1 range(NT) loop
12:59:02
finish mi1 range(NT) loop
12:59:02
start mi1 range(n) loop
12:59:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
12:59:02
start mi1 range(n) 2loop
12:59:02
finish mi1 range(n) 2loop
12:59:02
start mi2
12:59:02
start mi2 range(p) 1 loop
12:59:02
finish mi2 range(p) 1 loop
12:59:02
start mi2 range(p) 2 loop
12:59:02
finish mi2 range(p) 2 loop
12:59:02
start mi2 range(NT) loop
12:59:02
finish mi2 range(NT) loop
12:59:02
start mi2 range(n) loop
12:59:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
12:59:03
start mi2 range(n) 2loop
12:59:03
finish mi2 range(n) 2loop
12:59:03
start mi3
12:59:03
start mi3 range(p) 1 loop
12:59:03
finish mi3 range(p) 1 loop
12:59:03
start mi3 range(p) 2 loop
12:59:03
finish mi3 range(p) 2 loop
12:59:03
start mi3 range(NT) loop
12:59:03
finish mi3 range(NT) loop
12:59:03
start mi3 range(n) loop
12:59:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
12:59:03
start mi3 range(n) 2loop
12:59:03
finish mi3 range(n) 2loop
12:59:03
[[-2.3748233]]
end mi3 loop
12:59:03
estep
12:59:03
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
12:59:22
start ppi1
12:59:22
start mi0
12:59:22
start mi0 range(p) 1 loop
12:59:22
finish mi0 range(p) 1 loop
12:59:22
start mi0 range(p) 2 loop
12:59:22
finish mi0 range(p) 2 loop
12:59:22
start mi0 range(NT) loop
12:59:22
finish mi0 range(NT) loop
12:59:22
start mi0 range(n) loop
12:59:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
12:59:22
start mi0 range(n) 2loop
12:59:22
finish mi0 range(n) 2loop
12:59:22
start mi1
12:59:22
start mi1 range(p) 1 loop
12:59:22
finish mi1 range(p) 1 loop
12:59:22
start mi1 range(p) 2 loop
12:59:22
finish mi1 range(p) 2 loop
12:59:22
start mi1 range(NT) loop
12:59:22
finish mi1 range(NT) loop
12:59:22
start mi1 range(n) loop
12:59:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
12:59:22
start mi1 range(n) 2loop
12:59:22
finish mi1 range(n) 2loop
12:59:22
start mi2
12:59:22
start mi2 range(p) 1 loop
12:59:22
finish mi2 range(p) 1 loop
12:59:22
start mi2 range(p) 2 loop
12:59:22
finish mi2 range(p) 2 loop
12:59:22
start mi2 range(NT) loop
12:59:23
finish mi2 range(NT) loop
12:59:23
start mi2 range(n) loop
12:59:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
12:59:23
start mi2 range(n) 2loop
12:59:23
finish mi2 range(n) 2loop
12:59:23
start mi3
12:59:23
start mi3 range(p) 1 loop
12:59:23
finish mi3 range(p) 1 loop
12:59:23
start mi3 range(p) 2 loop
12:59:23
finish mi3 range(p) 2 loop
12:59:23
start mi3 range(NT) loop
12:59:23
finish mi3 range(NT) loop
12:59:23
start mi3 range(n) loop
12:59:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
12:59:23
start mi3 range(n) 2loop
12:59:23
finish mi3 range(n) 2loop
12:59:23
[[-2.43731539]]
end mi3 loop
12:59:23
estep
12:59:23
end estep
12:59:42
end pa12:59:42
goodness of fit correlation [0.3150478]
start cluster 12:59:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 41486 instead
  warnings.warn(
6
parallel submitted
13:00:08
parallel finished
13:03:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:03:20
start mi0
13:03:20
start mi0 range(p) 1 loop
13:03:20
finish mi0 range(p) 1 loop
13:03:20
start mi0 range(p) 2 loop
13:03:20
finish mi0 range(p) 2 loop
13:03:20
start mi0 range(NT) loop
13:03:20
finish mi0 range(NT) loop
13:03:20
start mi0 range(n) loop
13:03:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:03:20
start mi0 range(n) 2loop
13:03:20
finish mi0 range(n) 2loop
13:03:20
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:03:20
start mi1 range(p) 1 loop
13:03:20
finish mi1 range(p) 1 loop
13:03:20
start mi1 range(p) 2 loop
13:03:20
finish mi1 range(p) 2 loop
13:03:20
start mi1 range(NT) loop
13:03:20
finish mi1 range(NT) loop
13:03:20
start mi1 range(n) loop
13:03:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:03:21
start mi1 range(n) 2loop
13:03:21
finish mi1 range(n) 2loop
13:03:21
start mi2
13:03:21
start mi2 range(p) 1 loop
13:03:21
finish mi2 range(p) 1 loop
13:03:21
start mi2 range(p) 2 loop
13:03:21
finish mi2 range(p) 2 loop
13:03:21
start mi2 range(NT) loop
13:03:21
finish mi2 range(NT) loop
13:03:21
start mi2 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:03:21
start mi2 range(n) 2loop
13:03:21
finish mi2 range(n) 2loop
13:03:21
start mi3
13:03:21
start mi3 range(p) 1 loop
13:03:21
finish mi3 range(p) 1 loop
13:03:21
start mi3 range(p) 2 loop
13:03:21
finish mi3 range(p) 2 loop
13:03:21
start mi3 range(NT) loop
13:03:21
finish mi3 range(NT) loop
13:03:21
start mi3 range(n) loop
13:03:21
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:03:21
start mi3 range(n) 2loop
13:03:21
finish mi3 range(n) 2loop
13:03:21
[[-2.33107986]]
end mi3 loop
13:03:21
estep
13:03:21
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:03:39
start ppi1
13:03:39
start mi0
13:03:39
start mi0 range(p) 1 loop
13:03:39
finish mi0 range(p) 1 loop
13:03:39
start mi0 range(p) 2 loop
13:03:39
finish mi0 range(p) 2 loop
13:03:39
start mi0 range(NT) loop
13:03:39
finish mi0 range(NT) loop
13:03:39
start mi0 range(n) loop
13:03:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:03:39
start mi0 range(n) 2loop
13:03:39
finish mi0 range(n) 2loop
13:03:39
start mi1
13:03:39
start mi1 range(p) 1 loop
13:03:39
finish mi1 range(p) 1 loop
13:03:39
start mi1 range(p) 2 loop
13:03:39
finish mi1 range(p) 2 loop
13:03:39
start mi1 range(NT) loop
13:03:39
finish mi1 range(NT) loop
13:03:39
start mi1 range(n) loop
13:03:39
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:03:39
start mi1 range(n) 2loop
13:03:39
finish mi1 range(n) 2loop
13:03:39
start mi2
13:03:39
start mi2 range(p) 1 loop
13:03:39
finish mi2 range(p) 1 loop
13:03:39
start mi2 range(p) 2 loop
13:03:39
finish mi2 range(p) 2 loop
13:03:39
start mi2 range(NT) loop
13:03:40
finish mi2 range(NT) loop
13:03:40
start mi2 range(n) loop
13:03:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:03:40
start mi2 range(n) 2loop
13:03:40
finish mi2 range(n) 2loop
13:03:40
start mi3
13:03:40
start mi3 range(p) 1 loop
13:03:40
finish mi3 range(p) 1 loop
13:03:40
start mi3 range(p) 2 loop
13:03:40
finish mi3 range(p) 2 loop
13:03:40
start mi3 range(NT) loop
13:03:40
finish mi3 range(NT) loop
13:03:40
start mi3 range(n) loop
13:03:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:03:40
start mi3 range(n) 2loop
13:03:40
finish mi3 range(n) 2loop
13:03:40
[[-2.39357207]]
end mi3 loop
13:03:40
estep
13:03:40
end estep
13:03:59
end pa13:03:59
goodness of fit correlation [0.21446705]
0.3150478006554126
[5.19898311e-01 5.32083315e-01 5.54331450e-01 5.17905672e-01
 4.84932114e-01 5.27001079e-01 5.33992948e-01 5.33647294e-01
 5.18789981e-01 5.20718416e-01 5.23877258e-01 5.08206191e-01
 5.17143449e-01 5.66881619e-01 5.04980091e-01 5.94564223e-01
 5.72386296e-01 5.19849828e-01 5.66772239e-01 4.95599393e-01
 6.08328910e-01 5.72369990e-01 4.99167505e-01 5.24350555e-01
 5.12570183e-01 5.73656777e-01 4.90264122e-01 4.70746623e-01
 5.06773053e-01 5.57502911e-01 4.93591412e-01 5.06631474e-01
 5.03327565e-01 6.05932683e-01 5.07715104e-01 5.73914475e-01
 5.70321713e-01 5.17209299e-01 4.97728252e-01 5.14415140e-01
 5.46132933e-01 5.18089171e-01 5.04632507e-01 5.25841963e-01
 5.22760617e-01 5.25896177e-01 5.16604603e-01 5.31974890e-01
 5.27983419e-01 6.15447894e-01 6.06016906e-01 5.06989597e-01
 5.55680782e-01 5.36552716e-01 6.37861042e-01 5.78282665e-01
 5.03802997e-01 5.02764889e-01 5.23523834e-01 5.70597548e-01
 4.89838034e-01 4.69428869e-01 5.33088912e-01 5.31812778e-01
 5.18212947e-01 5.01918609e-01 5.02280718e-01 5.70042974e-01
 3.52729004e-01 3.67417854e-01 3.36387939e-01 3.20599348e-01
 3.21621327e-01 3.31825165e-01 3.42177807e-01 3.45492404e-01
 3.55599135e-01 3.18723111e-01 3.73884079e-01 3.51379581e-01
 3.56066487e-01 3.55538554e-01 3.20979712e-01 3.45789785e-01
 3.48379843e-01 3.26146320e-01 3.76664711e-01 3.33071454e-01
 3.45162567e-01 3.73286570e-01 3.42523237e-01 3.37028475e-01
 3.66569294e-01 3.43138945e-01 3.21614489e-01 3.25962700e-01
 3.45122084e-01 3.48690175e-01 3.03694631e-01 2.93185505e-01
 3.50328295e-01 3.62022363e-01 3.44808005e-01 3.58270950e-01
 3.36976225e-01 3.23196137e-01 3.08105928e-01 3.32283060e-01
 3.36964209e-01 3.39249292e-01 3.38557118e-01 3.21598745e-01
 3.67508248e-01 3.64522667e-01 3.60684277e-01 3.45902016e-01
 3.47615564e-01 3.44119103e-01 3.61664043e-01 3.32467022e-01
 3.81962606e-01 3.47761230e-01 3.44744012e-01 3.61213191e-01
 3.44411127e-01 3.32370373e-01 3.76368253e-01 3.42066166e-01
 3.21595729e-01 3.22905115e-01 3.37486355e-01 3.38720829e-01
 3.48373763e-01 3.06180106e-01 3.28863396e-01 3.42506780e-01
 1.49051331e+00 9.90909190e-04]
start cluster 13:03:59
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 37233 instead
  warnings.warn(
0
parallel submitted
13:04:27
parallel finished
13:07:54
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:08:08
start mi0
13:08:08
start mi0 range(p) 1 loop
13:08:08
finish mi0 range(p) 1 loop
13:08:08
start mi0 range(p) 2 loop
13:08:08
finish mi0 range(p) 2 loop
13:08:08
start mi0 range(NT) loop
13:08:08
finish mi0 range(NT) loop
13:08:08
start mi0 range(n) loop
13:08:08
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:08:08
start mi0 range(n) 2loop
13:08:08
finish mi0 range(n) 2loop
13:08:09
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:08:09
start mi1 range(p) 1 loop
13:08:09
finish mi1 range(p) 1 loop
13:08:09
start mi1 range(p) 2 loop
13:08:09
finish mi1 range(p) 2 loop
13:08:09
start mi1 range(NT) loop
13:08:09
finish mi1 range(NT) loop
13:08:09
start mi1 range(n) loop
13:08:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:08:09
start mi1 range(n) 2loop
13:08:09
finish mi1 range(n) 2loop
13:08:09
start mi2
13:08:09
start mi2 range(p) 1 loop
13:08:09
finish mi2 range(p) 1 loop
13:08:09
start mi2 range(p) 2 loop
13:08:09
finish mi2 range(p) 2 loop
13:08:09
start mi2 range(NT) loop
13:08:09
finish mi2 range(NT) loop
13:08:09
start mi2 range(n) loop
13:08:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:08:09
start mi2 range(n) 2loop
13:08:09
finish mi2 range(n) 2loop
13:08:09
start mi3
13:08:09
start mi3 range(p) 1 loop
13:08:09
finish mi3 range(p) 1 loop
13:08:09
start mi3 range(p) 2 loop
13:08:09
finish mi3 range(p) 2 loop
13:08:09
start mi3 range(NT) loop
13:08:09
finish mi3 range(NT) loop
13:08:09
start mi3 range(n) loop
13:08:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:08:09
start mi3 range(n) 2loop
13:08:09
finish mi3 range(n) 2loop
13:08:10
[[-2.18769879]]
end mi3 loop
13:08:10
estep
13:08:10
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:08:29
start ppi1
13:08:29
start mi0
13:08:29
start mi0 range(p) 1 loop
13:08:29
finish mi0 range(p) 1 loop
13:08:29
start mi0 range(p) 2 loop
13:08:29
finish mi0 range(p) 2 loop
13:08:29
start mi0 range(NT) loop
13:08:29
finish mi0 range(NT) loop
13:08:29
start mi0 range(n) loop
13:08:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:08:29
start mi0 range(n) 2loop
13:08:29
finish mi0 range(n) 2loop
13:08:29
start mi1
13:08:29
start mi1 range(p) 1 loop
13:08:29
finish mi1 range(p) 1 loop
13:08:29
start mi1 range(p) 2 loop
13:08:29
finish mi1 range(p) 2 loop
13:08:29
start mi1 range(NT) loop
13:08:29
finish mi1 range(NT) loop
13:08:29
start mi1 range(n) loop
13:08:29
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:08:29
start mi1 range(n) 2loop
13:08:29
finish mi1 range(n) 2loop
13:08:29
start mi2
13:08:29
start mi2 range(p) 1 loop
13:08:29
finish mi2 range(p) 1 loop
13:08:29
start mi2 range(p) 2 loop
13:08:29
finish mi2 range(p) 2 loop
13:08:29
start mi2 range(NT) loop
13:08:30
finish mi2 range(NT) loop
13:08:30
start mi2 range(n) loop
13:08:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:08:30
start mi2 range(n) 2loop
13:08:30
finish mi2 range(n) 2loop
13:08:30
start mi3
13:08:30
start mi3 range(p) 1 loop
13:08:30
finish mi3 range(p) 1 loop
13:08:30
start mi3 range(p) 2 loop
13:08:30
finish mi3 range(p) 2 loop
13:08:30
start mi3 range(NT) loop
13:08:30
finish mi3 range(NT) loop
13:08:30
start mi3 range(n) loop
13:08:30
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:08:30
start mi3 range(n) 2loop
13:08:30
finish mi3 range(n) 2loop
13:08:30
[[-2.18769879]]
end mi3 loop
13:08:30
estep
13:08:30
end estep
13:08:49
end pa13:08:49
goodness of fit correlation [0.06244303]
start cluster 13:08:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39318 instead
  warnings.warn(
1
parallel submitted
13:09:17
parallel finished
13:12:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:13:01
start mi0
13:13:01
start mi0 range(p) 1 loop
13:13:01
finish mi0 range(p) 1 loop
13:13:01
start mi0 range(p) 2 loop
13:13:01
finish mi0 range(p) 2 loop
13:13:01
start mi0 range(NT) loop
13:13:01
finish mi0 range(NT) loop
13:13:01
start mi0 range(n) loop
13:13:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:13:01
start mi0 range(n) 2loop
13:13:01
finish mi0 range(n) 2loop
13:13:01
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:13:01
start mi1 range(p) 1 loop
13:13:01
finish mi1 range(p) 1 loop
13:13:01
start mi1 range(p) 2 loop
13:13:01
finish mi1 range(p) 2 loop
13:13:01
start mi1 range(NT) loop
13:13:01
finish mi1 range(NT) loop
13:13:01
start mi1 range(n) loop
13:13:01
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:13:01
start mi1 range(n) 2loop
13:13:01
finish mi1 range(n) 2loop
13:13:02
start mi2
13:13:02
start mi2 range(p) 1 loop
13:13:02
finish mi2 range(p) 1 loop
13:13:02
start mi2 range(p) 2 loop
13:13:02
finish mi2 range(p) 2 loop
13:13:02
start mi2 range(NT) loop
13:13:02
finish mi2 range(NT) loop
13:13:02
start mi2 range(n) loop
13:13:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:13:02
start mi2 range(n) 2loop
13:13:02
finish mi2 range(n) 2loop
13:13:02
start mi3
13:13:02
start mi3 range(p) 1 loop
13:13:02
finish mi3 range(p) 1 loop
13:13:02
start mi3 range(p) 2 loop
13:13:02
finish mi3 range(p) 2 loop
13:13:02
start mi3 range(NT) loop
13:13:02
finish mi3 range(NT) loop
13:13:02
start mi3 range(n) loop
13:13:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:13:02
start mi3 range(n) 2loop
13:13:02
finish mi3 range(n) 2loop
13:13:02
[[-2.1967739]]
end mi3 loop
13:13:02
estep
13:13:02
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:13:22
start ppi1
13:13:22
start mi0
13:13:22
start mi0 range(p) 1 loop
13:13:22
finish mi0 range(p) 1 loop
13:13:22
start mi0 range(p) 2 loop
13:13:22
finish mi0 range(p) 2 loop
13:13:22
start mi0 range(NT) loop
13:13:22
finish mi0 range(NT) loop
13:13:22
start mi0 range(n) loop
13:13:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:13:22
start mi0 range(n) 2loop
13:13:22
finish mi0 range(n) 2loop
13:13:22
start mi1
13:13:22
start mi1 range(p) 1 loop
13:13:22
finish mi1 range(p) 1 loop
13:13:22
start mi1 range(p) 2 loop
13:13:22
finish mi1 range(p) 2 loop
13:13:22
start mi1 range(NT) loop
13:13:22
finish mi1 range(NT) loop
13:13:22
start mi1 range(n) loop
13:13:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:13:22
start mi1 range(n) 2loop
13:13:22
finish mi1 range(n) 2loop
13:13:22
start mi2
13:13:22
start mi2 range(p) 1 loop
13:13:22
finish mi2 range(p) 1 loop
13:13:22
start mi2 range(p) 2 loop
13:13:22
finish mi2 range(p) 2 loop
13:13:22
start mi2 range(NT) loop
13:13:22
finish mi2 range(NT) loop
13:13:22
start mi2 range(n) loop
13:13:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:13:23
start mi2 range(n) 2loop
13:13:23
finish mi2 range(n) 2loop
13:13:23
start mi3
13:13:23
start mi3 range(p) 1 loop
13:13:23
finish mi3 range(p) 1 loop
13:13:23
start mi3 range(p) 2 loop
13:13:23
finish mi3 range(p) 2 loop
13:13:23
start mi3 range(NT) loop
13:13:23
finish mi3 range(NT) loop
13:13:23
start mi3 range(n) loop
13:13:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:13:23
start mi3 range(n) 2loop
13:13:23
finish mi3 range(n) 2loop
13:13:23
[[-2.25926962]]
end mi3 loop
13:13:23
estep
13:13:23
end estep
13:13:42
end pa13:13:42
goodness of fit correlation [0.20860223]
start cluster 13:13:42
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 36735 instead
  warnings.warn(
2
parallel submitted
13:14:08
parallel finished
13:20:45
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:21:02
start mi0
13:21:02
start mi0 range(p) 1 loop
13:21:02
finish mi0 range(p) 1 loop
13:21:02
start mi0 range(p) 2 loop
13:21:02
finish mi0 range(p) 2 loop
13:21:02
start mi0 range(NT) loop
13:21:02
finish mi0 range(NT) loop
13:21:02
start mi0 range(n) loop
13:21:02
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:21:03
start mi0 range(n) 2loop
13:21:03
finish mi0 range(n) 2loop
13:21:03
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:21:03
start mi1 range(p) 1 loop
13:21:03
finish mi1 range(p) 1 loop
13:21:03
start mi1 range(p) 2 loop
13:21:03
finish mi1 range(p) 2 loop
13:21:03
start mi1 range(NT) loop
13:21:03
finish mi1 range(NT) loop
13:21:03
start mi1 range(n) loop
13:21:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:21:03
start mi1 range(n) 2loop
13:21:03
finish mi1 range(n) 2loop
13:21:03
start mi2
13:21:03
start mi2 range(p) 1 loop
13:21:03
finish mi2 range(p) 1 loop
13:21:03
start mi2 range(p) 2 loop
13:21:03
finish mi2 range(p) 2 loop
13:21:03
start mi2 range(NT) loop
13:21:03
finish mi2 range(NT) loop
13:21:03
start mi2 range(n) loop
13:21:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:21:03
start mi2 range(n) 2loop
13:21:03
finish mi2 range(n) 2loop
13:21:03
start mi3
13:21:03
start mi3 range(p) 1 loop
13:21:03
finish mi3 range(p) 1 loop
13:21:03
start mi3 range(p) 2 loop
13:21:03
finish mi3 range(p) 2 loop
13:21:03
start mi3 range(NT) loop
13:21:03
finish mi3 range(NT) loop
13:21:03
start mi3 range(n) loop
13:21:03
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:21:03
start mi3 range(n) 2loop
13:21:03
finish mi3 range(n) 2loop
13:21:04
[[-2.27590702]]
end mi3 loop
13:21:04
estep
13:21:04
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:21:22
start ppi1
13:21:22
start mi0
13:21:22
start mi0 range(p) 1 loop
13:21:22
finish mi0 range(p) 1 loop
13:21:22
start mi0 range(p) 2 loop
13:21:22
finish mi0 range(p) 2 loop
13:21:22
start mi0 range(NT) loop
13:21:22
finish mi0 range(NT) loop
13:21:22
start mi0 range(n) loop
13:21:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:21:22
start mi0 range(n) 2loop
13:21:22
finish mi0 range(n) 2loop
13:21:22
start mi1
13:21:22
start mi1 range(p) 1 loop
13:21:22
finish mi1 range(p) 1 loop
13:21:22
start mi1 range(p) 2 loop
13:21:22
finish mi1 range(p) 2 loop
13:21:22
start mi1 range(NT) loop
13:21:22
finish mi1 range(NT) loop
13:21:22
start mi1 range(n) loop
13:21:22
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:21:22
start mi1 range(n) 2loop
13:21:22
finish mi1 range(n) 2loop
13:21:22
start mi2
13:21:22
start mi2 range(p) 1 loop
13:21:22
finish mi2 range(p) 1 loop
13:21:22
start mi2 range(p) 2 loop
13:21:22
finish mi2 range(p) 2 loop
13:21:22
start mi2 range(NT) loop
13:21:22
finish mi2 range(NT) loop
13:21:23
start mi2 range(n) loop
13:21:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:21:23
start mi2 range(n) 2loop
13:21:23
finish mi2 range(n) 2loop
13:21:23
start mi3
13:21:23
start mi3 range(p) 1 loop
13:21:23
finish mi3 range(p) 1 loop
13:21:23
start mi3 range(p) 2 loop
13:21:23
finish mi3 range(p) 2 loop
13:21:23
start mi3 range(NT) loop
13:21:23
finish mi3 range(NT) loop
13:21:23
start mi3 range(n) loop
13:21:23
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:21:23
start mi3 range(n) 2loop
13:21:23
finish mi3 range(n) 2loop
13:21:23
[[-2.33839972]]
end mi3 loop
13:21:23
estep
13:21:23
end estep
13:21:41
end pa13:21:41
goodness of fit correlation [0.19806825]
start cluster 13:21:41
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45089 instead
  warnings.warn(
3
parallel submitted
13:22:06
parallel finished
13:27:36
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:27:51
start mi0
13:27:51
start mi0 range(p) 1 loop
13:27:51
finish mi0 range(p) 1 loop
13:27:51
start mi0 range(p) 2 loop
13:27:51
finish mi0 range(p) 2 loop
13:27:51
start mi0 range(NT) loop
13:27:51
finish mi0 range(NT) loop
13:27:51
start mi0 range(n) loop
13:27:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:27:51
start mi0 range(n) 2loop
13:27:51
finish mi0 range(n) 2loop
13:27:51
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:27:51
start mi1 range(p) 1 loop
13:27:51
finish mi1 range(p) 1 loop
13:27:51
start mi1 range(p) 2 loop
13:27:51
finish mi1 range(p) 2 loop
13:27:51
start mi1 range(NT) loop
13:27:51
finish mi1 range(NT) loop
13:27:51
start mi1 range(n) loop
13:27:51
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:27:51
start mi1 range(n) 2loop
13:27:51
finish mi1 range(n) 2loop
13:27:52
start mi2
13:27:52
start mi2 range(p) 1 loop
13:27:52
finish mi2 range(p) 1 loop
13:27:52
start mi2 range(p) 2 loop
13:27:52
finish mi2 range(p) 2 loop
13:27:52
start mi2 range(NT) loop
13:27:52
finish mi2 range(NT) loop
13:27:52
start mi2 range(n) loop
13:27:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:27:52
start mi2 range(n) 2loop
13:27:52
finish mi2 range(n) 2loop
13:27:52
start mi3
13:27:52
start mi3 range(p) 1 loop
13:27:52
finish mi3 range(p) 1 loop
13:27:52
start mi3 range(p) 2 loop
13:27:52
finish mi3 range(p) 2 loop
13:27:52
start mi3 range(NT) loop
13:27:52
finish mi3 range(NT) loop
13:27:52
start mi3 range(n) loop
13:27:52
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:27:52
start mi3 range(n) 2loop
13:27:52
finish mi3 range(n) 2loop
13:27:52
[[-2.27259509]]
end mi3 loop
13:27:52
estep
13:27:52
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:28:11
start ppi1
13:28:11
start mi0
13:28:11
start mi0 range(p) 1 loop
13:28:11
finish mi0 range(p) 1 loop
13:28:11
start mi0 range(p) 2 loop
13:28:11
finish mi0 range(p) 2 loop
13:28:11
start mi0 range(NT) loop
13:28:11
finish mi0 range(NT) loop
13:28:11
start mi0 range(n) loop
13:28:11
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:28:12
start mi0 range(n) 2loop
13:28:12
finish mi0 range(n) 2loop
13:28:12
start mi1
13:28:12
start mi1 range(p) 1 loop
13:28:12
finish mi1 range(p) 1 loop
13:28:12
start mi1 range(p) 2 loop
13:28:12
finish mi1 range(p) 2 loop
13:28:12
start mi1 range(NT) loop
13:28:12
finish mi1 range(NT) loop
13:28:12
start mi1 range(n) loop
13:28:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:28:12
start mi1 range(n) 2loop
13:28:12
finish mi1 range(n) 2loop
13:28:12
start mi2
13:28:12
start mi2 range(p) 1 loop
13:28:12
finish mi2 range(p) 1 loop
13:28:12
start mi2 range(p) 2 loop
13:28:12
finish mi2 range(p) 2 loop
13:28:12
start mi2 range(NT) loop
13:28:12
finish mi2 range(NT) loop
13:28:12
start mi2 range(n) loop
13:28:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:28:12
start mi2 range(n) 2loop
13:28:12
finish mi2 range(n) 2loop
13:28:12
start mi3
13:28:12
start mi3 range(p) 1 loop
13:28:12
finish mi3 range(p) 1 loop
13:28:12
start mi3 range(p) 2 loop
13:28:12
finish mi3 range(p) 2 loop
13:28:12
start mi3 range(NT) loop
13:28:12
finish mi3 range(NT) loop
13:28:12
start mi3 range(n) loop
13:28:12
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:28:12
start mi3 range(n) 2loop
13:28:12
finish mi3 range(n) 2loop
13:28:13
[[-2.33508784]]
end mi3 loop
13:28:13
estep
13:28:13
end estep
13:28:31
end pa13:28:31
goodness of fit correlation [0.12247306]
start cluster 13:28:31
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 43975 instead
  warnings.warn(
4
parallel submitted
13:28:58
parallel finished
13:34:31
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:34:49
start mi0
13:34:49
start mi0 range(p) 1 loop
13:34:49
finish mi0 range(p) 1 loop
13:34:49
start mi0 range(p) 2 loop
13:34:49
finish mi0 range(p) 2 loop
13:34:49
start mi0 range(NT) loop
13:34:49
finish mi0 range(NT) loop
13:34:49
start mi0 range(n) loop
13:34:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:34:49
start mi0 range(n) 2loop
13:34:49
finish mi0 range(n) 2loop
13:34:49
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:34:49
start mi1 range(p) 1 loop
13:34:49
finish mi1 range(p) 1 loop
13:34:49
start mi1 range(p) 2 loop
13:34:49
finish mi1 range(p) 2 loop
13:34:49
start mi1 range(NT) loop
13:34:49
finish mi1 range(NT) loop
13:34:49
start mi1 range(n) loop
13:34:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:34:49
start mi1 range(n) 2loop
13:34:49
finish mi1 range(n) 2loop
13:34:49
start mi2
13:34:49
start mi2 range(p) 1 loop
13:34:49
finish mi2 range(p) 1 loop
13:34:49
start mi2 range(p) 2 loop
13:34:49
finish mi2 range(p) 2 loop
13:34:49
start mi2 range(NT) loop
13:34:49
finish mi2 range(NT) loop
13:34:49
start mi2 range(n) loop
13:34:49
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:34:49
start mi2 range(n) 2loop
13:34:49
finish mi2 range(n) 2loop
13:34:50
start mi3
13:34:50
start mi3 range(p) 1 loop
13:34:50
finish mi3 range(p) 1 loop
13:34:50
start mi3 range(p) 2 loop
13:34:50
finish mi3 range(p) 2 loop
13:34:50
start mi3 range(NT) loop
13:34:50
finish mi3 range(NT) loop
13:34:50
start mi3 range(n) loop
13:34:50
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:34:50
start mi3 range(n) 2loop
13:34:50
finish mi3 range(n) 2loop
13:34:50
[[-2.27928782]]
end mi3 loop
13:34:50
estep
13:34:50
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:35:09
start ppi1
13:35:09
start mi0
13:35:09
start mi0 range(p) 1 loop
13:35:09
finish mi0 range(p) 1 loop
13:35:09
start mi0 range(p) 2 loop
13:35:09
finish mi0 range(p) 2 loop
13:35:09
start mi0 range(NT) loop
13:35:09
finish mi0 range(NT) loop
13:35:09
start mi0 range(n) loop
13:35:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:35:09
start mi0 range(n) 2loop
13:35:09
finish mi0 range(n) 2loop
13:35:09
start mi1
13:35:09
start mi1 range(p) 1 loop
13:35:09
finish mi1 range(p) 1 loop
13:35:09
start mi1 range(p) 2 loop
13:35:09
finish mi1 range(p) 2 loop
13:35:09
start mi1 range(NT) loop
13:35:09
finish mi1 range(NT) loop
13:35:09
start mi1 range(n) loop
13:35:09
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:35:09
start mi1 range(n) 2loop
13:35:09
finish mi1 range(n) 2loop
13:35:09
start mi2
13:35:09
start mi2 range(p) 1 loop
13:35:09
finish mi2 range(p) 1 loop
13:35:09
start mi2 range(p) 2 loop
13:35:09
finish mi2 range(p) 2 loop
13:35:09
start mi2 range(NT) loop
13:35:10
finish mi2 range(NT) loop
13:35:10
start mi2 range(n) loop
13:35:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:35:10
start mi2 range(n) 2loop
13:35:10
finish mi2 range(n) 2loop
13:35:10
start mi3
13:35:10
start mi3 range(p) 1 loop
13:35:10
finish mi3 range(p) 1 loop
13:35:10
start mi3 range(p) 2 loop
13:35:10
finish mi3 range(p) 2 loop
13:35:10
start mi3 range(NT) loop
13:35:10
finish mi3 range(NT) loop
13:35:10
start mi3 range(n) loop
13:35:10
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:35:10
start mi3 range(n) 2loop
13:35:10
finish mi3 range(n) 2loop
13:35:10
[[-2.34178047]]
end mi3 loop
13:35:10
estep
13:35:10
end estep
13:35:29
end pa13:35:29
goodness of fit correlation [0.19371062]
start cluster 13:35:29
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 45428 instead
  warnings.warn(
5
parallel submitted
13:35:55
parallel finished
13:41:02
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:41:19
start mi0
13:41:19
start mi0 range(p) 1 loop
13:41:19
finish mi0 range(p) 1 loop
13:41:19
start mi0 range(p) 2 loop
13:41:19
finish mi0 range(p) 2 loop
13:41:19
start mi0 range(NT) loop
13:41:19
finish mi0 range(NT) loop
13:41:19
start mi0 range(n) loop
13:41:19
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:41:20
start mi0 range(n) 2loop
13:41:20
finish mi0 range(n) 2loop
13:41:20
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:41:20
start mi1 range(p) 1 loop
13:41:20
finish mi1 range(p) 1 loop
13:41:20
start mi1 range(p) 2 loop
13:41:20
finish mi1 range(p) 2 loop
13:41:20
start mi1 range(NT) loop
13:41:20
finish mi1 range(NT) loop
13:41:20
start mi1 range(n) loop
13:41:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:41:20
start mi1 range(n) 2loop
13:41:20
finish mi1 range(n) 2loop
13:41:20
start mi2
13:41:20
start mi2 range(p) 1 loop
13:41:20
finish mi2 range(p) 1 loop
13:41:20
start mi2 range(p) 2 loop
13:41:20
finish mi2 range(p) 2 loop
13:41:20
start mi2 range(NT) loop
13:41:20
finish mi2 range(NT) loop
13:41:20
start mi2 range(n) loop
13:41:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:41:20
start mi2 range(n) 2loop
13:41:20
finish mi2 range(n) 2loop
13:41:20
start mi3
13:41:20
start mi3 range(p) 1 loop
13:41:20
finish mi3 range(p) 1 loop
13:41:20
start mi3 range(p) 2 loop
13:41:20
finish mi3 range(p) 2 loop
13:41:20
start mi3 range(NT) loop
13:41:20
finish mi3 range(NT) loop
13:41:20
start mi3 range(n) loop
13:41:20
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:41:20
start mi3 range(n) 2loop
13:41:20
finish mi3 range(n) 2loop
13:41:21
[[-2.23978911]]
end mi3 loop
13:41:21
estep
13:41:21
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:41:39
start ppi1
13:41:39
start mi0
13:41:39
start mi0 range(p) 1 loop
13:41:39
finish mi0 range(p) 1 loop
13:41:39
start mi0 range(p) 2 loop
13:41:39
finish mi0 range(p) 2 loop
13:41:39
start mi0 range(NT) loop
13:41:40
finish mi0 range(NT) loop
13:41:40
start mi0 range(n) loop
13:41:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:41:40
start mi0 range(n) 2loop
13:41:40
finish mi0 range(n) 2loop
13:41:40
start mi1
13:41:40
start mi1 range(p) 1 loop
13:41:40
finish mi1 range(p) 1 loop
13:41:40
start mi1 range(p) 2 loop
13:41:40
finish mi1 range(p) 2 loop
13:41:40
start mi1 range(NT) loop
13:41:40
finish mi1 range(NT) loop
13:41:40
start mi1 range(n) loop
13:41:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:41:40
start mi1 range(n) 2loop
13:41:40
finish mi1 range(n) 2loop
13:41:40
start mi2
13:41:40
start mi2 range(p) 1 loop
13:41:40
finish mi2 range(p) 1 loop
13:41:40
start mi2 range(p) 2 loop
13:41:40
finish mi2 range(p) 2 loop
13:41:40
start mi2 range(NT) loop
13:41:40
finish mi2 range(NT) loop
13:41:40
start mi2 range(n) loop
13:41:40
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:41:40
start mi2 range(n) 2loop
13:41:40
finish mi2 range(n) 2loop
13:41:40
start mi3
13:41:40
start mi3 range(p) 1 loop
13:41:40
finish mi3 range(p) 1 loop
13:41:40
start mi3 range(p) 2 loop
13:41:40
finish mi3 range(p) 2 loop
13:41:40
start mi3 range(NT) loop
13:41:40
finish mi3 range(NT) loop
13:41:41
start mi3 range(n) loop
13:41:41
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:41:41
start mi3 range(n) 2loop
13:41:41
finish mi3 range(n) 2loop
13:41:41
[[-2.30228263]]
end mi3 loop
13:41:41
estep
13:41:41
end estep
13:42:00
end pa13:42:00
goodness of fit correlation [0.18715682]
start cluster 13:42:00
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 38927 instead
  warnings.warn(
6
parallel submitted
13:42:26
parallel finished
13:47:21
estimation.py:143: ComplexWarning: Casting complex values to real discards the imaginary part
  JFK[:,:]=np.array(res1).T
start ppi0
13:47:37
start mi0
13:47:37
start mi0 range(p) 1 loop
13:47:37
finish mi0 range(p) 1 loop
13:47:37
start mi0 range(p) 2 loop
13:47:37
finish mi0 range(p) 2 loop
13:47:37
start mi0 range(NT) loop
13:47:37
finish mi0 range(NT) loop
13:47:37
start mi0 range(n) loop
13:47:37
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
estimation.py:278: ComplexWarning: Casting complex values to real discards the imaginary part
  g[i] = g[i] + g_rest
finish mi0 range(n) loop
13:47:37
start mi0 range(n) 2loop
13:47:37
finish mi0 range(n) 2loop
13:47:37
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
start mi1
13:47:37
start mi1 range(p) 1 loop
13:47:37
finish mi1 range(p) 1 loop
13:47:37
start mi1 range(p) 2 loop
13:47:37
finish mi1 range(p) 2 loop
13:47:37
start mi1 range(NT) loop
13:47:38
finish mi1 range(NT) loop
13:47:38
start mi1 range(n) loop
13:47:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi1 range(n) loop
13:47:38
start mi1 range(n) 2loop
13:47:38
finish mi1 range(n) 2loop
13:47:38
start mi2
13:47:38
start mi2 range(p) 1 loop
13:47:38
finish mi2 range(p) 1 loop
13:47:38
start mi2 range(p) 2 loop
13:47:38
finish mi2 range(p) 2 loop
13:47:38
start mi2 range(NT) loop
13:47:38
finish mi2 range(NT) loop
13:47:38
start mi2 range(n) loop
13:47:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi2 range(n) loop
13:47:38
start mi2 range(n) 2loop
13:47:38
finish mi2 range(n) 2loop
13:47:38
start mi3
13:47:38
start mi3 range(p) 1 loop
13:47:38
finish mi3 range(p) 1 loop
13:47:38
start mi3 range(p) 2 loop
13:47:38
finish mi3 range(p) 2 loop
13:47:38
start mi3 range(NT) loop
13:47:38
finish mi3 range(NT) loop
13:47:38
start mi3 range(n) loop
13:47:38
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
                  h_output_FDK: 35.7 KiB
0
finish mi3 range(n) loop
13:47:38
start mi3 range(n) 2loop
13:47:38
finish mi3 range(n) 2loop
13:47:38
[[-2.28178322]]
end mi3 loop
13:47:38
estep
13:47:38
/users/k1201869/wang_model/wang_functions.py:472: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.
  sol = np.linalg.lstsq(A, b)[0]    # not under-determined
estimation.py:348: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A # %newton-gauss, fisher scoring, update Para_E
estimation.py:355: ComplexWarning: Casting complex values to real discards the imaginary part
  A_FDK[:,ppi] = np.squeeze(A) + d_A #newton-gauss, fisher scoring, update Para_E
distributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client
_GatheringFuture exception was never retrieved
future: <_GatheringFuture finished exception=CancelledError()>
asyncio.exceptions.CancelledError
estimation.py:359: ComplexWarning: Casting complex values to real discards the imaginary part
  h_output_FDK[:,ppi], CC_check_FDK[ppi] = funcP(np.atleast_2d(Para_E_new).T)
estimation.py:363: ComplexWarning: Casting complex values to real discards the imaginary part
  dldpara_FDK[:,ppi] = dldpara
end estep
13:47:57
start ppi1
13:47:57
start mi0
13:47:57
start mi0 range(p) 1 loop
13:47:57
finish mi0 range(p) 1 loop
13:47:57
start mi0 range(p) 2 loop
13:47:57
finish mi0 range(p) 2 loop
13:47:57
start mi0 range(NT) loop
13:47:57
finish mi0 range(NT) loop
13:47:57
start mi0 range(n) loop
13:47:57
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi0 range(n) loop
13:47:57
start mi0 range(n) 2loop
13:47:57
finish mi0 range(n) 2loop
13:47:58
start mi1
13:47:58
start mi1 range(p) 1 loop
13:47:58
finish mi1 range(p) 1 loop
13:47:58
start mi1 range(p) 2 loop
13:47:58
finish mi1 range(p) 2 loop
13:47:58
start mi1 range(NT) loop
13:47:58
finish mi1 range(NT) loop
13:47:58
start mi1 range(n) loop
13:47:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi1 range(n) loop
13:47:58
start mi1 range(n) 2loop
13:47:58
finish mi1 range(n) 2loop
13:47:58
start mi2
13:47:58
start mi2 range(p) 1 loop
13:47:58
finish mi2 range(p) 1 loop
13:47:58
start mi2 range(p) 2 loop
13:47:58
finish mi2 range(p) 2 loop
13:47:58
start mi2 range(NT) loop
13:47:58
finish mi2 range(NT) loop
13:47:58
start mi2 range(n) loop
13:47:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi2 range(n) loop
13:47:58
start mi2 range(n) 2loop
13:47:58
finish mi2 range(n) 2loop
13:47:58
start mi3
13:47:58
start mi3 range(p) 1 loop
13:47:58
finish mi3 range(p) 1 loop
13:47:58
start mi3 range(p) 2 loop
13:47:58
finish mi3 range(p) 2 loop
13:47:58
start mi3 range(NT) loop
13:47:58
finish mi3 range(NT) loop
13:47:58
start mi3 range(n) loop
13:47:58
                             P: 39.6 MiB
                           JFK:  4.8 MiB
              Para_E_step_save: 539.2 KiB
                  dlddpara_FDK: 297.7 KiB
                     A_Prior_C: 148.9 KiB
                    invPrior_C: 148.9 KiB
                   inv_JinvCeJ: 148.9 KiB
                      dlddpara: 148.9 KiB
                            SC: 36.2 KiB
                       FC_mask: 36.2 KiB
0
finish mi3 range(n) loop
13:47:58
start mi3 range(n) 2loop
13:47:58
finish mi3 range(n) 2loop
13:47:58
[[-2.34427584]]
end mi3 loop
13:47:58
estep
13:47:58
end estep
13:48:18
end pa13:48:18
goodness of fit correlation [0.26234725]
start cluster 13:48:18
/users/k1201869/miniconda3/envs/python38/lib/python3.8/site-packages/distributed/node.py:151: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 39982 instead
  warnings.warn(
7
parallel submitted
13:48:46
slurmstepd: error: *** JOB 1825846 ON nodeb23 CANCELLED AT 2020-11-06T13:53:19 ***
